/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'ZoneServer'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct _SCOPETABLE_ENTRY;
struct _RTL_CRITICAL_SECTION_DEBUG;
struct BS_PacketDispatchVtbl;
struct BS_Reference<BS_Session>Vtbl;
struct BS_Session;
struct BS_SessionContainer;
struct BS_SessionContainerVtbl;
struct BS_CompletionHandler;
struct BS_Cipher;
struct BS_PoolVtbl;
struct std::fpos<int>;
struct std::locale::facetVtbl;
struct std::locale::_Locimp;
struct std::locale;
struct std::basic_streambuf<unsigned short,std::char_traits<unsigned short> >Vtbl;
struct BS_Stream;
struct BS_Log;
struct BS_Reference<BS_Packet>Vtbl;
struct BS_Packet;
struct std::_Tree_nod<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >::_Node;
struct std::_List_nod<char *,std::allocator<char *> >::_Node;
struct BS_ChunkList;
struct BS_MemPool;
struct std::pair<unsigned int const ,BS_ChunkList *>;
struct BS_Buffer;
struct BS_PacketAnalyzeVtbl;
struct XiCsCharInfoVtbl;
struct XiStrCarInfo;
struct BS_GameDispatch;
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >::_Node;
struct XiStrQuest;
struct XiStrItem;
struct XiStrAssist;
struct AssistGroup;
struct ItemGroup;
struct XiStrIcon;
struct XiStrArbeit;
struct XIVISUALITEM_INFO;
struct XiCsQuest;
struct std::pair<unsigned long const ,XiCsQuest *>;
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >::_Node;
struct XiCsItemLocker;
struct XiCsItemLockerVtbl;
struct XiCsItem;
struct std::pair<unsigned long const ,XiCsItem *>;
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >::_Node;
struct XiCsVSItem;
struct std::pair<unsigned long const ,XiCsVSItem *>;
struct XiSticker;
struct XiCsSTItem;
struct XiAuctionClient;
struct XiAuctionItem;
struct XiAuctionCar;
struct XiRankUnit;
struct XiCsArbeit;
struct XiStrInstant;
struct XiCsInstant;
struct XiCsCarInfo;
struct XiExpTable;
struct XiCsTeam;
struct XiStrCoupon;
struct std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >::_Node;
struct std::pair<unsigned long const ,XiCouponParam>;
struct std::_List_nod<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::_Node;
struct XiCsCharInfo::InFriend;
struct XiStrVisualItemBuyUnit;
struct XiCsItemDropGroup;
struct XiCsLevelDropGroup;
struct BS_Game;
struct std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >::_Node;
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *>;
struct std::_List_nod<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::_Node;
struct std::pair<unsigned long const ,BS_GameDispatch *>;
struct std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator;
struct std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >::_Node;
struct BS_ChatRoom;
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *>;
struct XiStrTradeInfo;
struct BS_TradeRoom;
struct std::_List_nod<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >::_Node;
struct BS_Listener;
struct BS_Room;
struct BS_RoomVtbl;
struct BS_RoomBoard;
struct BS_RoomPool;
struct BS_RoomPoolVtbl;
struct BS_AreaId;
struct BS_OBSRoom;
struct std::_Tree_nod<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::_Node;
struct std::vector<int,std::allocator<int> >;
struct BS_RoomBoardVtbl;
struct std::_List_nod<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::_Node;
struct std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator;
struct stdext::hash_set<BS_GameDispatch *,stdext::hash_compare<BS_GameDispatch *,std::less<BS_GameDispatch *> >,std::allocator<BS_GameDispatch *> >;
struct BS_PvpChannel;
struct BS_Channel;
struct BS_Party;
struct XiStrUCPatrol;
struct XiCsUCPatrol;
struct XiHuvInfo;
struct BS_Actor;
struct _iobuf;
struct RushHuv;
struct RushEvent;
struct std::pair<__int64 const ,int>;
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>;
struct CPropertySet;
struct CPropertySetVtbl;
struct std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >::_Node;
struct CProperty;
struct CPropertyVtbl;
struct std::vector<char,std::allocator<char> >;
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *>;
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *>;
struct BS_RefCountVtbl;
struct std::pair<unsigned long const ,XiStrItem>;
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup>;
struct std::pair<unsigned long const ,ItemGroup>;
struct std::pair<unsigned long const ,unsigned long>;
struct BS_NetFrameVtbl;
struct std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >::_Node;
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *>;
struct std::_List_nod<BS_Buffer *,std::allocator<BS_Buffer *> >::_Node;
struct BS_SingleDispatch;
struct std::_List_nod<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >::_Node;
struct std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >::_Node;
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *>;
struct BS_ThreadVtbl;
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo>;
struct BS_TimerVtbl;
struct BS_LuaBindVtbl;
struct GDBSessionVtbl;
struct GDBCVtbl;
struct XiDBOperationVtbl;
struct std::pair<unsigned short const ,AssistGroup>;
struct std::pair<unsigned long const ,DBOperStatic>;
struct std::pair<unsigned long const ,XiCsLevelDropGroup>;
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>;
struct std::pair<int const ,XiTrackData::PvpTrafficSet>;
struct std::pair<__int64 const ,XiCsCharInfo *>;
struct std::pair<unsigned long const ,XiStrAssist>;
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>;
struct std::pair<unsigned long const ,VEHICLEUPGRADE_INFO>;
struct std::_List_nod<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> >::_Node;
struct BS_RoomPoolImpl<BS_CBattleRoom>;
struct BS_CBattleLobby;
struct std::pair<unsigned long const ,VEHICLE_INFO>;
struct TickHandlerVtbl;
struct exceptionVtbl;
struct std::ios_baseVtbl;
struct std::ios_base::_Iosarray;
struct std::ios_base::_Fnarray;
struct std::basic_streambuf<char,std::char_traits<char> >Vtbl;
struct XiVehicleListContainerVtbl;
struct type_infoVtbl;
struct XiVehicleUpgradeListContainerVtbl;
struct XiVisualItemListContainerVtbl;
struct IUnknownVtbl;
struct CHASESPAWN_INFO;
struct XiChaseSpawnListContainerVtbl;
struct tagVARIANT;
struct IRecordInfo;
struct tagTYPEDESC;
struct tagARRAYDESC;
struct tagPROPVARIANT;
struct std::pair<unsigned long const ,XiStrInstantDrop>;
struct std::pair<unsigned long const ,XiStrInstant>;
struct XiTDFReadVtbl;
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long>;
struct std::pair<unsigned long const ,XiStrIcon>;
struct XiGlobalBillingVtbl;
struct ParamVtbl;
struct IFunctorVtbl;
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *>;
struct ATL::IAtlStringMgr;
struct ATL::IAtlStringMgrVtbl;
struct ATL::IAtlMemMgrVtbl;
struct ATL::IFixedStringLogVtbl;
struct IGlobalInterfaceTable;
struct IRegistrarBase;
struct ATL::CAtlModuleVtbl;
struct ATL::IAtlAutoThreadModuleVtbl;
struct BS_PoolMgrVtbl;
struct std::pair<PvpTrackKey const ,PvpTrafficSet>;
struct std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >::_Node;
struct std::pair<int const ,PvpTrackTable::PvpRate>;
struct std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > >;
struct std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >::_Node;
struct std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > >;
struct BS_ConsoleVtbl;
struct BS_OutVtbl;
struct BS_ConsoleOut;
struct BS_ConsoleThread;
struct std::pair<int const ,GDataTable::Float>;
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *>;
struct AOI::Area<BS_IVehicle *>;
struct BS_AreaDispatch;
struct BS_Area<BS_IVehicle>;
struct HashedVector<BS_IVehicle *,4,16>;
struct XiTrafficBodyInfo;
struct XiTrafficControl::TrafficCarMgrVtbl;
struct TrafficSystem;
struct XiTrafficCarInfo;
struct XiTrafficPathInfo::SIGNAL_INFO;
struct XiTrafficPathInfo;
struct BS_TrafficCar;
struct XiTArray<XiTrafficCarInfo *>Vtbl;
struct XiTArray<XiTrafficCarInfo>Vtbl;
struct XiTArray<XiTrafficPathInfo>Vtbl;
struct AOI::SpaceGrid<BS_IVehicle *>::AreaPtr;
struct BS_IVehicleVtbl;
struct BS_AreaDispatch::FlushCastHandler;
struct BS_AreaDispatch::FlushCastHandlerVtbl;
struct std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >;
struct BS_Area<BS_IVehicle>::FinalHandler;
struct XiTArray<XiTrafficControl::VECPATH>Vtbl;
struct XiTArray<XiTrafficControl::PATH4CULL>Vtbl;
struct XiTrafficControl::PATH4CULL;
struct XiTrafficControl::VECPATH;
struct XiTrafficCarRateListContainerVtbl;
struct apDebugSinkVtbl;
struct XiRankPlayer<unsigned long,__int64>Vtbl;
struct XiRankArbeitPlayer;
struct BillingConn;
struct NHNCoin;
struct NHNCoinVtbl;
struct BillingConn_USA;
struct WebCallReqVtbl;
struct WebCallMgrVtbl;
struct std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >;
struct std::pair<unsigned long const ,XiStrUCPatrol>;
struct std::pair<unsigned long const ,XiCouponParamWithID>;
struct std::pair<unsigned long const ,XiStrQuest>;
struct std::pair<unsigned long const ,XiAuctionCar *>;
struct std::pair<unsigned long const ,XiVShop::ITEM_INFO>;
struct std::pair<unsigned long const ,XiAuctionItem *>;
struct std::pair<int const ,XiMita500InfoBox>;
struct std::pair<unsigned long const ,XIVISUALITEM_INFO>;
struct PktOper<BS_PktLoadChar>;
struct PktOper<BS_PktUpgradeCar>;
struct std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *>;
struct std::pair<unsigned long const ,XiStrArbeit>;
struct PktOper<BS_PktGetVisualItem>;
struct XiRankCategoryMgr<XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> >Vtbl;
struct XiCouponTypeListContainerVtbl;
struct BS_ServiceVtbl;
struct std::_Tree_nod<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >::_Node;
struct std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > >;
struct XiBaseItemUpgradeVtbl;
struct std::pair<XiCsItem * const,unsigned long>;
struct std::pair<XiStrItem * const,unsigned long>;
struct std::pair<unsigned long const ,XiStrItemUpgrade>;
struct std::pair<unsigned long const ,XiStrItemGradeUpgrade>;
struct std::pair<unsigned long const ,XiStrProbStatic>;
struct XiTokenBookListContainerVtbl;
struct std::pair<int const ,std::vector<int,std::allocator<int> > >;
struct std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > >;
struct std::pair<int const ,float>;
struct std::pair<int const ,XiTArray<XiTrafficPathInfo> >;
struct ATL::CBookmarkBaseVtbl;
struct std::pair<__int64 const ,void *>;
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>;
struct WebConnHandlerVtbl;
struct BS_FuncPerformanceMgr::BS_Factor;
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>;
struct DA_FILESAVE;
struct DA_CHUNK;
struct BS_CrashHandlerVtbl;
struct std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >Vtbl;
struct DNameNodeVtbl;

/* 1 */
struct _GUID
{
  unsigned __int32 Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  unsigned __int8 Data4[8];
};

/* 2 */
typedef struct _GUID GUID;

/* 3 */
typedef struct _SCOPETABLE_ENTRY *PSCOPETABLE_ENTRY;

/* 8 */
struct _SCOPETABLE_ENTRY
{
  int EnclosingLevel;
  void *FilterFunc;
  void *HandlerFunc;
};

/* 8697 */
typedef void *PVOID;

/* 9235 */
typedef unsigned int DWORD;

/* 4 */
struct _EH3_EXCEPTION_REGISTRATION
{
  struct _EH3_EXCEPTION_REGISTRATION *Next;
  PVOID ExceptionHandler;
  PSCOPETABLE_ENTRY ScopeTable;
  DWORD TryLevel;
};

/* 5 */
typedef struct _EH3_EXCEPTION_REGISTRATION EH3_EXCEPTION_REGISTRATION;

/* 6 */
typedef struct _EH3_EXCEPTION_REGISTRATION *PEH3_EXCEPTION_REGISTRATION;

/* 7 */
struct CPPEH_RECORD
{
  DWORD old_esp;
  EXCEPTION_POINTERS *exc_ptr;
  struct _EH3_EXCEPTION_REGISTRATION registration;
};

/* 9 */
enum GradeStandard::Const
{
  StrGradeLen = 0x5,
};

/* 10 */
typedef $8C57D1DDA788D6050A7C554DBD1EB1AC ADDRESS_MODE;

/* 11 */
enum BS_PktUserAuth2::Const
{
  MaxNameLen = 0x28,
  MaxHashLen = 0x800,
};

/* 12 */
enum BS_PktOBSState::Const
{
  MaxRoomNameLen = 0x28,
  MaxTeamNameLen = 0x1E,
};

/* 13 */
enum BS_PktOBSState::Result
{
  UNKNOWNERROR = 0x0,
  ROOMOK = 0x1,
  NOROOM = 0x2,
  CLOSED = 0x3,
};

/* 14 */
typedef BS_PktUserAuth2::Const BS_PktOBSState::Unit::Const;

/* 15 */
enum CStreamCipher::CipherType
{
  NONE = 0x0,
  SIMPLE = 0x1,
  TEA = 0x2,
};

/* 16 */
enum BS_PktPartyApply::Const
{
  MaxMsgLen = 0x32,
};

/* 17 */
typedef BS_PktOBSState::Const BS_PktRoomState::Const;

/* 18 */
typedef BS_PktOBSState::Result BS_PktRoomState::Result;

/* 19 */
typedef BS_PktUserAuth2::Const BS_PktRoomState::Unit::Const;

/* 20 */
enum $B2C672C1671B59450E2F3155E6FBB694
{
  NORMAL_MSG = 0x0,
  RECEIVE_TAX = 0x1,
  FRIEND_REQ = 0x64,
  RECEIVE_ITEM = 0xC8,
  REWARD_INVITEEVENT = 0xD2,
  RECEIVE_VSITEM = 0x12C,
  RECEIVE_WEBITEM = 0x190,
  RECEIVE_MITO = 0x1F4,
};

/* 21 */
enum $9ADEBD8A921918A39AFE0B81FE4AC4B2
{
  _Multi = 0x0,
};

/* 22 */
typedef $9ADEBD8A921918A39AFE0B81FE4AC4B2 $58DE2DA9E8DDE5DA2E2F36082422D5FD;

/* 23 */
enum std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl
{
  _Red = 0x0,
  _Black = 0x1,
};

/* 24 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >::_Redbl;

/* 25 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >::_Redbl;

/* 26 */
enum std::_Uninitialized
{
  _Noinit = 0x0,
};

/* 27 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Redbl;

/* 28 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >::_Redbl;

/* 29 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >::_Redbl;

/* 30 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >::_Redbl;

/* 31 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::_Redbl;

/* 32 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >::_Redbl;

/* 33 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >::_Redbl;

/* 34 */
enum $C7A66656BD20095141AF9DA597C58E36
{
  ok = 0x0,
  partial = 0x1,
  error = 0x2,
  noconv = 0x3,
};

/* 35 */
enum std::_Iosb<int>::_Dummy_enum
{
  _Dummy_enum_val = 0x1,
};

/* 36 */
enum std::_Iosb<int>::_Fmtflags
{
  _Fmtmask = 0xFFFF,
  _Fmtzero = 0x0,
};

/* 37 */
enum std::_Iosb<int>::_Iostate
{
  _Statmask = 0x17,
};

/* 38 */
enum std::_Iosb<int>::_Openmode
{
  _Openmask = 0xFF,
};

/* 39 */
enum std::_Iosb<int>::_Seekdir
{
  _Seekmask = 0x3,
};

/* 40 */
enum $1B536D8DAE2B40B148C77012225844FC
{
  _Openprot = 0x1B6,
};

/* 41 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >::_Redbl;

/* 42 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >::_Redbl;

/* 43 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >::_Redbl;

/* 44 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >::_Redbl;

/* 45 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >::_Redbl;

/* 46 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >::_Redbl;

/* 47 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >::_Redbl;

/* 48 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >::_Redbl;

/* 49 */
enum $9E02737228DF5060E759F32703142FF5
{
  _BUF_SIZE = 0x8,
};

/* 50 */
enum $B2FB91FA9CC7CF3BD50434AFDECAC47F
{
  _ALLOC_MASK = 0x7,
};

/* 51 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >::_Redbl;

/* 52 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >::_Redbl;

/* 53 */
typedef $9E02737228DF5060E759F32703142FF5 $F0551E099AE6F36F41F19B6664DCAFD9;

/* 54 */
typedef $B2FB91FA9CC7CF3BD50434AFDECAC47F $8B51C3C74DF083A54E50CA72E34056B8;

/* 55 */
enum $834E9F4ADB8BE9D6DAA70CD29FE22DD8
{
  _Bitsperword = 0x20,
  _Words = 0x0,
};

/* 56 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >::_Redbl;

/* 57 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >::_Redbl;

/* 58 */
enum $3065823E5191D2C998FA93C46B23A3F9
{
  alnum = 0x107,
  alpha = 0x103,
  cntrl = 0x20,
  digit = 0x4,
  graph = 0x117,
  lower = 0x2,
  print = 0x1D7,
  punct = 0x10,
  space = 0x48,
  upper = 0x1,
  xdigit = 0x80,
};

/* 59 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >::_Redbl;

/* 60 */
enum std::ios_base::event
{
  erase_event = 0x0,
  imbue_event = 0x1,
  copyfmt_event = 0x2,
};

/* 61 */
enum $AAE657233ECAE4A323C8B12DEE6B9BDF
{
  HalfMitronChargeItem = 0x1,
  SuccessiveWin3 = 0x2,
  SuccessiveWin2 = 0x4,
};

/* 62 */
enum XiPvpRoomFilter
{
  XiPvpRoomFilter_Single = 0x1,
  XiPvpRoomFilter_Team = 0x2,
  XiPvpRoomFilter_Both = 0x3,
  XiPvpRoomFilter_LapTime = 0x4,
};

/* 63 */
typedef BS_PktUserAuth2::Const $C9081AD5DF1DE1482E66F221242F2313;

/* 64 */
enum $CE1CC6327DBDC98F4E31824630F22A9A
{
  bucket_size = 0x4,
  min_buckets = 0x8,
};

/* 65 */
typedef $CE1CC6327DBDC98F4E31824630F22A9A $EB4284CDEA60E0A21F22202B4DA602A2;

/* 66 */
enum $E0B3379816193949BB3ED7693F1762F4
{
  SORTBY_DATE = 0x1,
  SORTBY_NAME = 0x2,
  SORTBY_DOWNCOUNT = 0x3,
};

/* 67 */
enum $8802228D69D37AED6D903697DAE7ACDD
{
  ASC = 0x0,
  DESC = 0x1,
};

/* 68 */
typedef BS_PktUserAuth2::Const BS_PktTeamMembersAck::Member::Const;

/* 69 */
typedef BS_PktUserAuth2::Const BS_PktJoinChat::Const;

/* 70 */
enum $99310F4847ED5248BA5C03633DB866EF
{
  GM_BUFF = 0x0,
};

/* 71 */
enum $1BDB3FC9CBEA06BF59887F6E807A9A15
{
  BATTLE_BEGIN = 0x0,
  BATTLE_RESULT = 0x1,
  MaxTeamName = 0xD,
};

/* 72 */
enum BS_PktGameStream::Const
{
  MaxStreamLen = 0x32,
};

/* 73 */
enum BS_Config::Const
{
  ScriptNameLen = 0x104,
  LogDirLen = 0x104,
  LogNameLen = 0x104,
  ListenNameLen = 0x104,
  BindNameLen = 0x104,
  UDLFileLen = 0x104,
  AllocFileLen = 0x104,
};

/* 74 */
enum BS_Stream::Const
{
  MaxTemporaryBuf = 0x200,
};

/* 75 */
enum BS_Session::BS_SessionState::State
{
  S_UnInitialized = 0x0,
  S_Listen = 0x1,
  S_Connecting = 0x2,
  S_Accepted = 0x3,
  S_Connected = 0x3,
  S_Disconnect = 0x4,
  S_Disconnected = 0x5,
  S_MaxState = 0x6,
};

/* 76 */
typedef BS_PktOBSState::Const BS_PktRoomInvite::Const;

/* 77 */
enum BS_MessageDispatch::Const
{
  RecvBufferSize = 0x1000,
  SendBufferSize = 0x578,
};

/* 78 */
typedef BS_PktUserAuth2::Const BS_PktSayAck::Const;

/* 79 */
typedef BS_PktUserAuth2::Const XiStrPlateName::Const;

/* 80 */
typedef BS_PktUserAuth2::Const BS_PktUserAuth::Const;

/* 81 */
enum BS_Party::Const
{
  PartyNameLen = 0x40,
};

/* 82 */
enum BS_Party::UnderCity::UC_STATE
{
  UC_NONE = 0x0,
  UC_INIT = 0x1,
  UC_PATROL1_READY1 = 0x2,
  UC_PATROL1_READY2 = 0x3,
  UC_PATROL1_WAIT_ACCEPT = 0x4,
  UC_PATROL1_COUNTING = 0x5,
  UC_PATROL1 = 0x6,
  UC_PATROL2_LOADING = 0x7,
  UC_PATROL2_WARP = 0x8,
  UC_PATROL2_COUNTING = 0x9,
  UC_PATROL2_RUN = 0xA,
  UC_CHASE1 = 0xB,
  UC_CHASE2 = 0xC,
  UC_RESULT = 0xD,
};

/* 83 */
enum BS_PktSecureSwitchToPlayer::Const
{
  MaxRoomPassLen = 0x1E,
};

/* 84 */
typedef $E0B3379816193949BB3ED7693F1762F4 $388C484B4F1E8CC37B795DEB1CF3A18E;

/* 85 */
typedef $8802228D69D37AED6D903697DAE7ACDD $BD73749839596B88A9129DBCAFF40FDC;

/* 86 */
typedef BS_PktUserAuth2::Const BS_PktLeaveChat::Const;

/* 87 */
enum AGbool
{
  AG_FALSE = 0x0,
  AG_TRUE = 0x1,
  F = 0x0,
  T = 0x1,
};

/* 88 */
enum $1A0D03B067536311FB848A7C2F266700
{
  TEAMNAME_LEN = 0xD,
  TEAMDESC_LEN = 0x3D,
  OWNCHANNEL_LEN = 0x18,
  TEAMSTATE_LEN = 0x2,
  TEAMURL_LEN = 0x21,
};

/* 89 */
enum BS_PktHead::Const
{
  Compress = 0x0,
  Encoding = 0x0,
  CheckSum = 0x0,
  FlagMask = 0xFFFF,
  LenMask = 0x0,
};

/* 90 */
typedef BS_PktUserAuth2::Const XiStrAssistID::Const;

/* 91 */
typedef BS_PktUserAuth2::Const XiStrChannelName::Const;

/* 92 */
enum XiPvpRoomState
{
  XiPvpRoomState_Wait = 0x0,
  XiPvpRoomState_Loading = 0x1,
  XiPvpRoomState_Racing = 0x2,
  XiPvpRoomState_Closed = 0x3,
  XiPvpRoomState_LapTimeRacing = 0x4,
  XiPvpRoomState_LapTimeFinalRacing = 0x5,
  XiPvpRoomState_LapTimeFinishing = 0x6,
  XiPvpRoomState_LapTimeResult = 0x7,
  XiPvpRoomState_LapTimeReady = 0x8,
};

/* 93 */
enum $5DFDE45321D32B7E48A9328106A3FB87
{
  NORMAL_RESULT = 0x1,
  OBSERVE_RESULT = 0x2,
};

/* 94 */
typedef BS_PktUserAuth2::Const XiStrCharName::Const;

/* 95 */
typedef $1A0D03B067536311FB848A7C2F266700 $D30C49E5055BD4A1DF661DAFB454E922;

/* 96 */
enum BS_PktSendVisualItem::Const
{
  SendMgsLen = 0x32,
};

/* 97 */
enum $12C01A6A6820C599613AE937740569B3
{
  MaxSubjectLen = 0x15,
  MaxItemLen = 0x65,
};

/* 98 */
enum XiDBUpdateMgr::Const
{
  ItemThreadNum = 0x3,
};

/* 99 */
enum BS_StrUtils::Const
{
  DefaultMax = 0xFF,
};

/* 100 */
typedef BS_PktOBSState::Const $52F9113963508888C60B00F47E4C3726;

/* 101 */
enum XiStrCharInfo::FlagType
{
  Beginner_Tutorial = 0x8000000,
  Battle_Tutorial = 0x4000000,
};

/* 102 */
enum XiStrCharInfo::POSITION_STATE
{
  FIRST_POS = 0x0,
  NOTSAVED_POS = 0x1,
  HOUSESAVED_POS = 0x2,
  BASE_SAVED_POS = 0x3,
};

/* 103 */
typedef BS_PktOBSState::Const BS_PktRoomModify::Const;

/* 104 */
typedef BS_PktUserAuth2::Const XiStrPartyName::Const;

/* 105 */
enum XiCsItem::UpdateType
{
  TNormal = 0x0,
  TChangeID = 0x1,
  TChangeOwner = 0x2,
  TChangeCTime = 0x3,
};

/* 106 */
typedef BS_PktSecureSwitchToPlayer::Const BS_PktSecureJoinOBS::Const;

/* 107 */
typedef BS_PktUserAuth2::Const BS_PktOpenChat::Const;

/* 108 */
enum BS_PktPvpEnd::EndType
{
  Finished = 0x1,
  Retire = 0x2,
  UnearnedWin = 0x3,
};

/* 109 */
typedef BS_PktOBSState::Const BS_PktRoomCreate::Const;

/* 110 */
enum BS_PktGetVisualItemAck::ItemType
{
  Visual = 0x0,
  Parts = 0x1,
};

/* 111 */
enum BS_PktUserAuthAck::Const
{
  MaxStringLen = 0x40,
};

/* 112 */
enum $FFC86625F08D718E246366BABA960B41
{
  NON_CIPHER = 0x1,
  SVR_SIM = 0x2,
  SVR_TEA = 0x4,
  CLI_SIM = 0x10,
  CLI_TEA = 0x20,
};

/* 113 */
enum $4B33F3037CF17A11BEEFD4DBF1005031
{
  BOTH_SIM = 0x12,
  BOTH_TEA = 0x24,
};

/* 114 */
typedef MACRO_INIT $ED3C74DF89284AC7FD89C7A8C6E37D18;

/* 115 */
typedef BS_PktPartyApply::Const BS_PktPartyReject::Const;

/* 116 */
typedef BS_PktUserAuth2::Const XiStrCouponParamID::Const;

/* 117 */
enum $BF9E02858160A1E174C8417290CA0DA9
{
  UDP_ACK = 0x1,
  TCP_ACK = 0x2,
};

/* 118 */
typedef BS_PktUserAuth2::Const BS_PktJoinChannelAck::Const;

/* 119 */
enum $C339095ADF83CCBE3D584DD79C2BFC2A
{
  DELETE_MSG = 0x1,
};

/* 120 */
typedef BS_PktUserAuth2::Const XiStrSimpleCharInfo::Const;

/* 121 */
typedef BS_PktPartyApply::Const XiStrGiftMsg::Const;

/* 122 */
enum XIVEHICLEGRADE_TYPE
{
  eXI_GRADETYPE_V = 0x0,
  eXI_GRADETYPE_R = 0x1,
  eXI_GRADETYPE_Q = 0x2,
  eXI_GRADETYPE_MAX = 0x3,
};

/* 123 */
enum BS_Room::Const
{
  RoomNameLen = 0x1E,
  RoomPassLen = 0x1E,
};

/* 124 */
typedef BS_PktUserAuth2::Const BS_PktChatMsg::Const;

/* 125 */
enum BS_PacketAnalyzeMachine::Const
{
  MaxProcessPacket = 0x14,
};

/* 126 */
enum XiPvpRoomType
{
  XiPvpRoomType_Team = 0x1,
  XiPvpRoomType_Private = 0x4,
  XiPvpRoomType_CBattle = 0x8,
  XiPvpRoomType_CBattleDef = 0x8,
  XiPvpRoomType_CBattleAtk = 0x18,
  XiPvpRoomType_CBattleVS = 0x28,
  XiPvpRoomType_LapTime = 0x40,
  XiPvpRoomType_ObserverEnable = 0x80,
  XiPvpRoomType_RealMatch = 0x100,
  XiPvpRoomType_AdminControl = 0x200,
};

/* 127 */
typedef BS_PktUserAuth2::Const BS_PktChaseHit::Const;

/* 128 */
enum BS_PktChaseHit::Flag
{
  Side = 0x1,
  Drift = 0x2,
  Critical = 0x4,
};

/* 129 */
enum XiStrCharMemberInfo::Const
{
  MaxCNameLen = 0x10,
  MaxMemberIdLen = 0x21,
};

/* 130 */
enum BS_PktPartyJoinResult::Const
{
  MaxPartyNameLen = 0x1E,
};

/* 131 */
enum XiVShop::CATEGORY_TOP
{
  eCATEGORY_TOP_COLOR = 0x0,
  eCATEGORY_TOP_DECORATION = 0x1,
  eCATEGORY_TOP_TUNNING = 0x2,
  eCATEGORY_TOP_ETC = 0x3,
  eCATEGORY_TOP_MAX = 0x4,
};

/* 132 */
enum XiVShop::CATEGORY
{
  eCATEGORY_PAINT = 0x3E8,
  eCATEGORY_UNDERNEON = 0x44C,
  eCATEGORY_WINDOWTINTING = 0x4B0,
  eCATEGORY_COLOR_MAX = 0x3,
  eCATEGORY_NUMBERPLATE = 0x7D0,
  eCATEGORY_DECAL = 0x834,
  eCATEGORY_STICKER = 0x898,
  eCATEGORY_STICKERLICENSE = 0x8FC,
  eCATEGORY_ROOF = 0x960,
  eCATEGORY_SOUND = 0x9C4,
  eCATEGORY_DECORATION_MAX = 0x6,
  eCATEGORY_CARREMODELING = 0xBB8,
  eCATEGORY_SLOTREMODELING = 0xC1C,
  eCATEGORY_AERO = 0xC80,
  eCATEGORY_BOOSTER = 0xCE4,
  eCATEGORY_TIRE = 0xD48,
  eCATEGORY_SPOILER = 0xDAC,
  eCATEGORY_TUNNING_MAX = 0x6,
  eCATEGORY_DRINK = 0xFA0,
  eCATEGORY_SUPERMITRON = 0x1004,
  eCATEGORY_REPAIRGIRL = 0x1068,
  eCATEGORY_PARTSBOX = 0x1130,
  eCATEGORY_EXTEND = 0x11F8,
  eCATEGORY_ETC_MAX = 0x5,
};

/* 133 */
enum XiVShop::CATEGORY_SUB
{
  eCATEGORY_SUB_NONE = 0x0,
  eCATEGORY_PAINT_SINGLE = 0x3E8,
  eCATEGORY_PAINT_TWOTONE = 0x3F2,
  eCATEGORY_NEON_COLOR = 0x7D0,
  eCATEGORY_NEON_GRAPHIC = 0x7DA,
  eCATEGORY_WINDOWTINTING_SUB = 0x7E4,
  eCATEGORY_NUMBERPLATE_COLOR = 0xBB8,
  eCATEGORY_NUMBERPLATE_LINE = 0xBC2,
  eCATEGORY_NUMBERPLATE_GRAPHIC = 0xBCC,
  eCATEGORY_DECAL_FLAME = 0xFA0,
  eCATEGORY_DECAL_LIGHTNING = 0xFAA,
  eCATEGORY_DECAL_LINE = 0xFB4,
  eCATEGORY_DECAL_PATTERN = 0xFBE,
  eCATEGORY_DECAL_GRAPHIC = 0xFC8,
  eCATEGORY_STICKER_ANI = 0x1388,
  eCATEGORY_STICKER_MOVIE = 0x1392,
  eCATEGORY_STICKER_GAME = 0x139C,
  eCATEGORY_STICKER_MILI = 0x13A6,
  eCATEGORY_STICKER_HUMAN = 0x13B0,
  eCATEGORY_STICKER_NATURE = 0x13BA,
  eCATEGORY_STICKER_LOGO = 0x13C4,
  eCATEGORY_STICKER_SHAPE = 0x13CE,
  eCATEGORY_STICKER_WEIRD = 0x13D8,
  eCATEGORY_STICKER_CAR = 0x13E2,
  eCATEGORY_STICKER_SPORTS = 0x13EC,
  eCATEGORY_STICKER_ETC = 0x13F6,
  eCATEGORY_STICKER_OWN = 0x1400,
  eCATEGORY_STICKER_LICENSE = 0x1770,
  eCATEGORY_ROOF_PSYCHY = 0x1B58,
  eCATEGORY_ROOF_BILLBOARD = 0x1B62,
  eCATEGORY_ROOF_ETC = 0x1B6C,
  eCATEGORY_SOUND_ENGINE = 0x1B8A,
  eCATEGORY_SOUND_HORN = 0x1B94,
  eCATEGORY_CARREMODELING_SUB = 0x1F40,
  eCATEGORY_CARREMODELING_R1R2 = 0x1F41,
  eCATEGORY_CARREMODELING_R2R3 = 0x1F42,
  eCATEGORY_CARREMODELING_R3R4 = 0x1F43,
  eCATEGORY_CARREMODELING_R4R5 = 0x1F44,
  eCATEGORY_CARREMODELING_R5R6 = 0x1F45,
  eCATEGORY_CARREMODELING_R6R7 = 0x1F46,
  eCATEGORY_CARREMODELING_R7R8 = 0x1F47,
  eCATEGORY_CARREMODELING_R8R9 = 0x1F48,
  eCATEGORY_SLOTREMODELING_SUB = 0x1F4A,
  eCATEGORY_AERO_COMBI_BUMPER = 0x1F54,
  eCATEGORY_AERO_COMBI_INTERCOOLER = 0x1F5E,
  eCATEGORY_AERO_SET = 0x1F68,
  eCATEGORY_BOOSTER_SUB = 0x1F72,
  eCATEGORY_TIRE_SUB = 0x1F7C,
  eCATEGORY_SPOILER_SUB = 0x1F86,
  eCATEGORY_DRINK_EXP = 0x2332,
  eCATEGORY_DRINK_MITO = 0x233C,
  eCATEGORY_DRINK_DOUBLEUPGRADE = 0x2346,
  eCATEGORY_DRINK_HALFMITRONCHRAGE = 0x2350,
  eCATEGORY_DRINK_SETPARTSACTIVATE_ALPHA = 0x235A,
  eCATEGORY_DRINK_SETPARTSACTIVATE_BETA = 0x2364,
  eCATEGORY_DRINK_ITEMDROP2X = 0x236E,
  eCATEGORY_SUPERMITRON_SUB = 0x238C,
  eCATEGORY_REPAIRGIRL_SUB = 0x23F0,
  eCATEGORY_TURBOMAN_SUB = 0x23FA,
  eCATEGORY_PARTSBOX_SUB = 0x24B8,
  eCATEGORY_EXTEND_INVENTORY = 0x258A,
  eCATEGORY_EXTEND_GARAGE = 0x2594,
  eCATEGORY_EXTEND_INVENUPGRADE = 0x25A8,
  eCATEGORY_MITO_PRIZE = 0x25E4,
};

/* 134 */
typedef BS_PktPartyJoinResult::Const BS_PktPartyPreCheckAck::Const;

/* 135 */
typedef BS_PktSecureSwitchToPlayer::Const BS_PktChannelRoomSecureJoin::Const;

/* 136 */
enum XIVEHICLEGRADE_LIST
{
  eXI_GRADE_V1 = 0x0,
  eXI_GRADE_V2 = 0x1,
  eXI_GRADE_V3 = 0x2,
  eXI_GRADE_V4 = 0x3,
  eXI_GRADE_V5 = 0x4,
  eXI_GRADE_V6 = 0x5,
  eXI_GRADE_V7 = 0x6,
  eXI_GRADE_V8 = 0x7,
  eXI_GRADE_V9 = 0x8,
  eXI_GRADE_R1 = 0x9,
  eXI_GRADE_R2 = 0xA,
  eXI_GRADE_R3 = 0xB,
  eXI_GRADE_R4 = 0xC,
  eXI_GRADE_R5 = 0xD,
  eXI_GRADE_R6 = 0xE,
  eXI_GRADE_R7 = 0xF,
  eXI_GRADE_R8 = 0x10,
  eXI_GRADE_R9 = 0x11,
  eXI_GRADE_Q1 = 0x12,
  eXI_GRADE_Q2 = 0x13,
  eXI_GRADE_Q3 = 0x14,
  eXI_GRADE_Q4 = 0x15,
  eXI_GRADE_Q5 = 0x16,
  eXI_GRADE_Q6 = 0x17,
  eXI_GRADE_Q7 = 0x18,
  eXI_GRADE_Q8 = 0x19,
  eXI_GRADE_Q9 = 0x1A,
  eXI_GRADE_MAX = 0x1B,
};

/* 137 */
enum $7AECD17531E38C8B877EE1F4ED52F415
{
  MaxServerName = 0x20,
};

/* 138 */
enum $C3E11DE12BBE21BA1C74F66B6C331D4B
{
  GameServer = 0x1,
  LobbyServer = 0x2,
  AreaServer1 = 0x4,
  AreaServer2 = 0x8,
};

/* 139 */
typedef BS_PktUserAuth2::Const BS_PktCheckInLobby::Const;

/* 140 */
enum $EFB2E9BFAE9BE2B3B8E0F62AAE9637E6
{
  MAX = 0x20,
};

/* 141 */
typedef BS_PktUserAuth2::Const XiStrTeamName::Const;

/* 142 */
enum VEHICLE_INFO::VEHICLE_TYPE
{
  TYPE_UNKNOWN = 0x0,
  PLAYER = 0x1,
  HUV = 0x2,
  TRAFFIC = 0x3,
  RBC = 0x4,
  UNKNOWN = 0x5,
  XIVEHICLE_MAX = 0x6,
};

/* 143 */
enum XIVEHICLETYPE
{
  eXI_TYPE_PLAYERCAR = 0x0,
  eXI_TYPE_HUV = 0x1,
  eXI_TYPE_TRAFFIC = 0x2,
  eXI_TYPE_RACINGBATTLE = 0x3,
  eXI_VEHICLETYPE_MAX = 0x4,
};

/* 144 */
enum CProperty::Type
{
  INT = 0x0,
  UINT = 0x1,
  FLOAT = 0x2,
  STRING = 0x3,
  BOOL = 0x4,
  EMPTY = 0x5,
};

/* 145 */
typedef BS_PktOBSState::Const XiPvpRoomInfo::Const;

/* 146 */
enum XiPvpRoomInfo::State
{
  WAIT = 0x0,
  RACING = 0x1,
};

/* 147 */
enum XiPvpRoomInfo::Flag
{
  Team = 0x1,
  Secure = 0x2,
};

/* 148 */
typedef BS_PktOBSState::Const BS_PktRoomPrivateInvite::Const;

/* 149 */
typedef BS_PktUserAuth2::Const XiStrItemID::Const;

/* 150 */
enum XiStrUserPermission::Const
{
  Administrator = 0x8000,
  PowerUser = 0x4000,
  RemoteClientUser = 0x2000,
  Developer = 0x1000,
  User = 0x0,
};

/* 151 */
typedef BS_PktUserAuth2::Const BS_PktJoinChannel::Const;

/* 152 */
typedef BS_PktUserAuth2::Const BS_PktJoinChatAck::Const;

/* 153 */
typedef XiPvpRoomInfo::State $D189645B5B98375DB64CAE986362AE72;

/* 154 */
enum XI_COUPONTYPE
{
  eXI_COUPONTYPE_PVPBATTLE = 0x0,
  eXI_COUPONTYPE_QUICKSERVICE = 0x1,
  eXI_COUPONTYPE_CHASING = 0x2,
  eXI_COUPONTYPE_COMBO = 0x3,
  eXI_COUPONTYPE_DRIVETIME = 0x4,
  eXI_COUPONTYPE_DRIFT = 0x5,
  eXI_COUPONTYPE_ARTDRIVE = 0x6,
  eXI_COUPONTYPE_JUMP = 0x7,
  eXI_COUPONTYPE_REVDRIVE = 0x8,
  eXI_COUPONTYPE_UNDERCITY = 0x9,
  eXI_COUPONTYPE_MAX = 0xA,
};

/* 155 */
typedef BS_PktUserAuth2::Const BS_PktCloseChat::Const;

/* 156 */
typedef BS_PktUserAuth2::Const BS_PktChatMsgAck::Const;

/* 157 */
enum $38636D0EA7AD20B267BDBB95270A9F80
{
  FINE = 0x0,
  CLOUDY = 0x1,
  FOGGY = 0x2,
  RAIN = 0x3,
  SUNSET = 0x4,
};

/* 158 */
typedef BS_PktUserAuth2::Const BS_PktRegisterChannelAdmin::Const;

/* 159 */
typedef BS_PktUserAuth2::Const BS_PktLeaveChatAck::Const;

/* 160 */
enum $AF0205FDAF3C9FFFD3767D7031323FC3
{
  LocCity = 0x1,
  LocPvpRoom = 0x2,
  LocPvpPrivateRoom = 0x3,
  LocObsRoom = 0x4,
  LocCBattle = 0x5,
  LocLapTime = 0x6,
};

/* 161 */
typedef BS_PktGetVisualItemAck::ItemType BS_PktBuyVisualItemAck::ItemType;

/* 162 */
enum Pvp::CITY_TYPE
{
  eMAIN = 0x0,
  eTRACK = 0x1,
  eCH0 = 0x2,
  ePVP_TUTORIAL = 0x3,
  eLAPTIME = 0x4,
  eUNKNOWN_CITYTYPE = 0x5,
};

/* 163 */
enum Pvp::MAPFLAG
{
  MAP_TRAFFIC_RANDOM = 0x0,
  MAP_RANDOM = 0x1,
  MAP_REVERSE = 0x2,
  MAP_TRAFFIC_IDLE = 0x4,
  MAP_TRAFFIC_NORMAL = 0x8,
  MAP_TRAFFIC_JAM = 0x10,
  MAP_CITYALL = 0x20,
  MAP_CITY1 = 0x40,
  MAP_CITY2 = 0x80,
  MAP_CITY3 = 0x100,
  MAP_CITY4 = 0x200,
  MAP_RECOMMEND = 0x400,
};

/* 164 */
enum Pvp::PVP_REWARD
{
  NULL_REWARD = 0x0,
  BOOSTER_50 = 0x1,
  BOOSTER_100 = 0x2,
  SKID_RUSH = 0x3,
  CRASHRECOVER_100 = 0x4,
  UNTOUCHABLE = 0x5,
  HISPEED_100 = 0x6,
  TEAMBOOSTER_50 = 0x7,
  MAX_REWARD = 0x8,
};

/* 165 */
enum XiStrArbeitInfo::Const
{
  MaxRankNum = 0x3,
};

/* 166 */
typedef BS_PktPartyApply::Const BS_PktSay::Const;

/* 167 */
typedef BS_PktUserAuth2::Const BS_PktWhisper::Const;

/* 168 */
enum BS_PktUnderCityStage::Const
{
  AllAgree = 0x1,
  Force = 0x2,
  Alone = 0x3,
};

/* 169 */
typedef BS_PktUserAuth2::Const BS_PktAreaChat::Const;

/* 170 */
enum XiChaseResultInfo::Const
{
  NameLen = 0x20,
};

/* 171 */
typedef CStreamCipher::CipherType $E67061B104F1F14A8C9B61F820153DC4;

/* 172 */
typedef BS_PktUserAuth2::Const BS_PktLobbyChat::Const;

/* 173 */
typedef $7AECD17531E38C8B877EE1F4ED52F415 $B35DCE0BDDFF8FD8891A1996C63A45F7;

/* 174 */
typedef BS_PktUserAuth2::Const XiPlayerInfo::Const;

/* 175 */
typedef BS_PktOBSState::Const BS_PktRoomCreateAck::Const;

/* 176 */
typedef BS_PktSecureSwitchToPlayer::Const BS_PktRoomSecureJoin::Const;

/* 177 */
enum $C2245750928360FC3C2CD9691B319E9F
{
  FREE = 0x0,
  MULTI_CHASE = 0x1,
  SINGLE_CHASE = 0x2,
};

/* 178 */
enum $B02BFB8A6F6E3D5CF9A75430E4AD497C
{
  HUVST_NONE = 0x0,
  HUVST_PATH = 0x1,
  HUVST_RUN = 0x2,
  HUVST_END = 0x3,
};

/* 179 */
typedef BS_PktUserAuth2::Const BS_PktLeaveChannel::Const;

/* 180 */
typedef BS_PktUserAuth2::Const BS_PktChannelListAck::Const;

/* 181 */
enum BS_Pulse::Const
{
  DefaultTTP = 0xC8,
};

/* 182 */
typedef BS_PktUserAuth2::Const BS_PktLeaveChannelAck::Const;

/* 183 */
enum BS_PktChasePropose::Const
{
  PosNameLen = 0x64,
};

/* 184 */
typedef BS_PktPartyJoinResult::Const BS_PktPartyInvite::Const;

/* 185 */
typedef xmlelemTYPE tagXMLEMEM_TYPE;

/* 186 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >::_Redbl;

/* 187 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >::_Redbl;

/* 188 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >::_Redbl;

/* 189 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >::_Redbl;

/* 190 */
enum UnderCityStart::Const
{
  MaxPos = 0x4,
};

/* 191 */
typedef XiChaseResultInfo::Const XiStrIcon::Const;

/* 192 */
enum $169E025944CD84DBCB3707C824BCE6E0
{
  db_member_len = 0x20,
  db_item_len = 0x32,
  db_gamecode_len = 0x8,
  db_servercode_len = 0x8,
  db_hashcode_len = 0x20,
  db_paytype_len = 0x8,
};

/* 193 */
enum $2E94A102B14109CB76AC3A2692EC284B
{
  member_len = 0x20,
  item_len = 0x32,
  gamecode_len = 0x8,
  servercode_len = 0x8,
  reserved_len = 0x64,
  hashcode_len = 0x20,
  paytype_len = 0x8,
};

/* 194 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >::_Redbl;

/* 195 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >::_Redbl;

/* 196 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >::_Redbl;

/* 197 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >::_Redbl;

/* 198 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >::_Redbl;

/* 199 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >::_Redbl;

/* 200 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >::_Redbl;

/* 201 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >::_Redbl;

/* 202 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >::_Redbl;

/* 203 */
enum BS_String::Const
{
  TemporarySize = 0x400,
};

/* 204 */
typedef $38636D0EA7AD20B267BDBB95270A9F80 BS_Channel::Weather;

/* 205 */
enum BS_Console::Const
{
  DisplayWitdh = 0x46,
  DisplayHeight = 0x28,
};

/* 206 */
enum BS_ConsoleThread::Const
{
  MaxLineNum = 0x28,
  MaxLineSize = 0xFF,
};

/* 207 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >::_Redbl;

/* 208 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >::_Redbl;

/* 209 */
enum XiTokenEvent::Const
{
  MaxEventSeason = 0x4,
  MaxEventUser = 0xC8,
};

/* 210 */
enum BS_FileUtils::Const
{
  MinAutoCount = 0xA,
  MaxAutoCount = 0x64,
  MaxFileLen = 0xFF,
};

/* 211 */
enum $2F61BE20DFC10CAB424A8CC901352B0B
{
  _DEQUEMAPSIZ = 0x8,
  _DEQUESIZ = 0x4,
};

/* 212 */
enum BS_WinSocket::Const
{
  MAX_BACKLOG = 0x3F,
};

/* 213 */
enum XiTrafficPathInfo::SIGNAL_INFO::STATE
{
  STOP = 0x0,
  INTERMEDIATE = 0x1,
  GO = 0x2,
  LEFTMAX = 0x3,
};

/* 214 */
enum BS_AreaType
{
  AT_QUEST = 0x0,
  AT_UNDERCITY = 0x1,
  AT_PVP = 0x2,
};

/* 215 */
typedef $834E9F4ADB8BE9D6DAA70CD29FE22DD8 $9AD2D50E6B3670340FFFC44D1B7E52DE;

/* 216 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >::_Redbl;

/* 217 */
typedef $C2245750928360FC3C2CD9691B319E9F $52E79BB12CD41A52ED06368D7525AD85;

/* 218 */
enum $4117B00EA84EFE4DEBF37FC54D945A4D
{
  MAX_MSG = 0x800,
};

/* 219 */
enum $FD7802588958B3BF65C9152405B8F4AC
{
  MAX_OPER = 0x800,
};

/* 220 */
enum $615D9FCCC9F91AE5D2E501F391A044B7
{
  MAX_QRY = 0x800,
};

/* 221 */
enum $400A3669EDCFB45F6A11A6A1C45EB2D4
{
  RIGHTNOW_MOVE = 0x0,
  QUEUED_MOVE = 0x1,
  CONCAT_MOVE = 0x2,
  TCS_MOVE = 0x3,
  BLOCKED_MOVE = 0x4,
  PASSED_MOVE = 0x5,
  MAX_COUNTER = 0x6,
};

/* 222 */
typedef $4117B00EA84EFE4DEBF37FC54D945A4D $AD8E51117F59D6266B73A9276C8E4976;

/* 223 */
typedef $FD7802588958B3BF65C9152405B8F4AC $9C265DCF53BBA51BBC2F3AD2EC4781D6;

/* 224 */
typedef $615D9FCCC9F91AE5D2E501F391A044B7 $2EC502CFEE09622A0DC571D5D2D2D2EB;

/* 225 */
enum $986D3C8A293D3BF5FC599401B376D0B3
{
  BlockListSize = 0x40,
};

/* 226 */
enum BS_LuaFunc::Const
{
  ErrorBufferSize = 0xFF,
};

/* 227 */
enum $18030EB7D574015805184B633B53A56A
{
  _Allocated = 0x1,
  _Constant = 0x2,
  _Noread = 0x4,
  _Append = 0x8,
};

/* 228 */
enum $D78A09537603E058867F494A102DE664
{
  _MINSIZE = 0x20,
};

/* 229 */
enum BS_SocketUtils::Const
{
  ErrorBufferLen = 0xFF,
};

/* 230 */
enum $4DB07B9D3C17D62436A5614EA0A6994E
{
  Chasing = 0x0,
  Crash = 0x1,
  Combo = 0x2,
  Rush = 0x3,
  PvpOption = 0x4,
  ChaseOption = 0x5,
  Max = 0x6,
};

/* 231 */
enum XI_COUPONPARAMTYPE
{
  eXI_COUPONPARAMTYPE_DUEL_RM = 0xB,
};

/* 232 */
enum $3CC09D294C13B2768201059EAA206371
{
  MaxAreaNum = 0x64,
};

/* 233 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Redbl;

/* 234 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >::_Redbl;

/* 235 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >::_Redbl;

/* 236 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >::_Redbl;

/* 237 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >::_Redbl;

/* 238 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >::_Redbl;

/* 239 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >::_Redbl;

/* 240 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >::_Redbl;

/* 241 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >::_Redbl;

/* 242 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >::_Redbl;

/* 243 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >::_Redbl;

/* 244 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >::_Redbl;

/* 245 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::_Redbl;

/* 246 */
enum $A23980E31A9EA6E31B49853B48EFD031
{
  RUSH_IDLE = 0x0,
  RUSH_READY = 0x1,
  RUSHING = 0x2,
};

/* 247 */
typedef _PaddingMode XiAuctionMgr::State;

/* 248 */
enum BillingConn::Const
{
  BufferSize = 0x400,
};

/* 249 */
typedef $12C01A6A6820C599613AE937740569B3 $36EA377852EEC660CCAA3F2FF3C57D5D;

/* 250 */
typedef _PaddingMode XiAuctionCarMgr::State;

/* 251 */
enum $7A028F72F1009A3031CA44C9E60DD61D
{
  MAX_BOX_P = 0x64,
};

/* 252 */
enum std::basic_filebuf<char,std::char_traits<char> >::_Initfl
{
  _Newfl = 0x0,
  _Openfl = 0x1,
  _Closefl = 0x2,
};

/* 253 */
typedef $091388B5486C38E232712F2AD090397D POWER_INFORMATION_LEVEL;

/* 254 */
typedef $C76430121188DB029AABDFCFE322BAEC WELL_KNOWN_SID_TYPE;

/* 255 */
typedef $0FC989869F227A36D749990E523E5F04 POWER_ACTION;

/* 256 */
enum AGRESULT
{
  AG_OK = 0x0,
  AG_FAIL = 0x1,
  AG_ERROR = 0x2,
  AG_WARNING = 0x3,
};

/* 257 */
typedef $C9C41CE7F7AB140BE1C872069B92FC11 LATENCY_TIME;

/* 258 */
enum BS_Service::Const
{
  ServiceNameLen = 0x100,
};

/* 259 */
enum $80A64AD43F05B775F790F2290F873109
{
  DBG_WARN = 0x0,
  DBG_ERR = 0x1,
  DBG_MILESTONE = 0x2,
  DBG_SOUND = 0x3,
  DBG_BGM = 0x4,
  DBG_NET = 0x5,
  DBG_INPUT = 0x6,
  DBG_DYNAMICS = 0x7,
  DBG_UI = 0x8,
  DBG_GAME = 0x9,
  DBG_TOOL = 0xA,
  DBG_MAX = 0xB,
};

/* 260 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >::_Redbl;

/* 261 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >::_Redbl;

/* 262 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >::_Redbl;

/* 263 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >::_Redbl;

/* 264 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >::_Redbl;

/* 265 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >::_Redbl;

/* 266 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >::_Redbl;

/* 267 */
enum NHNCoin::RET_CODE
{
  RET_OK = 0x0,
  RET_ERR_INVALID_PARAM = 0x1,
  RET_ERR_NETWORK = 0x2,
  RET_ERR_SERVER = 0x3,
  RET_ERR_NO_DATA = 0x4,
};

/* 268 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >::_Redbl;

/* 269 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::_Redbl;

/* 270 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >::_Redbl;

/* 271 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Redbl;

/* 272 */
enum ATL::DBBLOBHANDLINGENUM
{
  DBBLOBHANDLING_DEFAULT = 0x0,
  DBBLOBHANDLING_NOSTREAMS = 0x1,
  DBBLOBHANDLING_SKIP = 0x2,
};

/* 273 */
typedef BS_LuaFunc::Const BS_OleDB::Const;

/* 274 */
typedef std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >::_Redbl;

/* 275 */
typedef BS_MessageDispatch::Const BS_GMDispatch::Const;

/* 276 */
typedef $3065823E5191D2C998FA93C46B23A3F9 $291F5BEB9C149347B4F02619FFC9078D;

/* 277 */
enum std::time_base::dateorder
{
  no_order = 0x0,
  dmy = 0x1,
  mdy = 0x2,
  ymd = 0x3,
  ydm = 0x4,
};

/* 278 */
typedef $2F61BE20DFC10CAB424A8CC901352B0B $F88C0A29653F91629B066FAFBE2A1478;

/* 279 */
typedef BillingConn::Const WebConn::Const;

/* 280 */
enum $BFC727FDBE95ECB043E426F4BA646DAE
{
  HLINE = 0x0,
  HNAMEVALUE = 0x1,
  BODY = 0x2,
};

/* 281 */
typedef std::basic_filebuf<char,std::char_traits<char> >::_Initfl std::basic_filebuf<unsigned short,std::char_traits<unsigned short> >::_Initfl;

/* 282 */
typedef $B5C4BFDF5647DD76A5A7DC88A24121ED _FP_OPERATION_CODE;

/* 283 */
typedef $239F13ABFE0DEB25C9BEF2C1826A55A5 _FPIEEE_FORMAT;

/* 284 */
typedef $0CDD13AED9949118DD70163834A3A235 _FPIEEE_ROUNDING_MODE;

/* 285 */
typedef $EBF8251B43E7412EBBCF0A9FFEA6D7A7 _FPIEEE_PRECISION;

/* 286 */
enum error_types
{
  logl_zero = 0x0,
  logl_negative = 0x1,
  log_zero = 0x2,
  log_negative = 0x3,
  logf_zero = 0x4,
  logf_negative = 0x5,
  log10l_zero = 0x6,
  log10l_negative = 0x7,
  log10_zero = 0x8,
  log10_negative = 0x9,
  log10f_zero = 0xA,
  log10f_negative = 0xB,
  expl_overflow = 0xC,
  expl_underflow = 0xD,
  exp_overflow = 0xE,
  exp_underflow = 0xF,
  expf_overflow = 0x10,
  expf_underflow = 0x11,
  powl_overflow = 0x12,
  powl_underflow = 0x13,
  powl_zero_to_zero = 0x14,
  powl_zero_to_negative = 0x15,
  powl_neg_to_non_integer = 0x16,
  powl_nan_to_zero = 0x17,
  pow_overflow = 0x18,
  pow_underflow = 0x19,
  pow_zero_to_zero = 0x1A,
  pow_zero_to_negative = 0x1B,
  pow_neg_to_non_integer = 0x1C,
  pow_nan_to_zero = 0x1D,
  powf_overflow = 0x1E,
  powf_underflow = 0x1F,
  powf_zero_to_zero = 0x20,
  powf_zero_to_negative = 0x21,
  powf_neg_to_non_integer = 0x22,
  powf_nan_to_zero = 0x23,
  atan2l_zero = 0x24,
  atan2_zero = 0x25,
  atan2f_zero = 0x26,
  expm1l_overflow = 0x27,
  expm1l_underflow = 0x28,
  expm1_overflow = 0x29,
  expm1_underflow = 0x2A,
  expm1f_overflow = 0x2B,
  expm1f_underflow = 0x2C,
  hypotl_overflow = 0x2D,
  hypot_overflow = 0x2E,
  hypotf_overflow = 0x2F,
  sqrtl_negative = 0x30,
  sqrt_negative = 0x31,
  sqrtf_negative = 0x32,
  scalbl_overflow = 0x33,
  scalbl_underflow = 0x34,
  scalb_overflow = 0x35,
  scalb_underflow = 0x36,
  scalbf_overflow = 0x37,
  scalbf_underflow = 0x38,
  acosl_gt_one = 0x39,
  acos_gt_one = 0x3A,
  acosf_gt_one = 0x3B,
  asinl_gt_one = 0x3C,
  asin_gt_one = 0x3D,
  asinf_gt_one = 0x3E,
  coshl_overflow = 0x3F,
  cosh_overflow = 0x40,
  coshf_overflow = 0x41,
  y0l_zero = 0x42,
  y0l_negative = 0x43,
  y0l_gt_loss = 0x44,
  y0_zero = 0x45,
  y0_negative = 0x46,
  y0_gt_loss = 0x47,
  y0f_zero = 0x48,
  y0f_negative = 0x49,
  y0f_gt_loss = 0x4A,
  y1l_zero = 0x4B,
  y1l_negative = 0x4C,
  y1l_gt_loss = 0x4D,
  y1_zero = 0x4E,
  y1_negative = 0x4F,
  y1_gt_loss = 0x50,
  y1f_zero = 0x51,
  y1f_negative = 0x52,
  y1f_gt_loss = 0x53,
  ynl_zero = 0x54,
  ynl_negative = 0x55,
  ynl_gt_loss = 0x56,
  yn_zero = 0x57,
  yn_negative = 0x58,
  yn_gt_loss = 0x59,
  ynf_zero = 0x5A,
  ynf_negative = 0x5B,
  ynf_gt_loss = 0x5C,
  j0l_gt_loss = 0x5D,
  j0_gt_loss = 0x5E,
  j0f_gt_loss = 0x5F,
  j1l_gt_loss = 0x60,
  j1_gt_loss = 0x61,
  j1f_gt_loss = 0x62,
  jnl_gt_loss = 0x63,
  jn_gt_loss = 0x64,
  jnf_gt_loss = 0x65,
  lgammal_overflow = 0x66,
  lgammal_negative = 0x67,
  lgammal_reserve = 0x68,
  lgamma_overflow = 0x69,
  lgamma_negative = 0x6A,
  lgamma_reserve = 0x6B,
  lgammaf_overflow = 0x6C,
  lgammaf_negative = 0x6D,
  lgammaf_reserve = 0x6E,
  gammal_overflow = 0x6F,
  gammal_negative = 0x70,
  gammal_reserve = 0x71,
  gamma_overflow = 0x72,
  gamma_negative = 0x73,
  gamma_reserve = 0x74,
  gammaf_overflow = 0x75,
  gammaf_negative = 0x76,
  gammaf_reserve = 0x77,
  fmodl_by_zero = 0x78,
  fmod_by_zero = 0x79,
  fmodf_by_zero = 0x7A,
  remainderl_by_zero = 0x7B,
  remainder_by_zero = 0x7C,
  remainderf_by_zero = 0x7D,
  sinhl_overflow = 0x7E,
  sinh_overflow = 0x7F,
  sinhf_overflow = 0x80,
  atanhl_gt_one = 0x81,
  atanhl_eq_one = 0x82,
  atanh_gt_one = 0x83,
  atanh_eq_one = 0x84,
  atanhf_gt_one = 0x85,
  atanhf_eq_one = 0x86,
  acoshl_lt_one = 0x87,
  acosh_lt_one = 0x88,
  acoshf_lt_one = 0x89,
  log1pl_zero = 0x8A,
  log1pl_negative = 0x8B,
  log1p_zero = 0x8C,
  log1p_negative = 0x8D,
  log1pf_zero = 0x8E,
  log1pf_negative = 0x8F,
  ldexpl_overflow = 0x90,
  ldexpl_underflow = 0x91,
  ldexp_overflow = 0x92,
  ldexp_underflow = 0x93,
  ldexpf_overflow = 0x94,
  ldexpf_underflow = 0x95,
  logbl_zero = 0x96,
  logb_zero = 0x97,
  logbf_zero = 0x98,
  nextafterl_overflow = 0x99,
  nextafter_overflow = 0x9A,
  nextafterf_overflow = 0x9B,
  ilogbl_zero = 0x9C,
  ilogb_zero = 0x9D,
  ilogbf_zero = 0x9E,
  exp2l_overflow = 0x9F,
  exp2l_underflow = 0xA0,
  exp2_overflow = 0xA1,
  exp2_underflow = 0xA2,
  exp2f_overflow = 0xA3,
  exp2f_underflow = 0xA4,
  exp10l_overflow = 0xA5,
  exp10_overflow = 0xA6,
  exp10f_overflow = 0xA7,
  log2l_zero = 0xA8,
  log2l_negative = 0xA9,
  log2_zero = 0xAA,
  log2_negative = 0xAB,
  log2f_zero = 0xAC,
  log2f_negative = 0xAD,
  log_nan = 0x3E8,
  log10_nan = 0x3E9,
  exp_nan = 0x3EA,
  atan_nan = 0x3EB,
  ceil_nan = 0x3EC,
  floor_nan = 0x3ED,
  pow_nan = 0x3EE,
  modf_nan = 0x3EF,
};

/* 287 */
enum INTRNCVT_STATUS
{
  INTRNCVT_OK = 0x0,
  INTRNCVT_OVERFLOW = 0x1,
  INTRNCVT_UNDERFLOW = 0x2,
};

/* 288 */
enum state_t
{
  S_INIT = 0x0,
  S_EAT0L = 0x1,
  S_SIGNM = 0x2,
  S_GETL = 0x3,
  S_GETR = 0x4,
  S_POINT = 0x5,
  S_E = 0x6,
  S_SIGNE = 0x7,
  S_EAT0E = 0x8,
  S_GETE = 0x9,
  S_END = 0xA,
  S_E_IMPLICIT = 0xB,
};

/* 289 */
enum STATE
{
  ST_NORMAL = 0x0,
  ST_PERCENT = 0x1,
  ST_FLAG = 0x2,
  ST_WIDTH = 0x3,
  ST_DOT = 0x4,
  ST_PRECIS = 0x5,
  ST_SIZE = 0x6,
  ST_TYPE = 0x7,
};

/* 290 */
enum CHARTYPE
{
  CH_OTHER = 0x0,
  CH_PERCENT = 0x1,
  CH_DOT = 0x2,
  CH_STAR = 0x3,
  CH_ZERO = 0x4,
  CH_DIGIT = 0x5,
  CH_FLAG = 0x6,
  CH_SIZE = 0x7,
  CH_TYPE = 0x8,
};

/* 291 */
enum $1DD7A03358E0D01DD359262876E6A0F0
{
  lkNormal = 0x0,
  lkPrealloc = 0x1,
  lkDeleted = 0x2,
};

/* 292 */
enum _RTC_ErrorNumber
{
  _RTC_CHKSTK = 0x0,
  _RTC_CVRT_LOSS_INFO = 0x1,
  _RTC_CORRUPT_STACK = 0x2,
  _RTC_UNINIT_LOCAL_USE = 0x3,
  _RTC_ILLEGAL = 0x4,
};

/* 293 */
enum Tokens
{
  TOK_basedLp = 0x0,
  TOK_cdecl = 0x1,
  TOK_pascal = 0x2,
  TOK_stdcall = 0x3,
  TOK_thiscall = 0x4,
  TOK_fastcall = 0x5,
  TOK_cocall = 0x6,
  TOK_ptr64 = 0x7,
  TOK_restrict = 0x8,
  TOK_unaligned = 0x9,
  TOK__last = 0xA,
};

/* 294 */
enum DNameStatus
{
  DN_valid = 0x0,
  DN_invalid = 0x1,
  DN_truncated = 0x2,
  DN_error = 0x3,
};

/* 295 */
enum ATL::CComEnumFlags
{
  AtlFlagNoCopy = 0x0,
  AtlFlagTakeOwnership = 0x2,
  AtlFlagCopy = 0x3,
};

/* 296 */
enum $376C068C1282EF299E9DA65403409BBE
{
  WINSTATE_DESTROYED = 0x1,
};

/* 297 */
enum ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::FlagBits
{
  BitCopy = 0x1,
  BitOwn = 0x2,
};

/* 8443 */
typedef unsigned __int16 wchar_t;

/* 298 */
struct XiStrCharName
{
  wchar_t m_Name[21];
};

/* 299 */
struct __unaligned __declspec(align(1)) XiStrTeamInfo
{
  __int64 TeamId;
  __int64 TeamMarkId;
  wchar_t TeamName[13];
  wchar_t TeamDesc[61];
  char TeamUrl[33];
  unsigned int CreateDate;
  unsigned int CloseDate;
  unsigned int BanishDate;
  char OwnChannel[24];
  char TeamState[2];
  unsigned int TeamRanking;
  unsigned int TeamPoint;
  unsigned int ChannelWinCnt;
  unsigned int MemberCnt;
  __int64 TeamTotalExp;
  __int64 TeamTotalMoney;
  unsigned int Version;
  __int64 OwnerId;
  __int64 LeaderId;
  XiStrCharName OwnerName;
  XiStrCharName LeaderName;
};

/* 300 */
struct _RTL_CRITICAL_SECTION
{
  _RTL_CRITICAL_SECTION_DEBUG *DebugInfo;
  int LockCount;
  int RecursionCount;
  void *OwningThread;
  void *LockSemaphore;
  unsigned int SpinCount;
};

/* 301 */
struct _LIST_ENTRY
{
  _LIST_ENTRY *Flink;
  _LIST_ENTRY *Blink;
};

/* 302 */
struct _RTL_CRITICAL_SECTION_DEBUG
{
  unsigned __int16 Type;
  unsigned __int16 CreatorBackTraceIndex;
  _RTL_CRITICAL_SECTION *CriticalSection;
  _LIST_ENTRY ProcessLocksList;
  unsigned int EntryCount;
  unsigned int ContentionCount;
  unsigned int Spare[2];
};

/* 303 */
struct BS_CriticalSection
{
  _RTL_CRITICAL_SECTION m_csLock;
};

/* 304 */
struct __cppobj std::_Allocator_base<XiStrMemberInfo>
{
};

/* 305 */
struct __cppobj std::allocator<XiStrMemberInfo> : std::_Allocator_base<XiStrMemberInfo>
{
};

/* 306 */
struct std::_Vector_val<XiStrMemberInfo,std::allocator<XiStrMemberInfo> >
{
  std::allocator<XiStrMemberInfo> _Alval;
};

/* 307 */
struct XiStrExpInfo
{
  unsigned int CurExp;
  unsigned int NextExp;
  unsigned int BaseExp;
};

/* 308 */
struct __unaligned __declspec(align(1)) XiStrCharInfo
{
  __int64 Cid;
  XiStrCharName Name;
  int LastDate;
  unsigned __int16 Avatar;
  unsigned __int16 Level;
  XiStrExpInfo ExpInfo;
  __int64 MitoMoney;
  __int64 TeamId;
  __int64 TeamMarkId;
  wchar_t TeamName[13];
  int TeamRank;
  char PType;
  unsigned int PvpCnt;
  unsigned int PvpWinCnt;
  unsigned int PvpPoint;
  unsigned int TPvpCnt;
  unsigned int TPvpWinCnt;
  unsigned int TPvpPoint;
  unsigned int QuickCnt;
  float TotalDistance;
  float m_Position[4];
  int m_LastChannel;
  int m_City;
  int m_PosState;
  int CurCarId;
  unsigned int QuickSlot1;
  unsigned int QuickSlot2;
  int TeamJoinDate;
  int TeamCloseDate;
  int TeamLeaveDate;
  int HancoinInven;
  int HancoinGarage;
  int Flags;
  int Guild;
  __int64 Mileage;
};

/* 309 */
struct $42B970CC5B25DBF678833D7A2C3F7BDA
{
  unsigned __int16 Sort;
  unsigned __int16 Body;
  char Color[4];
};

/* 310 */
struct $A1194D3E500092C208560D6327859824
{
  int lvalSortBody;
  int lvalColor;
};

/* 311 */
union $566EC0F75D06BC4759069039DB5ABCE0
{
  $42B970CC5B25DBF678833D7A2C3F7BDA __s0;
  $A1194D3E500092C208560D6327859824 __s1;
  __int64 llval;
};

/* 312 */
struct XiCarAttr
{
  $566EC0F75D06BC4759069039DB5ABCE0 ___u0;
};

/* 313 */
struct __unaligned __declspec(align(1)) XiStrMemberInfo
{
  XiStrCharInfo CharInfo;
  XiCarAttr CarAttr;
};

/* 314 */
struct __cppobj std::vector<XiStrMemberInfo,std::allocator<XiStrMemberInfo> > : std::_Vector_val<XiStrMemberInfo,std::allocator<XiStrMemberInfo> >
{
  XiStrMemberInfo *_Myfirst;
  XiStrMemberInfo *_Mylast;
  XiStrMemberInfo *_Myend;
};

/* 315 */
struct __cppobj std::_String_base
{
};

/* 316 */
struct __cppobj std::_Allocator_base<unsigned short>
{
};

/* 317 */
struct __cppobj std::allocator<unsigned short> : std::_Allocator_base<unsigned short>
{
};

/* 318 */
struct __cppobj std::_String_val<unsigned short,std::allocator<unsigned short> > : std::_String_base
{
  std::allocator<unsigned short> _Alval;
};

/* 319 */
union std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >::_Bxty
{
  unsigned __int16 _Buf[8];
  unsigned __int16 *_Ptr;
};

/* 320 */
struct __cppobj std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > : std::_String_val<unsigned short,std::allocator<unsigned short> >
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >::_Bxty _Bx;
  unsigned int _Mysize;
  unsigned int _Myres;
};

/* 321 */
struct __cppobj std::_Allocator_base<BS_GameDispatch *>
{
};

/* 322 */
struct __cppobj std::allocator<BS_GameDispatch *> : std::_Allocator_base<BS_GameDispatch *>
{
};

/* 323 */
struct std::_Vector_val<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >
{
  std::allocator<BS_GameDispatch *> _Alval;
};

/* 324 */
struct BS_PacketDispatch
{
  BS_PacketDispatchVtbl *vfptr;
  BS_Session *m_pSession;
  BS_Packet *m_pRecvPacket;
  BS_Buffer *m_pSendBuffer;
  BS_Buffer *m_pRecvBuffer;
  int m_nDisConnCnt;
};

/* 325 */
struct BS_PacketDispatchVtbl
{
  void *(__thiscall *__vecDelDtor)(BS_PacketDispatch *this, unsigned int);
  __declspec(align(8)) BS_PacketDispatch *(__thiscall *Clone)(BS_PacketDispatch *this);
  bool (__thiscall *Release)(BS_PacketDispatch *this);
  bool (__thiscall *Accepted)(BS_PacketDispatch *this);
  bool (__thiscall *Connected)(BS_PacketDispatch *this);
  bool (__thiscall *Disconnected)(BS_PacketDispatch *this);
  void (__thiscall *EndPacket)(BS_PacketDispatch *this);
  void (__thiscall *OnException)(BS_PacketDispatch *this, int);
  int (__thiscall *GetRecvBufferSize)(BS_PacketDispatch *this);
};

/* 326 */
struct BS_Reference<BS_Session>
{
  BS_Reference<BS_Session>Vtbl *vfptr;
  BS_Session *m_pDerivedClass;
  int m_RefCount;
};

/* 329 */
struct $BD85036DCC0442AA317E9171D0F2179B
{
  char s_b1;
  char s_b2;
  char s_b3;
  char s_b4;
};

/* 330 */
struct $CC608A129C88F312E26B04B0A6BA5EDC
{
  unsigned __int16 s_w1;
  unsigned __int16 s_w2;
};

/* 331 */
union $F9E5EC7CF9E82DF8331A7F56FE245225
{
  $BD85036DCC0442AA317E9171D0F2179B S_un_b;
  $CC608A129C88F312E26B04B0A6BA5EDC S_un_w;
  unsigned int S_addr;
};

/* 332 */
struct in_addr
{
  $F9E5EC7CF9E82DF8331A7F56FE245225 S_un;
};

/* 333 */
struct sockaddr_in
{
  __int16 sin_family;
  unsigned __int16 sin_port;
  in_addr sin_addr;
  char sin_zero[8];
};

/* 334 */
struct BS_Session::BS_AddrInfo
{
  sockaddr_in m_BindAddr;
  sockaddr_in m_RemoteAddr;
};

/* 335 */
struct BS_Session::BS_SessionStatic
{
  unsigned int m_SendPendingByte;
  bool m_RecvPending;
  unsigned int m_SendedByte;
  unsigned int m_RecvedByte;
};

/* 339 */
struct BS_Session::BS_SessionState
{
  unsigned __int16 m_State;
};

/* 328 */
struct __cppobj BS_Session : BS_Reference<BS_Session>
{
  unsigned int m_hSocket;
  BS_Session::BS_AddrInfo m_AddrInfo;
  int m_AddrLen;
  BS_Session::BS_SessionStatic m_Static;
  BS_PacketDispatch *const m_pDispatch;
  BS_SessionContainer *const m_pContainer;
  int m_nPendingCount;
  int m_nMaxPendingCount;
  BS_Session::BS_SessionState m_SessionStatus;
  BS_Cipher *m_pCipher;
  BS_CriticalSection m_cipherLock;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > m_Name;
  int m_nWaitPending;
  BS_Log *SessionLog;
};

/* 366 */
struct BS_Reference<BS_Packet>
{
  BS_Reference<BS_Packet>Vtbl *vfptr;
  BS_Packet *m_pDerivedClass;
  int m_RefCount;
};

/* 368 */
struct __cppobj BS_Packet : BS_Reference<BS_Packet>
{
  BS_Buffer *m_pBuffer;
  void *m_BufferPtr;
  unsigned int m_BufferSize;
  unsigned int m_BufferUsage;
};

/* 369 */
struct __cppobj std::binary_function<unsigned int,unsigned int,bool>
{
};

/* 370 */
struct __cppobj std::less<unsigned int> : std::binary_function<unsigned int,unsigned int,bool>
{
};

/* 371 */
struct std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0>
{
  std::less<unsigned int> comp;
};

/* 372 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >::_Node>
{
};

/* 373 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >::_Node>
{
};

/* 374 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> > : std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >::_Node> _Alnod;
};

/* 375 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >::_Node *>
{
};

/* 376 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >::_Node *>
{
};

/* 377 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >::_Node *> _Alptr;
};

/* 378 */
struct __cppobj std::_Allocator_base<std::pair<unsigned int const ,BS_ChunkList *> >
{
};

/* 379 */
struct __cppobj std::allocator<std::pair<unsigned int const ,BS_ChunkList *> > : std::_Allocator_base<std::pair<unsigned int const ,BS_ChunkList *> >
{
};

/* 380 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >
{
  std::allocator<std::pair<unsigned int const ,BS_ChunkList *> > _Alval;
};

/* 403 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 404 */
struct __cppobj std::map<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> > > : std::_Tree<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >
{
};

/* 405 */
struct BS_Buffer
{
  std::map<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> > > m_ChunkMgr;
};

/* 327 */
struct BS_Reference<BS_Session>Vtbl
{
  void *(__thiscall *__vecDelDtor)(BS_Reference<BS_Session> *this, unsigned int);
};

/* 336 */
struct __declspec(align(4)) BS_SessionContainer
{
  BS_SessionContainerVtbl *vfptr;
  BS_CriticalSection m_ContainerLock;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > m_Name;
  BS_CompletionHandler *m_pIOCP;
  BS_Session *m_pSession;
  volatile int m_bStop;
  bool m_bUseConnectionHold;
};

/* 340 */
struct CGenRandMT
{
  unsigned int mt[624];
  int mti;
};

/* 341 */
struct __declspec(align(8)) CStreamCipher
{
  __int64 m_keyStream[2];
  __int64 m_oldKeyStream;
  char *m_keyPtr;
  char *m_keyPtrEnd;
  CGenRandMT genrandmt;
  __int64 m_rand;
  char *m_randPtr;
  char *m_randPtrEnd;
  CStreamCipher::CipherType m_cipherType;
};

/* 342 */
struct __unaligned __declspec(align(4)) BS_Cipher::KeyUnit
{
  __int64 Chain;
  unsigned int Seed[4];
  int Type;
};

/* 343 */
struct BS_Cipher::Key
{
  BS_Cipher::KeyUnit m_serverKey;
  BS_Cipher::KeyUnit m_clientKey;
};

/* 344 */
struct __unaligned __declspec(align(1)) BS_Cipher
{
  CStreamCipher m_outCipher;
  CStreamCipher m_inCipher;
  $ED3C74DF89284AC7FD89C7A8C6E37D18 m_state;
  BS_Cipher::Key m_key;
  BS_Cipher::Key m_keyRecvBuff;
  int m_keyRecvSize;
  int m_SecureType;
  bool m_bServer;
};

/* 345 */
struct BS_Pool
{
  BS_PoolVtbl *vfptr;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > m_PoolID;
};

/* 365 */
struct __cppobj BS_Log : BS_Pool
{
  BS_Stream *m_pStream;
};

/* 367 */
struct BS_Reference<BS_Packet>Vtbl
{
  void *(__thiscall *__vecDelDtor)(BS_Reference<BS_Packet> *this, unsigned int);
};

/* 381 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >::_Node *_Right;
  std::pair<unsigned int const ,BS_ChunkList *> _Myval;
  char _Color;
  char _Isnil;
};

/* 337 */
struct BS_SessionContainerVtbl
{
  void *(__thiscall *__vecDelDtor)(BS_SessionContainer *this, unsigned int);
  bool (__thiscall *Destroy)(BS_SessionContainer *this);
  bool (__thiscall *ConnectionHold)(BS_SessionContainer *this, BS_Session *);
  unsigned int (__thiscall *GetItemNum)(BS_SessionContainer *this);
  unsigned int (__thiscall *GetWaitPoolSize)(BS_SessionContainer *this);
  unsigned int (__thiscall *GetUsingNum)(BS_SessionContainer *this);
};

/* 338 */
struct BS_CompletionHandler
{
  void *m_hIOCP;
  unsigned int m_nThread;
  unsigned int m_nTimeOutMS;
};

/* 346 */
struct BS_PoolVtbl
{
  void *(__thiscall *__vecDelDtor)(BS_Pool *this, unsigned int);
};

/* 347 */
struct __cppobj std::basic_ostream<unsigned short,std::char_traits<unsigned short> >
{
  _BYTE gap0[56];
};

/* 364 */
struct __cppobj __declspec(align(32)) BS_Stream : std::basic_ostream<unsigned short,std::char_traits<unsigned short> >
{
  _BYTE gap38[40];
};

/* 402 */
struct std::pair<unsigned int const ,BS_ChunkList *>
{
  const unsigned int first;
  BS_ChunkList *second;
};

/* 382 */
struct __cppobj std::_Allocator_base<std::_List_nod<char *,std::allocator<char *> >::_Node>
{
};

/* 383 */
struct __cppobj std::allocator<std::_List_nod<char *,std::allocator<char *> >::_Node> : std::_Allocator_base<std::_List_nod<char *,std::allocator<char *> >::_Node>
{
};

/* 384 */
struct std::_List_nod<char *,std::allocator<char *> >
{
  std::allocator<std::_List_nod<char *,std::allocator<char *> >::_Node> _Alnod;
};

/* 385 */
struct __cppobj std::_Allocator_base<std::_List_nod<char *,std::allocator<char *> >::_Node *>
{
};

/* 386 */
struct __cppobj std::allocator<std::_List_nod<char *,std::allocator<char *> >::_Node *> : std::_Allocator_base<std::_List_nod<char *,std::allocator<char *> >::_Node *>
{
};

/* 387 */
struct __cppobj std::_List_ptr<char *,std::allocator<char *> > : std::_List_nod<char *,std::allocator<char *> >
{
  std::allocator<std::_List_nod<char *,std::allocator<char *> >::_Node *> _Alptr;
};

/* 388 */
struct __cppobj std::_Allocator_base<char *>
{
};

/* 389 */
struct __cppobj std::allocator<char *> : std::_Allocator_base<char *>
{
};

/* 390 */
struct __cppobj std::_List_val<char *,std::allocator<char *> > : std::_List_ptr<char *,std::allocator<char *> >
{
  std::allocator<char *> _Alval;
};

/* 392 */
struct __cppobj std::list<char *,std::allocator<char *> > : std::_List_val<char *,std::allocator<char *> >
{
  std::_List_nod<char *,std::allocator<char *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 393 */
struct BS_SpinLock
{
  volatile int m_bLocked;
};

/* 399 */
struct BS_ChunkList
{
  std::list<char *,std::allocator<char *> > m_List;
  BS_SpinLock m_ChunkListLock;
  BS_MemPool *m_pMemPool;
  int m_nInUse;
  unsigned int m_nAllocCacheNum;
};

/* 391 */
struct std::_List_nod<char *,std::allocator<char *> >::_Node
{
  std::_List_nod<char *,std::allocator<char *> >::_Node *_Next;
  std::_List_nod<char *,std::allocator<char *> >::_Node *_Prev;
  char *_Myval;
};

/* 394 */
struct std::_Vector_val<char *,std::allocator<char *> >
{
  std::allocator<char *> _Alval;
};

/* 395 */
struct __cppobj std::vector<char *,std::allocator<char *> > : std::_Vector_val<char *,std::allocator<char *> >
{
  char **_Myfirst;
  char **_Mylast;
  char **_Myend;
};

/* 396 */
struct __cppobj std::_Allocator_base<BS_ChunkList *>
{
};

/* 397 */
struct __cppobj std::allocator<BS_ChunkList *> : std::_Allocator_base<BS_ChunkList *>
{
};

/* 398 */
struct std::_Vector_val<BS_ChunkList *,std::allocator<BS_ChunkList *> >
{
  std::allocator<BS_ChunkList *> _Alval;
};

/* 400 */
struct __cppobj std::vector<BS_ChunkList *,std::allocator<BS_ChunkList *> > : std::_Vector_val<BS_ChunkList *,std::allocator<BS_ChunkList *> >
{
  BS_ChunkList **_Myfirst;
  BS_ChunkList **_Mylast;
  BS_ChunkList **_Myend;
};

/* 401 */
struct __cppobj BS_MemPool : BS_Pool
{
  std::vector<char *,std::allocator<char *> > m_ChunkGroupList;
  std::list<char *,std::allocator<char *> > m_ChunkCache;
  std::vector<BS_ChunkList *,std::allocator<BS_ChunkList *> > m_ChunkMgr;
  unsigned int m_nPerAllocSize;
  unsigned int m_nAllocNum;
  BS_SpinLock m_ChunkGroupLock;
  BS_SpinLock m_ChunkCacheLock;
  BS_SpinLock m_ChunkListLock;
  BS_Log *MemPoolLog;
};

/* 361 */
struct std::_Mutex
{
  void *_Mtx;
};

/* 348 */
struct std::basic_streambuf<unsigned short,std::char_traits<unsigned short> >
{
  std::basic_streambuf<unsigned short,std::char_traits<unsigned short> >Vtbl *vfptr;
  std::_Mutex _Mylock;
  unsigned __int16 *_Gfirst;
  unsigned __int16 *_Pfirst;
  unsigned __int16 **_IGfirst;
  unsigned __int16 **_IPfirst;
  unsigned __int16 *_Gnext;
  unsigned __int16 *_Pnext;
  unsigned __int16 **_IGnext;
  unsigned __int16 **_IPnext;
  int _Gcount;
  int _Pcount;
  int *_IGcount;
  int *_IPcount;
  std::locale *_Plocale;
};

/* 349 */
struct __declspec(align(8)) std::fpos<int>
{
  int _Myoff;
  __int64 _Fpos;
  int _Mystate;
};

/* 360 */
struct std::basic_streambuf<unsigned short,std::char_traits<unsigned short> >Vtbl
{
  void *(__thiscall *__vecDelDtor)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned int);
  _BYTE gap4[4];
  unsigned __int16 (__thiscall *pbackfail)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned __int16);
  int (__thiscall *showmanyc)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this);
  unsigned __int16 (__thiscall *underflow)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this);
  unsigned __int16 (__thiscall *uflow)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this);
  int (__thiscall *xsgetn)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned __int16 *, int);
  int (__thiscall *xsputn)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, const unsigned __int16 *, int);
  std::fpos<int> *(__thiscall *seekoff)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, std::fpos<int> *result, int, int, int);
  std::fpos<int> *(__thiscall *seekpos)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, std::fpos<int> *result, std::fpos<int>, int);
  std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *(__thiscall *setbuf)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned __int16 *, int);
  int (__thiscall *sync)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this);
  void (__thiscall *imbue)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, std::locale *);
};

/* 350 */
struct __cppobj std::_Locbase<int>
{
};

/* 359 */
const struct __cppobj std::locale : std::_Locbase<int>
{
  std::locale::_Locimp *_Ptr;
};

/* 351 */
struct std::locale::facet
{
  std::locale::facetVtbl *vfptr;
  unsigned int _Refs;
};

/* 353 */
struct __cppobj std::_Allocator_base<char>
{
};

/* 354 */
struct __cppobj std::allocator<char> : std::_Allocator_base<char>
{
};

/* 355 */
struct __cppobj std::_String_val<char,std::allocator<char> > : std::_String_base
{
  std::allocator<char> _Alval;
};

/* 356 */
union std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Bxty
{
  char _Buf[16];
  char *_Ptr;
};

/* 357 */
struct __cppobj std::basic_string<char,std::char_traits<char>,std::allocator<char> > : std::_String_val<char,std::allocator<char> >
{
  std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Bxty _Bx;
  unsigned int _Mysize;
  unsigned int _Myres;
};

/* 358 */
struct __cppobj std::locale::_Locimp : std::locale::facet
{
  std::locale::facet **_Facetvec;
  unsigned int _Facetcount;
  int _Catmask;
  bool _Xparent;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Name;
};

/* 352 */
struct std::locale::facetVtbl
{
  void *(__thiscall *__vecDelDtor)(std::locale::facet *this, unsigned int);
};

/* 362 */
struct __cppobj BS_StreamBuf : std::basic_streambuf<unsigned short,std::char_traits<unsigned short> >
{
};

/* 363 */
struct BS_StrUtils::sBuffer<unsigned short>
{
  unsigned __int16 *Buf;
  unsigned int Len;
};

/* 406 */
struct BS_PktHead
{
  unsigned __int16 m_Len;
};

/* 407 */
struct __cppobj BS_ProtocolPacket : BS_Packet
{
  BS_PktHead *m_pHead;
};

/* 408 */
struct __cppobj BS_MessageDispatch : BS_PacketDispatch
{
  BS_ProtocolPacket *m_pSendPacket;
  BS_CriticalSection m_lock;
};

/* 411 */
struct __cppobj std::_Allocator_base<unsigned short (__cdecl*)(BS_PacketDispatch *,char *)>
{
};

/* 412 */
struct __cppobj std::allocator<unsigned short (__cdecl*)(BS_PacketDispatch *,char *)> : std::_Allocator_base<unsigned short (__cdecl*)(BS_PacketDispatch *,char *)>
{
};

/* 413 */
struct std::_Vector_val<unsigned short (__cdecl*)(BS_PacketDispatch *,char *),std::allocator<unsigned short (__cdecl*)(BS_PacketDispatch *,char *)> >
{
  std::allocator<unsigned short (__cdecl*)(BS_PacketDispatch *,char *)> _Alval;
};

/* 414 */
struct __cppobj std::vector<unsigned short (__cdecl*)(BS_PacketDispatch *,char *),std::allocator<unsigned short (__cdecl*)(BS_PacketDispatch *,char *)> > : std::_Vector_val<unsigned short (__cdecl*)(BS_PacketDispatch *,char *),std::allocator<unsigned short (__cdecl*)(BS_PacketDispatch *,char *)> >
{
  unsigned __int16 (__cdecl **_Myfirst)(BS_PacketDispatch *, char *);
  unsigned __int16 (__cdecl **_Mylast)(BS_PacketDispatch *, char *);
  unsigned __int16 (__cdecl **_Myend)(BS_PacketDispatch *, char *);
};

/* 409 */
struct BS_PacketAnalyze
{
  BS_PacketAnalyzeVtbl *vfptr;
  std::vector<unsigned short (__cdecl*)(BS_PacketDispatch *,char *),std::allocator<unsigned short (__cdecl*)(BS_PacketDispatch *,char *)> > m_ParserTable;
  BS_Log *PacketLog;
};

/* 410 */
struct BS_PacketAnalyzeVtbl
{
  void *(__thiscall *__vecDelDtor)(BS_PacketAnalyze *this, unsigned int);
  bool (__thiscall *PacketAnalyze)(BS_PacketAnalyze *this, BS_PacketDispatch *, char *, int);
};

/* 415 */
struct __cppobj BS_MultiDispatch : BS_MessageDispatch
{
  BS_PacketAnalyze *m_pPacketAnalyze;
};

/* 418 */
struct XiCsCharInfo::Base
{
  int LoginTime;
  int TryCnt;
  int WinCnt;
  int Level;
  __int64 Money;
};

/* 419 */
struct XiCsCharInfo::FExp
{
  float m_fFraction;
};

/* 420 */
union XiCsCharInfo::Recommend::From
{
  wchar_t CName[21];
  char MemberId[32];
};

/* 421 */
struct __declspec(align(8)) XiCsCharInfo::Recommend
{
  int friendServerId;
  __int64 friendCid;
  char cardid[32];
  int trying;
  int ctime;
  XiCsCharInfo::Recommend::From from;
};

/* 422 */
struct __cppobj std::_Allocator_base<XiStrCarInfo>
{
};

/* 423 */
struct __cppobj std::allocator<XiStrCarInfo> : std::_Allocator_base<XiStrCarInfo>
{
};

/* 424 */
struct std::_Vector_val<XiStrCarInfo,std::allocator<XiStrCarInfo> >
{
  std::allocator<XiStrCarInfo> _Alval;
};

/* 427 */
struct __cppobj std::vector<XiStrCarInfo,std::allocator<XiStrCarInfo> > : std::_Vector_val<XiStrCarInfo,std::allocator<XiStrCarInfo> >
{
  XiStrCarInfo *_Myfirst;
  XiStrCarInfo *_Mylast;
  XiStrCarInfo *_Myend;
};

/* 429 */
struct __cppobj std::binary_function<unsigned long,unsigned long,bool>
{
};

/* 430 */
struct __cppobj std::less<unsigned long> : std::binary_function<unsigned long,unsigned long,bool>
{
};

/* 431 */
struct std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0>
{
  std::less<unsigned long> comp;
};

/* 432 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >::_Node>
{
};

/* 433 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >::_Node>
{
};

/* 434 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> > : std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >::_Node> _Alnod;
};

/* 435 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >::_Node *>
{
};

/* 436 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >::_Node *>
{
};

/* 437 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >::_Node *> _Alptr;
};

/* 438 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,XiCsQuest *> >
{
};

/* 439 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsQuest *> > : std::_Allocator_base<std::pair<unsigned long const ,XiCsQuest *> >
{
};

/* 440 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >
{
  std::allocator<std::pair<unsigned long const ,XiCsQuest *> > _Alval;
};

/* 475 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 476 */
struct __cppobj std::map<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> > > : std::_Tree<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >
{
};

/* 477 */
struct std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0>
{
  std::less<unsigned long> comp;
};

/* 478 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >::_Node>
{
};

/* 479 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >::_Node>
{
};

/* 480 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> > : std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >::_Node> _Alnod;
};

/* 481 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >::_Node *>
{
};

/* 482 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >::_Node *>
{
};

/* 483 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >::_Node *> _Alptr;
};

/* 484 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,XiCsItem *> >
{
};

/* 485 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsItem *> > : std::_Allocator_base<std::pair<unsigned long const ,XiCsItem *> >
{
};

/* 486 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >
{
  std::allocator<std::pair<unsigned long const ,XiCsItem *> > _Alval;
};

/* 496 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 497 */
struct __cppobj std::map<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> > > : std::_Tree<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >
{
};

/* 498 */
struct __cppobj std::_Allocator_base<XiCsItem *>
{
};

/* 499 */
struct __cppobj std::allocator<XiCsItem *> : std::_Allocator_base<XiCsItem *>
{
};

/* 500 */
struct std::_Vector_val<XiCsItem *,std::allocator<XiCsItem *> >
{
  std::allocator<XiCsItem *> _Alval;
};

/* 501 */
struct __cppobj std::vector<XiCsItem *,std::allocator<XiCsItem *> > : std::_Vector_val<XiCsItem *,std::allocator<XiCsItem *> >
{
  XiCsItem **_Myfirst;
  XiCsItem **_Mylast;
  XiCsItem **_Myend;
};

/* 502 */
struct std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0>
{
  std::less<unsigned long> comp;
};

/* 503 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >::_Node>
{
};

/* 504 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >::_Node>
{
};

/* 505 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> > : std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >::_Node> _Alnod;
};

/* 506 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >::_Node *>
{
};

/* 507 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >::_Node *>
{
};

/* 508 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >::_Node *> _Alptr;
};

/* 509 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,XiCsVSItem *> >
{
};

/* 510 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsVSItem *> > : std::_Allocator_base<std::pair<unsigned long const ,XiCsVSItem *> >
{
};

/* 511 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >
{
  std::allocator<std::pair<unsigned long const ,XiCsVSItem *> > _Alval;
};

/* 517 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 518 */
struct __cppobj std::map<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> > > : std::_Tree<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >
{
};

/* 519 */
struct __cppobj std::_Allocator_base<XiCsVSItem *>
{
};

/* 520 */
struct __cppobj std::allocator<XiCsVSItem *> : std::_Allocator_base<XiCsVSItem *>
{
};

/* 521 */
struct std::_Vector_val<XiCsVSItem *,std::allocator<XiCsVSItem *> >
{
  std::allocator<XiCsVSItem *> _Alval;
};

/* 522 */
struct __cppobj std::vector<XiCsVSItem *,std::allocator<XiCsVSItem *> > : std::_Vector_val<XiCsVSItem *,std::allocator<XiCsVSItem *> >
{
  XiCsVSItem **_Myfirst;
  XiCsVSItem **_Mylast;
  XiCsVSItem **_Myend;
};

/* 523 */
struct __cppobj std::_Allocator_base<XiCsSTItem *>
{
};

/* 524 */
struct __cppobj std::allocator<XiCsSTItem *> : std::_Allocator_base<XiCsSTItem *>
{
};

/* 525 */
struct std::_Vector_val<XiCsSTItem *,std::allocator<XiCsSTItem *> >
{
  std::allocator<XiCsSTItem *> _Alval;
};

/* 529 */
struct __cppobj std::vector<XiCsSTItem *,std::allocator<XiCsSTItem *> > : std::_Vector_val<XiCsSTItem *,std::allocator<XiCsSTItem *> >
{
  XiCsSTItem **_Myfirst;
  XiCsSTItem **_Mylast;
  XiCsSTItem **_Myend;
};

/* 530 */
struct __cppobj std::_Allocator_base<XiAuctionItem *>
{
};

/* 531 */
struct __cppobj std::allocator<XiAuctionItem *> : std::_Allocator_base<XiAuctionItem *>
{
};

/* 532 */
struct std::_Vector_val<XiAuctionItem *,std::allocator<XiAuctionItem *> >
{
  std::allocator<XiAuctionItem *> _Alval;
};

/* 538 */
struct __cppobj std::vector<XiAuctionItem *,std::allocator<XiAuctionItem *> > : std::_Vector_val<XiAuctionItem *,std::allocator<XiAuctionItem *> >
{
  XiAuctionItem **_Myfirst;
  XiAuctionItem **_Mylast;
  XiAuctionItem **_Myend;
};

/* 539 */
struct __cppobj std::_Allocator_base<XiAuctionCar *>
{
};

/* 540 */
struct __cppobj std::allocator<XiAuctionCar *> : std::_Allocator_base<XiAuctionCar *>
{
};

/* 541 */
struct std::_Vector_val<XiAuctionCar *,std::allocator<XiAuctionCar *> >
{
  std::allocator<XiAuctionCar *> _Alval;
};

/* 544 */
struct __cppobj std::vector<XiAuctionCar *,std::allocator<XiAuctionCar *> > : std::_Vector_val<XiAuctionCar *,std::allocator<XiAuctionCar *> >
{
  XiAuctionCar **_Myfirst;
  XiAuctionCar **_Mylast;
  XiAuctionCar **_Myend;
};

/* 556 */
struct __cppobj std::_Allocator_base<XiRankUnit>
{
};

/* 557 */
struct __cppobj std::allocator<XiRankUnit> : std::_Allocator_base<XiRankUnit>
{
};

/* 558 */
struct std::_Vector_val<XiRankUnit,std::allocator<XiRankUnit> >
{
  std::allocator<XiRankUnit> _Alval;
};

/* 559 */
struct __cppobj std::vector<XiRankUnit,std::allocator<XiRankUnit> > : std::_Vector_val<XiRankUnit,std::allocator<XiRankUnit> >
{
  XiRankUnit *_Myfirst;
  XiRankUnit *_Mylast;
  XiRankUnit *_Myend;
};

/* 566 */
struct XiStrStatInfo
{
  int BasedSpeed;
  int BasedCrash;
  int BasedAccel;
  int BasedBoost;
  int EquipSpeed;
  int EquipCrash;
  int EquipAccel;
  int EquipBoost;
  int CharSpeed;
  int CharCrash;
  int CharAccel;
  int CharBoost;
  int ItemUseSpeed;
  int ItemUseCrash;
  int ItemUseAccel;
  int ItemUseBoost;
  int TotalSpeed;
  int TotalCrash;
  int TotalAccel;
  int TotalBoost;
};

/* 567 */
struct XiStrEnChantBonus
{
  int Speed;
  int Crash;
  int Accel;
  int Boost;
  int AddSpeed;
  float Drop;
  float Exp;
  float MitronCapacity;
  float MitronEfficiency;
};

/* 568 */
struct __unaligned __declspec(align(1)) XiMita500Buff
{
  bool m_bBuffState;
  int m_GetTodayCnt;
  int m_GetTotalCnt;
  int m_RewardPoint;
  int m_BuffRemainTime;
};

/* 569 */
struct XiDayEvent
{
  int m_DayMissionTodayCnt;
  int m_DayMissionTotalCnt;
  int m_DayMissionEventCnt;
  int m_DayMileageTodayCnt;
  int m_DayMileageTotalCnt;
  int m_DayEventTodayCnt;
  int m_DayEventTotalCnt;
};

/* 570 */
struct XiChant
{
  unsigned int m_nType;
  unsigned int m_nValue;
  unsigned int m_nEndTime;
};

/* 571 */
struct XiEnChant
{
  unsigned int m_nType;
  unsigned int m_nValue;
};

/* 573 */
struct BS_SmartPtr<XiCsTeam>
{
  XiCsTeam *m_pObj;
};

/* 574 */
struct XiStrCouponForVar
{
  float fPvPBattle;
  float fQuickService;
  float fChasing;
  float fCombo;
  float fDriveTime;
  float fDrift;
  float fArtDrive;
  float fJump;
  float fRevDrive;
  float fUnderCity;
};

/* 575 */
struct __cppobj std::_Allocator_base<XiStrCoupon>
{
};

/* 576 */
struct __cppobj std::allocator<XiStrCoupon> : std::_Allocator_base<XiStrCoupon>
{
};

/* 577 */
struct std::_Vector_val<XiStrCoupon,std::allocator<XiStrCoupon> >
{
  std::allocator<XiStrCoupon> _Alval;
};

/* 579 */
struct __cppobj std::vector<XiStrCoupon,std::allocator<XiStrCoupon> > : std::_Vector_val<XiStrCoupon,std::allocator<XiStrCoupon> >
{
  XiStrCoupon *_Myfirst;
  XiStrCoupon *_Mylast;
  XiStrCoupon *_Myend;
};

/* 580 */
struct std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0>
{
  std::less<unsigned long> comp;
};

/* 581 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >::_Node>
{
};

/* 582 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >::_Node>
{
};

/* 583 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> > : std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >::_Node> _Alnod;
};

/* 584 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >::_Node *>
{
};

/* 585 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >::_Node *>
{
};

/* 586 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >::_Node *> _Alptr;
};

/* 587 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,XiCouponParam> >
{
};

/* 588 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCouponParam> > : std::_Allocator_base<std::pair<unsigned long const ,XiCouponParam> >
{
};

/* 589 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >
{
  std::allocator<std::pair<unsigned long const ,XiCouponParam> > _Alval;
};

/* 593 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 594 */
struct __cppobj std::map<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> > > : std::_Tree<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >
{
};

/* 595 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,XiCsCharInfo *,int,XiCsCharInfo * const *,XiCsCharInfo * const &>
{
};

/* 596 */
struct __cppobj std::_Bidit<XiCsCharInfo *,int,XiCsCharInfo * const *,XiCsCharInfo * const &> : std::iterator<std::bidirectional_iterator_tag,XiCsCharInfo *,int,XiCsCharInfo * const *,XiCsCharInfo * const &>
{
};

/* 598 */
struct __cppobj std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::const_iterator : std::_Bidit<XiCsCharInfo *,int,XiCsCharInfo * const *,XiCsCharInfo * const &>
{
  std::_List_nod<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::_Node *_Ptr;
};

/* 599 */
struct __cppobj std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator : std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::const_iterator
{
};

/* 600 */
struct __declspec(align(8)) XiCsCharInfo::Cash
{
  __int64 Coin;
  int Time;
};

/* 601 */
struct __cppobj std::_Allocator_base<XiSticker>
{
};

/* 602 */
struct __cppobj std::allocator<XiSticker> : std::_Allocator_base<XiSticker>
{
};

/* 603 */
struct std::_Vector_val<XiSticker,std::allocator<XiSticker> >
{
  std::allocator<XiSticker> _Alval;
};

/* 604 */
struct __cppobj std::vector<XiSticker,std::allocator<XiSticker> > : std::_Vector_val<XiSticker,std::allocator<XiSticker> >
{
  XiSticker *_Myfirst;
  XiSticker *_Mylast;
  XiSticker *_Myend;
};

/* 605 */
struct __cppobj std::_Allocator_base<XiCsCharInfo::InFriend>
{
};

/* 606 */
struct __cppobj std::allocator<XiCsCharInfo::InFriend> : std::_Allocator_base<XiCsCharInfo::InFriend>
{
};

/* 607 */
struct std::_Vector_val<XiCsCharInfo::InFriend,std::allocator<XiCsCharInfo::InFriend> >
{
  std::allocator<XiCsCharInfo::InFriend> _Alval;
};

/* 612 */
struct __cppobj std::vector<XiCsCharInfo::InFriend,std::allocator<XiCsCharInfo::InFriend> > : std::_Vector_val<XiCsCharInfo::InFriend,std::allocator<XiCsCharInfo::InFriend> >
{
  XiCsCharInfo::InFriend *_Myfirst;
  XiCsCharInfo::InFriend *_Mylast;
  XiCsCharInfo::InFriend *_Myend;
};

/* 613 */
struct __cppobj std::_Allocator_base<XiStrVisualItemBuyUnit>
{
};

/* 614 */
struct __cppobj std::allocator<XiStrVisualItemBuyUnit> : std::_Allocator_base<XiStrVisualItemBuyUnit>
{
};

/* 615 */
struct std::_Vector_val<XiStrVisualItemBuyUnit,std::allocator<XiStrVisualItemBuyUnit> >
{
  std::allocator<XiStrVisualItemBuyUnit> _Alval;
};

/* 618 */
struct __cppobj std::vector<XiStrVisualItemBuyUnit,std::allocator<XiStrVisualItemBuyUnit> > : std::_Vector_val<XiStrVisualItemBuyUnit,std::allocator<XiStrVisualItemBuyUnit> >
{
  XiStrVisualItemBuyUnit *_Myfirst;
  XiStrVisualItemBuyUnit *_Mylast;
  XiStrVisualItemBuyUnit *_Myend;
};

/* 619 */
struct XiCsCharInfo::PlayTime
{
  int StartTime;
  int CheckTime;
  unsigned int Play;
  unsigned int Grade;
  int BasePlayTime;
  int TotalPlayTime;
};

/* 620 */
struct XiCsCharInfo::Delta
{
  int m_deltaExp;
};

/* 551 */
struct $91D1B2149FAC90180ECB9AC277F76009
{
  float x;
  float y;
  float z;
  float w;
};

/* 552 */
union $780FCD4EC586D45C18EF538853F4E990
{
  $91D1B2149FAC90180ECB9AC277F76009 __s0;
  float v[4];
};

/* 553 */
struct XiVec4
{
  $780FCD4EC586D45C18EF538853F4E990 ___u0;
};

/* 629 */
struct XiCsCharInfo::InstantEvent
{
  int OldCount;
  int YoungCount;
};

/* 630 */
struct XiCsCharInfo::Block
{
  int GameBlockDate;
  int ChattingBlockDate;
};

/* 416 */
struct __declspec(align(8)) XiCsCharInfo
{
  XiCsCharInfoVtbl *vfptr;
  XiCsCharInfo::Base m_base;
  XiCsCharInfo::FExp m_FExp;
  XiCsCharInfo::Recommend m_Recommend;
  BS_CriticalSection m_Itemlock;
  BS_CriticalSection m_Friendlock;
  BS_CriticalSection m_Cachelock;
  BS_Log *GameLog;
  XiStrCharInfo m_CharInfo;
  std::vector<XiStrCarInfo,std::allocator<XiStrCarInfo> > m_CarInfoList;
  BS_GameDispatch *m_pGameDispatch;
  std::map<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> > > m_MyQuest;
  std::map<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> > > m_MyPTItem;
  std::vector<XiCsItem *,std::allocator<XiCsItem *> > m_MyPartInven;
  std::map<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> > > m_MyVSItem;
  std::vector<XiCsVSItem *,std::allocator<XiCsVSItem *> > m_MyVSInven;
  std::vector<XiCsSTItem *,std::allocator<XiCsSTItem *> > m_MySTInven;
  bool m_bStickerCacheDirty;
  std::vector<XiAuctionItem *,std::allocator<XiAuctionItem *> > m_MyAuction;
  std::vector<XiAuctionCar *,std::allocator<XiAuctionCar *> > m_MyAuctionCar;
  XiCsArbeit *m_pCurArbeit;
  bool m_CurArbeitReady;
  XiCsQuest *m_pCurQuest;
  XiCsInstant *m_pCurInstant;
  XiCsInstant **m_ppCurInstant;
  XiCsInstant *m_pCurCategoryInstant[3];
  XiCsCarInfo *m_pCurCarInfo;
  XiCsCarInfo *m_pOldCarInfo;
  unsigned int m_InstantInterval;
  unsigned int m_LastInstantTime;
  std::vector<XiRankUnit,std::allocator<XiRankUnit> > m_ArbeitBestRec;
  XiExpTable *m_ExpTable;
  XiStrStatInfo m_StatInfo;
  XiStrEnChantBonus m_EnChantBonus;
  XiStrEnChantBonus m_EnChantPartyBonus;
  XiMita500Buff m_Mita500Buff;
  __unaligned __declspec(align(1)) XiDayEvent m_DayEvent;
  bool m_bBonusExp;
  bool m_bBonusMito;
  bool m_bRepireGirl;
  bool m_bTurboMan;
  bool m_bSticker;
  bool m_bDoubleUpgrade;
  bool m_bHalfMitronCharge;
  bool m_bDrinkItemDrop2X;
  bool m_bExtendInvenUpgrade;
  unsigned int m_nExtendGarage;
  XiChant m_Chant[27];
  XiEnChant m_EnChant[19];
  BS_SmartPtr<XiCsTeam> m_pTeam;
  XiStrCouponForVar m_CouponForVar;
  std::vector<XiStrCoupon,std::allocator<XiStrCoupon> > m_CouponStampList;
  std::map<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> > > m_CouponParamMap;
  int m_CouponSaveTime;
  float m_CouponSaveWeight;
  volatile int m_PartInvenIdx;
  volatile int m_VisualInvenIdx;
  volatile int m_StickerInvenIdx;
  std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator m_poolItr;
  XiCsCharInfo::Cash m_Cash;
  std::vector<XiSticker,std::allocator<XiSticker> > m_stickerCache;
  std::vector<XiCsCharInfo::InFriend,std::allocator<XiCsCharInfo::InFriend> > m_friendList;
  std::vector<XiStrVisualItemBuyUnit,std::allocator<XiStrVisualItemBuyUnit> > m_VSItemBuyHistory;
  XiCsCharInfo::PlayTime m_PlayTime;
  XiCsCharInfo::Delta m_Delta;
  int m_nextChaseTime;
  bool m_bChaseEnabled;
  bool m_bArbeitEnabled;
  XiCsLevelDropGroup *m_pLevelDropGroup;
  int m_cityId;
  XiVec4 m_basePos;
  XiVec4 m_areaPos;
  char m_szMemberId[32];
  char m_szMemberNum[32];
  int m_nChaseWinCnt;
  int m_nPcRoomBattleCnt;
  int m_nPcRoomBattleDate;
  bool m_cbattleFeePaid;
  int m_testPlayerQuestionTime;
  int m_testPlayerQuestionIndex;
  int m_OnlyDriftCombo;
  int m_OnlyFreeCombo;
  XiCsCharInfo::InstantEvent m_instantEvent;
  XiCsCharInfo::Block m_block;
};

/* 417 */
struct XiCsCharInfoVtbl
{
  void (__thiscall *OnDeleteCharacter)(XiCsCharInfo *this);
};

/* 425 */
struct XiStrCarUnit
{
  unsigned int CarID;
  unsigned int CarType;
  unsigned int BaseColor;
  unsigned int Grade;
  unsigned int SlotType;
  unsigned int AuctionCnt;
  float Mitron;
  float Kmh;
};

/* 426 */
struct __unaligned __declspec(align(1)) XiStrCarInfo
{
  XiStrCarUnit CarUnit;
  unsigned int Color;
  float MitronCapacity;
  float MitronEfficiency;
  bool AuctionOn;
};

/* 722 */
struct __cppobj std::_Allocator_base<BS_ChatRoom *>
{
};

/* 723 */
struct __cppobj std::allocator<BS_ChatRoom *> : std::_Allocator_base<BS_ChatRoom *>
{
};

/* 724 */
struct std::_Vector_val<BS_ChatRoom *,std::allocator<BS_ChatRoom *> >
{
  std::allocator<BS_ChatRoom *> _Alval;
};

/* 725 */
struct __cppobj std::vector<BS_ChatRoom *,std::allocator<BS_ChatRoom *> > : std::_Vector_val<BS_ChatRoom *,std::allocator<BS_ChatRoom *> >
{
  BS_ChatRoom **_Myfirst;
  BS_ChatRoom **_Mylast;
  BS_ChatRoom **_Myend;
};

/* 807 */
struct BS_SmartPtr<BS_Party>
{
  BS_Party *m_pObj;
};

/* 729 */
struct BS_SmartPtr<BS_Room>
{
  BS_Room *m_pObj;
};

/* 811 */
struct $D385C8B38EC34AC3C7B00A63864856F6
{
  int Time;
  int Side;
  int Drift;
  int OverHit;
  int ComboDamage;
};

/* 812 */
struct XiPvpUserInfo
{
  unsigned __int16 Level;
  unsigned __int16 Port;
  unsigned int Ip;
};

/* 813 */
struct __unaligned __declspec(align(2)) XiPvpEventCounter
{
  unsigned __int16 nOvervoltage;
  unsigned __int16 nColWall;
  unsigned __int16 nColTraffic;
  unsigned __int16 nColEtc;
  float fBoosterRun;
  float fFirstRun;
  unsigned __int16 nPoint[4];
  unsigned __int16 nItem;
  unsigned __int16 nReward[8];
  unsigned __int16 nRevCombo;
  unsigned __int16 nAcrobatCombo;
  unsigned __int16 nDriftCombo;
  unsigned __int16 nJumpCombo;
};

/* 814 */
struct BS_GameDispatch::Pvp
{
  int EndType;
  unsigned int Rank;
  int LastGate;
  int LastGateTime;
  int NumGate;
  float Record;
  float TotalDistance;
  float LoadingStatus;
  int StartLap;
  int NumLap;
  XiPvpEventCounter EventCounter;
  int GateRank[16];
  float GateRecord[16];
};

/* 816 */
struct BS_GameDispatch::Image
{
  __int64 ImageId;
  unsigned int Size;
  _iobuf *Fp;
};

/* 826 */
struct BS_GameDispatch::Rush
{
  RushEvent *m_pEvent;
};

/* 827 */
struct BS_GameDispatch::CRM
{
  char code[21];
};

/* 828 */
struct BS_GameDispatch::UnderCity
{
  int UCStage;
  int Agree;
  int UCPoint1;
  int UCPoint2;
  int UCPoint3;
  int UCPoint4;
  int UCExp;
  int UCMito;
  int UCItem1;
  int UCItem2;
  int UCItem3;
};

/* 428 */
struct __cppobj __declspec(align(8)) BS_GameDispatch : BS_MultiDispatch
{
  int m_GameSessionId;
  BS_Stream *m_pStream;
  BS_Game *m_pGame;
  BS_Channel *m_pChannel;
  int m_AreaId;
  BS_TradeRoom *m_pTradeRoom;
  std::vector<BS_ChatRoom *,std::allocator<BS_ChatRoom *> > m_ChatRoomList;
  unsigned __int16 m_GameSessionAge;
  int m_nCheckOutValue;
  BS_SmartPtr<BS_Party> m_pParty;
  BS_SmartPtr<BS_Party> m_pChaseParty;
  BS_SmartPtr<BS_Room> m_pRoom;
  bool m_bReady;
  BS_PvpChannel *m_pPvpChannel;
  int m_nPvpChannelPage;
  int m_nPvpChannelFilter;
  BS_OBSRoom *m_pOBSRoom;
  int m_LastTrafficEventTime;
  int m_nCombo;
  bool m_bComboEventChecked;
  int m_IsPCBang;
  $D385C8B38EC34AC3C7B00A63864856F6 m_Chase;
  XiPvpUserInfo m_pvpUserInfo;
  BS_GameDispatch::Pvp m_pvp;
  BS_GameDispatch::Image m_image;
  BS_GameDispatch::Rush m_rush;
  BS_GameDispatch::CRM m_crm;
  BS_GameDispatch::UnderCity m_underCity;
  int m_HuvId[32];
  int m_nMyHuvNum;
  bool m_bQuestChase;
  int m_nChaseStartTime;
};

/* 441 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,XiCsQuest *> _Myval;
  char _Color;
  char _Isnil;
};

/* 487 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,XiCsItem *> _Myval;
  char _Color;
  char _Isnil;
};

/* 442 */
struct XiDBOper
{
  int m_DBOper;
};

/* 488 */
struct $46506E0D494CF120A19388EB37177777
{
  unsigned __int16 State;
  unsigned __int16 Slot;
};

/* 489 */
union $90E2572CC35A071924DAD0BC1A98978B
{
  $46506E0D494CF120A19388EB37177777 __s0;
  unsigned int StateVar;
};

/* 490 */
struct XiStrItemUnit
{
  int StackNum;
  int Random;
  unsigned int AssistA;
  unsigned int AssistB;
  unsigned int Box;
  unsigned int Belonging;
  int Upgrade;
  int UpgradePoint;
  unsigned int ExpireTick;
};

/* 491 */
struct XiStrMyItem
{
  unsigned int CarID;
  $90E2572CC35A071924DAD0BC1A98978B Itm;
  XiStrItemUnit ItemUnit;
  unsigned int TableIdx;
  unsigned int InvenIdx;
};

/* 494 */
struct __cppobj XiCsItem : XiDBOper
{
  __int64 m_GID;
  XiStrItem *m_pItem;
  XiStrMyItem m_MyItem;
  XiStrAssist *m_pAssistA;
  XiStrAssist *m_pAssistB;
  unsigned int m_UpdateType;
  __int64 m_OldOwner;
  XiStrCharName m_OldOwnerName;
  unsigned int m_OldOwnerInvenIdx;
  bool m_bObservation;
  XiCsItemLocker *m_pItemLocker;
  char m_ItemData[32];
};

/* 512 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,XiCsVSItem *> _Myval;
  char _Color;
  char _Isnil;
};

/* 513 */
struct XiStrPlateName
{
  wchar_t m_Name[10];
};

/* 514 */
struct XiStrMyVSItem
{
  unsigned int CarID;
  int ItemState;
  unsigned int TableIdx;
  unsigned int InvenIdx;
  XiStrPlateName PlateName;
  int Period;
  int UpdateTime;
  int CreateTime;
};

/* 515 */
struct __cppobj __declspec(align(8)) XiCsVSItem : XiDBOper
{
  __int64 m_GID;
  XIVISUALITEM_INFO *m_pItem;
  XiStrMyVSItem m_MyVSItem;
};

/* 526 */
struct XiSticker
{
  __int64 stickerId;
  unsigned int color;
  unsigned __int16 posX;
  unsigned __int16 posY;
  unsigned __int16 scaleX;
  unsigned __int16 scaleY;
  unsigned __int16 rotate;
  char part;
  char flip;
};

/* 527 */
struct XiStrMySTItem
{
  unsigned int CarID;
  unsigned int InvenIdx;
  char StickerName[32];
  XiSticker ItemUnit;
};

/* 528 */
struct __cppobj __unaligned __declspec(align(4)) XiCsSTItem : XiDBOper
{
  XiStrMySTItem m_MySTItem;
};

/* 533 */
struct XiStrAuctionUnit
{
  unsigned int Serial;
  unsigned int TableIdx;
  unsigned int InvenIdx;
  unsigned int Price;
  unsigned int State;
  int RegDate;
};

/* 534 */
struct XiStrAuctionItemDataIn
{
  XiStrAuctionUnit Auction;
  XiStrItemUnit Item;
};

/* 537 */
struct __cppobj __declspec(align(8)) XiAuctionItem : XiDBOper
{
  XiStrAuctionItemDataIn Info;
  XiAuctionClient *ClientPtr;
  XiStrItem *ItemPtr;
  __int64 CidOfBuyer;
  unsigned int SortNo;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > SortItemName;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > SortCharName;
};

/* 542 */
struct XiStrAuctionCarDataIn
{
  XiStrAuctionUnit Auction;
  XiStrCarUnit Car;
};

/* 543 */
struct __cppobj XiAuctionCar : XiDBOper
{
  XiStrAuctionCarDataIn Info;
  XiAuctionClient *ClientPtr;
  XiStrItem *ItemPtr;
  __int64 CidOfBuyer;
  unsigned int SortNo;
  unsigned int SortLevel;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > SortCarName;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > SortCharName;
};

/* 545 */
struct XiStrMyArbeit
{
  unsigned int TableIdx;
  unsigned int Serial;
  unsigned int CompleteNum;
  bool CheckPoint[20];
};

/* 546 */
struct XiRankUnit
{
  unsigned int Time;
  int Rank;
};

/* 547 */
struct __cppobj XiCsArbeit : XiDBOper
{
  XiStrArbeit *m_pArbeit;
  XiStrMyArbeit m_MyArbeit;
  unsigned int m_State;
  unsigned int StartTime;
  int CheckCount;
  unsigned int CheckTime[20];
  XiRankUnit RankUnit;
  unsigned int Result;
  int m_CreateTime;
};

/* 472 */
struct __unaligned __declspec(align(2)) XiStrMyQuest
{
  unsigned int TableIdx;
  unsigned int State;
  unsigned int PlaceIdx;
  unsigned __int16 FailNum;
};

/* 473 */
struct __cppobj XiCsQuest : XiDBOper
{
  XiStrQuest *m_pQuest;
  XiStrMyQuest m_MyQuest;
  int m_CreateTime;
};

/* 549 */
struct XiStrMyInstant
{
  unsigned int TableIdx;
  bool CheckPoint[200];
};

/* 550 */
struct XiCsInstant
{
  XiStrInstant *m_pInstant;
  XiStrMyInstant m_MyInstant;
  unsigned int StartTime;
  int CheckCount;
  unsigned int CheckTime[200];
};

/* 554 */
struct XiVisualItem
{
  __int16 Neon;
  __int16 Plate;
  __int16 Decal;
  __int16 DecalColor;
  __int16 AeroBumper;
  __int16 AeroIntercooler;
  __int16 AeroSet;
  __int16 MufflerFlame;
  __int16 Wheel;
  __int16 Spoiler;
  __int16 Reserve[6];
  wchar_t PlateString[9];
};

/* 555 */
struct XiCsCarInfo
{
  XiStrCarInfo m_CarInfo;
  __unaligned __declspec(align(1)) XiVec4 m_CarPos;
  int m_CityId;
  float m_Rating;
  XiVisualItem m_VisualItem;
  float m_fFuelConsume;
};

/* 560 */
struct __cppobj BS_SingletonHeap<XiExpTable,5>
{
};

/* 561 */
struct __cppobj std::_Allocator_base<long>
{
};

/* 562 */
struct __cppobj std::allocator<long> : std::_Allocator_base<long>
{
};

/* 563 */
struct std::_Vector_val<long,std::allocator<long> >
{
  std::allocator<long> _Alval;
};

/* 564 */
struct __cppobj std::vector<long,std::allocator<long> > : std::_Vector_val<long,std::allocator<long> >
{
  int *_Myfirst;
  int *_Mylast;
  int *_Myend;
};

/* 565 */
struct __cppobj XiExpTable : BS_SingletonHeap<XiExpTable,5>
{
  std::vector<long,std::allocator<long> > m_ExpList;
};

/* 726 */
struct __cppobj std::vector<BS_GameDispatch *,std::allocator<BS_GameDispatch *> > : std::_Vector_val<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >
{
  BS_GameDispatch **_Myfirst;
  BS_GameDispatch **_Mylast;
  BS_GameDispatch **_Myend;
};

/* 688 */
struct BS_ChatRoom
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > m_Name;
  BS_CriticalSection m_DispatchLock;
  std::vector<BS_GameDispatch *,std::allocator<BS_GameDispatch *> > m_DispatchList;
  int m_ChatCnt;
};

/* 572 */
struct __cppobj XiCsTeam : XiStrTeamInfo
{
  int m_nRef;
  BS_CriticalSection m_lock;
  int m_deltaTeamPoint;
  bool m_bTeamDataDirty;
  bool m_bTeamMemberDirty;
  std::vector<XiStrMemberInfo,std::allocator<XiStrMemberInfo> > m_members;
  BS_ChatRoom m_teamChatRoom;
  int m_lastChallengeTime[24];
  BS_SmartPtr<BS_Room> *m_pTeamRoom;
};

/* 578 */
struct XiStrCoupon
{
  int Type;
  unsigned int StampIdx;
  unsigned int State;
};

/* 590 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,XiCouponParam> _Myval;
  char _Color;
  char _Isnil;
};

/* 597 */
struct std::_List_nod<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::_Node
{
  std::_List_nod<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::_Node *_Next;
  std::_List_nod<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::_Node *_Prev;
  XiCsCharInfo *_Myval;
};

/* 608 */
struct XiStrTeamName
{
  wchar_t m_Name[13];
};

/* 609 */
struct XiStrLocation
{
  char LocType;
  char ChId;
  unsigned __int16 LocId;
};

/* 610 */
struct __unaligned __declspec(align(4)) XiStrFriend
{
  XiStrCharName CharName;
  XiStrTeamName TeamName;
  __int64 Cid;
  __int64 TeamId;
  __int64 TeamMarkId;
  int State;
  XiStrLocation Location;
  unsigned __int16 Level;
  unsigned __int16 CurCarGrade;
  unsigned int Serial;
};

/* 611 */
struct XiCsCharInfo::InFriend
{
  XiStrFriend m_Friend;
};

/* 616 */
struct XiStrGiftMsg
{
  wchar_t m_Msg[50];
};

/* 617 */
struct __unaligned __declspec(align(2)) XiStrVisualItemBuyUnit
{
  __int64 Gid;
  unsigned int TableIdx;
  unsigned int BuyTime;
  unsigned int UseTime;
  unsigned int GetType;
  unsigned int GoldType;
  int Period;
  unsigned int Hancoin;
  unsigned int Mito;
  unsigned int Mileage;
  int State;
  XiStrCharName DstName;
  XiStrPlateName Data;
  XiStrGiftMsg GiftMsg;
};

/* 621 */
struct __cppobj std::_Allocator_base<XiCsItemDropGroup>
{
};

/* 622 */
struct __cppobj std::allocator<XiCsItemDropGroup> : std::_Allocator_base<XiCsItemDropGroup>
{
};

/* 623 */
struct std::_Vector_val<XiCsItemDropGroup,std::allocator<XiCsItemDropGroup> >
{
  std::allocator<XiCsItemDropGroup> _Alval;
};

/* 627 */
struct __cppobj std::vector<XiCsItemDropGroup,std::allocator<XiCsItemDropGroup> > : std::_Vector_val<XiCsItemDropGroup,std::allocator<XiCsItemDropGroup> >
{
  XiCsItemDropGroup *_Myfirst;
  XiCsItemDropGroup *_Mylast;
  XiCsItemDropGroup *_Myend;
};

/* 624 */
struct DropRate
{
  float Lite;
  float Mania;
  float HardCore;
};

/* 628 */
struct XiCsLevelDropGroup
{
  std::vector<XiCsItemDropGroup,std::allocator<XiCsItemDropGroup> > DropList;
  unsigned int PartNum;
  unsigned int NormalNum;
  DropRate PartsDropOfMode[6];
  DropRate NormalDropOfMode[6];
  unsigned int LiteRoundNum;
  unsigned int ManiaRoundNum;
  unsigned int HardCoreRoundNum;
};

/* 631 */
struct BS_Game::CheatInfo
{
  unsigned __int16 chaseCourse;
  unsigned __int16 chaseHuvNum;
  unsigned __int16 chaseSpeed;
};

/* 632 */
struct CheckEvilClick<2,4>
{
  int LastTime;
  int LastCnt;
};

/* 633 */
struct _GG_AUTH_DATA
{
  unsigned int dwIndex;
  unsigned int dwValue1;
  unsigned int dwValue2;
  unsigned int dwValue3;
};

/* 634 */
struct CCSAuth2
{
  struct _GG_AUTH_PROTOCOL *m_pProtocol;
  unsigned int m_bPrtcRef;
  unsigned int m_dwUserFlag;
  _GG_AUTH_DATA m_AuthQuery;
  _GG_AUTH_DATA m_AuthAnswer;
};

/* 635 */
struct __declspec(align(4)) BS_Game::ClientAuth
{
  CCSAuth2 ggAuth;
  int SendTime;
  unsigned int SendCnt;
  bool bIsConnected;
};

/* 636 */
struct BS_Game
{
  unsigned __int16 m_SessionId;
  unsigned int m_TicketSerial;
  XiCsCharInfo *m_pCharInfo;
  int m_LoginTime;
  $C2245750928360FC3C2CD9691B319E9F m_chaseState;
  int m_chaseHuvNum;
  int m_nTotalHuvLevel;
  int m_stateStartTime;
  int m_nextPropose;
  bool m_bChaseMode;
  int m_lastUpdateTime;
  int m_modeStartTime;
  BS_Game::CheatInfo m_cheat;
  CheckEvilClick<2,4> m_AuctionClick;
  BS_Game::ClientAuth m_clientAuth;
  $B02BFB8A6F6E3D5CF9A75430E4AD497C m_huvState;
  float m_huvDeltaExp;
  float m_huvDeltaMoney;
  float m_chaseDeltaExp;
  float m_chaseDeltaMoney;
};

/* 637 */
struct __cppobj std::binary_function<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,bool>
{
};

/* 638 */
struct __cppobj std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > : std::binary_function<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,bool>
{
};

/* 639 */
struct std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0>
{
  std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > comp;
};

/* 640 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >::_Node>
{
};

/* 641 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >::_Node>
{
};

/* 642 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> > : std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >::_Node> _Alnod;
};

/* 643 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >::_Node *>
{
};

/* 644 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >::_Node *>
{
};

/* 645 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> > : std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >::_Node *> _Alptr;
};

/* 646 */
struct __cppobj std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >
{
};

/* 647 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> > : std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >
{
};

/* 648 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >
{
  std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> > _Alval;
};

/* 651 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> > : std::_Tree_val<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 652 */
struct __cppobj std::map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> > > : std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >
{
};

/* 653 */
struct stdext::hash_compare<unsigned long,std::less<unsigned long> >
{
  std::less<unsigned long> comp;
};

/* 654 */
struct stdext::_Hmap_traits<unsigned long,BS_GameDispatch *,stdext::hash_compare<unsigned long,std::less<unsigned long> >,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> >,0>
{
  stdext::hash_compare<unsigned long,std::less<unsigned long> > comp;
};

/* 655 */
struct __cppobj std::_Allocator_base<std::_List_nod<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::_Node>
{
};

/* 656 */
struct __cppobj std::allocator<std::_List_nod<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::_Node> : std::_Allocator_base<std::_List_nod<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::_Node>
{
};

/* 657 */
struct std::_List_nod<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >
{
  std::allocator<std::_List_nod<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::_Node> _Alnod;
};

/* 658 */
struct __cppobj std::_Allocator_base<std::_List_nod<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::_Node *>
{
};

/* 659 */
struct __cppobj std::allocator<std::_List_nod<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::_Node *> : std::_Allocator_base<std::_List_nod<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::_Node *>
{
};

/* 660 */
struct __cppobj std::_List_ptr<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > > : std::_List_nod<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >
{
  std::allocator<std::_List_nod<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::_Node *> _Alptr;
};

/* 661 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,BS_GameDispatch *> >
{
};

/* 662 */
struct __cppobj std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > : std::_Allocator_base<std::pair<unsigned long const ,BS_GameDispatch *> >
{
};

/* 663 */
struct __cppobj std::_List_val<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > > : std::_List_ptr<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >
{
  std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > _Alval;
};

/* 666 */
struct __cppobj std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > > : std::_List_val<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >
{
  std::_List_nod<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 667 */
struct __cppobj std::_Allocator_base<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator>
{
};

/* 668 */
struct __cppobj std::allocator<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator> : std::_Allocator_base<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator>
{
};

/* 669 */
struct std::_Vector_val<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator,std::allocator<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator> >
{
  std::allocator<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator> _Alval;
};

/* 674 */
struct __cppobj std::vector<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator,std::allocator<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator> > : std::_Vector_val<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator,std::allocator<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator> >
{
  std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator *_Myfirst;
  std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator *_Mylast;
  std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator *_Myend;
};

/* 675 */
struct __cppobj stdext::_Hash<stdext::_Hmap_traits<unsigned long,BS_GameDispatch *,stdext::hash_compare<unsigned long,std::less<unsigned long> >,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> >,0> > : stdext::_Hmap_traits<unsigned long,BS_GameDispatch *,stdext::hash_compare<unsigned long,std::less<unsigned long> >,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> >,0>
{
  std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > > _List;
  std::vector<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator,std::allocator<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator> > _Vec;
  unsigned int _Mask;
  unsigned int _Maxidx;
};

/* 676 */
struct __cppobj stdext::hash_map<unsigned long,BS_GameDispatch *,stdext::hash_compare<unsigned long,std::less<unsigned long> >,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > > : stdext::_Hash<stdext::_Hmap_traits<unsigned long,BS_GameDispatch *,stdext::hash_compare<unsigned long,std::less<unsigned long> >,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> >,0> >
{
};

/* 677 */
struct std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0>
{
  std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > comp;
};

/* 678 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >::_Node>
{
};

/* 679 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >::_Node>
{
};

/* 680 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> > : std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >::_Node> _Alnod;
};

/* 681 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >::_Node *>
{
};

/* 682 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >::_Node *>
{
};

/* 683 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> > : std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >::_Node *> _Alptr;
};

/* 684 */
struct __cppobj std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >
{
};

/* 685 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> > : std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >
{
};

/* 686 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >
{
  std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> > _Alval;
};

/* 690 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> > : std::_Tree_val<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 691 */
struct __cppobj std::map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> > > : std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >
{
};

/* 692 */
struct __cppobj std::_Allocator_base<BS_TradeRoom *>
{
};

/* 693 */
struct __cppobj std::allocator<BS_TradeRoom *> : std::_Allocator_base<BS_TradeRoom *>
{
};

/* 694 */
struct std::_Vector_val<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >
{
  std::allocator<BS_TradeRoom *> _Alval;
};

/* 702 */
struct __cppobj std::vector<BS_TradeRoom *,std::allocator<BS_TradeRoom *> > : std::_Vector_val<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >
{
  BS_TradeRoom **_Myfirst;
  BS_TradeRoom **_Mylast;
  BS_TradeRoom **_Myend;
};

/* 703 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >::_Node>
{
};

/* 704 */
struct __cppobj std::allocator<std::_List_nod<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >::_Node> : std::_Allocator_base<std::_List_nod<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >::_Node>
{
};

/* 705 */
struct std::_List_nod<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >
{
  std::allocator<std::_List_nod<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >::_Node> _Alnod;
};

/* 706 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >::_Node *>
{
};

/* 707 */
struct __cppobj std::allocator<std::_List_nod<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >::_Node *> : std::_Allocator_base<std::_List_nod<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >::_Node *>
{
};

/* 708 */
struct __cppobj std::_List_ptr<BS_TradeRoom *,std::allocator<BS_TradeRoom *> > : std::_List_nod<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >
{
  std::allocator<std::_List_nod<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >::_Node *> _Alptr;
};

/* 709 */
struct __cppobj std::_List_val<BS_TradeRoom *,std::allocator<BS_TradeRoom *> > : std::_List_ptr<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >
{
  std::allocator<BS_TradeRoom *> _Alval;
};

/* 711 */
struct __cppobj std::list<BS_TradeRoom *,std::allocator<BS_TradeRoom *> > : std::_List_val<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >
{
  std::_List_nod<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 794 */
struct BS_Channel
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > m_Name;
  BS_CriticalSection m_DispatchLock;
  BS_CriticalSection m_ChatRoomLock;
  BS_CriticalSection m_TradeRoomLock;
  std::map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> > > m_DispatchList;
  stdext::hash_map<unsigned long,BS_GameDispatch *,stdext::hash_compare<unsigned long,std::less<unsigned long> >,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > > m_DispatchHash;
  std::map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> > > m_ChatRoomList;
  std::vector<BS_TradeRoom *,std::allocator<BS_TradeRoom *> > m_TradeRoomList;
  std::list<BS_TradeRoom *,std::allocator<BS_TradeRoom *> > m_TradeRoomPool;
  int m_TradeRoomPoolSize;
  unsigned int m_TradeSerial;
  BS_Listener *m_pListener;
  int m_Time;
  std::vector<BS_ChatRoom *,std::allocator<BS_ChatRoom *> > m_areachat;
  int m_currentWeather;
  int m_nextWeatherChangeTime;
  BS_PvpChannel *m_pvpChannel[10];
  BS_PvpChannel *m_lapTimeChannel[10];
  wchar_t m_Setting[128];
};

/* 695 */
struct __cppobj std::_Allocator_base<XiStrTradeInfo *>
{
};

/* 696 */
struct __cppobj std::allocator<XiStrTradeInfo *> : std::_Allocator_base<XiStrTradeInfo *>
{
};

/* 697 */
struct std::_Vector_val<XiStrTradeInfo *,std::allocator<XiStrTradeInfo *> >
{
  std::allocator<XiStrTradeInfo *> _Alval;
};

/* 699 */
struct __cppobj std::vector<XiStrTradeInfo *,std::allocator<XiStrTradeInfo *> > : std::_Vector_val<XiStrTradeInfo *,std::allocator<XiStrTradeInfo *> >
{
  XiStrTradeInfo **_Myfirst;
  XiStrTradeInfo **_Mylast;
  XiStrTradeInfo **_Myend;
};

/* 700 */
struct __declspec(align(4)) BS_TradeRoom::TradeClient
{
  XiStrCharName m_Name;
  unsigned int m_Cid;
  BS_GameDispatch *m_pDispatch;
  std::vector<XiStrTradeInfo *,std::allocator<XiStrTradeInfo *> > m_TradeInfoList;
  bool m_bLock;
  bool m_bComplete;
};

/* 701 */
struct __declspec(align(4)) BS_TradeRoom
{
  unsigned int m_Serial;
  BS_CriticalSection m_TradeRoomLock;
  int m_ItemIdx;
  BS_TradeRoom::TradeClient m_Host;
  BS_TradeRoom::TradeClient m_Guest;
  bool m_bAllLock;
  bool m_bAllComplete;
};

/* 799 */
struct __cppobj std::_Allocator_base<XiHuvInfo>
{
};

/* 800 */
struct __cppobj std::allocator<XiHuvInfo> : std::_Allocator_base<XiHuvInfo>
{
};

/* 801 */
struct std::_Vector_val<XiHuvInfo,std::allocator<XiHuvInfo> >
{
  std::allocator<XiHuvInfo> _Alval;
};

/* 803 */
struct __cppobj std::vector<XiHuvInfo,std::allocator<XiHuvInfo> > : std::_Vector_val<XiHuvInfo,std::allocator<XiHuvInfo> >
{
  XiHuvInfo *_Myfirst;
  XiHuvInfo *_Mylast;
  XiHuvInfo *_Myend;
};

/* 804 */
struct __cppobj std::_Allocator_base<BS_Actor *>
{
};

/* 805 */
struct __cppobj std::allocator<BS_Actor *> : std::_Allocator_base<BS_Actor *>
{
};

/* 806 */
struct std::_Vector_val<BS_Actor *,std::allocator<BS_Actor *> >
{
  std::allocator<BS_Actor *> _Alval;
};

/* 809 */
struct __cppobj std::vector<BS_Actor *,std::allocator<BS_Actor *> > : std::_Vector_val<BS_Actor *,std::allocator<BS_Actor *> >
{
  BS_Actor **_Myfirst;
  BS_Actor **_Mylast;
  BS_Actor **_Myend;
};

/* 810 */
struct BS_Party::UnderCity
{
  int m_UCStage;
  int CityId;
  int AgreeMode;
  int AgreeTimeout;
  int ChaseStage;
  int ChaseTimeoutBase;
  int BossChaseBonus;
  int ChasePenalty;
  int PenaltyCheckTime;
  int ReviveCheckTime;
  float ChasePos[4];
  int BossPatrolStage;
  int BossPatrolRetry;
  std::vector<BS_Actor *,std::allocator<BS_Actor *> > BossHuv;
  int UC2Record;
  int UC1LeftHuv;
  int UC2LeftHuv;
  int UC3LeftHuv;
  int UC4LeftHuv;
  int UnderCityStartTime;
  int AccLeftChaseTime;
};

/* 795 */
struct __cppobj __unaligned __declspec(align(4)) BS_Party : std::vector<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >
{
  BS_ChatRoom m_partyChatRoom;
  BS_Party *pNext;
  int m_PartyId;
  BS_CriticalSection m_lock;
  int m_nRef;
  wchar_t m_PartyName[64];
  unsigned int m_nChaseHuvNum;
  unsigned int m_nChasePlayerNum;
  unsigned int m_nActiveHuv;
  int m_nChaseStartTime;
  int m_nTotalHuvLevel;
  XiStrEnChantBonus m_EnChantPartyBonus;
  XiCsUCPatrol *m_pCurUCPatrol;
  std::vector<XiHuvInfo,std::allocator<XiHuvInfo> > m_huvstack;
  BS_Party::UnderCity m_underCity;
};

/* 735 */
struct HashedVector<BS_GameDispatch *,4,16>::Monitor
{
  _RTL_CRITICAL_SECTION m_cs;
};

/* 736 */
struct __cppobj HashedVector<BS_GameDispatch *,4,16>::Vector : std::vector<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >
{
  HashedVector<BS_GameDispatch *,4,16>::Monitor m_monitor;
};

/* 737 */
struct __unaligned __declspec(align(4)) HashedVector<BS_GameDispatch *,4,16>
{
  HashedVector<BS_GameDispatch *,4,16>::Vector m_vector[4];
  int m_nCount;
};

/* 738 */
struct __cppobj __unaligned __declspec(align(4)) BS_OBSRoom : HashedVector<BS_GameDispatch *,4,16>
{
  int m_LastCastTick;
  bool m_bOBSDirty;
  __declspec(align(4)) BS_Room *m_pPlayRoom;
  BS_ProtocolPacket *m_pResultPacket;
  BS_CriticalSection m_lock;
};

/* 739 */
struct __cppobj std::binary_function<BS_GameDispatch *,BS_GameDispatch *,bool>
{
};

/* 740 */
struct __cppobj std::less<BS_GameDispatch *> : std::binary_function<BS_GameDispatch *,BS_GameDispatch *,bool>
{
};

/* 741 */
struct std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0>
{
  std::less<BS_GameDispatch *> comp;
};

/* 742 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::_Node>
{
};

/* 743 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::_Node>
{
};

/* 744 */
struct __cppobj std::_Tree_nod<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> > : std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0>
{
  std::allocator<std::_Tree_nod<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::_Node> _Alnod;
};

/* 745 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::_Node *>
{
};

/* 746 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::_Node *>
{
};

/* 747 */
struct __cppobj std::_Tree_ptr<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> > : std::_Tree_nod<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >
{
  std::allocator<std::_Tree_nod<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::_Node *> _Alptr;
};

/* 748 */
struct __cppobj std::_Tree_val<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> > : std::_Tree_ptr<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >
{
  std::allocator<BS_GameDispatch *> _Alval;
};

/* 750 */
struct __cppobj std::_Tree<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> > : std::_Tree_val<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >
{
  std::_Tree_nod<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 751 */
struct __cppobj std::set<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *> > : std::_Tree<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >
{
};

/* 752 */
struct __cppobj std::_Allocator_base<std::vector<int,std::allocator<int> > >
{
};

/* 753 */
struct __cppobj std::allocator<std::vector<int,std::allocator<int> > > : std::_Allocator_base<std::vector<int,std::allocator<int> > >
{
};

/* 754 */
struct std::_Vector_val<std::vector<int,std::allocator<int> >,std::allocator<std::vector<int,std::allocator<int> > > >
{
  std::allocator<std::vector<int,std::allocator<int> > > _Alval;
};

/* 759 */
struct __cppobj std::vector<std::vector<int,std::allocator<int> >,std::allocator<std::vector<int,std::allocator<int> > > > : std::_Vector_val<std::vector<int,std::allocator<int> >,std::allocator<std::vector<int,std::allocator<int> > > >
{
  std::vector<int,std::allocator<int> > *_Myfirst;
  std::vector<int,std::allocator<int> > *_Mylast;
  std::vector<int,std::allocator<int> > *_Myend;
};

/* 760 */
struct XiPvpRoomSlot
{
  unsigned __int16 slot[32];
};

/* 761 */
struct BS_Room::TeamLink
{
  XiCsTeam *team;
  int target;
};

/* 727 */
struct __cppobj __unaligned __declspec(align(4)) BS_Room : std::vector<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >
{
  BS_RoomVtbl *vfptr;
  BS_CriticalSection m_lock;
  BS_CriticalSection m_teamlock;
  int m_nRef;
  BS_SmartPtr<BS_Room> m_ParentRoom;
  BS_RoomBoard *m_pRoomBoard;
  BS_RoomPool *m_pOwner;
  BS_AreaId *m_pAreaId;
  int m_RoomId;
  int m_LifeId;
  int m_BattleId;
  unsigned int m_MapId;
  unsigned int m_MapFlag;
  unsigned int m_RoomType;
  unsigned int m_Capacity;
  int m_CreateTime;
  int m_StartTime;
  int m_LastTime;
  int m_LastLocalTime;
  BS_ChatRoom m_pvpChatRoom;
  BS_OBSRoom m_OBSRoom;
  XiPvpRoomState m_roomState;
  wchar_t m_RoomName[30];
  wchar_t m_RoomPass[30];
  bool m_bAllReady;
  __declspec(align(4)) int m_waitStartTime;
  int m_finishedTime;
  bool m_bFinished;
  __declspec(align(4)) std::set<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *> > m_waitSet;
  std::set<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *> > m_completeSet;
  std::vector<std::vector<int,std::allocator<int> >,std::allocator<std::vector<int,std::allocator<int> > > > m_gateReward;
  unsigned int m_Rank;
  float m_LastRecord;
  int m_LastGate;
  unsigned int m_MasterSerial;
  bool m_bLive;
  __declspec(align(4)) int m_nPvpCh;
  bool m_bRoomInfoDirty;
  __declspec(align(4)) int m_nGMBonusMito;
  int m_nGMBonusExp;
  int m_LapCount;
  int m_LapTimeReadyTime;
  XiVisualItem m_RealMatchVisual;
  XiPvpRoomSlot m_Slot;
  __declspec(align(4)) int m_nEndPlayer;
  BS_Room::TeamLink m_Team;
  int m_RoomReady;
};

/* 730 */
struct BS_RoomBoard
{
  BS_RoomBoardVtbl *vfptr;
};

/* 763 */
struct __cppobj std::_Allocator_base<BS_SmartPtr<BS_Room> >
{
};

/* 764 */
struct __cppobj std::allocator<BS_SmartPtr<BS_Room> > : std::_Allocator_base<BS_SmartPtr<BS_Room> >
{
};

/* 765 */
struct std::_Vector_val<BS_SmartPtr<BS_Room>,std::allocator<BS_SmartPtr<BS_Room> > >
{
  std::allocator<BS_SmartPtr<BS_Room> > _Alval;
};

/* 766 */
struct __cppobj std::vector<BS_SmartPtr<BS_Room>,std::allocator<BS_SmartPtr<BS_Room> > > : std::_Vector_val<BS_SmartPtr<BS_Room>,std::allocator<BS_SmartPtr<BS_Room> > >
{
  BS_SmartPtr<BS_Room> *_Myfirst;
  BS_SmartPtr<BS_Room> *_Mylast;
  BS_SmartPtr<BS_Room> *_Myend;
};

/* 767 */
struct __cppobj std::_Allocator_base<unsigned int>
{
};

/* 768 */
struct __cppobj std::allocator<unsigned int> : std::_Allocator_base<unsigned int>
{
};

/* 769 */
struct std::_Vector_val<unsigned int,std::allocator<unsigned int> >
{
  std::allocator<unsigned int> _Alval;
};

/* 770 */
struct __cppobj std::vector<unsigned int,std::allocator<unsigned int> > : std::_Vector_val<unsigned int,std::allocator<unsigned int> >
{
  unsigned int *_Myfirst;
  unsigned int *_Mylast;
  unsigned int *_Myend;
};

/* 771 */
struct std::vector<bool,std::allocator<bool> >
{
  unsigned int _Mysize;
  std::vector<unsigned int,std::allocator<unsigned int> > _Myvec;
};

/* 793 */
struct __cppobj BS_PvpChannel : BS_RoomBoard
{
  BS_CriticalSection m_RoomTableLock;
  int m_nPvpCh;
  const unsigned int m_PageSize;
  const unsigned int m_MaxRoomNumber;
  const unsigned int m_MaxRoomPage;
  std::vector<BS_SmartPtr<BS_Room>,std::allocator<BS_SmartPtr<BS_Room> > > m_roomTable;
  std::vector<unsigned int,std::allocator<unsigned int> > m_roomPages[3];
  std::vector<bool,std::allocator<bool> > m_dirty[3];
  stdext::hash_set<BS_GameDispatch *,stdext::hash_compare<BS_GameDispatch *,std::less<BS_GameDispatch *> >,std::allocator<BS_GameDispatch *> > *m_PageObserverSet[3];
  BS_CriticalSection *m_PageObserverSetLock[3];
  HashedVector<BS_GameDispatch *,4,16> m_Invitee;
  BS_RoomPool *m_pool;
};

/* 815 */
struct _iobuf
{
  char *_ptr;
  int _cnt;
  char *_base;
  int _flag;
  int _file;
  int _charbuf;
  int _bufsiz;
  char *_tmpfname;
};

/* 817 */
struct HashedVector<BS_GameDispatch *,16,16>::Monitor
{
  _RTL_CRITICAL_SECTION m_cs;
};

/* 818 */
struct __cppobj HashedVector<BS_GameDispatch *,16,16>::Vector : std::vector<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >
{
  HashedVector<BS_GameDispatch *,16,16>::Monitor m_monitor;
};

/* 819 */
struct __unaligned __declspec(align(4)) HashedVector<BS_GameDispatch *,16,16>
{
  HashedVector<BS_GameDispatch *,16,16>::Vector m_vector[16];
  int m_nCount;
};

/* 820 */
struct __cppobj std::_Allocator_base<RushHuv>
{
};

/* 821 */
struct __cppobj std::allocator<RushHuv> : std::_Allocator_base<RushHuv>
{
};

/* 822 */
struct std::_Vector_val<RushHuv,std::allocator<RushHuv> >
{
  std::allocator<RushHuv> _Alval;
};

/* 824 */
struct __cppobj std::vector<RushHuv,std::allocator<RushHuv> > : std::_Vector_val<RushHuv,std::allocator<RushHuv> >
{
  RushHuv *_Myfirst;
  RushHuv *_Mylast;
  RushHuv *_Myend;
};

/* 825 */
struct RushEvent
{
  BS_Buffer *m_pBuffer;
  __unaligned __declspec(align(1)) HashedVector<BS_GameDispatch *,16,16> m_members;
  BS_GameDispatch *m_pController;
  int m_nControlComplainCount;
  BS_CriticalSection m_lock;
  std::vector<RushHuv,std::allocator<RushHuv> > m_huvs;
  $A23980E31A9EA6E31B49853B48EFD031 m_rushState;
  int m_StartTime;
  int m_EndTime;
  int m_nextCheckTime;
  unsigned int m_nHuvType;
  unsigned int m_nCourseId;
};

/* 474 */
struct std::pair<unsigned long const ,XiCsQuest *>
{
  const unsigned int first;
  XiCsQuest *second;
};

/* 495 */
struct std::pair<unsigned long const ,XiCsItem *>
{
  const unsigned int first;
  XiCsItem *second;
};

/* 452 */
struct XiStrItemID
{
  wchar_t m_Name[32];
};

/* 453 */
struct XiStrItemUseInfo
{
  unsigned int Type;
  unsigned int Value;
  unsigned int Time;
};

/* 457 */
struct __cppobj std::_Allocator_base<AssistGroup *>
{
};

/* 458 */
struct __cppobj std::allocator<AssistGroup *> : std::_Allocator_base<AssistGroup *>
{
};

/* 459 */
struct std::_Vector_val<AssistGroup *,std::allocator<AssistGroup *> >
{
  std::allocator<AssistGroup *> _Alval;
};

/* 465 */
struct __cppobj std::vector<AssistGroup *,std::allocator<AssistGroup *> > : std::_Vector_val<AssistGroup *,std::allocator<AssistGroup *> >
{
  AssistGroup **_Myfirst;
  AssistGroup **_Mylast;
  AssistGroup **_Myend;
};

/* 454 */
struct XiStrItem
{
  unsigned int Type;
  XiStrItemID ID;
  wchar_t GroupID[56];
  wchar_t Name[56];
  unsigned int Grade;
  unsigned int ReqLevel;
  unsigned int Value;
  int Min;
  int Max;
  unsigned int Cost;
  unsigned int Sell;
  unsigned int Time;
  int AssistNum;
  wchar_t AssistField[56];
  XiStrItemID NextID;
  unsigned int RoundNum;
  unsigned int Belong;
  XiStrItemUseInfo UseInfo;
  XiStrItem *NextItemPtr;
  unsigned int TableIdx;
  int HeatState;
  bool Shop;
  bool Trade;
  bool Auction;
  unsigned int SetType;
  unsigned int SetRate;
  char SetDesc[160];
  XiStrAssist *SetAssist;
  unsigned int TransType;
  unsigned int UpgradeType;
  unsigned int JewelType;
  std::vector<AssistGroup *,std::allocator<AssistGroup *> > AssistList;
};

/* 455 */
struct XiStrAssistID
{
  wchar_t m_Name[32];
};

/* 456 */
struct XiStrAssist
{
  unsigned __int16 Session;
  XiStrAssistID ID;
  unsigned int Type;
  float Rate;
  float Value;
  unsigned int TableIdx;
};

/* 492 */
struct XiCsItemLocker
{
  XiCsItemLockerVtbl *vfptr;
};

/* 516 */
struct std::pair<unsigned long const ,XiCsVSItem *>
{
  const unsigned int first;
  XiCsVSItem *second;
};

/* 471 */
struct XIVISUALITEM_INFO
{
  int categoryIndex;
  int index;
  int price;
  unsigned __int16 id[32];
  unsigned int dwId;
  unsigned __int16 name[32];
  char Compatability[100];
};

/* 535 */
struct __unaligned __declspec(align(2)) XiStrAuctionClientUnit
{
  __int64 Cid;
  XiStrCharName CharName;
  unsigned int RegNum;
  unsigned int BuyNum;
  unsigned int SellNum;
};

/* 536 */
struct __cppobj __declspec(align(4)) XiAuctionClient : XiDBOper
{
  XiStrAuctionClientUnit Info;
};

/* 448 */
struct XiStrArbeitResult
{
  int Gold;
  int Silver;
  int Bronze;
  int Bottom;
};

/* 469 */
struct XiStrArbeit
{
  wchar_t ArbeitID[56];
  unsigned int NeedLevel;
  wchar_t GivePost[56];
  wchar_t Title[128];
  wchar_t Place[20][56];
  XiStrArbeitResult Exp;
  XiStrArbeitResult Money;
  XiStrArbeitResult Time;
  ItemGroup *Item_Gold;
  ItemGroup *Item_Silver;
  ItemGroup *Item_Bronze;
  ItemGroup *Item_Bottom;
  unsigned int Idx;
  XiStrIcon *GivePostPtr;
};

/* 443 */
struct XiStrQuest
{
  wchar_t QuestID[56];
  unsigned int QuestIDn;
  unsigned int PrevQuestIDn;
  unsigned int Event;
  unsigned int NeedLevel;
  unsigned int NeedLevelPersent;
  wchar_t GivePost[56];
  wchar_t Title[128];
  wchar_t EndPost[56];
  wchar_t Place[5][56];
  int CrashTime[5];
  int TimeLimit[5];
  int MinSpeed[5];
  int MaxSpeed[5];
  int MinLadius[5];
  int MaxLadius[5];
  unsigned int QuestPath_01;
  unsigned int QuestPath_02;
  unsigned int Car_01;
  unsigned int Car_02;
  unsigned int ClearQuestIDn;
  int Count;
  int RewardExp;
  int RewardMoney;
  wchar_t Item01[56];
  wchar_t Item02[56];
  wchar_t Item03[56];
  unsigned int Idx;
  XiStrQuest *PrevQuestPtr;
  XiStrQuest *ClearQuestPtr;
  XiStrIcon *GivePostPtr;
  XiStrIcon *EndPostPtr;
  unsigned int RewardItemNum;
  XiStrItem *Item01Ptr;
  XiStrItem *Item02Ptr;
  XiStrItem *Item03Ptr;
  XIVISUALITEM_INFO *VSItemPtr;
};

/* 548 */
struct XiStrInstant
{
  unsigned int nID;
  unsigned int nMinLevel;
  unsigned int nMaxLevel;
  wchar_t Summary[256];
  wchar_t Dialog[2048];
  bool bRepeat;
  float Percent;
  int Category;
  int Type;
  unsigned int Value;
  XiStrItem *MissionItemPtr;
  int RewardExp;
  int RewardMoney;
  wchar_t RewardItemGroup[56];
  int FinalExp;
  int MaxPost;
  XiStrIcon *GivePostPtr;
  XiStrIcon *MovePostPtr[200];
  ItemGroup *ItemGroupPtr;
};

/* 591 */
struct XiCouponParam
{
  unsigned int CType;
  float Value;
};

/* 592 */
struct std::pair<unsigned long const ,XiCouponParam>
{
  const unsigned int first;
  XiCouponParam second;
};

/* 625 */
struct XiCsItemDropGroup::DropNum
{
  unsigned int Lite;
  unsigned int Mania;
  unsigned int HardCore;
};

/* 626 */
struct XiCsItemDropGroup
{
  unsigned int DropType;
  unsigned int Level;
  wchar_t GroupID[56];
  ItemGroup *ItemGroupPtr;
  DropRate DropRateOfMode[6];
  XiCsItemDropGroup::DropNum DropNumOfMode[6];
};

/* 649 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >::_Node *_Right;
  std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> _Myval;
  char _Color;
  char _Isnil;
};

/* 664 */
struct std::_List_nod<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::_Node
{
  std::_List_nod<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::_Node *_Next;
  std::_List_nod<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::_Node *_Prev;
  std::pair<unsigned long const ,BS_GameDispatch *> _Myval;
};

/* 670 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,BS_GameDispatch *>,int,std::pair<unsigned long const ,BS_GameDispatch *> const *,std::pair<unsigned long const ,BS_GameDispatch *> const &>
{
};

/* 671 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,BS_GameDispatch *>,int,std::pair<unsigned long const ,BS_GameDispatch *> const *,std::pair<unsigned long const ,BS_GameDispatch *> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,BS_GameDispatch *>,int,std::pair<unsigned long const ,BS_GameDispatch *> const *,std::pair<unsigned long const ,BS_GameDispatch *> const &>
{
};

/* 672 */
struct __cppobj std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::const_iterator : std::_Bidit<std::pair<unsigned long const ,BS_GameDispatch *>,int,std::pair<unsigned long const ,BS_GameDispatch *> const *,std::pair<unsigned long const ,BS_GameDispatch *> const &>
{
  std::_List_nod<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::_Node *_Ptr;
};

/* 673 */
struct __cppobj std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator : std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::const_iterator
{
};

/* 687 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >::_Node *_Right;
  std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> _Myval;
  char _Color;
  char _Isnil;
};

/* 710 */
struct std::_List_nod<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >::_Node
{
  std::_List_nod<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >::_Node *_Next;
  std::_List_nod<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >::_Node *_Prev;
  BS_TradeRoom *_Myval;
};

/* 712 */
struct __cppobj std::_Allocator_base<BS_Session *>
{
};

/* 713 */
struct __cppobj std::allocator<BS_Session *> : std::_Allocator_base<BS_Session *>
{
};

/* 714 */
struct std::_Vector_val<BS_Session *,std::allocator<BS_Session *> >
{
  std::allocator<BS_Session *> _Alval;
};

/* 715 */
struct __cppobj std::vector<BS_Session *,std::allocator<BS_Session *> > : std::_Vector_val<BS_Session *,std::allocator<BS_Session *> >
{
  BS_Session **_Myfirst;
  BS_Session **_Mylast;
  BS_Session **_Myend;
};

/* 716 */
struct __cppobj std::_Allocator_base<BS_Session * *>
{
};

/* 717 */
struct __cppobj std::allocator<BS_Session * *> : std::_Allocator_base<BS_Session * *>
{
};

/* 718 */
struct std::_Deque_map<BS_Session *,std::allocator<BS_Session *> >
{
  std::allocator<BS_Session * *> _Almap;
};

/* 719 */
struct __cppobj std::_Deque_val<BS_Session *,std::allocator<BS_Session *> > : std::_Deque_map<BS_Session *,std::allocator<BS_Session *> >
{
  std::allocator<BS_Session *> _Alval;
};

/* 720 */
struct __cppobj std::deque<BS_Session *,std::allocator<BS_Session *> > : std::_Deque_val<BS_Session *,std::allocator<BS_Session *> >
{
  BS_Session ***_Map;
  unsigned int _Mapsize;
  unsigned int _Myoff;
  unsigned int _Mysize;
};

/* 721 */
struct __cppobj BS_Listener : BS_SessionContainer
{
  BS_CriticalSection m_SessionListLock;
  std::vector<BS_Session *,std::allocator<BS_Session *> > m_SessionList;
  BS_CriticalSection m_SessionWaitPoolLock;
  std::deque<BS_Session *,std::allocator<BS_Session *> > m_SessionWaitPool;
};

/* 698 */
struct XiStrTradeInfo
{
  XiStrItemUnit ItemUnit;
  unsigned int TableIdx;
  unsigned int InvenIdx;
  int ItemIdx;
};

/* 797 */
struct XiStrMyUCPatrol
{
  unsigned int TableIdx;
  unsigned int StartTime;
  int CheckCount;
  unsigned int CheckTime[200];
};

/* 798 */
struct XiCsUCPatrol
{
  XiStrUCPatrol *m_pPatrol;
  XiStrMyUCPatrol m_MyPatrol;
};

/* 802 */
struct XiHuvInfo
{
  unsigned __int16 Stage;
  unsigned __int16 HuvId;
  unsigned __int16 HuvLevel;
  unsigned __int16 HuvType;
  unsigned __int16 Serial;
  unsigned __int16 CarSort;
  unsigned __int16 Hp;
};

/* 808 */
struct BS_Actor
{
  unsigned __int16 m_Level;
  unsigned __int16 m_HuvID;
  unsigned __int16 m_carSerial;
  unsigned __int16 m_carSort;
  unsigned int m_Time;
  int m_carAttr;
  int m_huvStage;
  BS_SmartPtr<BS_Party> m_pOwnParty;
  unsigned int m_huvPrizeExp;
  unsigned int m_huvPrizeMoney;
  int m_HP;
  int m_MaxHP;
  BS_GameDispatch *m_pDispatch;
};

/* 728 */
struct BS_RoomVtbl
{
  BS_ChatRoom *(__thiscall *GetChatRoom)(BS_Room *this);
  __declspec(align(8)) void (__thiscall *OnDelete)(BS_Room *this);
  void (__thiscall *OnCreate)(BS_Room *this);
  unsigned int (__thiscall *GetMemberCount)(BS_Room *this);
  bool (__thiscall *AddMember)(BS_Room *this, BS_GameDispatch *, int, BS_Room *);
  bool (__thiscall *RemoveMember)(BS_Room *this, BS_GameDispatch *);
  void (__thiscall *OnEnter)(BS_Room *this, BS_GameDispatch *);
  void (__thiscall *OnExit)(BS_Room *this, BS_GameDispatch *);
  void (__thiscall *OnResult)(BS_Room *this, int, int, int);
  void (__thiscall *OnRacerResult)(BS_Room *this, BS_GameDispatch *, int, unsigned int, int, int);
  void (__thiscall *SendRoomStateMsg)(BS_Room *this, BS_GameDispatch *, int, BS_Room *);
  void (__thiscall *SendRoomInfoMsg)(BS_Room *this, BS_GameDispatch *, int, BS_Room *);
  void (__thiscall *SendOBSState)(BS_Room *this, BS_GameDispatch *);
};

/* 731 */
struct BS_RoomPool
{
  BS_RoomPoolVtbl *vfptr;
};

/* 734 */
struct BS_AreaId
{
  int Id;
};

/* 749 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::_Node
{
  std::_Tree_nod<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::_Node *_Right;
  BS_GameDispatch *_Myval;
  char _Color;
  char _Isnil;
};

/* 755 */
struct __cppobj std::_Allocator_base<int>
{
};

/* 756 */
struct __cppobj std::allocator<int> : std::_Allocator_base<int>
{
};

/* 757 */
struct std::_Vector_val<int,std::allocator<int> >
{
  std::allocator<int> _Alval;
};

/* 758 */
struct __cppobj std::vector<int,std::allocator<int> > : std::_Vector_val<int,std::allocator<int> >
{
  int *_Myfirst;
  int *_Mylast;
  int *_Myend;
};

/* 762 */
struct BS_RoomBoardVtbl
{
  void (__thiscall *PostRoom)(BS_RoomBoard *this, BS_Room *);
  void (__thiscall *UnpostRoom)(BS_RoomBoard *this, BS_Room *);
  void (__thiscall *ChangedRoom)(BS_RoomBoard *this, BS_Room *);
  void (__thiscall *RepostRoom)(BS_RoomBoard *this, BS_Room *);
};

/* 772 */
struct stdext::hash_compare<BS_GameDispatch *,std::less<BS_GameDispatch *> >
{
  std::less<BS_GameDispatch *> comp;
};

/* 773 */
struct stdext::_Hset_traits<BS_GameDispatch *,stdext::hash_compare<BS_GameDispatch *,std::less<BS_GameDispatch *> >,std::allocator<BS_GameDispatch *>,0>
{
  stdext::hash_compare<BS_GameDispatch *,std::less<BS_GameDispatch *> > comp;
};

/* 774 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::_Node>
{
};

/* 775 */
struct __cppobj std::allocator<std::_List_nod<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::_Node> : std::_Allocator_base<std::_List_nod<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::_Node>
{
};

/* 776 */
struct std::_List_nod<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >
{
  std::allocator<std::_List_nod<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::_Node> _Alnod;
};

/* 777 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::_Node *>
{
};

/* 778 */
struct __cppobj std::allocator<std::_List_nod<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::_Node *> : std::_Allocator_base<std::_List_nod<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::_Node *>
{
};

/* 779 */
struct __cppobj std::_List_ptr<BS_GameDispatch *,std::allocator<BS_GameDispatch *> > : std::_List_nod<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >
{
  std::allocator<std::_List_nod<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::_Node *> _Alptr;
};

/* 780 */
struct __cppobj std::_List_val<BS_GameDispatch *,std::allocator<BS_GameDispatch *> > : std::_List_ptr<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >
{
  std::allocator<BS_GameDispatch *> _Alval;
};

/* 782 */
struct __cppobj std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> > : std::_List_val<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >
{
  std::_List_nod<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 783 */
struct __cppobj std::_Allocator_base<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator>
{
};

/* 784 */
struct __cppobj std::allocator<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator> : std::_Allocator_base<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator>
{
};

/* 785 */
struct std::_Vector_val<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator,std::allocator<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator> >
{
  std::allocator<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator> _Alval;
};

/* 790 */
struct __cppobj std::vector<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator,std::allocator<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator> > : std::_Vector_val<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator,std::allocator<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator> >
{
  std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator *_Myfirst;
  std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator *_Mylast;
  std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator *_Myend;
};

/* 791 */
struct __cppobj stdext::_Hash<stdext::_Hset_traits<BS_GameDispatch *,stdext::hash_compare<BS_GameDispatch *,std::less<BS_GameDispatch *> >,std::allocator<BS_GameDispatch *>,0> > : stdext::_Hset_traits<BS_GameDispatch *,stdext::hash_compare<BS_GameDispatch *,std::less<BS_GameDispatch *> >,std::allocator<BS_GameDispatch *>,0>
{
  std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> > _List;
  std::vector<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator,std::allocator<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator> > _Vec;
  unsigned int _Mask;
  unsigned int _Maxidx;
};

/* 792 */
struct __cppobj stdext::hash_set<BS_GameDispatch *,stdext::hash_compare<BS_GameDispatch *,std::less<BS_GameDispatch *> >,std::allocator<BS_GameDispatch *> > : stdext::_Hash<stdext::_Hset_traits<BS_GameDispatch *,stdext::hash_compare<BS_GameDispatch *,std::less<BS_GameDispatch *> >,std::allocator<BS_GameDispatch *>,0> >
{
};

/* 823 */
struct RushHuv
{
  unsigned __int16 Serial;
  unsigned __int16 CarSort;
  float Health;
  int BodyType;
};

/* 460 */
struct __cppobj std::_Allocator_base<XiStrAssist *>
{
};

/* 461 */
struct __cppobj std::allocator<XiStrAssist *> : std::_Allocator_base<XiStrAssist *>
{
};

/* 462 */
struct std::_Vector_val<XiStrAssist *,std::allocator<XiStrAssist *> >
{
  std::allocator<XiStrAssist *> _Alval;
};

/* 463 */
struct __cppobj std::vector<XiStrAssist *,std::allocator<XiStrAssist *> > : std::_Vector_val<XiStrAssist *,std::allocator<XiStrAssist *> >
{
  XiStrAssist **_Myfirst;
  XiStrAssist **_Mylast;
  XiStrAssist **_Myend;
};

/* 464 */
struct AssistGroup
{
  float TotalRate;
  std::vector<XiStrAssist *,std::allocator<XiStrAssist *> > Item;
};

/* 493 */
struct XiCsItemLockerVtbl
{
  bool (__thiscall *IsItemLocked)(XiCsItemLocker *this, __int64);
};

/* 449 */
struct __cppobj std::_Allocator_base<XiStrItem *>
{
};

/* 450 */
struct __cppobj std::allocator<XiStrItem *> : std::_Allocator_base<XiStrItem *>
{
};

/* 451 */
struct std::_Vector_val<XiStrItem *,std::allocator<XiStrItem *> >
{
  std::allocator<XiStrItem *> _Alval;
};

/* 466 */
struct __cppobj std::vector<XiStrItem *,std::allocator<XiStrItem *> > : std::_Vector_val<XiStrItem *,std::allocator<XiStrItem *> >
{
  XiStrItem **_Myfirst;
  XiStrItem **_Mylast;
  XiStrItem **_Myend;
};

/* 467 */
struct ItemGroup
{
  int TypeSize[11];
  std::vector<XiStrItem *,std::allocator<XiStrItem *> > Item;
};

/* 444 */
struct XiStrIcon::XiStrPos
{
  float x;
  float y;
  float z;
};

/* 445 */
struct __cppobj std::_Allocator_base<XiStrArbeit *>
{
};

/* 446 */
struct __cppobj std::allocator<XiStrArbeit *> : std::_Allocator_base<XiStrArbeit *>
{
};

/* 447 */
struct std::_Vector_val<XiStrArbeit *,std::allocator<XiStrArbeit *> >
{
  std::allocator<XiStrArbeit *> _Alval;
};

/* 470 */
struct __cppobj std::vector<XiStrArbeit *,std::allocator<XiStrArbeit *> > : std::_Vector_val<XiStrArbeit *,std::allocator<XiStrArbeit *> >
{
  XiStrArbeit **_Myfirst;
  XiStrArbeit **_Mylast;
  XiStrArbeit **_Myend;
};

/* 468 */
struct XiStrIcon
{
  wchar_t Index[255];
  wchar_t Name[255];
  XiStrIcon::XiStrPos Pos;
  unsigned int Type;
  bool Check;
  int MapID;
  int Guild;
  unsigned int Idx;
  std::vector<XiStrArbeit *,std::allocator<XiStrArbeit *> > ArbeitList;
};

/* 650 */
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *>
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > first;
  BS_GameDispatch *second;
};

/* 665 */
struct std::pair<unsigned long const ,BS_GameDispatch *>
{
  const unsigned int first;
  BS_GameDispatch *second;
};

/* 689 */
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *>
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > first;
  BS_ChatRoom *second;
};

/* 796 */
struct XiStrUCPatrol
{
  unsigned int nID;
  int RewardExp;
  int FinalExp;
  int MaxPost;
  XiStrIcon *MovePostPtr[200];
};

/* 732 */
union $C9989A4DF4AE3E83438B2E0688EE015E
{
  void (__thiscall *~BS_RoomPool)(BS_RoomPool *this);
  void *(__thiscall *__vecDelDtor)(BS_RoomPool *this, unsigned int);
};

/* 733 */
struct BS_RoomPoolVtbl
{
  BS_Room *(__thiscall *NewRoom)(BS_RoomPool *this);
  void (__thiscall *DeleteRoom)(BS_RoomPool *this, BS_Room *);
  $C9989A4DF4AE3E83438B2E0688EE015E ___u2;
};

/* 781 */
struct std::_List_nod<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::_Node
{
  std::_List_nod<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::_Node *_Next;
  std::_List_nod<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::_Node *_Prev;
  BS_GameDispatch *_Myval;
};

/* 786 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,BS_GameDispatch *,int,BS_GameDispatch * const *,BS_GameDispatch * const &>
{
};

/* 787 */
struct __cppobj std::_Bidit<BS_GameDispatch *,int,BS_GameDispatch * const *,BS_GameDispatch * const &> : std::iterator<std::bidirectional_iterator_tag,BS_GameDispatch *,int,BS_GameDispatch * const *,BS_GameDispatch * const &>
{
};

/* 788 */
struct __cppobj std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::const_iterator : std::_Bidit<BS_GameDispatch *,int,BS_GameDispatch * const *,BS_GameDispatch * const &>
{
  std::_List_nod<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::_Node *_Ptr;
};

/* 789 */
struct __cppobj std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator : std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::const_iterator
{
};

/* 829 */
struct auto_lock<BS_CriticalSection>
{
  BS_CriticalSection *Lock;
};

/* 830 */
struct __cppobj BS_SingletonHeap<XiTeamInfoBox,2>
{
};

/* 831 */
struct __cppobj std::binary_function<__int64,__int64,bool>
{
};

/* 832 */
struct __cppobj std::less<__int64> : std::binary_function<__int64,__int64,bool>
{
};

/* 833 */
struct stdext::hash_compare<__int64,std::less<__int64> >
{
  std::less<__int64> comp;
};

/* 834 */
struct stdext::_Hmap_traits<__int64,int,stdext::hash_compare<__int64,std::less<__int64> >,std::allocator<std::pair<__int64 const ,int> >,0>
{
  stdext::hash_compare<__int64,std::less<__int64> > comp;
};

/* 835 */
struct __cppobj std::_Allocator_base<std::_List_nod<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::_Node>
{
};

/* 836 */
struct __cppobj std::allocator<std::_List_nod<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::_Node> : std::_Allocator_base<std::_List_nod<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::_Node>
{
};

/* 837 */
struct std::_List_nod<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >
{
  std::allocator<std::_List_nod<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::_Node> _Alnod;
};

/* 838 */
struct __cppobj std::_Allocator_base<std::_List_nod<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::_Node *>
{
};

/* 839 */
struct __cppobj std::allocator<std::_List_nod<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::_Node *> : std::_Allocator_base<std::_List_nod<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::_Node *>
{
};

/* 840 */
struct __cppobj std::_List_ptr<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > > : std::_List_nod<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >
{
  std::allocator<std::_List_nod<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::_Node *> _Alptr;
};

/* 841 */
struct __cppobj std::_Allocator_base<std::pair<__int64 const ,int> >
{
};

/* 842 */
struct __cppobj std::allocator<std::pair<__int64 const ,int> > : std::_Allocator_base<std::pair<__int64 const ,int> >
{
};

/* 843 */
struct __cppobj std::_List_val<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > > : std::_List_ptr<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >
{
  std::allocator<std::pair<__int64 const ,int> > _Alval;
};

/* 844 */
struct std::_List_nod<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::_Node
{
  std::_List_nod<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::_Node *_Next;
  std::_List_nod<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::_Node *_Prev;
  std::pair<__int64 const ,int> _Myval;
};

/* 845 */
struct __declspec(align(8)) std::pair<__int64 const ,int>
{
  const __int64 first;
  int second;
};

/* 846 */
struct __cppobj std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > > : std::_List_val<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >
{
  std::_List_nod<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 847 */
struct __cppobj std::_Allocator_base<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator>
{
};

/* 848 */
struct __cppobj std::allocator<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator> : std::_Allocator_base<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator>
{
};

/* 849 */
struct std::_Vector_val<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator,std::allocator<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator> >
{
  std::allocator<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator> _Alval;
};

/* 850 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<__int64 const ,int>,int,std::pair<__int64 const ,int> const *,std::pair<__int64 const ,int> const &>
{
};

/* 851 */
struct __cppobj std::_Bidit<std::pair<__int64 const ,int>,int,std::pair<__int64 const ,int> const *,std::pair<__int64 const ,int> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<__int64 const ,int>,int,std::pair<__int64 const ,int> const *,std::pair<__int64 const ,int> const &>
{
};

/* 852 */
struct __cppobj std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::const_iterator : std::_Bidit<std::pair<__int64 const ,int>,int,std::pair<__int64 const ,int> const *,std::pair<__int64 const ,int> const &>
{
  std::_List_nod<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::_Node *_Ptr;
};

/* 853 */
struct __cppobj std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator : std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::const_iterator
{
};

/* 854 */
struct __cppobj std::vector<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator,std::allocator<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator> > : std::_Vector_val<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator,std::allocator<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator> >
{
  std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator *_Myfirst;
  std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator *_Mylast;
  std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator *_Myend;
};

/* 855 */
struct __cppobj stdext::_Hash<stdext::_Hmap_traits<__int64,int,stdext::hash_compare<__int64,std::less<__int64> >,std::allocator<std::pair<__int64 const ,int> >,0> > : stdext::_Hmap_traits<__int64,int,stdext::hash_compare<__int64,std::less<__int64> >,std::allocator<std::pair<__int64 const ,int> >,0>
{
  std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > > _List;
  std::vector<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator,std::allocator<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator> > _Vec;
  unsigned int _Mask;
  unsigned int _Maxidx;
};

/* 856 */
struct __cppobj stdext::hash_map<__int64,int,stdext::hash_compare<__int64,std::less<__int64> >,std::allocator<std::pair<__int64 const ,int> > > : stdext::_Hash<stdext::_Hmap_traits<__int64,int,stdext::hash_compare<__int64,std::less<__int64> >,std::allocator<std::pair<__int64 const ,int> >,0> >
{
};

/* 857 */
struct stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
{
  std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > comp;
};

/* 858 */
struct stdext::_Hmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> >,0>
{
  stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > comp;
};

/* 859 */
struct __cppobj std::_Allocator_base<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::_Node>
{
};

/* 860 */
struct __cppobj std::allocator<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::_Node> : std::_Allocator_base<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::_Node>
{
};

/* 861 */
struct std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >
{
  std::allocator<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::_Node> _Alnod;
};

/* 862 */
struct __cppobj std::_Allocator_base<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::_Node *>
{
};

/* 863 */
struct __cppobj std::allocator<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::_Node *> : std::_Allocator_base<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::_Node *>
{
};

/* 864 */
struct __cppobj std::_List_ptr<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > > : std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >
{
  std::allocator<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::_Node *> _Alptr;
};

/* 865 */
struct __cppobj std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> >
{
};

/* 866 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > : std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> >
{
};

/* 867 */
struct __cppobj std::_List_val<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > > : std::_List_ptr<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >
{
  std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > _Alval;
};

/* 868 */
struct std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::_Node
{
  std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::_Node *_Next;
  std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::_Node *_Prev;
  std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> _Myval;
};

/* 869 */
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > first;
  int second;
};

/* 870 */
struct __cppobj std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > > : std::_List_val<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >
{
  std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 871 */
struct __cppobj std::_Allocator_base<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator>
{
};

/* 872 */
struct __cppobj std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator> : std::_Allocator_base<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator>
{
};

/* 873 */
struct std::_Vector_val<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator> >
{
  std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator> _Alval;
};

/* 874 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> const &>
{
};

/* 875 */
struct __cppobj std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> const &>
{
};

/* 876 */
struct __cppobj std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::const_iterator : std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> const &>
{
  std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::_Node *_Ptr;
};

/* 877 */
struct __cppobj std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator : std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::const_iterator
{
};

/* 878 */
struct __cppobj std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator> > : std::_Vector_val<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator> >
{
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator *_Myfirst;
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator *_Mylast;
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator *_Myend;
};

/* 879 */
struct __cppobj stdext::_Hash<stdext::_Hmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> >,0> > : stdext::_Hmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> >,0>
{
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > > _List;
  std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator> > _Vec;
  unsigned int _Mask;
  unsigned int _Maxidx;
};

/* 880 */
struct __cppobj stdext::hash_map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > > : stdext::_Hash<stdext::_Hmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> >,0> >
{
};

/* 881 */
struct __cppobj std::_Allocator_base<BS_SmartPtr<XiCsTeam> >
{
};

/* 882 */
struct __cppobj std::allocator<BS_SmartPtr<XiCsTeam> > : std::_Allocator_base<BS_SmartPtr<XiCsTeam> >
{
};

/* 883 */
struct std::_Vector_val<BS_SmartPtr<XiCsTeam>,std::allocator<BS_SmartPtr<XiCsTeam> > >
{
  std::allocator<BS_SmartPtr<XiCsTeam> > _Alval;
};

/* 884 */
struct __cppobj std::vector<BS_SmartPtr<XiCsTeam>,std::allocator<BS_SmartPtr<XiCsTeam> > > : std::_Vector_val<BS_SmartPtr<XiCsTeam>,std::allocator<BS_SmartPtr<XiCsTeam> > >
{
  BS_SmartPtr<XiCsTeam> *_Myfirst;
  BS_SmartPtr<XiCsTeam> *_Mylast;
  BS_SmartPtr<XiCsTeam> *_Myend;
};

/* 885 */
struct __cppobj XiTeamInfoBox : BS_SingletonHeap<XiTeamInfoBox,2>
{
  BS_CriticalSection m_InfoBoxLock;
  stdext::hash_map<__int64,int,stdext::hash_compare<__int64,std::less<__int64> >,std::allocator<std::pair<__int64 const ,int> > > m_TeamIdMap;
  stdext::hash_map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > > m_TeamNameMap;
  std::vector<BS_SmartPtr<XiCsTeam>,std::allocator<BS_SmartPtr<XiCsTeam> > > m_TeamVector;
  int m_TeamNumber;
};

/* 886 */
struct __cppobj BS_RPCDispatch : BS_MultiDispatch
{
};

/* 887 */
struct BS_PktBody
{
  unsigned __int16 m_usCmd;
};

/* 888 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGLNotifyCloseGuild : BS_PktBody
{
  int nIdx;
  char gameId[32];
  char teamId[32];
  char serverName[32];
  char masterUId[32];
  char valid[4];
};

/* 889 */
struct LockMessageBuffer<BS_PktGLNotifyCloseGuild>
{
  BS_PktGLNotifyCloseGuild *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 890 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktTeamNotify : BS_PktBody
{
  unsigned int m_Type;
  XiStrTeamName m_TeamName;
  XiStrCharName m_CharName;
  unsigned int m_Time;
  int m_TeamRank;
};

/* 891 */
struct LockMessageBuffer<BS_PktTeamNotify>
{
  BS_PktTeamNotify *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 892 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGLNotifyWithDrawMember : BS_PktBody
{
  int nIdx;
  char gameId[32];
  char teamId[32];
  char serverName[32];
  char userId[32];
  char withdrawtype[4];
  char ip[32];
};

/* 893 */
struct LockMessageBuffer<BS_PktGLNotifyWithDrawMember>
{
  BS_PktGLNotifyWithDrawMember *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 894 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGLNotifyAcceptMember : BS_PktBody
{
  int nIdx;
  char gameId[32];
  char teamId[32];
  char serverName[32];
  char userId[32];
  wchar_t userCharacter[32];
  int nLevel;
  int nPvpWInCnt;
  char ip[32];
};

/* 895 */
struct LockMessageBuffer<BS_PktGLNotifyAcceptMember>
{
  BS_PktGLNotifyAcceptMember *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 896 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGLNotifyCreateGuild : BS_PktBody
{
  int nIdx;
  char gameId[32];
  char teamId[32];
  wchar_t teamName[32];
  char serverName[32];
  char masterUId[32];
  char url[32];
  wchar_t masterCharacter[32];
  int nLevel;
  int nPvpWInCnt;
  char ip[32];
};

/* 897 */
struct LockMessageBuffer<BS_PktGLNotifyCreateGuild>
{
  BS_PktGLNotifyCreateGuild *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 898 */
struct auto_lock<XiCsTeam>
{
  XiCsTeam *Lock;
};

/* 899 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiStrMemberInfo,int,XiStrMemberInfo const *,XiStrMemberInfo const &>
{
};

/* 900 */
struct __cppobj std::_Ranit<XiStrMemberInfo,int,XiStrMemberInfo const *,XiStrMemberInfo const &> : std::iterator<std::random_access_iterator_tag,XiStrMemberInfo,int,XiStrMemberInfo const *,XiStrMemberInfo const &>
{
};

/* 901 */
struct __cppobj std::vector<XiStrMemberInfo,std::allocator<XiStrMemberInfo> >::const_iterator : std::_Ranit<XiStrMemberInfo,int,XiStrMemberInfo const *,XiStrMemberInfo const &>
{
  XiStrMemberInfo *_Myptr;
};

/* 902 */
struct __cppobj std::vector<XiStrMemberInfo,std::allocator<XiStrMemberInfo> >::iterator : std::vector<XiStrMemberInfo,std::allocator<XiStrMemberInfo> >::const_iterator
{
};

/* 903 */
struct __cppobj __unaligned __declspec(align(4)) BS_PktSetTeamMarkAck : BS_PktBody
{
  int m_Result;
  __int64 m_TeamId;
  __int64 m_ImgId;
  int m_Size;
  unsigned __int16 m_Age;
};

/* 904 */
struct LockMessageBuffer<BS_PktSetTeamMarkAck>
{
  BS_PktSetTeamMarkAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 905 */
struct __cppobj std::input_iterator_tag
{
};

/* 906 */
struct __cppobj std::forward_iterator_tag : std::input_iterator_tag
{
};

/* 907 */
struct __cppobj std::bidirectional_iterator_tag : std::forward_iterator_tag
{
};

/* 908 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktCharUpdate : BS_PktBody
{
  XiStrCharInfo CharInfo;
};

/* 909 */
struct LockMessageBuffer<BS_PktCharUpdate>
{
  BS_PktCharUpdate *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 910 */
struct __unaligned __declspec(align(2)) XiTeamBind
{
  __int64 m_TeamId;
  __int64 m_Cid;
  unsigned int m_Serial;
  XiStrCharName m_Name;
  int m_Level;
};

/* 911 */
struct __cppobj BS_PktBanishTeamMember : BS_PktBody
{
  XiTeamBind m_bind;
  unsigned __int16 m_Age;
  unsigned __int16 m_BanishType;
};

/* 912 */
struct LockMessageBuffer<BS_PktBanishTeamMember>
{
  BS_PktBanishTeamMember *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 913 */
struct XiPlayerInfo
{
  wchar_t Cname[13];
  unsigned __int16 Serial;
  unsigned __int16 Age;
  __unaligned __declspec(align(1)) __int64 Cid;
  unsigned __int16 Level;
  unsigned int Exp;
  __unaligned __declspec(align(1)) __int64 TeamId;
  __unaligned __declspec(align(1)) __int64 TeamMarkId;
  wchar_t TeamName[14];
  unsigned __int16 TeamNLevel;
  XiVisualItem VisualItem;
  float UseTime;
};

/* 914 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktRoomNotifyChange : BS_PktBody
{
  unsigned __int16 m_Serial;
  unsigned __int16 m_Age;
  XiCarAttr m_CarAttr;
  XiPlayerInfo m_PlayerInfo;
};

/* 915 */
struct __unaligned __declspec(align(2)) XiCBattleSetting
{
  __int64 LeaderId;
  XiStrCharName LeaderName;
};

/* 916 */
struct std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0>
{
  std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > comp;
};

/* 917 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >::_Node>
{
};

/* 918 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >::_Node>
{
};

/* 919 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> > : std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >::_Node> _Alnod;
};

/* 920 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >::_Node *>
{
};

/* 921 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >::_Node *>
{
};

/* 922 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> > : std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >::_Node *> _Alptr;
};

/* 923 */
struct __cppobj std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >
{
};

/* 924 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> > : std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >
{
};

/* 925 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >
{
  std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> > _Alval;
};

/* 926 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >::_Node *_Right;
  std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> _Myval;
  char _Color;
  char _Isnil;
};

/* 948 */
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *>
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > first;
  CPropertySet *second;
};

/* 929 */
struct std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0>
{
  std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > comp;
};

/* 930 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >::_Node>
{
};

/* 931 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >::_Node>
{
};

/* 932 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> > : std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >::_Node> _Alnod;
};

/* 933 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >::_Node *>
{
};

/* 934 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >::_Node *>
{
};

/* 935 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> > : std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >::_Node *> _Alptr;
};

/* 936 */
struct __cppobj std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >
{
};

/* 937 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> > : std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >
{
};

/* 938 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >
{
  std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> > _Alval;
};

/* 946 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> > : std::_Tree_val<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 947 */
struct __cppobj std::map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> > > : std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >
{
};

/* 927 */
struct CPropertySet
{
  CPropertySetVtbl *vfptr;
  bool m_bUserDefinable;
  std::map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> > > m_properties;
};

/* 928 */
struct CPropertySetVtbl
{
  void *(__thiscall *__vecDelDtor)(CPropertySet *this, unsigned int);
};

/* 939 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >::_Node *_Right;
  std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> _Myval;
  char _Color;
  char _Isnil;
};

/* 945 */
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *>
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > first;
  CProperty *second;
};

/* 942 */
union CProperty::Data
{
  int *m_int;
  unsigned int *m_uint;
  float *m_float;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > *m_string;
  bool *m_bool;
};

/* 940 */
struct CProperty
{
  CPropertyVtbl *vfptr;
  CProperty::Data m_data;
  CProperty::Type m_type;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > m_name;
  std::vector<char,std::allocator<char> > *m_pBuff;
};

/* 941 */
struct CPropertyVtbl
{
  void *(__thiscall *__vecDelDtor)(CProperty *this, unsigned int);
};

/* 943 */
struct std::_Vector_val<char,std::allocator<char> >
{
  std::allocator<char> _Alval;
};

/* 944 */
struct __cppobj std::vector<char,std::allocator<char> > : std::_Vector_val<char,std::allocator<char> >
{
  char *_Myfirst;
  char *_Mylast;
  char *_Myend;
};

/* 949 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> > : std::_Tree_val<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 950 */
struct __cppobj std::map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> > > : std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >
{
};

/* 951 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> const &>
{
};

/* 952 */
struct __cppobj std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> const &>
{
};

/* 953 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >::const_iterator : std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >::_Node *_Ptr;
};

/* 954 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >::const_iterator
{
};

/* 955 */
struct GradeStandard
{
  wchar_t GradeID[5];
  unsigned int Grade;
  unsigned int Level;
};

/* 956 */
struct BS_PoolInfo
{
  int Size;
  int Num;
};

/* 957 */
union $A5A483E05FC9B52B872A8DCFA58CFF52
{
  unsigned int Offset;
  void *Pointer;
};

/* 958 */
struct _OVERLAPPED
{
  unsigned int Internal;
  unsigned int InternalHigh;
  $A5A483E05FC9B52B872A8DCFA58CFF52 ___u2;
  unsigned int OffsetHigh;
  void *hEvent;
};

/* 959 */
struct BS_RefCount
{
  BS_RefCountVtbl *vfptr;
  int m_RefCount;
};

/* 960 */
struct BS_RefCountVtbl
{
  bool (__thiscall *Release)(BS_RefCount *this);
};

/* 961 */
struct __cppobj BS_Overlapped : BS_RefCount, _OVERLAPPED
{
};

/* 962 */
struct __cppobj BS_OverlappedPendding : BS_Overlapped
{
  int *m_pPendingCount;
};

/* 963 */
struct _KDHELP64
{
  unsigned __int64 Thread;
  unsigned int ThCallbackStack;
  unsigned int ThCallbackBStore;
  unsigned int NextCallback;
  unsigned int FramePointer;
  unsigned __int64 KiCallUserMode;
  unsigned __int64 KeUserCallbackDispatcher;
  unsigned __int64 SystemRangeStart;
  unsigned __int64 Reserved[8];
};

/* 964 */
struct _tagADDRESS64
{
  unsigned __int64 Offset;
  unsigned __int16 Segment;
  ADDRESS_MODE Mode;
};

/* 965 */
struct DefQuerySKIDDeleteAuctionCar
{
  int nServerId;
  __unaligned __declspec(align(1)) __int64 nCid;
  int nRegId;
};

/* 966 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktLapTimeRecord : BS_PktBody
{
  unsigned int m_Serial;
  int m_RecTime;
  int m_nLapTime;
  float m_fLapTime;
  int m_CurrentLap;
  int m_TotalLap;
  unsigned int m_DeltaExp;
  XiStrExpInfo m_ExpInfo;
  unsigned int m_Level;
  __int64 m_DeltaMoney;
};

/* 967 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCheckOutGame : BS_PktBody
{
  int m_Type;
};

/* 968 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetCouponParam
{
  int nServerId;
  __int64 nCid;
};

/* 969 */
struct _EXCEPTION_RECORD
{
  unsigned int ExceptionCode;
  unsigned int ExceptionFlags;
  _EXCEPTION_RECORD *ExceptionRecord;
  void *ExceptionAddress;
  unsigned int NumberParameters;
  unsigned int ExceptionInformation[15];
};

/* 970 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAuctionCarOnAck : BS_PktBody
{
  unsigned int InvenIdx;
  unsigned int Tex;
  XiStrAuctionCarDataIn AuctionData;
};

/* 971 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateCBattleTeam
{
  int nWinCnt;
  int nDefeatedCnt;
  int nRWinCnt;
  int nRDefeatedCnt;
  int nServerId;
  int nChannelId;
  int nBattleId;
  __int64 nTeamId;
};

/* 972 */
struct XiMita500Info
{
  int m_PosIndex;
  int m_RegenRemainTime;
  __int64 m_Cid;
};

/* 973 */
struct __cppobj BS_PktMita500GetAck : BS_PktBody
{
  __unaligned __declspec(align(1)) __int64 m_Cid;
  XiStrCharName m_CharName;
  unsigned int m_Index;
  XiMita500Info m_Info;
};

/* 974 */
struct __cppobj BS_SingletonHeap<XiItemTable,5>
{
};

/* 975 */
struct std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0>
{
  std::less<unsigned long> comp;
};

/* 976 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >::_Node>
{
};

/* 977 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >::_Node>
{
};

/* 978 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> > : std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >::_Node> _Alnod;
};

/* 979 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >::_Node *>
{
};

/* 980 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >::_Node *>
{
};

/* 981 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >::_Node *> _Alptr;
};

/* 982 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,XiStrItem> >
{
};

/* 983 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrItem> > : std::_Allocator_base<std::pair<unsigned long const ,XiStrItem> >
{
};

/* 984 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >
{
  std::allocator<std::pair<unsigned long const ,XiStrItem> > _Alval;
};

/* 985 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,XiStrItem> _Myval;
  char _Color;
  char _Isnil;
};

/* 986 */
struct std::pair<unsigned long const ,XiStrItem>
{
  const unsigned int first;
  XiStrItem second;
};

/* 987 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 988 */
struct __cppobj std::map<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> > > : std::_Tree<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >
{
};

/* 989 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiStrItem>,int,std::pair<unsigned long const ,XiStrItem> const *,std::pair<unsigned long const ,XiStrItem> const &>
{
};

/* 990 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,XiStrItem>,int,std::pair<unsigned long const ,XiStrItem> const *,std::pair<unsigned long const ,XiStrItem> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiStrItem>,int,std::pair<unsigned long const ,XiStrItem> const *,std::pair<unsigned long const ,XiStrItem> const &>
{
};

/* 991 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,XiStrItem>,int,std::pair<unsigned long const ,XiStrItem> const *,std::pair<unsigned long const ,XiStrItem> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >::_Node *_Ptr;
};

/* 992 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >::const_iterator
{
};

/* 993 */
struct std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0>
{
  std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > comp;
};

/* 994 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >::_Node>
{
};

/* 995 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >::_Node>
{
};

/* 996 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> > : std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >::_Node> _Alnod;
};

/* 997 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >::_Node *>
{
};

/* 998 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >::_Node *>
{
};

/* 999 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> > : std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >::_Node *> _Alptr;
};

/* 1000 */
struct __cppobj std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >
{
};

/* 1001 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> > : std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >
{
};

/* 1002 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> > : std::_Tree_ptr<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >
{
  std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> > _Alval;
};

/* 1003 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >::_Node *_Right;
  std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> _Myval;
  char _Color;
  char _Isnil;
};

/* 1004 */
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup>
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > first;
  ItemGroup second;
};

/* 1005 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> > : std::_Tree_val<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1006 */
struct __cppobj std::map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> > > : std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >
{
};

/* 1007 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> const &>
{
};

/* 1008 */
struct __cppobj std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> const &>
{
};

/* 1009 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >::const_iterator : std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> const &>
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >::_Node *_Ptr;
};

/* 1010 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >::iterator : std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >::const_iterator
{
};

/* 1011 */
struct std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0>
{
  std::less<unsigned long> comp;
};

/* 1012 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >::_Node>
{
};

/* 1013 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >::_Node>
{
};

/* 1014 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> > : std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >::_Node> _Alnod;
};

/* 1015 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >::_Node *>
{
};

/* 1016 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >::_Node *>
{
};

/* 1017 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >::_Node *> _Alptr;
};

/* 1018 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,ItemGroup> >
{
};

/* 1019 */
struct __cppobj std::allocator<std::pair<unsigned long const ,ItemGroup> > : std::_Allocator_base<std::pair<unsigned long const ,ItemGroup> >
{
};

/* 1020 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >
{
  std::allocator<std::pair<unsigned long const ,ItemGroup> > _Alval;
};

/* 1021 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,ItemGroup> _Myval;
  char _Color;
  char _Isnil;
};

/* 1022 */
struct std::pair<unsigned long const ,ItemGroup>
{
  const unsigned int first;
  ItemGroup second;
};

/* 1023 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1024 */
struct __cppobj std::map<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> > > : std::_Tree<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >
{
};

/* 1025 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,ItemGroup>,int,std::pair<unsigned long const ,ItemGroup> const *,std::pair<unsigned long const ,ItemGroup> const &>
{
};

/* 1026 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,ItemGroup>,int,std::pair<unsigned long const ,ItemGroup> const *,std::pair<unsigned long const ,ItemGroup> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,ItemGroup>,int,std::pair<unsigned long const ,ItemGroup> const *,std::pair<unsigned long const ,ItemGroup> const &>
{
};

/* 1027 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,ItemGroup>,int,std::pair<unsigned long const ,ItemGroup> const *,std::pair<unsigned long const ,ItemGroup> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >::_Node *_Ptr;
};

/* 1028 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >::const_iterator
{
};

/* 1029 */
struct std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0>
{
  std::less<unsigned long> comp;
};

/* 1030 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>
{
};

/* 1031 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>
{
};

/* 1032 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> > : std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node> _Alnod;
};

/* 1033 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *>
{
};

/* 1034 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *>
{
};

/* 1035 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *> _Alptr;
};

/* 1036 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,unsigned long> >
{
};

/* 1037 */
struct __cppobj std::allocator<std::pair<unsigned long const ,unsigned long> > : std::_Allocator_base<std::pair<unsigned long const ,unsigned long> >
{
};

/* 1038 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
{
  std::allocator<std::pair<unsigned long const ,unsigned long> > _Alval;
};

/* 1039 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,unsigned long> _Myval;
  char _Color;
  char _Isnil;
};

/* 1040 */
struct std::pair<unsigned long const ,unsigned long>
{
  const unsigned int first;
  unsigned int second;
};

/* 1041 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1042 */
struct __cppobj std::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > > : std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
{
};

/* 1043 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,unsigned long>,int,std::pair<unsigned long const ,unsigned long> const *,std::pair<unsigned long const ,unsigned long> const &>
{
};

/* 1044 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,unsigned long>,int,std::pair<unsigned long const ,unsigned long> const *,std::pair<unsigned long const ,unsigned long> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,unsigned long>,int,std::pair<unsigned long const ,unsigned long> const *,std::pair<unsigned long const ,unsigned long> const &>
{
};

/* 1045 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,unsigned long>,int,std::pair<unsigned long const ,unsigned long> const *,std::pair<unsigned long const ,unsigned long> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *_Ptr;
};

/* 1046 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator
{
};

/* 1047 */
struct __cppobj XiItemTable : BS_SingletonHeap<XiItemTable,5>
{
  std::map<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> > > m_ItemTable;
  std::map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> > > m_ItemGroupTable;
  std::map<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> > > m_ItemSetGroupTable;
  std::map<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> > > m_ItemLevelGroupTable;
  std::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > > m_ItemDropNumTable;
  unsigned int m_TotalDropNum;
  unsigned int m_nMaxLogicalFloor;
};

/* 1048 */
struct XiStrItemParam
{
  XiStrItem *pStrItem;
  XiStrItemUnit unit;
};

/* 1049 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetAuctionEx
{
  int nServerId;
  __int64 nCid;
};

/* 1050 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktDropVisualItemAck : BS_PktBody
{
  unsigned int TableIdx;
  unsigned int InvenIdx;
};

/* 1051 */
struct __unaligned __declspec(align(1)) DefQuerySKIDGetCharacterList
{
  char szMemberId[33];
  int nServerId;
};

/* 1052 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktTestPlayerQuestion : BS_PktBody
{
  int Question;
  int Answer;
};

/* 1053 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetTeamMembers
{
  int nServerId;
  __int64 nTeamId;
};

/* 1054 */
struct __cppobj BS_PktCheckTeamName : BS_PktBody
{
  wchar_t m_TeamName[17];
};

/* 1055 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktInstantFail : BS_PktBody
{
  unsigned int TableIdx;
};

/* 1056 */
struct DefQuerySKIDDeleteVSItem
{
  int nServerId;
  __unaligned __declspec(align(1)) __int64 nCid;
  int nInvenIdx;
};

/* 1057 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktRealMatchNotice : BS_PktBody
{
  unsigned int m_RealMatchTime;
  unsigned int m_NoticeType;
};

/* 1058 */
struct hfloat
{
  __int16 value;
};

/* 1059 */
struct __unaligned __declspec(align(2)) XiTCSCarMove
{
  int m_time;
  float m_pos;
  hfloat m_vel;
  hfloat m_acl;
  unsigned __int16 m_TrafficCarId;
  unsigned __int16 m_carAttr;
  __int16 m_path;
  __int16 m_nextPath;
  __int16 m_thirdPath;
};

/* 1060 */
struct __cppobj BS_PktGroupTCS : BS_PktBody
{
  unsigned __int16 m_Size;
  XiTCSCarMove m_move[1];
};

/* 1061 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateCarUpgrade4
{
  int nUpgrade;
  int nServerId;
  __int64 nCid;
  int nCarId;
};

/* 1062 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCBattleRoomCreate : BS_PktBody
{
  XiPvpUserInfo m_UserInfo;
  int Target;
};

/* 1063 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUCBossPatrolGoalPlace : BS_PktBody
{
  int Time;
  unsigned int TableIdx;
  unsigned int PlaceIdx;
  int PlaceType;
};

/* 1064 */
struct DefQuerySKIDChangeCurrentCar
{
  int nCarId;
  int nServerId;
  __int64 nCid;
};

/* 1065 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktQuestStart : BS_PktBody
{
  unsigned int TableIdx;
};

/* 1066 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetVisualItemHistory
{
  int nServerId;
  __int64 nCid;
};

/* 1067 */
struct DefQuerySKIDRenameCharacter
{
  char szNName1[33];
  char szNName2[33];
  char szOName[33];
};

/* 1068 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktArbeitGoAck : BS_PktBody
{
  unsigned int Serial;
};

/* 1069 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUserAuth2 : BS_PktBody
{
  unsigned int m_Version;
  char m_ID[40];
  char m_PW[2048];
};

/* 1070 */
struct DefQuerySKIDLoadOtherSticker
{
  char szCName[32];
};

/* 1071 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktArbeitGiveUpAck : BS_PktBody
{
  unsigned int Serial;
};

/* 1072 */
struct __cppobj BS_PktLeaveTeamConfirm : BS_PktBody
{
  XiTeamBind m_bind;
  int m_Result;
};

/* 1073 */
struct __cppobj BS_PktFriendDelAck : BS_PktBody
{
  __unaligned __declspec(align(1)) __int64 Cid;
  __int16 DelType;
  XiStrCharName CharName;
  XiStrCharName FriendCharName;
};

/* 1074 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktQuestFail : BS_PktBody
{
  unsigned int TableIdx;
};

/* 1075 */
struct __unaligned __declspec(align(1)) BS_PktOBSState::Unit
{
  unsigned __int16 m_Serial;
  unsigned __int16 m_Age;
  XiPvpUserInfo m_UserInfo;
  bool m_bReady;
  XiCarAttr m_CarAttr;
  wchar_t m_Name[16];
};

/* 1076 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktOBSState : BS_PktBody
{
  unsigned int m_Result;
  unsigned int m_RoomId;
  unsigned int m_RoomLifeId;
  unsigned __int16 m_MapId;
  unsigned __int16 m_MapFlag;
  __int16 m_RoomType;
  unsigned __int16 m_State;
  __int16 m_AreaId;
  unsigned __int16 m_PlayerCapacity;
  unsigned __int16 m_ViewerCount;
  unsigned __int16 m_RoomReady;
  wchar_t m_RoomName[41];
  int m_Score[4];
  __int64 TeamId[2];
  __int64 TeamMarkId[2];
  wchar_t TeamName[2][31];
  XiPvpRoomSlot m_Slot;
  unsigned int m_Size;
  BS_PktOBSState::Unit m_Member[1];
};

/* 1077 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUnEquipItem : BS_PktBody
{
  unsigned int InvenIdx;
  unsigned int CarID;
};

/* 1078 */
struct __cppobj BS_PktTradeLockAck : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int TradeIdx;
  __unaligned __declspec(align(1)) unsigned int LockState;
  XiStrCharName Name;
};

/* 1079 */
struct __cppobj BS_PktMyAuctionCarList : BS_PktBody
{
};

/* 1080 */
struct __declspec(align(4)) _IMAGEHLP_SYMBOL64
{
  unsigned int SizeOfStruct;
  unsigned __int64 Address;
  unsigned int Size;
  unsigned int Flags;
  unsigned int MaxNameLength;
  char Name[1];
};

/* 1081 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktJoinAreaAck : BS_PktBody
{
  int m_Area;
  int m_Result;
};

/* 1082 */
struct __cppobj BS_PktUnderCitySuggest : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int m_Serial;
  __unaligned __declspec(align(1)) int m_Time;
  __unaligned __declspec(align(1)) int m_CityId;
  XiStrCharName m_CName;
};

/* 1083 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktInstantRewardAck : BS_PktBody
{
  unsigned int TableIdx;
  unsigned int GetExp;
  unsigned int GetMoney;
  XiStrExpInfo ExpInfo;
  unsigned __int16 Level;
  unsigned __int16 ItemNum;
  unsigned int RewardItem[3];
};

/* 1086 */
struct std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0>
{
  std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > comp;
};

/* 1087 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >::_Node>
{
};

/* 1088 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >::_Node>
{
};

/* 1089 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> > : std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >::_Node> _Alnod;
};

/* 1090 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >::_Node *>
{
};

/* 1091 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >::_Node *>
{
};

/* 1092 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> > : std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >::_Node *> _Alptr;
};

/* 1093 */
struct __cppobj std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >
{
};

/* 1094 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> > : std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >
{
};

/* 1095 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >
{
  std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> > _Alval;
};

/* 1098 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> > : std::_Tree_val<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1099 */
struct __cppobj std::map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> > > : std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >
{
};

/* 1100 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_Buffer *,std::allocator<BS_Buffer *> >::_Node>
{
};

/* 1101 */
struct __cppobj std::allocator<std::_List_nod<BS_Buffer *,std::allocator<BS_Buffer *> >::_Node> : std::_Allocator_base<std::_List_nod<BS_Buffer *,std::allocator<BS_Buffer *> >::_Node>
{
};

/* 1102 */
struct std::_List_nod<BS_Buffer *,std::allocator<BS_Buffer *> >
{
  std::allocator<std::_List_nod<BS_Buffer *,std::allocator<BS_Buffer *> >::_Node> _Alnod;
};

/* 1103 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_Buffer *,std::allocator<BS_Buffer *> >::_Node *>
{
};

/* 1104 */
struct __cppobj std::allocator<std::_List_nod<BS_Buffer *,std::allocator<BS_Buffer *> >::_Node *> : std::_Allocator_base<std::_List_nod<BS_Buffer *,std::allocator<BS_Buffer *> >::_Node *>
{
};

/* 1105 */
struct __cppobj std::_List_ptr<BS_Buffer *,std::allocator<BS_Buffer *> > : std::_List_nod<BS_Buffer *,std::allocator<BS_Buffer *> >
{
  std::allocator<std::_List_nod<BS_Buffer *,std::allocator<BS_Buffer *> >::_Node *> _Alptr;
};

/* 1106 */
struct __cppobj std::_Allocator_base<BS_Buffer *>
{
};

/* 1107 */
struct __cppobj std::allocator<BS_Buffer *> : std::_Allocator_base<BS_Buffer *>
{
};

/* 1108 */
struct __cppobj std::_List_val<BS_Buffer *,std::allocator<BS_Buffer *> > : std::_List_ptr<BS_Buffer *,std::allocator<BS_Buffer *> >
{
  std::allocator<BS_Buffer *> _Alval;
};

/* 1110 */
struct __cppobj std::list<BS_Buffer *,std::allocator<BS_Buffer *> > : std::_List_val<BS_Buffer *,std::allocator<BS_Buffer *> >
{
  std::_List_nod<BS_Buffer *,std::allocator<BS_Buffer *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1111 */
struct BS_BufferPool
{
  std::list<BS_Buffer *,std::allocator<BS_Buffer *> > m_BufferList;
  BS_CriticalSection m_BufferLock;
};

/* 1112 */
struct __cppobj std::_Allocator_base<BS_SingleDispatch *>
{
};

/* 1113 */
struct __cppobj std::allocator<BS_SingleDispatch *> : std::_Allocator_base<BS_SingleDispatch *>
{
};

/* 1114 */
struct std::_Vector_val<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >
{
  std::allocator<BS_SingleDispatch *> _Alval;
};

/* 1125 */
struct __cppobj std::vector<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> > : std::_Vector_val<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >
{
  BS_SingleDispatch **_Myfirst;
  BS_SingleDispatch **_Mylast;
  BS_SingleDispatch **_Myend;
};

/* 1126 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >::_Node>
{
};

/* 1127 */
struct __cppobj std::allocator<std::_List_nod<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >::_Node> : std::_Allocator_base<std::_List_nod<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >::_Node>
{
};

/* 1128 */
struct std::_List_nod<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >
{
  std::allocator<std::_List_nod<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >::_Node> _Alnod;
};

/* 1129 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >::_Node *>
{
};

/* 1130 */
struct __cppobj std::allocator<std::_List_nod<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >::_Node *> : std::_Allocator_base<std::_List_nod<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >::_Node *>
{
};

/* 1131 */
struct __cppobj std::_List_ptr<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> > : std::_List_nod<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >
{
  std::allocator<std::_List_nod<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >::_Node *> _Alptr;
};

/* 1132 */
struct __cppobj std::_List_val<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> > : std::_List_ptr<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >
{
  std::allocator<BS_SingleDispatch *> _Alval;
};

/* 1134 */
struct __cppobj std::list<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> > : std::_List_val<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >
{
  std::_List_nod<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1135 */
struct std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0>
{
  std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > comp;
};

/* 1136 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >::_Node>
{
};

/* 1137 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >::_Node>
{
};

/* 1138 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> > : std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >::_Node> _Alnod;
};

/* 1139 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >::_Node *>
{
};

/* 1140 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >::_Node *>
{
};

/* 1141 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> > : std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >::_Node *> _Alptr;
};

/* 1142 */
struct __cppobj std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >
{
};

/* 1143 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> > : std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >
{
};

/* 1144 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >
{
  std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> > _Alval;
};

/* 1147 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> > : std::_Tree_val<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1148 */
struct __cppobj std::map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> > > : std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >
{
};

/* 1123 */
struct BS_PacketAnalyzeMachine
{
  BS_CriticalSection m_InsertLock;
  BS_CriticalSection m_RemoveLock;
  std::vector<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> > m_DispatchList;
  std::list<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> > m_InsertList;
  std::list<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> > m_RemoveList;
  std::map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> > > m_AnalyzeList;
};

/* 1084 */
struct BS_NetFrame
{
  BS_NetFrameVtbl *vfptr;
  BS_CriticalSection m_ContainerLock;
  std::map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> > > m_ContainerList;
  BS_BufferPool m_BufferPool;
  BS_PacketAnalyzeMachine m_PacketAnalyzeMachine;
};

/* 1085 */
struct BS_NetFrameVtbl
{
  void *(__thiscall *__vecDelDtor)(BS_NetFrame *this, unsigned int);
  bool (__thiscall *Destroy)(BS_NetFrame *this);
};

/* 1096 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >::_Node *_Right;
  std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> _Myval;
  char _Color;
  char _Isnil;
};

/* 1109 */
struct std::_List_nod<BS_Buffer *,std::allocator<BS_Buffer *> >::_Node
{
  std::_List_nod<BS_Buffer *,std::allocator<BS_Buffer *> >::_Node *_Next;
  std::_List_nod<BS_Buffer *,std::allocator<BS_Buffer *> >::_Node *_Prev;
  BS_Buffer *_Myval;
};

/* 1115 */
struct __cppobj std::_Allocator_base<BS_Packet * *>
{
};

/* 1116 */
struct __cppobj std::allocator<BS_Packet * *> : std::_Allocator_base<BS_Packet * *>
{
};

/* 1117 */
struct std::_Deque_map<BS_Packet *,std::allocator<BS_Packet *> >
{
  std::allocator<BS_Packet * *> _Almap;
};

/* 1118 */
struct __cppobj std::_Allocator_base<BS_Packet *>
{
};

/* 1119 */
struct __cppobj std::allocator<BS_Packet *> : std::_Allocator_base<BS_Packet *>
{
};

/* 1120 */
struct __cppobj std::_Deque_val<BS_Packet *,std::allocator<BS_Packet *> > : std::_Deque_map<BS_Packet *,std::allocator<BS_Packet *> >
{
  std::allocator<BS_Packet *> _Alval;
};

/* 1121 */
struct __cppobj std::deque<BS_Packet *,std::allocator<BS_Packet *> > : std::_Deque_val<BS_Packet *,std::allocator<BS_Packet *> >
{
  BS_Packet ***_Map;
  unsigned int _Mapsize;
  unsigned int _Myoff;
  unsigned int _Mysize;
};

/* 1122 */
struct std::queue<BS_Packet *,std::deque<BS_Packet *,std::allocator<BS_Packet *> > >
{
  std::deque<BS_Packet *,std::allocator<BS_Packet *> > c;
};

/* 1124 */
struct __cppobj BS_SingleDispatch : BS_MessageDispatch
{
  std::queue<BS_Packet *,std::deque<BS_Packet *,std::allocator<BS_Packet *> > > m_PacketQueue;
  BS_PacketAnalyze *m_pPacketAnalyze;
  BS_PacketAnalyzeMachine *m_pPacketAnalyzeMachine;
};

/* 1133 */
struct std::_List_nod<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >::_Node
{
  std::_List_nod<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >::_Node *_Next;
  std::_List_nod<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >::_Node *_Prev;
  BS_SingleDispatch *_Myval;
};

/* 1145 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >::_Node *_Right;
  std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> _Myval;
  char _Color;
  char _Isnil;
};

/* 1097 */
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *>
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > first;
  BS_SessionContainer *second;
};

/* 1146 */
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *>
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > first;
  BS_PacketAnalyze *second;
};

/* 1149 */
struct __cppobj std::_Allocator_base<BS_Thread *>
{
};

/* 1150 */
struct __cppobj std::allocator<BS_Thread *> : std::_Allocator_base<BS_Thread *>
{
};

/* 1151 */
struct std::_Vector_val<BS_Thread *,std::allocator<BS_Thread *> >
{
  std::allocator<BS_Thread *> _Alval;
};

/* 1152 */
struct BS_Thread
{
  BS_ThreadVtbl *vfptr;
  void *m_Handle;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > m_Name;
  unsigned int m_ThreadID;
};

/* 1153 */
struct BS_ThreadVtbl
{
  void *(__thiscall *__vecDelDtor)(BS_Thread *this, unsigned int);
  bool (__thiscall *PreRun)(BS_Thread *this);
  bool (__thiscall *Run)(BS_Thread *this);
  bool (__thiscall *End)(BS_Thread *this);
};

/* 1154 */
struct __cppobj std::vector<BS_Thread *,std::allocator<BS_Thread *> > : std::_Vector_val<BS_Thread *,std::allocator<BS_Thread *> >
{
  BS_Thread **_Myfirst;
  BS_Thread **_Mylast;
  BS_Thread **_Myend;
};

/* 1155 */
struct BS_ThreadMgr
{
  std::vector<BS_Thread *,std::allocator<BS_Thread *> > m_ThreadList;
  volatile int m_bJoinStarted;
};

/* 1156 */
struct std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0>
{
  std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > comp;
};

/* 1157 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >::_Node>
{
};

/* 1158 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >::_Node>
{
};

/* 1159 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> > : std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >::_Node> _Alnod;
};

/* 1160 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >::_Node *>
{
};

/* 1161 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >::_Node *>
{
};

/* 1162 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> > : std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >::_Node *> _Alptr;
};

/* 1163 */
struct __cppobj std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >
{
};

/* 1164 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> > : std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >
{
};

/* 1165 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> > : std::_Tree_ptr<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >
{
  std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> > _Alval;
};

/* 1166 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >::_Node *_Right;
  std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> _Myval;
  char _Color;
  char _Isnil;
};

/* 1167 */
struct BS_CompletionHandlerMgr::BS_CompletionInfo
{
  BS_CompletionHandler *m_pIOCP;
  std::vector<BS_Thread *,std::allocator<BS_Thread *> > m_ThreadList;
};

/* 1168 */
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo>
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > first;
  BS_CompletionHandlerMgr::BS_CompletionInfo second;
};

/* 1169 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> > : std::_Tree_val<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1170 */
struct __cppobj std::map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> > > : std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >
{
};

/* 1171 */
struct BS_CompletionHandlerMgr
{
  BS_ThreadMgr m_IOCPThreadMgr;
  std::map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> > > m_IOCPList;
};

/* 1172 */
struct __cppobj BS_IOCPNet : BS_NetFrame
{
  BS_CompletionHandlerMgr m_IOCPMgr;
};

/* 1173 */
struct __cppobj BS_SingletonHeap<BS_ZoneServer,5>
{
};

/* 1174 */
struct BS_Event
{
  void *m_hEvent;
};

/* 1175 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long,BS_Overlapped *> >
{
};

/* 1176 */
struct __cppobj std::allocator<std::pair<unsigned long,BS_Overlapped *> > : std::_Allocator_base<std::pair<unsigned long,BS_Overlapped *> >
{
};

/* 1177 */
struct std::_Vector_val<std::pair<unsigned long,BS_Overlapped *>,std::allocator<std::pair<unsigned long,BS_Overlapped *> > >
{
  std::allocator<std::pair<unsigned long,BS_Overlapped *> > _Alval;
};

/* 1178 */
struct std::pair<unsigned long,BS_Overlapped *>
{
  unsigned int first;
  BS_Overlapped *second;
};

/* 1179 */
struct __cppobj std::vector<std::pair<unsigned long,BS_Overlapped *>,std::allocator<std::pair<unsigned long,BS_Overlapped *> > > : std::_Vector_val<std::pair<unsigned long,BS_Overlapped *>,std::allocator<std::pair<unsigned long,BS_Overlapped *> > >
{
  std::pair<unsigned long,BS_Overlapped *> *_Myfirst;
  std::pair<unsigned long,BS_Overlapped *> *_Mylast;
  std::pair<unsigned long,BS_Overlapped *> *_Myend;
};

/* 1180 */
struct __cppobj std::binary_function<std::pair<unsigned long,BS_Overlapped *>,std::pair<unsigned long,BS_Overlapped *>,bool>
{
};

/* 1181 */
struct __cppobj std::greater<std::pair<unsigned long,BS_Overlapped *> > : std::binary_function<std::pair<unsigned long,BS_Overlapped *>,std::pair<unsigned long,BS_Overlapped *>,bool>
{
};

/* 1182 */
struct __declspec(align(4)) std::priority_queue<std::pair<unsigned long,BS_Overlapped *>,std::vector<std::pair<unsigned long,BS_Overlapped *>,std::allocator<std::pair<unsigned long,BS_Overlapped *> > >,std::greater<std::pair<unsigned long,BS_Overlapped *> > >
{
  std::vector<std::pair<unsigned long,BS_Overlapped *>,std::allocator<std::pair<unsigned long,BS_Overlapped *> > > c;
  std::greater<std::pair<unsigned long,BS_Overlapped *> > comp;
};

/* 1183 */
struct BS_Timer
{
  BS_TimerVtbl *vfptr;
};

/* 1184 */
struct BS_TimerVtbl
{
  unsigned int (__thiscall *GetCurrentTick)(BS_Timer *this);
};

/* 1185 */
struct BS_Schedule
{
  std::priority_queue<std::pair<unsigned long,BS_Overlapped *>,std::vector<std::pair<unsigned long,BS_Overlapped *>,std::allocator<std::pair<unsigned long,BS_Overlapped *> > >,std::greater<std::pair<unsigned long,BS_Overlapped *> > > m_BookingQueue;
  unsigned int m_uiTimerID;
  BS_CompletionHandler *m_IOCP;
  BS_Timer *m_Timer;
};

/* 1186 */
struct __cppobj BS_NormalTimer : BS_Timer
{
};

/* 1187 */
struct __cppobj std::_Allocator_base<BS_LuaBind *>
{
};

/* 1188 */
struct __cppobj std::allocator<BS_LuaBind *> : std::_Allocator_base<BS_LuaBind *>
{
};

/* 1189 */
struct std::_Vector_val<BS_LuaBind *,std::allocator<BS_LuaBind *> >
{
  std::allocator<BS_LuaBind *> _Alval;
};

/* 1192 */
struct LuaParam::Args
{
  struct lua_State *m_LuaState;
};

/* 1193 */
struct __declspec(align(4)) LuaParam::Rets
{
  struct lua_State *m_LuaState;
  __int16 m_RetCount;
};

/* 1190 */
struct BS_LuaBind
{
  BS_LuaBindVtbl *vfptr;
  struct lua_State *m_LuaState;
  LuaParam::Args ARGS;
  LuaParam::Rets RETS;
};

/* 1191 */
struct BS_LuaBindVtbl
{
  bool (__thiscall *BindingMethod)(BS_LuaBind *this);
};

/* 1194 */
struct __cppobj std::vector<BS_LuaBind *,std::allocator<BS_LuaBind *> > : std::_Vector_val<BS_LuaBind *,std::allocator<BS_LuaBind *> >
{
  BS_LuaBind **_Myfirst;
  BS_LuaBind **_Mylast;
  BS_LuaBind **_Myend;
};

/* 1195 */
struct BS_LuaFunc
{
  wchar_t m_Error[255];
  struct lua_State *m_LuaState;
  int m_BSIndex;
  __int16 m_ArgNum;
  __int16 m_RetNum;
};

/* 1196 */
struct BS_LuaVM
{
  std::vector<BS_LuaBind *,std::allocator<BS_LuaBind *> > m_pLuaBindList;
  BS_LuaFunc *m_pLuaFunc;
  struct lua_State *m_LuaState;
};

/* 1197 */
struct __cppobj BS_CsvFileLog : BS_Log
{
};

/* 1198 */
struct __cppobj std::_Allocator_base<XiTrackInfo>
{
};

/* 1199 */
struct __cppobj std::allocator<XiTrackInfo> : std::_Allocator_base<XiTrackInfo>
{
};

/* 1200 */
struct std::_Vector_val<XiTrackInfo,std::allocator<XiTrackInfo> >
{
  std::allocator<XiTrackInfo> _Alval;
};

/* 1201 */
struct XiPosVector
{
  float x;
  float y;
  float dx;
  float dy;
};

/* 1202 */
struct XiTrackGate
{
  XiPosVector m_pos;
  int m_type;
  int m_nGateNum;
};

/* 1203 */
struct __cppobj std::_Allocator_base<XiTrackGate>
{
};

/* 1204 */
struct __cppobj std::allocator<XiTrackGate> : std::_Allocator_base<XiTrackGate>
{
};

/* 1205 */
struct std::_Vector_val<XiTrackGate,std::allocator<XiTrackGate> >
{
  std::allocator<XiTrackGate> _Alval;
};

/* 1206 */
struct __cppobj std::vector<XiTrackGate,std::allocator<XiTrackGate> > : std::_Vector_val<XiTrackGate,std::allocator<XiTrackGate> >
{
  XiTrackGate *_Myfirst;
  XiTrackGate *_Mylast;
  XiTrackGate *_Myend;
};

/* 1207 */
struct __cppobj std::_Allocator_base<std::vector<unsigned int,std::allocator<unsigned int> > >
{
};

/* 1208 */
struct __cppobj std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > : std::_Allocator_base<std::vector<unsigned int,std::allocator<unsigned int> > >
{
};

/* 1209 */
struct std::_Vector_val<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >
{
  std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > _Alval;
};

/* 1210 */
struct __cppobj std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > > : std::_Vector_val<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >
{
  std::vector<unsigned int,std::allocator<unsigned int> > *_Myfirst;
  std::vector<unsigned int,std::allocator<unsigned int> > *_Mylast;
  std::vector<unsigned int,std::allocator<unsigned int> > *_Myend;
};

/* 1211 */
struct std::bitset<6>
{
  unsigned int _Array[1];
};

/* 1212 */
struct XiTrackInfo
{
  int nUniqueID;
  int m_lap;
  XiTrackGate m_start;
  XiTrackGate m_end;
  int minimapMinX;
  int minimapMinY;
  int minimapMaxX;
  int minimapMaxY;
  std::vector<XiTrackGate,std::allocator<XiTrackGate> > m_gate;
  std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > > m_gateTable;
  int m_reversepoint;
  int m_trafficMode;
  int m_reverse;
  std::bitset<6> m_bsRecommend;
  int m_eCityType;
  int m_city;
  int m_track;
  int m_gateNum;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > m_trackId;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > m_trackName;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > m_trackUIName;
  float m_fTotalDistance;
  int m_nGate;
  int m_nCorner;
};

/* 1213 */
struct __cppobj std::vector<XiTrackInfo,std::allocator<XiTrackInfo> > : std::_Vector_val<XiTrackInfo,std::allocator<XiTrackInfo> >
{
  XiTrackInfo *_Myfirst;
  XiTrackInfo *_Mylast;
  XiTrackInfo *_Myend;
};

/* 1214 */
struct XiPVPTrackInfoMgr
{
  std::vector<XiTrackInfo,std::allocator<XiTrackInfo> > m_vecTrackInfo;
};

/* 1215 */
struct __cppobj BS_SystemDispatch : BS_MultiDispatch
{
};

/* 1216 */
struct __cppobj BS_ZoneServer : BS_IOCPNet, BS_SingletonHeap<BS_ZoneServer,5>
{
  _BYTE gapD0[1];
  volatile int m_bStop;
  BS_ThreadMgr m_ThreadMgr;
  BS_Event m_Process;
  volatile bool m_bService;
  BS_Schedule *m_pSchedule;
  BS_NormalTimer *m_pTimer;
  BS_LuaVM *m_pLuaVM;
  int m_Time;
  int m_pingedTime;
  int m_nextBaseTime;
  BS_Buffer *m_pBuffer;
  BS_CsvFileLog *m_pStaticNetLog;
  BS_CsvFileLog *m_pStaticDBLog;
  wchar_t m_DataDir[256];
  XiPVPTrackInfoMgr *m_pPvpTrackMgr;
  BS_SystemDispatch *m_pSystemDispatchForSend;
  BS_SystemDispatch *m_pSystemDispatch;
  BS_SystemDispatch *m_pGameUDPDispatch;
  BS_SystemDispatch *m_pLobbyUDPDispatch;
  BS_SystemDispatch *m_pAreaUDPDispatch;
  BS_SystemDispatch *m_pBAreaUDPDispatch;
};

/* 1217 */
struct XiPlayerKey
{
  unsigned __int16 Serial;
  unsigned __int16 Age;
};

/* 1218 */
struct XiPlayerKey::Is
{
  unsigned __int16 Serial;
};

/* 1219 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktPvpLoad : BS_PktBody
{
  int m_Type;
  int m_MapId;
  int m_MapFlag;
  int m_AreaId;
  float m_BestRecord;
  int m_StartTime;
  int m_TrafficNum;
};

/* 1220 */
struct DefQuerySKIDUpdateCBattleRound
{
  int nWinTeam;
  int nDefPoint;
  int nAtkPoint;
  int nServerId;
  int nChannelId;
  int nBattleId;
  int nMatchId;
  int nRound;
};

/* 1221 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktTradeCloseAck : BS_PktBody
{
  unsigned int TradeIdx;
};

/* 1222 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktFriendListAck : BS_PktBody
{
  int Size;
  unsigned int ListUpdate;
  XiStrFriend Friend[1];
};

/* 1223 */
struct VEHICLEUPGRADE
{
  int nAccel;
  int nSpeed;
  int nCrash;
  int nBoost;
  float fAbilitySum;
  unsigned int dwPrice;
  unsigned int dwSell;
  unsigned int dwClosedSell;
  unsigned int dwUpgrade;
  float fFuelEfficiency;
  int nFuelCapacity;
  int nReqLevel;
  XIVEHICLEGRADE_TYPE eVehicleGradeType;
  int nVehicleGradeLvl;
};

/* 1224 */
struct VEHICLEUPGRADE_INFO
{
  unsigned int dwID;
  VEHICLEUPGRADE sVehicleUpgrade[9];
};

/* 1225 */
struct __unaligned __declspec(align(2)) XiStrPartyMemberInfo
{
  __int64 Cid;
  XiStrCharName Name;
  unsigned __int16 Avatar;
  unsigned __int16 Level;
};

/* 1226 */
struct __cppobj BS_PktPartyApply : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int m_Serial;
  __unaligned __declspec(align(1)) unsigned int m_Ticket;
  XiStrPartyMemberInfo m_memberinfo;
  wchar_t m_Msg[50];
};

/* 1227 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUpgradeItem : BS_PktBody
{
  unsigned int SrcInvenIdx;
  unsigned int AddInvenIdx;
  int AddNum;
};

/* 1228 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktTrafficItemEventAck : BS_PktBody
{
  unsigned int GetCnt;
  unsigned int TableIdx;
  int DropMode;
};

/* 1229 */
struct __unaligned __declspec(align(1)) BS_PktRoomState::Unit
{
  unsigned __int16 m_Serial;
  unsigned __int16 m_Age;
  XiPvpUserInfo m_UserInfo;
  bool m_bReady;
  XiCarAttr m_CarAttr;
  wchar_t m_Name[16];
};

/* 1230 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktRoomState : BS_PktBody
{
  unsigned int m_Result;
  unsigned int m_RoomId;
  unsigned int m_RoomLifeId;
  unsigned __int16 m_MapId;
  unsigned __int16 m_MapFlag;
  __int16 m_RoomType;
  unsigned __int16 m_State;
  __int16 m_AreaId;
  unsigned __int16 m_PlayerCapacity;
  unsigned __int16 m_ViewerCount;
  unsigned __int16 m_RoomReady;
  wchar_t m_RoomName[40];
  XiPvpRoomSlot m_Slot;
  unsigned int m_Size;
  BS_PktRoomState::Unit m_Member[1];
};

/* 1231 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGetImage : BS_PktBody
{
  int m_Act;
  __int64 m_ObjectId;
  __int64 m_ImageId;
};

/* 1232 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktOpenCoupon : BS_PktBody
{
  unsigned int Type;
  int StampIdx;
};

/* 1233 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktDayMissionGetRewardAck : BS_PktBody
{
  unsigned int m_GetMileage;
  unsigned int m_TotalMileage;
};

/* 1234 */
struct DefQuerySKIDLoadStickerCatalog
{
  int nServerId;
};

/* 1235 */
struct _FLOATING_SAVE_AREA
{
  unsigned int ControlWord;
  unsigned int StatusWord;
  unsigned int TagWord;
  unsigned int ErrorOffset;
  unsigned int ErrorSelector;
  unsigned int DataOffset;
  unsigned int DataSelector;
  char RegisterArea[80];
  unsigned int Cr0NpxState;
};

/* 1236 */
struct _CONTEXT
{
  unsigned int ContextFlags;
  unsigned int Dr0;
  unsigned int Dr1;
  unsigned int Dr2;
  unsigned int Dr3;
  unsigned int Dr6;
  unsigned int Dr7;
  _FLOATING_SAVE_AREA FloatSave;
  unsigned int SegGs;
  unsigned int SegFs;
  unsigned int SegEs;
  unsigned int SegDs;
  unsigned int Edi;
  unsigned int Esi;
  unsigned int Ebx;
  unsigned int Edx;
  unsigned int Ecx;
  unsigned int Eax;
  unsigned int Ebp;
  unsigned int Eip;
  unsigned int SegCs;
  unsigned int EFlags;
  unsigned int Esp;
  unsigned int SegSs;
  char ExtendedRegisters[512];
};

/* 1237 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUCBossPatrolResult : BS_PktBody
{
  unsigned int Result;
  unsigned int GetExp;
  unsigned int InvenIdx;
  int DeltaMito;
  __int64 Mito;
};

/* 1238 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetAllHancoinInven
{
  int nServerId;
  __int64 nCid;
};

/* 1239 */
struct GDBSession
{
  GDBSessionVtbl *vfptr;
};

/* 1240 */
union $DFE4419B368B9CEABB0E97BE6A4B726C
{
  bool (__thiscall *BindParam)(GDBSession *this, unsigned int, char *, int, bool);
  bool (__thiscall *BindParam)(GDBSession *this, unsigned int);
  bool (__thiscall *BindParam)(GDBSession *this, unsigned int, __int64, int);
  bool (__thiscall *BindParam)(GDBSession *this, unsigned int, float, int);
  bool (__thiscall *BindParam)(GDBSession *this, unsigned int, int, int);
  bool (__thiscall *BindParam)(GDBSession *this, unsigned int, char *, int);
};

/* 1241 */
union $4B1B8E2784746784AD96AA805E39DC7D
{
  bool (__thiscall *BindOutParam)(GDBSession *this, unsigned int, __int64 *, int);
  bool (__thiscall *BindOutParam)(GDBSession *this, unsigned int, float *, int);
  bool (__thiscall *BindOutParam)(GDBSession *this, unsigned int, int *, int);
  bool (__thiscall *BindOutParam)(GDBSession *this, unsigned int, char *, int);
};

/* 1242 */
union $380560FB961222BCAFB27122C0A298DE
{
  bool (__thiscall *GetOutParam)(GDBSession *this, unsigned int, __int64 *, int);
  bool (__thiscall *GetOutParam)(GDBSession *this, unsigned int, float *, int);
  bool (__thiscall *GetOutParam)(GDBSession *this, unsigned int, int *, int);
  bool (__thiscall *GetOutParam)(GDBSession *this, unsigned int, char *, int);
};

/* 1243 */
union $152E7665C3FC40D8A74F2155536F93D0
{
  bool (__thiscall *BindCol)(GDBSession *this, unsigned int, __int64 *, int);
  bool (__thiscall *BindCol)(GDBSession *this, unsigned int, float *, int);
  bool (__thiscall *BindCol)(GDBSession *this, unsigned int, int *, int);
  bool (__thiscall *BindCol)(GDBSession *this, unsigned int, char *, int);
};

/* 1244 */
union $890F6678553169BE1E7E79D8AF4DF9BD
{
  bool (__thiscall *InitCol)(GDBSession *this, unsigned int, __int64 *, int);
  bool (__thiscall *InitCol)(GDBSession *this, unsigned int, float *, int);
  bool (__thiscall *InitCol)(GDBSession *this, unsigned int, int *, int);
  bool (__thiscall *InitCol)(GDBSession *this, unsigned int, char *, int);
};

/* 1245 */
union $5152C9677801D29CFB9257E89EF59D48
{
  bool (__thiscall *GetCol)(GDBSession *this, unsigned int, __int64 *, int);
  bool (__thiscall *GetCol)(GDBSession *this, unsigned int, float *, int);
  bool (__thiscall *GetCol)(GDBSession *this, unsigned int, int *, int);
  bool (__thiscall *GetCol)(GDBSession *this, unsigned int, char *, int);
};

/* 1246 */
union $EB6E3084F3C7CE93A68D12844C0F4DCA
{
  void (__thiscall *~GDBSession)(GDBSession *this);
  void *(__thiscall *__vecDelDtor)(GDBSession *this, unsigned int);
};

/* 1247 */
struct GDBSessionVtbl
{
  _BYTE gap0[20];
  $DFE4419B368B9CEABB0E97BE6A4B726C ___u0;
  bool (__thiscall *Prepare)(GDBSession *this, int, int, const char *);
  bool (__thiscall *Execute)(GDBSession *this);
  bool (__thiscall *PutData)(GDBSession *this, void *, int);
  int (__thiscall *GetData)(GDBSession *this, int, void *, int);
  int (__thiscall *GetErrorCode)(GDBSession *this);
  const char *(__thiscall *GetErrorMessage)(GDBSession *this);
  bool (__thiscall *SessionClose)(GDBSession *this);
  bool (__thiscall *Fetch)(GDBSession *this);
  bool (__thiscall *MoreResult)(GDBSession *this);
  int (__thiscall *GetRowNum)(GDBSession *this);
  _BYTE gap40[12];
  $4B1B8E2784746784AD96AA805E39DC7D ___u11;
  _BYTE gap50[12];
  $380560FB961222BCAFB27122C0A298DE ___u12;
  _BYTE gap60[12];
  $152E7665C3FC40D8A74F2155536F93D0 ___u13;
  _BYTE gap70[12];
  $890F6678553169BE1E7E79D8AF4DF9BD ___u14;
  _BYTE gap80[12];
  $5152C9677801D29CFB9257E89EF59D48 ___u15;
  bool (__thiscall *Commit)(GDBSession *this);
  bool (__thiscall *Rollback)(GDBSession *this);
  $EB6E3084F3C7CE93A68D12844C0F4DCA ___u18;
};

/* 1248 */
struct GDBC
{
  GDBCVtbl *vfptr;
};

/* 1249 */
struct GDBCVtbl
{
  void (__thiscall *SetDBEnv)(GDBC *this, const char *, const char *, const char *, void (__cdecl *)(GDBSession *));
  GDBSession *(__thiscall *GetSession)(GDBC *this);
  void (__thiscall *Release)(GDBC *this, GDBSession *);
  GDBSession *(__thiscall *GetTxnSession)(GDBC *this);
  void (__thiscall *ReleaseTxnSession)(GDBC *this, GDBSession *);
};

/* 1250 */
struct __declspec(align(4)) GDBTransaction
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  bool m_bCommited;
};

/* 1251 */
struct XiDBOperation
{
  XiDBOperationVtbl *vfptr;
  unsigned int m_ID;
  unsigned int m_Category;
};

/* 1252 */
union $36A528BF6F436F54DFBD63496A4F4A04
{
  void (__thiscall *~XiDBOperation)(XiDBOperation *this);
  void *(__thiscall *__vecDelDtor)(XiDBOperation *this, unsigned int);
};

/* 1253 */
struct XiDBOperationVtbl
{
  void (__thiscall *Do)(XiDBOperation *this, GDBTransaction *);
  $36A528BF6F436F54DFBD63496A4F4A04 ___u1;
};

/* 1254 */
struct DefQuerySKIDInsertMsg
{
  int nServerId;
  __unaligned __declspec(align(1)) __int64 nRid;
  __unaligned __declspec(align(1)) __int64 nSid;
  char szSName[33];
  __unaligned __declspec(align(1)) __int64 nKind;
  char szSubject[21];
  char szContent[201];
  __unaligned __declspec(align(1)) __int64 nGold;
  char szItem[101];
};

/* 1255 */
struct __cppobj XiSendMessageDB : XiDBOperation
{
  DefQuerySKIDInsertMsg param;
};

/* 1256 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktEnterArea : BS_PktBody
{
  unsigned __int16 m_Serial;
  XiStrCharName Name;
  int m_Area;
  int m_Group;
  int m_nLocalTime;
};

/* 1257 */
struct _KDHELP
{
  unsigned int Thread;
  unsigned int ThCallbackStack;
  unsigned int NextCallback;
  unsigned int FramePointer;
  unsigned int KiCallUserMode;
  unsigned int KeUserCallbackDispatcher;
  unsigned int SystemRangeStart;
  unsigned int ThCallbackBStore;
  unsigned int Reserved[8];
};

/* 1258 */
struct __unaligned __declspec(align(4)) DefQuerySKIDInsertCBattleLog
{
  int nServerId;
  int nChannelId;
  char szBattleODate[20];
  int nBattleId;
  __int64 nDefTeamId;
  __int64 nAtkTeamId;
  char szDefTeamName[17];
  char szAtkTeamName[17];
  char szDefTeamMembers[401];
  char szAtkTeamMembers[401];
  int nDefTeamPoint;
  int nAtkTeamPoint;
  int nRound;
  int nMatch;
};

/* 1259 */
struct __unaligned __declspec(align(4)) DefQuerySKIDInsertAuction
{
  int nServerId;
  __int64 nCid;
  char szCName[33];
  int nRegId;
  char szItemId[33];
  int nItemNum;
  int nRandom;
  int nUpgrade;
  int nInvenIdx;
  int nPrice;
  int nState;
  char szAssistA[33];
  char szAssistB[33];
  int nBox;
  int nCTime;
};

/* 1260 */
struct __cppobj XiInsertAuctionDB : XiDBOperation
{
  DefQuerySKIDInsertAuction param;
};

/* 1261 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAuctionCarBuy : BS_PktBody
{
  unsigned int Serial;
  unsigned int Type;
  unsigned int Grade;
  unsigned int Price;
};

/* 1262 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,BS_Buffer *,int,BS_Buffer * const *,BS_Buffer * const &>
{
};

/* 1263 */
struct __cppobj std::_Bidit<BS_Buffer *,int,BS_Buffer * const *,BS_Buffer * const &> : std::iterator<std::bidirectional_iterator_tag,BS_Buffer *,int,BS_Buffer * const *,BS_Buffer * const &>
{
};

/* 1264 */
struct __cppobj std::list<BS_Buffer *,std::allocator<BS_Buffer *> >::const_iterator : std::_Bidit<BS_Buffer *,int,BS_Buffer * const *,BS_Buffer * const &>
{
  std::_List_nod<BS_Buffer *,std::allocator<BS_Buffer *> >::_Node *_Ptr;
};

/* 1265 */
struct __cppobj std::list<BS_Buffer *,std::allocator<BS_Buffer *> >::iterator : std::list<BS_Buffer *,std::allocator<BS_Buffer *> >::const_iterator
{
};

/* 1266 */
struct __unaligned __declspec(align(1)) DefQuerySKIDUpdateUserLogout
{
  int nAddDate;
  char szMemberId[33];
};

/* 1267 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUCPatrolStartAck : BS_PktBody
{
  unsigned int TableIdx;
  unsigned int MapId;
  float x;
  float y;
  float z;
  float dir;
};

/* 1268 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >::_Node *_Right;
  std::pair<unsigned short const ,AssistGroup> _Myval;
  char _Color;
  char _Isnil;
};

/* 1269 */
struct std::pair<unsigned short const ,AssistGroup>
{
  const unsigned __int16 first;
  AssistGroup second;
};

/* 1270 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >::_Node>
{
};

/* 1271 */
struct std::pair<unsigned long,void (__cdecl*)(void)>
{
  unsigned int first;
  void (__cdecl *second)();
};

/* 1272 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long,void (__cdecl*)(void)> >
{
};

/* 1273 */
struct __cppobj std::_Allocator_base<std::pair<unsigned short const ,AssistGroup> >
{
};

/* 1274 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >::_Node *>
{
};

/* 1275 */
struct std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0>
{
  std::less<unsigned long> comp;
};

/* 1276 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >::_Node>
{
};

/* 1277 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >::_Node>
{
};

/* 1278 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> > : std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >::_Node> _Alnod;
};

/* 1279 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,DBOperStatic> _Myval;
  char _Color;
  char _Isnil;
};

/* 1280 */
struct DBOperStatic
{
  BS_SpinLock m_lock;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > m_Name;
  unsigned int m_Queue;
  unsigned int m_Process;
};

/* 1281 */
struct std::pair<unsigned long const ,DBOperStatic>
{
  const unsigned int first;
  DBOperStatic second;
};

/* 1282 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,DBOperStatic> >
{
};

/* 1283 */
struct __cppobj std::allocator<std::pair<unsigned long const ,DBOperStatic> > : std::_Allocator_base<std::pair<unsigned long const ,DBOperStatic> >
{
};

/* 1284 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >::_Node *>
{
};

/* 1285 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >::_Node *>
{
};

/* 1286 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >::_Node *> _Alptr;
};

/* 1287 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,XiCsLevelDropGroup> _Myval;
  char _Color;
  char _Isnil;
};

/* 1288 */
struct std::pair<unsigned long const ,XiCsLevelDropGroup>
{
  const unsigned int first;
  XiCsLevelDropGroup second;
};

/* 1289 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >::_Node>
{
};

/* 1290 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >::_Node *>
{
};

/* 1291 */
struct std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::_Node
{
  std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::_Node *_Next;
  std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::_Node *_Prev;
  std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> _Myval;
};

/* 1292 */
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > first;
  XiCsCharInfo *second;
};

/* 1293 */
struct __cppobj std::_Allocator_base<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::_Node>
{
};

/* 1294 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >::_Node *_Right;
  std::pair<int const ,XiTrackData::PvpTrafficSet> _Myval;
  char _Color;
  char _Isnil;
};

/* 1295 */
struct XiTrackData::PvpTrafficSet
{
  int traffic_number[3][32];
};

/* 1296 */
struct std::pair<int const ,XiTrackData::PvpTrafficSet>
{
  const int first;
  XiTrackData::PvpTrafficSet second;
};

/* 1297 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >::_Node *>
{
};

/* 1298 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >::_Node>
{
};

/* 1299 */
struct __cppobj std::_Allocator_base<std::_List_nod<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::_Node>
{
};

/* 1300 */
struct __cppobj std::allocator<std::_List_nod<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::_Node> : std::_Allocator_base<std::_List_nod<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::_Node>
{
};

/* 1301 */
struct std::_List_nod<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >
{
  std::allocator<std::_List_nod<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::_Node> _Alnod;
};

/* 1302 */
struct std::_List_nod<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::_Node
{
  std::_List_nod<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::_Node *_Next;
  std::_List_nod<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::_Node *_Prev;
  std::pair<__int64 const ,XiCsCharInfo *> _Myval;
};

/* 1303 */
struct __declspec(align(8)) std::pair<__int64 const ,XiCsCharInfo *>
{
  const __int64 first;
  XiCsCharInfo *second;
};

/* 1304 */
struct __cppobj std::_Allocator_base<std::_List_nod<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::_Node *>
{
};

/* 1305 */
struct __cppobj std::allocator<std::_List_nod<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::_Node *> : std::_Allocator_base<std::_List_nod<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::_Node *>
{
};

/* 1306 */
struct __cppobj std::_List_ptr<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > > : std::_List_nod<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >
{
  std::allocator<std::_List_nod<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::_Node *> _Alptr;
};

/* 1307 */
struct __cppobj std::_Allocator_base<std::pair<__int64 const ,XiCsCharInfo *> >
{
};

/* 1308 */
struct __cppobj std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > : std::_Allocator_base<std::pair<__int64 const ,XiCsCharInfo *> >
{
};

/* 1309 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,XiStrAssist> _Myval;
  char _Color;
  char _Isnil;
};

/* 1310 */
struct std::pair<unsigned long const ,XiStrAssist>
{
  const unsigned int first;
  XiStrAssist second;
};

/* 1311 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >::_Node>
{
};

/* 1312 */
struct __cppobj std::binary_function<std::pair<unsigned long,void (__cdecl*)(void)>,std::pair<unsigned long,void (__cdecl*)(void)>,bool>
{
};

/* 1313 */
struct std::_List_nod<XiDBOperation *,std::allocator<XiDBOperation *> >::_Node
{
  std::_List_nod<XiDBOperation *,std::allocator<XiDBOperation *> >::_Node *_Next;
  std::_List_nod<XiDBOperation *,std::allocator<XiDBOperation *> >::_Node *_Prev;
  XiDBOperation *_Myval;
};

/* 1314 */
struct __cppobj std::_Allocator_base<std::_List_nod<XiDBOperation *,std::allocator<XiDBOperation *> >::_Node *>
{
};

/* 1315 */
struct __cppobj std::allocator<std::_List_nod<XiDBOperation *,std::allocator<XiDBOperation *> >::_Node *> : std::_Allocator_base<std::_List_nod<XiDBOperation *,std::allocator<XiDBOperation *> >::_Node *>
{
};

/* 1316 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >
{
  std::allocator<std::pair<unsigned long const ,DBOperStatic> > _Alval;
};

/* 1317 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >::_Node *>
{
};

/* 1318 */
struct __cppobj std::allocator<std::pair<unsigned long,void (__cdecl*)(void)> > : std::_Allocator_base<std::pair<unsigned long,void (__cdecl*)(void)> >
{
};

/* 1319 */
struct __cppobj std::allocator<std::pair<unsigned long,void (__cdecl*)(void)> >::rebind<std::pair<unsigned long,void (__cdecl*)(void)> >
{
};

/* 1320 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsItem *> >::rebind<std::pair<unsigned long const ,XiCsItem *> >
{
};

/* 1321 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsItem *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >::_Node>
{
};

/* 1322 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsItem *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >::_Node *>
{
};

/* 1323 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsItem *> >::rebind<unsigned long>
{
};

/* 1324 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsItem *> >::rebind<char>
{
};

/* 1325 */
struct __cppobj std::_Allocator_base<unsigned long>
{
};

/* 1326 */
struct __cppobj std::allocator<unsigned long> : std::_Allocator_base<unsigned long>
{
};

/* 1327 */
struct __cppobj std::random_access_iterator_tag : std::bidirectional_iterator_tag
{
};

/* 1328 */
struct __cppobj std::iterator<std::random_access_iterator_tag,unsigned short (__cdecl*)(BS_PacketDispatch *,char *),int,unsigned short (__cdecl*const *)(BS_PacketDispatch *,char *),unsigned short (__cdecl*const &)(BS_PacketDispatch *,char *)>
{
};

/* 1329 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> const &>
{
};

/* 1330 */
struct __cppobj std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> const &>
{
};

/* 1331 */
struct std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::_Node
{
  std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::_Node *_Next;
  std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::_Node *_Prev;
  std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> _Myval;
};

/* 1332 */
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > first;
  std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator second;
};

/* 1333 */
struct __cppobj std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::const_iterator : std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> const &>
{
  std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::_Node *_Ptr;
};

/* 1334 */
struct __cppobj std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator : std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::const_iterator
{
};

/* 1335 */
struct __cppobj std::iterator<std::random_access_iterator_tag,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator,int,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator const *,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator const &>
{
};

/* 1336 */
struct std::_Vector_val<std::pair<unsigned long,void (__cdecl*)(void)>,std::allocator<std::pair<unsigned long,void (__cdecl*)(void)> > >
{
  std::allocator<std::pair<unsigned long,void (__cdecl*)(void)> > _Alval;
};

/* 1337 */
struct __cppobj std::binary_function<unsigned short,unsigned short,bool>
{
};

/* 1338 */
struct __cppobj std::less<unsigned short> : std::binary_function<unsigned short,unsigned short,bool>
{
};

/* 1339 */
struct std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0>
{
  std::less<unsigned short> comp;
};

/* 1340 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> > : std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >::_Node> _Alnod;
};

/* 1341 */
struct __cppobj std::allocator<std::pair<unsigned short const ,AssistGroup> > : std::_Allocator_base<std::pair<unsigned short const ,AssistGroup> >
{
};

/* 1342 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >::_Node *>
{
};

/* 1343 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >::_Node *> _Alptr;
};

/* 1344 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,XiCsLevelDropGroup> >
{
};

/* 1345 */
struct __cppobj std::_Allocator_base<XiDBOperation *>
{
};

/* 1346 */
struct __cppobj std::iterator<std::random_access_iterator_tag,unsigned int,int,unsigned int const *,unsigned int const &>
{
};

/* 1347 */
struct __cppobj std::allocator<std::pair<unsigned short const ,AssistGroup> >::rebind<std::pair<unsigned short const ,AssistGroup> >
{
};

/* 1348 */
struct __cppobj std::allocator<std::pair<unsigned short const ,AssistGroup> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >::_Node>
{
};

/* 1349 */
struct __cppobj std::allocator<std::pair<unsigned short const ,AssistGroup> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >::_Node *>
{
};

/* 1350 */
struct __cppobj std::allocator<std::pair<unsigned short const ,AssistGroup> >::rebind<unsigned short>
{
};

/* 1351 */
struct __cppobj std::allocator<std::pair<unsigned short const ,AssistGroup> >::rebind<char>
{
};

/* 1352 */
struct __cppobj std::_List_val<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > > : std::_List_ptr<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >
{
  std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > _Alval;
};

/* 1353 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >::_Node>
{
};

/* 1354 */
struct std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0>
{
  std::less<unsigned long> comp;
};

/* 1355 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >::_Node>
{
};

/* 1356 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >::_Node>
{
};

/* 1357 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> > : std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >::_Node> _Alnod;
};

/* 1358 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> _Myval;
  char _Color;
  char _Isnil;
};

/* 1359 */
struct std::pair<unsigned long const ,VEHICLEUPGRADE_INFO>
{
  const unsigned int first;
  VEHICLEUPGRADE_INFO second;
};

/* 1360 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >
{
};

/* 1361 */
struct __cppobj std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> > : std::_Allocator_base<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >
{
};

/* 1362 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >::_Node *>
{
};

/* 1363 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >::_Node *>
{
};

/* 1364 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >::_Node *> _Alptr;
};

/* 1365 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiTrackGate,int,XiTrackGate const *,XiTrackGate const &>
{
};

/* 1366 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >::_Node>
{
};

/* 1367 */
struct __cppobj std::iterator<std::random_access_iterator_tag,BS_GameDispatch *,int,BS_GameDispatch * const *,BS_GameDispatch * const &>
{
};

/* 1368 */
struct __cppobj std::allocator<std::pair<unsigned long const ,unsigned long> >::rebind<std::pair<unsigned long const ,unsigned long> >
{
};

/* 1369 */
struct __cppobj std::allocator<std::pair<unsigned long const ,unsigned long> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>
{
};

/* 1370 */
struct __cppobj std::allocator<std::pair<unsigned long const ,unsigned long> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *>
{
};

/* 1371 */
struct __cppobj std::allocator<std::pair<unsigned long const ,unsigned long> >::rebind<unsigned long>
{
};

/* 1372 */
struct __cppobj std::allocator<std::pair<unsigned long const ,unsigned long> >::rebind<char>
{
};

/* 1373 */
struct __cppobj std::iterator<std::random_access_iterator_tag,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &>
{
};

/* 1374 */
struct __cppobj std::_Allocator_base<bool>
{
};

/* 1375 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,XiStrAssist> >
{
};

/* 1376 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiStrCarInfo,int,XiStrCarInfo const *,XiStrCarInfo const &>
{
};

/* 1377 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> const &>
{
};

/* 1378 */
struct __cppobj std::_Allocator_base<ChaseTable::HuvAttr>
{
};

/* 1379 */
struct __cppobj std::allocator<ChaseTable::HuvAttr> : std::_Allocator_base<ChaseTable::HuvAttr>
{
};

/* 1380 */
struct std::_Vector_val<ChaseTable::HuvAttr,std::allocator<ChaseTable::HuvAttr> >
{
  std::allocator<ChaseTable::HuvAttr> _Alval;
};

/* 1381 */
struct ChaseTable::HuvAttr
{
  float m_Rate;
  int m_Level;
  int m_BodyType;
  int m_Ea;
  float m_Speed;
  float m_MaxSpeed;
  float m_NosAccel;
  float m_NosTime;
  float m_NosRefreshRate;
  float m_Durability;
  float m_FrontPlayerAvoidanceRate;
  float m_FrontTrafficAvoidanceRate;
  float m_RearPlayerAvoidanceRate;
  int m_ResultExp;
  int m_ResultMoney;
  ItemGroup *m_ItemGroup;
  float m_DropRate;
};

/* 1382 */
struct __cppobj std::vector<ChaseTable::HuvAttr,std::allocator<ChaseTable::HuvAttr> > : std::_Vector_val<ChaseTable::HuvAttr,std::allocator<ChaseTable::HuvAttr> >
{
  ChaseTable::HuvAttr *_Myfirst;
  ChaseTable::HuvAttr *_Mylast;
  ChaseTable::HuvAttr *_Myend;
};

/* 1383 */
struct ChaseTable::ChaseInfo
{
  int m_spawnTime;
  std::vector<ChaseTable::HuvAttr,std::allocator<ChaseTable::HuvAttr> > m_huvAttr;
};

/* 1384 */
struct std::pair<int const ,ChaseTable::ChaseInfo>
{
  const int first;
  ChaseTable::ChaseInfo second;
};

/* 1385 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,ChaseTable::ChaseInfo>,int,std::pair<int const ,ChaseTable::ChaseInfo> const *,std::pair<int const ,ChaseTable::ChaseInfo> const &>
{
};

/* 1386 */
struct __cppobj std::_Allocator_base<std::_List_nod<XiDBOperation *,std::allocator<XiDBOperation *> >::_Node>
{
};

/* 1387 */
struct XiStrDropLimit
{
  unsigned int Idx;
  XiStrItemID ID;
  unsigned int Limit;
  unsigned int UserCnt;
};

/* 1388 */
struct __cppobj std::_Allocator_base<XiStrDropLimit>
{
};

/* 1389 */
struct __cppobj std::allocator<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::_Node> : std::_Allocator_base<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::_Node>
{
};

/* 1390 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiRankUnit,int,XiRankUnit const *,XiRankUnit const &>
{
};

/* 1391 */
struct __cppobj std::allocator<XiAuctionCar *>::rebind<XiAuctionCar *>
{
};

/* 1392 */
struct __cppobj std::iterator<std::random_access_iterator_tag,ChaseTable::HuvAttr,int,ChaseTable::HuvAttr const *,ChaseTable::HuvAttr const &>
{
};

/* 1393 */
struct __cppobj std::iterator<std::random_access_iterator_tag,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator,int,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator const *,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator const &>
{
};

/* 1394 */
struct XiBattleRaceSetting
{
  __int16 MapId;
  __int16 MapFlag;
  int TrafficNum;
};

/* 1395 */
struct __cppobj std::_Allocator_base<XiCBattleItemInfo>
{
};

/* 1396 */
struct __cppobj std::allocator<XiCBattleItemInfo> : std::_Allocator_base<XiCBattleItemInfo>
{
};

/* 1397 */
struct std::_Vector_val<XiCBattleItemInfo,std::allocator<XiCBattleItemInfo> >
{
  std::allocator<XiCBattleItemInfo> _Alval;
};

/* 1398 */
struct XiCBattleItemInfo
{
  wchar_t CName[21];
  __int64 Gid;
  __int64 Cid;
  unsigned int InvenIdx;
  int ChannelId;
  XiStrItemParam ItemData;
  int BattleTime;
  int BattleId;
  int Team;
  int ItemReserve;
};

/* 1399 */
struct __cppobj std::vector<XiCBattleItemInfo,std::allocator<XiCBattleItemInfo> > : std::_Vector_val<XiCBattleItemInfo,std::allocator<XiCBattleItemInfo> >
{
  XiCBattleItemInfo *_Myfirst;
  XiCBattleItemInfo *_Mylast;
  XiCBattleItemInfo *_Myend;
};

/* 1400 */
struct __cppobj std::_Allocator_base<XiBattleRecord>
{
};

/* 1401 */
struct __cppobj std::allocator<XiBattleRecord> : std::_Allocator_base<XiBattleRecord>
{
};

/* 1402 */
struct std::_Vector_val<XiBattleRecord,std::allocator<XiBattleRecord> >
{
  std::allocator<XiBattleRecord> _Alval;
};

/* 1403 */
struct __unaligned __declspec(align(2)) XiBattleRecord
{
  unsigned int m_Time;
  int m_Act;
  int m_Channel;
  int m_Match;
  int m_Round;
  int m_Win;
  int m_nParts;
  wchar_t m_Team0[13];
  wchar_t m_Team1[13];
  wchar_t m_Team2[13];
};

/* 1404 */
struct __cppobj std::vector<XiBattleRecord,std::allocator<XiBattleRecord> > : std::_Vector_val<XiBattleRecord,std::allocator<XiBattleRecord> >
{
  XiBattleRecord *_Myfirst;
  XiBattleRecord *_Mylast;
  XiBattleRecord *_Myend;
};

/* 1405 */
struct __cppobj BS_CBattleRoom : BS_Room
{
  BS_CBattleLobby *m_pBattleLobby;
};

/* 1418 */
struct BS_SmartPtr<BS_CBattleRoom>
{
  BS_CBattleRoom *m_pObj;
};

/* 1419 */
struct BS_GameDB::CBattleId
{
  int m_nChannel;
  int m_nBattleId;
};

/* 1420 */
struct BS_CBattleLobby::OwnInfo
{
  int MajorChannelWinCnt;
  int SuccessiveWinCnt;
};

/* 1421 */
struct BS_CBattleLobby::Result
{
  unsigned int MatchCnt;
  int WinTeam;
  unsigned int RoundCnt;
  int SubResult[4];
  unsigned int DefWinCnt;
  unsigned int AtkWinCnt;
  int DefPoint;
  int AtkPoint;
};

/* 1422 */
struct __cppobj __declspec(align(8)) BS_CBattleLobby : XiCsItemLocker
{
  BS_CriticalSection m_cblock;
  BS_Buffer *m_pBuffer;
  BS_ChatRoom m_cbattleChatRoom;
  __int64 m_ownTeamId;
  __int64 m_ownerId;
  int m_ownTime;
  __int64 m_masterId;
  __int64 m_masterTeamId;
  __int64 m_lastMasterId;
  __int64 m_accTax;
  __int64 m_teamAccTax;
  __int64 m_lastTax;
  int m_lastColDate;
  __int64 m_battleLeader;
  XiStrCharName m_battleLeaderName;
  int m_ChannelState;
  long double m_fDeltaTax;
  unsigned int m_LevelLimit;
  XiBattleRaceSetting m_raceSet[3];
  __int64 m_nDefTeamId;
  __int64 m_nAtkTeamId;
  std::vector<XiCBattleItemInfo,std::allocator<XiCBattleItemInfo> > m_battedItem;
  std::vector<XiBattleRecord,std::allocator<XiBattleRecord> > m_battleRecord;
  BS_RoomPoolImpl<BS_CBattleRoom> *m_pRoomPool;
  BS_PvpChannel *m_teamQueue;
  BS_SmartPtr<BS_CBattleRoom> m_ownerRoom;
  BS_SmartPtr<BS_CBattleRoom> m_challengerRoom;
  BS_SmartPtr<BS_CBattleRoom> m_battleRoom;
  $E67061B104F1F14A8C9B61F820153DC4 m_state;
  int m_targetChannel;
  BS_GameDB::CBattleId m_cbattleId;
  int m_openTime;
  int m_battleTime;
  int m_endTime;
  int m_leftBattleTick;
  int m_restTerm;
  int m_stateTime;
  bool m_bDirty;
  int m_AttackMemberCnt;
  BS_CBattleLobby::OwnInfo m_ownInfo;
  BS_CBattleLobby::Result m_result;
  HashedVector<BS_GameDispatch *,4,16> m_newComers;
  float m_mitronTaxRate;
  BS_SmartPtr<XiCsTeam> m_ownTeamRef;
  BS_SmartPtr<XiCsTeam> m_masterTeamRef;
  wchar_t m_OwnerTeamName[13];
  wchar_t m_ChallengerTeamName[13];
};

/* 1406 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> >::_Node>
{
};

/* 1407 */
struct __cppobj std::allocator<std::_List_nod<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> >::_Node> : std::_Allocator_base<std::_List_nod<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> >::_Node>
{
};

/* 1408 */
struct std::_List_nod<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> >
{
  std::allocator<std::_List_nod<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> >::_Node> _Alnod;
};

/* 1409 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> >::_Node *>
{
};

/* 1410 */
struct __cppobj std::allocator<std::_List_nod<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> >::_Node *> : std::_Allocator_base<std::_List_nod<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> >::_Node *>
{
};

/* 1411 */
struct __cppobj std::_List_ptr<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> > : std::_List_nod<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> >
{
  std::allocator<std::_List_nod<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> >::_Node *> _Alptr;
};

/* 1412 */
struct __cppobj std::_Allocator_base<BS_CBattleRoom *>
{
};

/* 1413 */
struct __cppobj std::allocator<BS_CBattleRoom *> : std::_Allocator_base<BS_CBattleRoom *>
{
};

/* 1414 */
struct __cppobj std::_List_val<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> > : std::_List_ptr<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> >
{
  std::allocator<BS_CBattleRoom *> _Alval;
};

/* 1416 */
struct __cppobj std::list<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> > : std::_List_val<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> >
{
  std::_List_nod<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1417 */
struct __cppobj BS_RoomPoolImpl<BS_CBattleRoom> : BS_RoomPool
{
  int m_size;
  BS_CBattleRoom *m_room;
  std::list<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> > m_list;
  BS_CriticalSection m_lock;
};

/* 1415 */
struct std::_List_nod<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> >::_Node
{
  std::_List_nod<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> >::_Node *_Next;
  std::_List_nod<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> >::_Node *_Prev;
  BS_CBattleRoom *_Myval;
};

/* 1423 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,BS_CBattleRoom *,int,BS_CBattleRoom * const *,BS_CBattleRoom * const &>
{
};

/* 1424 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,XiTrackData::PvpTrafficSet>,int,std::pair<int const ,XiTrackData::PvpTrafficSet> const *,std::pair<int const ,XiTrackData::PvpTrafficSet> const &>
{
};

/* 1425 */
struct __cppobj std::iterator<std::random_access_iterator_tag,BS_SmartPtr<BS_Room>,int,BS_SmartPtr<BS_Room> const *,BS_SmartPtr<BS_Room> const &>
{
};

/* 1426 */
struct std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0>
{
  std::less<unsigned long> comp;
};

/* 1427 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> > : std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >::_Node> _Alnod;
};

/* 1428 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> > : std::_Allocator_base<std::pair<unsigned long const ,XiCsLevelDropGroup> >
{
};

/* 1429 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >::_Node *> _Alptr;
};

/* 1430 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Node *_Right;
  std::pair<int const ,ChaseTable::ChaseInfo> _Myval;
  char _Color;
  char _Isnil;
};

/* 1431 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Node *>
{
};

/* 1432 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiCBattleItemInfo,int,XiCBattleItemInfo const *,XiCBattleItemInfo const &>
{
};

/* 1433 */
struct std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0>
{
  std::less<unsigned long> comp;
};

/* 1434 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >::_Node>
{
};

/* 1435 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >::_Node>
{
};

/* 1436 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> > : std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >::_Node> _Alnod;
};

/* 1437 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,VEHICLE_INFO> _Myval;
  char _Color;
  char _Isnil;
};

/* 1438 */
struct VEHICLE_INFO::PLANE_SHADOW
{
  int car0;
  int car1;
};

/* 1439 */
struct VEHICLE_INFO
{
  int bModel;
  unsigned int dwID;
  int bSellable;
  int bCloseStage;
  int nAutoShopDisplayOrder;
  int bAeroSetType;
  XIVEHICLETYPE eVehicleType;
  unsigned __int16 szVehicleTypeDesc[32];
  unsigned __int16 szMaker[32];
  unsigned __int16 szName[32];
  unsigned __int16 szShortName[32];
  unsigned __int16 szFileName[32];
  unsigned __int16 szOldFileName[32];
  int nAccel;
  int nSpeed;
  int nCrash;
  int nBoost;
  int nReqLevel;
  XIVEHICLEGRADE_TYPE eVehicleGradeType;
  int nVehicleGradeLvl;
  float fLength;
  float fWidth;
  float fHeight;
  float fFrontLength;
  float fRearLength;
  float fRatio;
  float fWeight;
  char Color[4][2];
  float fWheelScale;
  int iWheelCount;
  int iRearWheelCount;
  int WheelID[10];
  unsigned __int16 tszTireGroupID[3];
  int nSpoiler;
  int nNumberPlate;
  int nSlotSpeed;
  int nSlotAccel;
  int nSlotCrash;
  int nSlotBoost;
  float fTurboWeakenFactor;
  float fNoSlipTime;
  float fJumpScale;
  float fMaxHeightDiff;
  float fCamBackAdd;
  float fCamHeightAdd;
  float fAccelation;
  float fDeAccelation;
  VEHICLE_INFO::PLANE_SHADOW shadow;
  int m_BodyIdx;
  unsigned int m_InstanceID;
  int bIsJumpCar;
};

/* 1440 */
struct std::pair<unsigned long const ,VEHICLE_INFO>
{
  const unsigned int first;
  VEHICLE_INFO second;
};

/* 1441 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,VEHICLE_INFO> >
{
};

/* 1442 */
struct __cppobj std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> > : std::_Allocator_base<std::pair<unsigned long const ,VEHICLE_INFO> >
{
};

/* 1443 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >::_Node *>
{
};

/* 1444 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >::_Node *>
{
};

/* 1445 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >::_Node *> _Alptr;
};

/* 1446 */
struct __cppobj std::_Allocator_base<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator>
{
};

/* 1447 */
struct __cppobj std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator> : std::_Allocator_base<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator>
{
};

/* 1448 */
struct std::_Vector_val<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator> >
{
  std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator> _Alval;
};

/* 1449 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >::_Node *>
{
};

/* 1450 */
struct __cppobj std::_Allocator_base<GradeStandard>
{
};

/* 1451 */
struct __cppobj std::allocator<XiStrDropLimit> : std::_Allocator_base<XiStrDropLimit>
{
};

/* 1452 */
struct __cppobj std::allocator<XiStrDropLimit>::rebind<XiStrDropLimit>
{
};

/* 1453 */
struct __cppobj std::iterator<std::random_access_iterator_tag,bool,int,bool *,bool>
{
};

/* 1454 */
struct __cppobj std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> >
{
};

/* 1455 */
struct __cppobj std::_Allocator_base<XiStrItemParam>
{
};

/* 1456 */
struct __cppobj std::iterator<std::random_access_iterator_tag,std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator,int,std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator const *,std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator const &>
{
};

/* 1457 */
struct __cppobj std::allocator<XiCsVSItem *>::rebind<XiCsVSItem *>
{
};

/* 1458 */
struct __cppobj std::_Allocator_base<XiCsInstant *>
{
};

/* 1459 */
struct TickHandler
{
  TickHandlerVtbl *vfptr;
};

/* 1460 */
struct TickHandlerVtbl
{
  bool (__thiscall *OnTick)(TickHandler *this, int);
};

/* 1461 */
struct __cppobj std::iterator<std::random_access_iterator_tag,TickHandler *,int,TickHandler * const *,TickHandler * const &>
{
};

/* 1462 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >
{
  std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> > _Alval;
};

/* 1463 */
struct __cppobj std::allocator<XiCsInstant *> : std::_Allocator_base<XiCsInstant *>
{
};

/* 1464 */
struct __cppobj std::allocator<XiCsInstant *>::rebind<XiCsInstant *>
{
};

/* 1465 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Node *>
{
};

/* 1466 */
struct __cppobj std::allocator<XiAuctionItem *>::rebind<XiAuctionItem *>
{
};

/* 1467 */
struct __cppobj std::allocator<std::_List_nod<XiDBOperation *,std::allocator<XiDBOperation *> >::_Node> : std::_Allocator_base<std::_List_nod<XiDBOperation *,std::allocator<XiDBOperation *> >::_Node>
{
};

/* 1468 */
struct std::_List_nod<XiDBOperation *,std::allocator<XiDBOperation *> >
{
  std::allocator<std::_List_nod<XiDBOperation *,std::allocator<XiDBOperation *> >::_Node> _Alnod;
};

/* 1469 */
struct __cppobj std::_List_ptr<XiDBOperation *,std::allocator<XiDBOperation *> > : std::_List_nod<XiDBOperation *,std::allocator<XiDBOperation *> >
{
  std::allocator<std::_List_nod<XiDBOperation *,std::allocator<XiDBOperation *> >::_Node *> _Alptr;
};

/* 1470 */
struct __cppobj std::allocator<XiDBOperation *> : std::_Allocator_base<XiDBOperation *>
{
};

/* 1471 */
struct std::_Vector_val<XiCsInstant *,std::allocator<XiCsInstant *> >
{
  std::allocator<XiCsInstant *> _Alval;
};

/* 1472 */
struct std::_Vector_val<XiStrDropLimit,std::allocator<XiStrDropLimit> >
{
  std::allocator<XiStrDropLimit> _Alval;
};

/* 1473 */
struct __cppobj std::_Allocator_base<std::pair<int const ,ChaseTable::ChaseInfo> >
{
};

/* 1474 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiBattleRecord,int,XiBattleRecord const *,XiBattleRecord const &>
{
};

/* 1475 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >::_Node *>
{
};

/* 1476 */
struct __cppobj std::less<std::pair<unsigned long,void (__cdecl*)(void)> > : std::binary_function<std::pair<unsigned long,void (__cdecl*)(void)>,std::pair<unsigned long,void (__cdecl*)(void)>,bool>
{
};

/* 1477 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > : std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> >
{
};

/* 1478 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> >::rebind<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> >
{
};

/* 1479 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> >::rebind<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::_Node>
{
};

/* 1480 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> >::rebind<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::_Node *>
{
};

/* 1481 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> >::rebind<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator>
{
};

/* 1482 */
struct __cppobj std::_Allocator_base<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::_Node *>
{
};

/* 1483 */
struct __cppobj std::allocator<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::_Node *> : std::_Allocator_base<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::_Node *>
{
};

/* 1484 */
struct __cppobj std::_Allocator_base<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
{
};

/* 1485 */
struct __cppobj std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > : std::_Allocator_base<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
{
};

/* 1486 */
struct __cppobj std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::rebind<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
{
};

/* 1487 */
struct __cppobj std::_Ranit<XiTrackGate,int,XiTrackGate const *,XiTrackGate const &> : std::iterator<std::random_access_iterator_tag,XiTrackGate,int,XiTrackGate const *,XiTrackGate const &>
{
};

/* 1488 */
struct __cppobj std::_Ranit<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator,int,std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator const *,std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator const &> : std::iterator<std::random_access_iterator_tag,std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator,int,std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator const *,std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator const &>
{
};

/* 1489 */
struct __cppobj std::allocator<XiCBattleItemInfo>::rebind<XiCBattleItemInfo>
{
};

/* 1490 */
struct __cppobj std::iterator<std::random_access_iterator_tag,AssistGroup *,int,AssistGroup * const *,AssistGroup * const &>
{
};

/* 1491 */
struct __cppobj std::_Ranit<AssistGroup *,int,AssistGroup * const *,AssistGroup * const &> : std::iterator<std::random_access_iterator_tag,AssistGroup *,int,AssistGroup * const *,AssistGroup * const &>
{
};

/* 1492 */
struct __cppobj std::vector<AssistGroup *,std::allocator<AssistGroup *> >::const_iterator : std::_Ranit<AssistGroup *,int,AssistGroup * const *,AssistGroup * const &>
{
  AssistGroup **_Myptr;
};

/* 1493 */
struct __cppobj std::vector<AssistGroup *,std::allocator<AssistGroup *> >::iterator : std::vector<AssistGroup *,std::allocator<AssistGroup *> >::const_iterator
{
};

/* 1494 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<__int64 const ,XiCsCharInfo *>,int,std::pair<__int64 const ,XiCsCharInfo *> const *,std::pair<__int64 const ,XiCsCharInfo *> const &>
{
};

/* 1495 */
struct __cppobj std::_Bidit<std::pair<__int64 const ,XiCsCharInfo *>,int,std::pair<__int64 const ,XiCsCharInfo *> const *,std::pair<__int64 const ,XiCsCharInfo *> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<__int64 const ,XiCsCharInfo *>,int,std::pair<__int64 const ,XiCsCharInfo *> const *,std::pair<__int64 const ,XiCsCharInfo *> const &>
{
};

/* 1496 */
struct __cppobj std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::const_iterator : std::_Bidit<std::pair<__int64 const ,XiCsCharInfo *>,int,std::pair<__int64 const ,XiCsCharInfo *> const *,std::pair<__int64 const ,XiCsCharInfo *> const &>
{
  std::_List_nod<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::_Node *_Ptr;
};

/* 1497 */
struct __cppobj std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator : std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::const_iterator
{
};

/* 1498 */
struct __cppobj std::_Allocator_base<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator>
{
};

/* 1499 */
struct __cppobj std::allocator<XiDBOperation *>::rebind<std::_List_nod<XiDBOperation *,std::allocator<XiDBOperation *> >::_Node>
{
};

/* 1500 */
struct __cppobj std::allocator<XiDBOperation *>::rebind<std::_List_nod<XiDBOperation *,std::allocator<XiDBOperation *> >::_Node *>
{
};

/* 1501 */
struct __cppobj std::allocator<XiDBOperation *>::rebind<XiDBOperation *>
{
};

/* 1502 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiCsItem *>,int,std::pair<unsigned long const ,XiCsItem *> const *,std::pair<unsigned long const ,XiCsItem *> const &>
{
};

/* 1503 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,XiCsItem *>,int,std::pair<unsigned long const ,XiCsItem *> const *,std::pair<unsigned long const ,XiCsItem *> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiCsItem *>,int,std::pair<unsigned long const ,XiCsItem *> const *,std::pair<unsigned long const ,XiCsItem *> const &>
{
};

/* 1504 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,XiCsItem *>,int,std::pair<unsigned long const ,XiCsItem *> const *,std::pair<unsigned long const ,XiCsItem *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >::_Node *_Ptr;
};

/* 1505 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >::const_iterator
{
};

/* 1506 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiTrackInfo,int,XiTrackInfo const *,XiTrackInfo const &>
{
};

/* 1507 */
struct __cppobj std::_Ranit<XiTrackInfo,int,XiTrackInfo const *,XiTrackInfo const &> : std::iterator<std::random_access_iterator_tag,XiTrackInfo,int,XiTrackInfo const *,XiTrackInfo const &>
{
};

/* 1508 */
struct __cppobj std::vector<XiTrackInfo,std::allocator<XiTrackInfo> >::const_iterator : std::_Ranit<XiTrackInfo,int,XiTrackInfo const *,XiTrackInfo const &>
{
  XiTrackInfo *_Myptr;
};

/* 1509 */
struct __cppobj std::vector<XiTrackInfo,std::allocator<XiTrackInfo> >::iterator : std::vector<XiTrackInfo,std::allocator<XiTrackInfo> >::const_iterator
{
};

/* 1510 */
struct std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0>
{
  std::less<unsigned long> comp;
};

/* 1511 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrAssist> > : std::_Allocator_base<std::pair<unsigned long const ,XiStrAssist> >
{
};

/* 1512 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> > : std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >::_Node> _Alnod;
};

/* 1513 */
struct __cppobj std::allocator<GradeStandard> : std::_Allocator_base<GradeStandard>
{
};

/* 1514 */
struct std::_Vector_val<GradeStandard,std::allocator<GradeStandard> >
{
  std::allocator<GradeStandard> _Alval;
};

/* 1515 */
struct exception
{
  exceptionVtbl *vfptr;
  const char *_m_what;
  int _m_doFree;
};

/* 1516 */
struct exceptionVtbl
{
  void *(__thiscall *__vecDelDtor)(exception *this, unsigned int);
  const char *(__thiscall *what)(exception *this);
};

/* 1517 */
struct __cppobj std::logic_error : exception
{
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Str;
};

/* 1518 */
struct __cppobj std::length_error : std::logic_error
{
};

/* 1519 */
struct __cppobj std::runtime_error : exception
{
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Str;
};

/* 1520 */
struct __cppobj std::binary_function<int,int,bool>
{
};

/* 1521 */
struct __cppobj std::less<int> : std::binary_function<int,int,bool>
{
};

/* 1522 */
struct std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0>
{
  std::less<int> comp;
};

/* 1523 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Node>
{
};

/* 1524 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Node>
{
};

/* 1525 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> > : std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Node> _Alnod;
};

/* 1526 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> > : std::_Tree_nod<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Node *> _Alptr;
};

/* 1527 */
struct __cppobj std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> > : std::_Allocator_base<std::pair<int const ,ChaseTable::ChaseInfo> >
{
};

/* 1528 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> > : std::_Tree_ptr<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >
{
  std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> > _Alval;
};

/* 1529 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> > : std::_Tree_val<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1530 */
struct __cppobj std::_Bidit<std::pair<int const ,ChaseTable::ChaseInfo>,int,std::pair<int const ,ChaseTable::ChaseInfo> const *,std::pair<int const ,ChaseTable::ChaseInfo> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,ChaseTable::ChaseInfo>,int,std::pair<int const ,ChaseTable::ChaseInfo> const *,std::pair<int const ,ChaseTable::ChaseInfo> const &>
{
};

/* 1531 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::const_iterator : std::_Bidit<std::pair<int const ,ChaseTable::ChaseInfo>,int,std::pair<int const ,ChaseTable::ChaseInfo> const *,std::pair<int const ,ChaseTable::ChaseInfo> const &>
{
  std::_Tree_nod<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Node *_Ptr;
};

/* 1532 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::iterator : std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::const_iterator
{
};

/* 1533 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,ChaseTable::ChaseInfo>,int,std::pair<int const ,ChaseTable::ChaseInfo> *,std::pair<int const ,ChaseTable::ChaseInfo> &>
{
};

/* 1534 */
struct __cppobj std::reverse_iterator<std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::iterator> : std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,ChaseTable::ChaseInfo>,int,std::pair<int const ,ChaseTable::ChaseInfo> *,std::pair<int const ,ChaseTable::ChaseInfo> &>
{
  std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::iterator current;
};

/* 1535 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::iterator first;
  bool second;
};

/* 1536 */
struct __cppobj std::iterator<std::random_access_iterator_tag,BS_ChatRoom *,int,BS_ChatRoom * const *,BS_ChatRoom * const &>
{
};

/* 1537 */
struct __cppobj std::_Ranit<BS_ChatRoom *,int,BS_ChatRoom * const *,BS_ChatRoom * const &> : std::iterator<std::random_access_iterator_tag,BS_ChatRoom *,int,BS_ChatRoom * const *,BS_ChatRoom * const &>
{
};

/* 1538 */
struct __cppobj std::vector<BS_ChatRoom *,std::allocator<BS_ChatRoom *> >::const_iterator : std::_Ranit<BS_ChatRoom *,int,BS_ChatRoom * const *,BS_ChatRoom * const &>
{
  BS_ChatRoom **_Myptr;
};

/* 1539 */
struct __cppobj std::vector<BS_ChatRoom *,std::allocator<BS_ChatRoom *> >::iterator : std::vector<BS_ChatRoom *,std::allocator<BS_ChatRoom *> >::const_iterator
{
};

/* 1540 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1541 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,DBOperStatic>,int,std::pair<unsigned long const ,DBOperStatic> const *,std::pair<unsigned long const ,DBOperStatic> const &>
{
};

/* 1542 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,DBOperStatic>,int,std::pair<unsigned long const ,DBOperStatic> const *,std::pair<unsigned long const ,DBOperStatic> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,DBOperStatic>,int,std::pair<unsigned long const ,DBOperStatic> const *,std::pair<unsigned long const ,DBOperStatic> const &>
{
};

/* 1543 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,DBOperStatic>,int,std::pair<unsigned long const ,DBOperStatic> const *,std::pair<unsigned long const ,DBOperStatic> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >::_Node *_Ptr;
};

/* 1544 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >::const_iterator
{
};

/* 1545 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >::iterator first;
  bool second;
};

/* 1546 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >
{
  std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> > _Alval;
};

/* 1547 */
struct __cppobj std::ctype_base : std::locale::facet
{
};

/* 1548 */
struct _Ctypevec
{
  unsigned int _Hand;
  unsigned int _Page;
  const __int16 *_Table;
  int _Delfl;
};

/* 1549 */
struct __cppobj std::ctype<char> : std::ctype_base
{
  _Ctypevec _Ctype;
};

/* 1550 */
struct std::locale::id
{
  unsigned int _Id;
};

/* 1551 */
struct std::_Lockit
{
  int _Locktype;
};

/* 1552 */
struct std::_Locinfo
{
  std::_Lockit _Lock;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Days;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Months;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Oldlocname;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Newlocname;
};

/* 1553 */
struct __cppobj std::vector<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator,std::allocator<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator> >::const_iterator : std::_Ranit<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator,int,std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator const *,std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator const &>
{
  std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator *_Myptr;
};

/* 1554 */
struct __cppobj std::vector<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator,std::allocator<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator> >::iterator : std::vector<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator,std::allocator<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator> >::const_iterator
{
};

/* 1555 */
struct __cppobj std::_Bidit<std::pair<int const ,XiTrackData::PvpTrafficSet>,int,std::pair<int const ,XiTrackData::PvpTrafficSet> const *,std::pair<int const ,XiTrackData::PvpTrafficSet> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,XiTrackData::PvpTrafficSet>,int,std::pair<int const ,XiTrackData::PvpTrafficSet> const *,std::pair<int const ,XiTrackData::PvpTrafficSet> const &>
{
};

/* 1556 */
struct __cppobj std::_Ranit<BS_GameDispatch *,int,BS_GameDispatch * const *,BS_GameDispatch * const &> : std::iterator<std::random_access_iterator_tag,BS_GameDispatch *,int,BS_GameDispatch * const *,BS_GameDispatch * const &>
{
};

/* 1557 */
struct __cppobj std::_Allocator_base<std::_List_nod<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::_Node *>
{
};

/* 1558 */
struct __cppobj std::allocator<void>
{
};

/* 1559 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,VEHICLE_INFO>,int,std::pair<unsigned long const ,VEHICLE_INFO> const *,std::pair<unsigned long const ,VEHICLE_INFO> const &>
{
};

/* 1560 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >::rebind<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >
{
};

/* 1561 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >::_Node>
{
};

/* 1562 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >::_Node *>
{
};

/* 1563 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >::rebind<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
{
};

/* 1564 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >::rebind<char>
{
};

/* 1565 */
struct __cppobj std::_Allocator_base<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::_Node>
{
};

/* 1566 */
struct __cppobj std::vector<std::pair<unsigned long,void (__cdecl*)(void)>,std::allocator<std::pair<unsigned long,void (__cdecl*)(void)> > > : std::_Vector_val<std::pair<unsigned long,void (__cdecl*)(void)>,std::allocator<std::pair<unsigned long,void (__cdecl*)(void)> > >
{
  std::pair<unsigned long,void (__cdecl*)(void)> *_Myfirst;
  std::pair<unsigned long,void (__cdecl*)(void)> *_Mylast;
  std::pair<unsigned long,void (__cdecl*)(void)> *_Myend;
};

/* 1567 */
struct __cppobj std::iterator<std::random_access_iterator_tag,std::pair<unsigned long,void (__cdecl*)(void)>,int,std::pair<unsigned long,void (__cdecl*)(void)> const *,std::pair<unsigned long,void (__cdecl*)(void)> const &>
{
};

/* 1568 */
struct __cppobj std::_Ranit<std::pair<unsigned long,void (__cdecl*)(void)>,int,std::pair<unsigned long,void (__cdecl*)(void)> const *,std::pair<unsigned long,void (__cdecl*)(void)> const &> : std::iterator<std::random_access_iterator_tag,std::pair<unsigned long,void (__cdecl*)(void)>,int,std::pair<unsigned long,void (__cdecl*)(void)> const *,std::pair<unsigned long,void (__cdecl*)(void)> const &>
{
};

/* 1569 */
struct __cppobj std::vector<std::pair<unsigned long,void (__cdecl*)(void)>,std::allocator<std::pair<unsigned long,void (__cdecl*)(void)> > >::const_iterator : std::_Ranit<std::pair<unsigned long,void (__cdecl*)(void)>,int,std::pair<unsigned long,void (__cdecl*)(void)> const *,std::pair<unsigned long,void (__cdecl*)(void)> const &>
{
  std::pair<unsigned long,void (__cdecl*)(void)> *_Myptr;
};

/* 1570 */
struct __cppobj std::vector<std::pair<unsigned long,void (__cdecl*)(void)>,std::allocator<std::pair<unsigned long,void (__cdecl*)(void)> > >::iterator : std::vector<std::pair<unsigned long,void (__cdecl*)(void)>,std::allocator<std::pair<unsigned long,void (__cdecl*)(void)> > >::const_iterator
{
};

/* 1571 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >::rebind<std::pair<unsigned long const ,XiCsVSItem *> >
{
};

/* 1572 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >::_Node>
{
};

/* 1573 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >::_Node *>
{
};

/* 1574 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >::rebind<unsigned long>
{
};

/* 1575 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >::rebind<char>
{
};

/* 1576 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> const &>
{
};

/* 1577 */
struct __cppobj std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> const &>
{
};

/* 1578 */
struct __cppobj std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::const_iterator : std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> const &>
{
  std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::_Node *_Ptr;
};

/* 1579 */
struct __cppobj std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator : std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::const_iterator
{
};

/* 1580 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,VEHICLE_INFO>,int,std::pair<unsigned long const ,VEHICLE_INFO> const *,std::pair<unsigned long const ,VEHICLE_INFO> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,VEHICLE_INFO>,int,std::pair<unsigned long const ,VEHICLE_INFO> const *,std::pair<unsigned long const ,VEHICLE_INFO> const &>
{
};

/* 1581 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,VEHICLE_INFO>,int,std::pair<unsigned long const ,VEHICLE_INFO> const *,std::pair<unsigned long const ,VEHICLE_INFO> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >::_Node *_Ptr;
};

/* 1582 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >::const_iterator
{
};

/* 1583 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >::iterator first;
  bool second;
};

/* 1584 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned int const ,BS_ChunkList *>,int,std::pair<unsigned int const ,BS_ChunkList *> const *,std::pair<unsigned int const ,BS_ChunkList *> const &>
{
};

/* 1585 */
struct __cppobj std::_Bidit<std::pair<unsigned int const ,BS_ChunkList *>,int,std::pair<unsigned int const ,BS_ChunkList *> const *,std::pair<unsigned int const ,BS_ChunkList *> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned int const ,BS_ChunkList *>,int,std::pair<unsigned int const ,BS_ChunkList *> const *,std::pair<unsigned int const ,BS_ChunkList *> const &>
{
};

/* 1586 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned int const ,BS_ChunkList *>,int,std::pair<unsigned int const ,BS_ChunkList *> const *,std::pair<unsigned int const ,BS_ChunkList *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >::_Node *_Ptr;
};

/* 1587 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >::const_iterator
{
};

/* 1588 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,XiCsItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsItem *> >,0> >::iterator first;
  bool second;
};

/* 1589 */
struct __cppobj std::allocator<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator> : std::_Allocator_base<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator>
{
};

/* 1590 */
struct __cppobj std::allocator<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator>::rebind<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator>
{
};

/* 1591 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,VEHICLEUPGRADE_INFO>,int,std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> const *,std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> const &>
{
};

/* 1592 */
struct __cppobj std::allocator<BS_CBattleRoom *>::rebind<std::_List_nod<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> >::_Node>
{
};

/* 1593 */
struct __cppobj std::allocator<BS_CBattleRoom *>::rebind<std::_List_nod<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> >::_Node *>
{
};

/* 1594 */
struct __cppobj std::allocator<BS_CBattleRoom *>::rebind<BS_CBattleRoom *>
{
};

/* 1595 */
struct __cppobj std::_Iosb<int>
{
};

/* 1596 */
struct __cppobj std::ios_base : std::_Iosb<int>
{
  std::ios_baseVtbl *vfptr;
  unsigned int _Stdstr;
  int _Mystate;
  int _Except;
  int _Fmtfl;
  int _Prec;
  int _Wide;
  std::ios_base::_Iosarray *_Arr;
  std::ios_base::_Fnarray *_Calls;
  std::locale *_Ploc;
};

/* 1597 */
struct std::ios_baseVtbl
{
  void *(__thiscall *__vecDelDtor)(std::ios_base *this, unsigned int);
};

/* 1598 */
struct std::ios_base::_Iosarray
{
  std::ios_base::_Iosarray *_Next;
  int _Index;
  int _Lo;
  void *_Vp;
};

/* 1599 */
struct std::ios_base::_Fnarray
{
  std::ios_base::_Fnarray *_Next;
  int _Index;
  void (__cdecl *_Pfn)(std::ios_base::event, std::ios_base *, int);
};

/* 1600 */
struct __cppobj __declspec(align(4)) std::basic_ios<unsigned short,std::char_traits<unsigned short> > : std::ios_base
{
  std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *_Mystrbuf;
  std::basic_ostream<unsigned short,std::char_traits<unsigned short> > *_Tiestr;
  unsigned __int16 _Fillch;
};

/* 1601 */
struct __declspec(align(4)) std::basic_istream<unsigned short,std::char_traits<unsigned short> >
{
  _BYTE gap0[4];
  int _Chcount;
  _BYTE gap8[52];
};

/* 1602 */
struct __cppobj std::iterator<std::input_iterator_tag,unsigned short,long,unsigned short *,unsigned short &>
{
};

/* 1603 */
struct __cppobj std::istreambuf_iterator<unsigned short,std::char_traits<unsigned short> > : std::iterator<std::input_iterator_tag,unsigned short,long,unsigned short *,unsigned short &>
{
  std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *_Strbuf;
  bool _Got;
  unsigned __int16 _Val;
};

/* 1604 */
struct _Cvtvec
{
  unsigned int _Hand;
  unsigned int _Page;
};

/* 1605 */
struct __cppobj std::ctype<unsigned short> : std::ctype_base
{
  _Ctypevec _Ctype;
  _Cvtvec _Cvt;
};

/* 1606 */
struct __cppobj std::num_get<unsigned short,std::istreambuf_iterator<unsigned short,std::char_traits<unsigned short> > > : std::locale::facet
{
  _Cvtvec _Cvt;
};

/* 1607 */
struct std::basic_istream<unsigned short,std::char_traits<unsigned short> >::_Sentry_base
{
  std::basic_istream<unsigned short,std::char_traits<unsigned short> > *_Myistr;
};

/* 1608 */
struct __cppobj __declspec(align(4)) std::basic_istream<unsigned short,std::char_traits<unsigned short> >::sentry : std::basic_istream<unsigned short,std::char_traits<unsigned short> >::_Sentry_base
{
  bool _Ok;
};

/* 1609 */
struct __cppobj std::_Allocator_base<std::_List_nod<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::_Node>
{
};

/* 1610 */
struct std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0>
{
  std::less<int> comp;
};

/* 1611 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >::_Node>
{
};

/* 1612 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >::_Node>
{
};

/* 1613 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> > : std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >::_Node> _Alnod;
};

/* 1614 */
struct __cppobj std::_Allocator_base<std::pair<int const ,XiTrackData::PvpTrafficSet> >
{
};

/* 1615 */
struct __cppobj std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> > : std::_Allocator_base<std::pair<int const ,XiTrackData::PvpTrafficSet> >
{
};

/* 1616 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> > : std::_Tree_nod<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >::_Node *> _Alptr;
};

/* 1617 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >
{
  std::allocator<std::pair<unsigned short const ,AssistGroup> > _Alval;
};

/* 1618 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >
{
  std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> > _Alval;
};

/* 1619 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1620 */
struct __cppobj std::map<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> > > : std::_Tree<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >
{
};

/* 1621 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO>,int,std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> const *,std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,VEHICLEUPGRADE_INFO>,int,std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> const *,std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> const &>
{
};

/* 1622 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO>,int,std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> const *,std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >::_Node *_Ptr;
};

/* 1623 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >::const_iterator
{
};

/* 1624 */
struct __cppobj std::_Ranit<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator,int,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator const *,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator const &> : std::iterator<std::random_access_iterator_tag,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator,int,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator const *,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator const &>
{
};

/* 1625 */
struct __cppobj std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator> >::const_iterator : std::_Ranit<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator,int,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator const *,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator const &>
{
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator *_Myptr;
};

/* 1626 */
struct __cppobj std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator> >::iterator : std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator> >::const_iterator
{
};

/* 1627 */
struct __cppobj std::iterator<std::random_access_iterator_tag,std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator,int,std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator const *,std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator const &>
{
};

/* 1628 */
struct __cppobj std::_Ranit<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator,int,std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator const *,std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator const &> : std::iterator<std::random_access_iterator_tag,std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator,int,std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator const *,std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator const &>
{
};

/* 1629 */
struct __cppobj std::vector<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator,std::allocator<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator> >::const_iterator : std::_Ranit<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator,int,std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator const *,std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator const &>
{
  std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator *_Myptr;
};

/* 1630 */
struct __cppobj std::vector<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator,std::allocator<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator> >::iterator : std::vector<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator,std::allocator<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator> >::const_iterator
{
};

/* 1631 */
struct __cppobj std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >::rebind<std::pair<unsigned int const ,BS_ChunkList *> >
{
};

/* 1632 */
struct __cppobj std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >::_Node>
{
};

/* 1633 */
struct __cppobj std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >::_Node *>
{
};

/* 1634 */
struct __cppobj std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >::rebind<unsigned int>
{
};

/* 1635 */
struct __cppobj std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >::rebind<char>
{
};

/* 1636 */
struct __cppobj std::iterator<std::random_access_iterator_tag,std::vector<unsigned int,std::allocator<unsigned int> >,int,std::vector<unsigned int,std::allocator<unsigned int> > const *,std::vector<unsigned int,std::allocator<unsigned int> > const &>
{
};

/* 1637 */
struct __cppobj std::_Ranit<std::vector<unsigned int,std::allocator<unsigned int> >,int,std::vector<unsigned int,std::allocator<unsigned int> > const *,std::vector<unsigned int,std::allocator<unsigned int> > const &> : std::iterator<std::random_access_iterator_tag,std::vector<unsigned int,std::allocator<unsigned int> >,int,std::vector<unsigned int,std::allocator<unsigned int> > const *,std::vector<unsigned int,std::allocator<unsigned int> > const &>
{
};

/* 1638 */
struct __cppobj std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::const_iterator : std::_Ranit<std::vector<unsigned int,std::allocator<unsigned int> >,int,std::vector<unsigned int,std::allocator<unsigned int> > const *,std::vector<unsigned int,std::allocator<unsigned int> > const &>
{
  std::vector<unsigned int,std::allocator<unsigned int> > *_Myptr;
};

/* 1639 */
struct __cppobj std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::iterator : std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::const_iterator
{
};

/* 1640 */
struct __cppobj std::iterator<std::random_access_iterator_tag,BS_Thread *,int,BS_Thread * const *,BS_Thread * const &>
{
};

/* 1641 */
struct __cppobj std::_Ranit<BS_Thread *,int,BS_Thread * const *,BS_Thread * const &> : std::iterator<std::random_access_iterator_tag,BS_Thread *,int,BS_Thread * const *,BS_Thread * const &>
{
};

/* 1642 */
struct __cppobj std::vector<BS_Thread *,std::allocator<BS_Thread *> >::const_iterator : std::_Ranit<BS_Thread *,int,BS_Thread * const *,BS_Thread * const &>
{
  BS_Thread **_Myptr;
};

/* 1643 */
struct __cppobj std::vector<BS_Thread *,std::allocator<BS_Thread *> >::iterator : std::vector<BS_Thread *,std::allocator<BS_Thread *> >::const_iterator
{
};

/* 1644 */
struct std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >
{
  std::allocator<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::_Node> _Alnod;
};

/* 1645 */
struct std::pair<bool,__int64>
{
  bool first;
  __int64 second;
};

/* 1646 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator first;
  bool second;
};

/* 1647 */
struct __cppobj std::allocator<char>::rebind<char>
{
};

/* 1648 */
struct __cppobj std::allocator<unsigned short (__cdecl*)(BS_PacketDispatch *,char *)>::rebind<unsigned short (__cdecl*)(BS_PacketDispatch *,char *)>
{
};

/* 1649 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >::rebind<std::pair<unsigned long const ,XiCsLevelDropGroup> >
{
};

/* 1650 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >::_Node>
{
};

/* 1651 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >::_Node *>
{
};

/* 1652 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >::rebind<unsigned long>
{
};

/* 1653 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >::rebind<char>
{
};

/* 1654 */
struct std::pair<unsigned long,VEHICLEUPGRADE_INFO>
{
  unsigned int first;
  VEHICLEUPGRADE_INFO second;
};

/* 1655 */
struct __cppobj std::iterator<std::random_access_iterator_tag,unsigned short,int,unsigned short const *,unsigned short const &>
{
};

/* 1656 */
struct __cppobj std::_Ranit<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator,int,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator const *,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator const &> : std::iterator<std::random_access_iterator_tag,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator,int,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator const *,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator const &>
{
};

/* 1657 */
struct __cppobj std::_Ranit<unsigned short (__cdecl*)(BS_PacketDispatch *,char *),int,unsigned short (__cdecl*const *)(BS_PacketDispatch *,char *),unsigned short (__cdecl*const &)(BS_PacketDispatch *,char *)> : std::iterator<std::random_access_iterator_tag,unsigned short (__cdecl*)(BS_PacketDispatch *,char *),int,unsigned short (__cdecl*const *)(BS_PacketDispatch *,char *),unsigned short (__cdecl*const &)(BS_PacketDispatch *,char *)>
{
};

/* 1658 */
struct __cppobj std::vector<unsigned short (__cdecl*)(BS_PacketDispatch *,char *),std::allocator<unsigned short (__cdecl*)(BS_PacketDispatch *,char *)> >::const_iterator : std::_Ranit<unsigned short (__cdecl*)(BS_PacketDispatch *,char *),int,unsigned short (__cdecl*const *)(BS_PacketDispatch *,char *),unsigned short (__cdecl*const &)(BS_PacketDispatch *,char *)>
{
  unsigned __int16 (__cdecl **_Myptr)(BS_PacketDispatch *, char *);
};

/* 1659 */
struct __cppobj std::vector<unsigned short (__cdecl*)(BS_PacketDispatch *,char *),std::allocator<unsigned short (__cdecl*)(BS_PacketDispatch *,char *)> >::iterator : std::vector<unsigned short (__cdecl*)(BS_PacketDispatch *,char *),std::allocator<unsigned short (__cdecl*)(BS_PacketDispatch *,char *)> >::const_iterator
{
};

/* 1660 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiAuctionCar *,int,XiAuctionCar * const *,XiAuctionCar * const &>
{
};

/* 1661 */
struct __cppobj std::_Ranit<XiAuctionCar *,int,XiAuctionCar * const *,XiAuctionCar * const &> : std::iterator<std::random_access_iterator_tag,XiAuctionCar *,int,XiAuctionCar * const *,XiAuctionCar * const &>
{
};

/* 1662 */
struct __cppobj std::vector<XiAuctionCar *,std::allocator<XiAuctionCar *> >::const_iterator : std::_Ranit<XiAuctionCar *,int,XiAuctionCar * const *,XiAuctionCar * const &>
{
  XiAuctionCar **_Myptr;
};

/* 1663 */
struct __cppobj std::vector<XiAuctionCar *,std::allocator<XiAuctionCar *> >::iterator : std::vector<XiAuctionCar *,std::allocator<XiAuctionCar *> >::const_iterator
{
};

/* 1664 */
struct __cppobj std::allocator<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::_Node> : std::_Allocator_base<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::_Node>
{
};

/* 1665 */
struct std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >
{
  std::allocator<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::_Node> _Alnod;
};

/* 1666 */
struct __cppobj std::_Allocator_base<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::_Node *>
{
};

/* 1667 */
struct __cppobj std::allocator<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::_Node *> : std::_Allocator_base<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::_Node *>
{
};

/* 1668 */
struct __cppobj std::_List_ptr<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > > : std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >
{
  std::allocator<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::_Node *> _Alptr;
};

/* 1669 */
struct __cppobj std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> >
{
};

/* 1670 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > : std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> >
{
};

/* 1671 */
struct __cppobj std::_List_val<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > > : std::_List_ptr<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >
{
  std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > _Alval;
};

/* 1672 */
struct __cppobj std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > > : std::_List_val<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >
{
  std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1673 */
struct __cppobj std::allocator<GradeStandard>::rebind<GradeStandard>
{
};

/* 1674 */
struct __cppobj std::allocator<long>::rebind<long>
{
};

/* 1675 */
struct std::basic_streambuf<char,std::char_traits<char> >
{
  std::basic_streambuf<char,std::char_traits<char> >Vtbl *vfptr;
  std::_Mutex _Mylock;
  char *_Gfirst;
  char *_Pfirst;
  char **_IGfirst;
  char **_IPfirst;
  char *_Gnext;
  char *_Pnext;
  char **_IGnext;
  char **_IPnext;
  int _Gcount;
  int _Pcount;
  int *_IGcount;
  int *_IPcount;
  std::locale *_Plocale;
};

/* 1676 */
struct std::basic_streambuf<char,std::char_traits<char> >Vtbl
{
  void *(__thiscall *__vecDelDtor)(std::basic_streambuf<char,std::char_traits<char> > *this, unsigned int);
  _BYTE gap4[4];
  int (__thiscall *pbackfail)(std::basic_streambuf<char,std::char_traits<char> > *this, int);
  int (__thiscall *showmanyc)(std::basic_streambuf<char,std::char_traits<char> > *this);
  int (__thiscall *underflow)(std::basic_streambuf<char,std::char_traits<char> > *this);
  int (__thiscall *uflow)(std::basic_streambuf<char,std::char_traits<char> > *this);
  int (__thiscall *xsgetn)(std::basic_streambuf<char,std::char_traits<char> > *this, char *, int);
  int (__thiscall *xsputn)(std::basic_streambuf<char,std::char_traits<char> > *this, const char *, int);
  std::fpos<int> *(__thiscall *seekoff)(std::basic_streambuf<char,std::char_traits<char> > *this, std::fpos<int> *result, int, int, int);
  std::fpos<int> *(__thiscall *seekpos)(std::basic_streambuf<char,std::char_traits<char> > *this, std::fpos<int> *result, std::fpos<int>, int);
  std::basic_streambuf<char,std::char_traits<char> > *(__thiscall *setbuf)(std::basic_streambuf<char,std::char_traits<char> > *this, char *, int);
  int (__thiscall *sync)(std::basic_streambuf<char,std::char_traits<char> > *this);
  void (__thiscall *imbue)(std::basic_streambuf<char,std::char_traits<char> > *this, std::locale *);
};

/* 1677 */
struct __cppobj std::basic_ostream<char,std::char_traits<char> >
{
  _BYTE gap0[56];
};

/* 1678 */
struct __cppobj __declspec(align(4)) std::basic_ios<char,std::char_traits<char> > : std::ios_base
{
  std::basic_streambuf<char,std::char_traits<char> > *_Mystrbuf;
  std::basic_ostream<char,std::char_traits<char> > *_Tiestr;
  char _Fillch;
};

/* 1679 */
struct __cppobj std::iterator<std::output_iterator_tag,void,void,void,void>
{
};

/* 1680 */
struct __cppobj std::_Outit : std::iterator<std::output_iterator_tag,void,void,void,void>
{
};

/* 1681 */
struct __cppobj std::ostreambuf_iterator<char,std::char_traits<char> > : std::_Outit
{
  bool _Failed;
  std::basic_streambuf<char,std::char_traits<char> > *_Strbuf;
};

/* 1682 */
struct __cppobj std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > : std::locale::facet
{
  _Cvtvec _Cvt;
};

/* 1683 */
struct std::basic_ostream<char,std::char_traits<char> >::_Sentry_base
{
  std::basic_ostream<char,std::char_traits<char> > *_Myostr;
};

/* 1684 */
struct __cppobj __declspec(align(4)) std::basic_ostream<char,std::char_traits<char> >::sentry : std::basic_ostream<char,std::char_traits<char> >::_Sentry_base
{
  bool _Ok;
};

/* 1685 */
struct __cppobj std::allocator<BS_Thread *>::rebind<BS_Thread *>
{
};

/* 1686 */
struct __cppobj std::iterator<std::random_access_iterator_tag,char,int,char const *,char const &>
{
};

/* 1687 */
struct __cppobj std::_Ranit<char,int,char const *,char const &> : std::iterator<std::random_access_iterator_tag,char,int,char const *,char const &>
{
};

/* 1688 */
struct __cppobj std::vector<char,std::allocator<char> >::const_iterator : std::_Ranit<char,int,char const *,char const &>
{
  char *_Myptr;
};

/* 1689 */
struct __cppobj std::vector<char,std::allocator<char> >::iterator : std::vector<char,std::allocator<char> >::const_iterator
{
};

/* 1690 */
struct __cppobj std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > >::rebind<std::vector<unsigned int,std::allocator<unsigned int> > >
{
};

/* 1691 */
struct std::_Vector_val<unsigned long,std::allocator<unsigned long> >
{
  std::allocator<unsigned long> _Alval;
};

/* 1692 */
struct __cppobj std::char_traits<char>
{
};

/* 1693 */
struct __cppobj std::map<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> > > : std::_Tree<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >
{
};

/* 1694 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >::iterator first;
  bool second;
};

/* 1695 */
struct __cppobj std::allocator<std::_List_nod<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::_Node> : std::_Allocator_base<std::_List_nod<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::_Node>
{
};

/* 1696 */
struct std::_List_nod<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >
{
  std::allocator<std::_List_nod<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::_Node> _Alnod;
};

/* 1697 */
struct __cppobj std::allocator<std::_List_nod<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::_Node *> : std::_Allocator_base<std::_List_nod<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::_Node *>
{
};

/* 1698 */
struct __cppobj std::_List_ptr<XiCsCharInfo *,std::allocator<XiCsCharInfo *> > : std::_List_nod<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >
{
  std::allocator<std::_List_nod<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::_Node *> _Alptr;
};

/* 1699 */
struct __cppobj std::_Allocator_base<XiCsCharInfo *>
{
};

/* 1700 */
struct __cppobj std::allocator<XiCsCharInfo *> : std::_Allocator_base<XiCsCharInfo *>
{
};

/* 1701 */
struct __cppobj std::_List_val<XiCsCharInfo *,std::allocator<XiCsCharInfo *> > : std::_List_ptr<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >
{
  std::allocator<XiCsCharInfo *> _Alval;
};

/* 1702 */
struct __cppobj std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> > : std::_List_val<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >
{
  std::_List_nod<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1703 */
struct __cppobj std::_Ranit<unsigned int,int,unsigned int const *,unsigned int const &> : std::iterator<std::random_access_iterator_tag,unsigned int,int,unsigned int const *,unsigned int const &>
{
};

/* 1704 */
struct __cppobj std::vector<unsigned int,std::allocator<unsigned int> >::const_iterator : std::_Ranit<unsigned int,int,unsigned int const *,unsigned int const &>
{
  unsigned int *_Myptr;
};

/* 1705 */
struct __cppobj std::vector<unsigned int,std::allocator<unsigned int> >::iterator : std::vector<unsigned int,std::allocator<unsigned int> >::const_iterator
{
};

/* 1706 */
struct std::pair<unsigned short const *,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>
{
  const wchar_t *first;
  std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator second;
};

/* 1707 */
struct __cppobj std::allocator<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator>::rebind<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator>
{
};

/* 1708 */
struct std::pair<unsigned long,VEHICLE_INFO>
{
  unsigned int first;
  VEHICLE_INFO second;
};

/* 1709 */
struct __cppobj std::allocator<BS_GameDispatch *>::rebind<BS_GameDispatch *>
{
};

/* 1710 */
struct __cppobj std::allocator<BS_GameDispatch *>::rebind<std::_Tree_nod<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::_Node>
{
};

/* 1711 */
struct __cppobj std::allocator<BS_GameDispatch *>::rebind<std::_Tree_nod<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::_Node *>
{
};

/* 1712 */
struct __cppobj std::allocator<BS_GameDispatch *>::rebind<char>
{
};

/* 1713 */
struct __cppobj std::allocator<BS_GameDispatch *>::rebind<std::_List_nod<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::_Node>
{
};

/* 1714 */
struct __cppobj std::allocator<BS_GameDispatch *>::rebind<std::_List_nod<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::_Node *>
{
};

/* 1715 */
struct __cppobj std::allocator<BS_GameDispatch *>::rebind<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator>
{
};

/* 1716 */
struct __cppobj std::_Ranit<BS_SmartPtr<BS_Room>,int,BS_SmartPtr<BS_Room> const *,BS_SmartPtr<BS_Room> const &> : std::iterator<std::random_access_iterator_tag,BS_SmartPtr<BS_Room>,int,BS_SmartPtr<BS_Room> const *,BS_SmartPtr<BS_Room> const &>
{
};

/* 1717 */
struct __cppobj std::vector<BS_SmartPtr<BS_Room>,std::allocator<BS_SmartPtr<BS_Room> > >::const_iterator : std::_Ranit<BS_SmartPtr<BS_Room>,int,BS_SmartPtr<BS_Room> const *,BS_SmartPtr<BS_Room> const &>
{
  BS_SmartPtr<BS_Room> *_Myptr;
};

/* 1718 */
struct __cppobj std::vector<BS_SmartPtr<BS_Room>,std::allocator<BS_SmartPtr<BS_Room> > >::iterator : std::vector<BS_SmartPtr<BS_Room>,std::allocator<BS_SmartPtr<BS_Room> > >::const_iterator
{
};

/* 1719 */
struct __cppobj std::invalid_argument : std::logic_error
{
};

/* 1720 */
struct __cppobj std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> const &>
{
};

/* 1721 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >::const_iterator : std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >::_Node *_Ptr;
};

/* 1722 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >::const_iterator
{
};

/* 1723 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >::iterator first;
  bool second;
};

/* 1724 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,ItemGroup,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,ItemGroup> >,0> >::iterator first;
  bool second;
};

/* 1725 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >::_Node *>
{
};

/* 1726 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >::_Node *> _Alptr;
};

/* 1727 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >
{
  std::allocator<std::pair<unsigned long const ,XiStrAssist> > _Alval;
};

/* 1728 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1729 */
struct __cppobj std::map<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> > > : std::_Tree<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >
{
};

/* 1730 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiStrAssist>,int,std::pair<unsigned long const ,XiStrAssist> const *,std::pair<unsigned long const ,XiStrAssist> const &>
{
};

/* 1731 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,XiStrAssist>,int,std::pair<unsigned long const ,XiStrAssist> const *,std::pair<unsigned long const ,XiStrAssist> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiStrAssist>,int,std::pair<unsigned long const ,XiStrAssist> const *,std::pair<unsigned long const ,XiStrAssist> const &>
{
};

/* 1732 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,XiStrAssist>,int,std::pair<unsigned long const ,XiStrAssist> const *,std::pair<unsigned long const ,XiStrAssist> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >::_Node *_Ptr;
};

/* 1733 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >::const_iterator
{
};

/* 1734 */
struct std::pair<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator,std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator>
{
  std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator first;
  std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator second;
};

/* 1735 */
struct __cppobj std::_Ranit<XiRankUnit,int,XiRankUnit const *,XiRankUnit const &> : std::iterator<std::random_access_iterator_tag,XiRankUnit,int,XiRankUnit const *,XiRankUnit const &>
{
};

/* 1736 */
struct __cppobj std::vector<XiRankUnit,std::allocator<XiRankUnit> >::const_iterator : std::_Ranit<XiRankUnit,int,XiRankUnit const *,XiRankUnit const &>
{
  XiRankUnit *_Myptr;
};

/* 1737 */
struct __cppobj std::vector<XiRankUnit,std::allocator<XiRankUnit> >::iterator : std::vector<XiRankUnit,std::allocator<XiRankUnit> >::const_iterator
{
};

/* 1738 */
struct __cppobj std::allocator<XiSticker>::rebind<XiSticker>
{
};

/* 1739 */
struct __cppobj std::_Ranit<unsigned short,int,unsigned short const *,unsigned short const &> : std::iterator<std::random_access_iterator_tag,unsigned short,int,unsigned short const *,unsigned short const &>
{
};

/* 1740 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1741 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned short const ,AssistGroup>,int,std::pair<unsigned short const ,AssistGroup> const *,std::pair<unsigned short const ,AssistGroup> const &>
{
};

/* 1742 */
struct __cppobj std::_Bidit<std::pair<unsigned short const ,AssistGroup>,int,std::pair<unsigned short const ,AssistGroup> const *,std::pair<unsigned short const ,AssistGroup> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned short const ,AssistGroup>,int,std::pair<unsigned short const ,AssistGroup> const *,std::pair<unsigned short const ,AssistGroup> const &>
{
};

/* 1743 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned short const ,AssistGroup>,int,std::pair<unsigned short const ,AssistGroup> const *,std::pair<unsigned short const ,AssistGroup> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >::_Node *_Ptr;
};

/* 1744 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >::const_iterator
{
};

/* 1745 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >::iterator first;
  bool second;
};

/* 1746 */
struct __cppobj std::allocator<std::pair<__int64 const ,XiCsCharInfo *> >::rebind<std::pair<__int64 const ,XiCsCharInfo *> >
{
};

/* 1747 */
struct __cppobj std::allocator<std::pair<__int64 const ,XiCsCharInfo *> >::rebind<std::_List_nod<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::_Node>
{
};

/* 1748 */
struct __cppobj std::allocator<std::pair<__int64 const ,XiCsCharInfo *> >::rebind<std::_List_nod<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::_Node *>
{
};

/* 1749 */
struct __cppobj std::allocator<std::pair<__int64 const ,XiCsCharInfo *> >::rebind<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator>
{
};

/* 1750 */
struct __cppobj std::allocator<int>::rebind<int>
{
};

/* 1751 */
struct __cppobj std::allocator<unsigned long>::rebind<unsigned long>
{
};

/* 1752 */
struct __cppobj std::_Tree<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::const_iterator : std::_Bidit<BS_GameDispatch *,int,BS_GameDispatch * const *,BS_GameDispatch * const &>
{
  std::_Tree_nod<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::_Node *_Ptr;
};

/* 1753 */
struct __cppobj std::_Tree<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::iterator : std::_Tree<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::const_iterator
{
};

/* 1754 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::iterator,bool>
{
  std::_Tree<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::iterator first;
  bool second;
};

/* 1755 */
struct std::pair<std::_Tree<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::iterator,std::_Tree<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::iterator>
{
  std::_Tree<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::iterator first;
  std::_Tree<std::_Tset_traits<BS_GameDispatch *,std::less<BS_GameDispatch *>,std::allocator<BS_GameDispatch *>,0> >::iterator second;
};

/* 1756 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiCsVSItem *>,int,std::pair<unsigned long const ,XiCsVSItem *> const *,std::pair<unsigned long const ,XiCsVSItem *> const &>
{
};

/* 1757 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,XiCsVSItem *>,int,std::pair<unsigned long const ,XiCsVSItem *> const *,std::pair<unsigned long const ,XiCsVSItem *> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiCsVSItem *>,int,std::pair<unsigned long const ,XiCsVSItem *> const *,std::pair<unsigned long const ,XiCsVSItem *> const &>
{
};

/* 1758 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,XiCsVSItem *>,int,std::pair<unsigned long const ,XiCsVSItem *> const *,std::pair<unsigned long const ,XiCsVSItem *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >::_Node *_Ptr;
};

/* 1759 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >::const_iterator
{
};

/* 1760 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,XiCsVSItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsVSItem *> >,0> >::iterator first;
  bool second;
};

/* 1761 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiStrAssist *,int,XiStrAssist * const *,XiStrAssist * const &>
{
};

/* 1762 */
struct __cppobj std::_Ranit<XiStrAssist *,int,XiStrAssist * const *,XiStrAssist * const &> : std::iterator<std::random_access_iterator_tag,XiStrAssist *,int,XiStrAssist * const *,XiStrAssist * const &>
{
};

/* 1763 */
struct __cppobj std::vector<XiStrAssist *,std::allocator<XiStrAssist *> >::const_iterator : std::_Ranit<XiStrAssist *,int,XiStrAssist * const *,XiStrAssist * const &>
{
  XiStrAssist **_Myptr;
};

/* 1764 */
struct __cppobj std::vector<XiStrAssist *,std::allocator<XiStrAssist *> >::iterator : std::vector<XiStrAssist *,std::allocator<XiStrAssist *> >::const_iterator
{
};

/* 1765 */
struct __cppobj std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator>::rebind<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator>
{
};

/* 1766 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiSticker,int,XiSticker const *,XiSticker const &>
{
};

/* 1767 */
struct __cppobj std::_Ranit<XiSticker,int,XiSticker const *,XiSticker const &> : std::iterator<std::random_access_iterator_tag,XiSticker,int,XiSticker const *,XiSticker const &>
{
};

/* 1768 */
struct __cppobj std::vector<XiSticker,std::allocator<XiSticker> >::const_iterator : std::_Ranit<XiSticker,int,XiSticker const *,XiSticker const &>
{
  XiSticker *_Myptr;
};

/* 1769 */
struct __cppobj std::vector<XiSticker,std::allocator<XiSticker> >::iterator : std::vector<XiSticker,std::allocator<XiSticker> >::const_iterator
{
};

/* 1770 */
struct __cppobj std::codecvt_base : std::locale::facet
{
};

/* 1771 */
struct __cppobj std::allocator<XiTrackGate>::rebind<XiTrackGate>
{
};

/* 1772 */
struct __cppobj std::_Bidit<BS_CBattleRoom *,int,BS_CBattleRoom * const *,BS_CBattleRoom * const &> : std::iterator<std::bidirectional_iterator_tag,BS_CBattleRoom *,int,BS_CBattleRoom * const *,BS_CBattleRoom * const &>
{
};

/* 1773 */
struct __cppobj std::list<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> >::const_iterator : std::_Bidit<BS_CBattleRoom *,int,BS_CBattleRoom * const *,BS_CBattleRoom * const &>
{
  std::_List_nod<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> >::_Node *_Ptr;
};

/* 1774 */
struct __cppobj std::list<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> >::iterator : std::list<BS_CBattleRoom *,std::allocator<BS_CBattleRoom *> >::const_iterator
{
};

/* 1775 */
struct __declspec(align(4)) std::pair<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator,bool>
{
  std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator first;
  bool second;
};

/* 1776 */
struct __cppobj std::vector<GradeStandard,std::allocator<GradeStandard> > : std::_Vector_val<GradeStandard,std::allocator<GradeStandard> >
{
  GradeStandard *_Myfirst;
  GradeStandard *_Mylast;
  GradeStandard *_Myend;
};

/* 1777 */
struct __cppobj std::iterator<std::random_access_iterator_tag,GradeStandard,int,GradeStandard const *,GradeStandard const &>
{
};

/* 1778 */
struct __cppobj std::_Ranit<GradeStandard,int,GradeStandard const *,GradeStandard const &> : std::iterator<std::random_access_iterator_tag,GradeStandard,int,GradeStandard const *,GradeStandard const &>
{
};

/* 1779 */
struct __cppobj std::vector<GradeStandard,std::allocator<GradeStandard> >::const_iterator : std::_Ranit<GradeStandard,int,GradeStandard const *,GradeStandard const &>
{
  GradeStandard *_Myptr;
};

/* 1780 */
struct __cppobj std::vector<GradeStandard,std::allocator<GradeStandard> >::iterator : std::vector<GradeStandard,std::allocator<GradeStandard> >::const_iterator
{
};

/* 1781 */
struct __cppobj std::allocator<XiStrItemParam> : std::_Allocator_base<XiStrItemParam>
{
};

/* 1782 */
struct std::_Vector_val<XiStrItemParam,std::allocator<XiStrItemParam> >
{
  std::allocator<XiStrItemParam> _Alval;
};

/* 1783 */
struct __cppobj std::vector<XiStrItemParam,std::allocator<XiStrItemParam> > : std::_Vector_val<XiStrItemParam,std::allocator<XiStrItemParam> >
{
  XiStrItemParam *_Myfirst;
  XiStrItemParam *_Mylast;
  XiStrItemParam *_Myend;
};

/* 1784 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiStrItemParam,int,XiStrItemParam const *,XiStrItemParam const &>
{
};

/* 1785 */
struct __cppobj std::_Ranit<XiStrItemParam,int,XiStrItemParam const *,XiStrItemParam const &> : std::iterator<std::random_access_iterator_tag,XiStrItemParam,int,XiStrItemParam const *,XiStrItemParam const &>
{
};

/* 1786 */
struct __cppobj std::vector<XiStrItemParam,std::allocator<XiStrItemParam> >::const_iterator : std::_Ranit<XiStrItemParam,int,XiStrItemParam const *,XiStrItemParam const &>
{
  XiStrItemParam *_Myptr;
};

/* 1787 */
struct __cppobj std::vector<XiStrItemParam,std::allocator<XiStrItemParam> >::iterator : std::vector<XiStrItemParam,std::allocator<XiStrItemParam> >::const_iterator
{
};

/* 1788 */
struct __declspec(align(4)) std::pair<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator,bool>
{
  std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator first;
  bool second;
};

/* 1789 */
struct __cppobj std::allocator<XiStrCarInfo>::rebind<XiStrCarInfo>
{
};

/* 1790 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >::const_iterator : std::_Bidit<std::pair<int const ,XiTrackData::PvpTrafficSet>,int,std::pair<int const ,XiTrackData::PvpTrafficSet> const *,std::pair<int const ,XiTrackData::PvpTrafficSet> const &>
{
  std::_Tree_nod<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >::_Node *_Ptr;
};

/* 1791 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >::iterator : std::_Tree<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >::const_iterator
{
};

/* 1792 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >::iterator first;
  bool second;
};

/* 1793 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiCsVSItem *,int,XiCsVSItem * const *,XiCsVSItem * const &>
{
};

/* 1794 */
struct __cppobj std::_Ranit<XiCsVSItem *,int,XiCsVSItem * const *,XiCsVSItem * const &> : std::iterator<std::random_access_iterator_tag,XiCsVSItem *,int,XiCsVSItem * const *,XiCsVSItem * const &>
{
};

/* 1795 */
struct __cppobj std::vector<XiCsVSItem *,std::allocator<XiCsVSItem *> >::const_iterator : std::_Ranit<XiCsVSItem *,int,XiCsVSItem * const *,XiCsVSItem * const &>
{
  XiCsVSItem **_Myptr;
};

/* 1796 */
struct __cppobj std::vector<XiCsVSItem *,std::allocator<XiCsVSItem *> >::iterator : std::vector<XiCsVSItem *,std::allocator<XiCsVSItem *> >::const_iterator
{
};

/* 1797 */
struct __cppobj std::underflow_error : std::runtime_error
{
};

/* 1798 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrAssist> >::rebind<std::pair<unsigned long const ,XiStrAssist> >
{
};

/* 1799 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrAssist> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >::_Node>
{
};

/* 1800 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrAssist> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >::_Node *>
{
};

/* 1801 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrAssist> >::rebind<unsigned long>
{
};

/* 1802 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrAssist> >::rebind<char>
{
};

/* 1803 */
struct __cppobj std::bad_exception : exception
{
};

/* 1804 */
struct __cppobj std::allocator<XiCsCharInfo *>::rebind<std::_List_nod<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::_Node>
{
};

/* 1805 */
struct __cppobj std::allocator<XiCsCharInfo *>::rebind<std::_List_nod<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::_Node *>
{
};

/* 1806 */
struct __cppobj std::allocator<XiCsCharInfo *>::rebind<XiCsCharInfo *>
{
};

/* 1807 */
struct __declspec(align(4)) std::pair<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator,bool>
{
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator first;
  bool second;
};

/* 1808 */
struct __cppobj std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator> > : std::_Vector_val<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator> >
{
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator *_Myfirst;
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator *_Mylast;
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator *_Myend;
};

/* 1809 */
struct __cppobj std::iterator<std::random_access_iterator_tag,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator,int,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator const *,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator const &>
{
};

/* 1810 */
struct __cppobj std::_Ranit<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator,int,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator const *,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator const &> : std::iterator<std::random_access_iterator_tag,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator,int,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator const *,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator const &>
{
};

/* 1811 */
struct __cppobj std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator> >::const_iterator : std::_Ranit<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator,int,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator const *,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator const &>
{
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator *_Myptr;
};

/* 1812 */
struct __cppobj std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator> >::iterator : std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator> >::const_iterator
{
};

/* 1813 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1814 */
struct __cppobj std::map<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> > > : std::_Tree<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >
{
};

/* 1815 */
struct __cppobj std::iterator<std::random_access_iterator_tag,BS_SmartPtr<XiCsTeam>,int,BS_SmartPtr<XiCsTeam> const *,BS_SmartPtr<XiCsTeam> const &>
{
};

/* 1816 */
struct __cppobj std::_Ranit<BS_SmartPtr<XiCsTeam>,int,BS_SmartPtr<XiCsTeam> const *,BS_SmartPtr<XiCsTeam> const &> : std::iterator<std::random_access_iterator_tag,BS_SmartPtr<XiCsTeam>,int,BS_SmartPtr<XiCsTeam> const *,BS_SmartPtr<XiCsTeam> const &>
{
};

/* 1817 */
struct __cppobj std::vector<BS_SmartPtr<XiCsTeam>,std::allocator<BS_SmartPtr<XiCsTeam> > >::const_iterator : std::_Ranit<BS_SmartPtr<XiCsTeam>,int,BS_SmartPtr<XiCsTeam> const *,BS_SmartPtr<XiCsTeam> const &>
{
  BS_SmartPtr<XiCsTeam> *_Myptr;
};

/* 1818 */
struct __cppobj std::vector<BS_SmartPtr<XiCsTeam>,std::allocator<BS_SmartPtr<XiCsTeam> > >::iterator : std::vector<BS_SmartPtr<XiCsTeam>,std::allocator<BS_SmartPtr<XiCsTeam> > >::const_iterator
{
};

/* 1819 */
struct __cppobj std::_Ranit<bool,int,bool *,bool> : std::iterator<std::random_access_iterator_tag,bool,int,bool *,bool>
{
};

/* 1820 */
struct __cppobj std::allocator<BS_SingleDispatch *>::rebind<std::_List_nod<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >::_Node>
{
};

/* 1821 */
struct __cppobj std::allocator<BS_SingleDispatch *>::rebind<std::_List_nod<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >::_Node *>
{
};

/* 1822 */
struct __cppobj std::allocator<BS_SingleDispatch *>::rebind<BS_SingleDispatch *>
{
};

/* 1823 */
struct __cppobj std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >::rebind<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >
{
};

/* 1824 */
struct __cppobj std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >::_Node>
{
};

/* 1825 */
struct __cppobj std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >,0> >::_Node *>
{
};

/* 1826 */
struct __cppobj std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >::rebind<unsigned long>
{
};

/* 1827 */
struct __cppobj std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> >::rebind<char>
{
};

/* 1828 */
struct __cppobj std::_List_ptr<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > > : std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >
{
  std::allocator<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::_Node *> _Alptr;
};

/* 1829 */
struct __cppobj std::allocator<XiStrVisualItemBuyUnit>::rebind<XiStrVisualItemBuyUnit>
{
};

/* 1830 */
struct __declspec(align(4)) std::basic_istream<char,std::char_traits<char> >
{
  _BYTE gap0[4];
  int _Chcount;
  _BYTE gap8[52];
};

/* 1831 */
struct __cppobj std::iterator<std::input_iterator_tag,char,long,char *,char &>
{
};

/* 1832 */
struct __cppobj __declspec(align(4)) std::istreambuf_iterator<char,std::char_traits<char> > : std::iterator<std::input_iterator_tag,char,long,char *,char &>
{
  std::basic_streambuf<char,std::char_traits<char> > *_Strbuf;
  bool _Got;
  char _Val;
};

/* 1833 */
struct __cppobj std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > > : std::locale::facet
{
  _Cvtvec _Cvt;
};

/* 1834 */
struct std::basic_istream<char,std::char_traits<char> >::_Sentry_base
{
  std::basic_istream<char,std::char_traits<char> > *_Myistr;
};

/* 1835 */
struct __cppobj __declspec(align(4)) std::basic_istream<char,std::char_traits<char> >::sentry : std::basic_istream<char,std::char_traits<char> >::_Sentry_base
{
  bool _Ok;
};

/* 1836 */
struct __cppobj std::iterator<std::random_access_iterator_tag,int,int,int const *,int const &>
{
};

/* 1837 */
struct __cppobj std::_Ranit<int,int,int const *,int const &> : std::iterator<std::random_access_iterator_tag,int,int,int const *,int const &>
{
};

/* 1838 */
struct __cppobj std::vector<int,std::allocator<int> >::const_iterator : std::_Ranit<int,int,int const *,int const &>
{
  int *_Myptr;
};

/* 1839 */
struct __cppobj std::vector<int,std::allocator<int> >::iterator : std::vector<int,std::allocator<int> >::const_iterator
{
};

/* 1840 */
struct __cppobj std::allocator<bool> : std::_Allocator_base<bool>
{
};

/* 1841 */
struct __cppobj std::allocator<bool>::rebind<unsigned int>
{
};

/* 1842 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiStrVisualItemBuyUnit,int,XiStrVisualItemBuyUnit const *,XiStrVisualItemBuyUnit const &>
{
};

/* 1843 */
struct __cppobj std::_Ranit<XiStrVisualItemBuyUnit,int,XiStrVisualItemBuyUnit const *,XiStrVisualItemBuyUnit const &> : std::iterator<std::random_access_iterator_tag,XiStrVisualItemBuyUnit,int,XiStrVisualItemBuyUnit const *,XiStrVisualItemBuyUnit const &>
{
};

/* 1844 */
struct __cppobj std::vector<XiStrVisualItemBuyUnit,std::allocator<XiStrVisualItemBuyUnit> >::const_iterator : std::_Ranit<XiStrVisualItemBuyUnit,int,XiStrVisualItemBuyUnit const *,XiStrVisualItemBuyUnit const &>
{
  XiStrVisualItemBuyUnit *_Myptr;
};

/* 1845 */
struct __cppobj std::vector<XiStrVisualItemBuyUnit,std::allocator<XiStrVisualItemBuyUnit> >::iterator : std::vector<XiStrVisualItemBuyUnit,std::allocator<XiStrVisualItemBuyUnit> >::const_iterator
{
};

/* 1846 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiStrVisualItemBuyUnit,int,XiStrVisualItemBuyUnit *,XiStrVisualItemBuyUnit &>
{
};

/* 1847 */
struct __cppobj std::reverse_iterator<std::vector<XiStrVisualItemBuyUnit,std::allocator<XiStrVisualItemBuyUnit> >::iterator> : std::iterator<std::random_access_iterator_tag,XiStrVisualItemBuyUnit,int,XiStrVisualItemBuyUnit *,XiStrVisualItemBuyUnit &>
{
  std::vector<XiStrVisualItemBuyUnit,std::allocator<XiStrVisualItemBuyUnit> >::iterator current;
};

/* 1848 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiStrItem *,int,XiStrItem * const *,XiStrItem * const &>
{
};

/* 1849 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiCouponParam>,int,std::pair<unsigned long const ,XiCouponParam> const *,std::pair<unsigned long const ,XiCouponParam> const &>
{
};

/* 1850 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,XiCouponParam>,int,std::pair<unsigned long const ,XiCouponParam> const *,std::pair<unsigned long const ,XiCouponParam> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiCouponParam>,int,std::pair<unsigned long const ,XiCouponParam> const *,std::pair<unsigned long const ,XiCouponParam> const &>
{
};

/* 1851 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,XiCouponParam>,int,std::pair<unsigned long const ,XiCouponParam> const *,std::pair<unsigned long const ,XiCouponParam> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >::_Node *_Ptr;
};

/* 1852 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >::const_iterator
{
};

/* 1853 */
struct __cppobj std::_Ranit<XiCBattleItemInfo,int,XiCBattleItemInfo const *,XiCBattleItemInfo const &> : std::iterator<std::random_access_iterator_tag,XiCBattleItemInfo,int,XiCBattleItemInfo const *,XiCBattleItemInfo const &>
{
};

/* 1854 */
struct __cppobj std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >::rebind<std::pair<int const ,XiTrackData::PvpTrafficSet> >
{
};

/* 1855 */
struct __cppobj std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >::_Node>
{
};

/* 1856 */
struct __cppobj std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >::_Node *>
{
};

/* 1857 */
struct __cppobj std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >::rebind<int>
{
};

/* 1858 */
struct __cppobj std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >::rebind<char>
{
};

/* 1859 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1860 */
struct __cppobj std::map<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> > > : std::_Tree<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >
{
};

/* 1861 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiCsLevelDropGroup>,int,std::pair<unsigned long const ,XiCsLevelDropGroup> const *,std::pair<unsigned long const ,XiCsLevelDropGroup> const &>
{
};

/* 1862 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,XiCsLevelDropGroup>,int,std::pair<unsigned long const ,XiCsLevelDropGroup> const *,std::pair<unsigned long const ,XiCsLevelDropGroup> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiCsLevelDropGroup>,int,std::pair<unsigned long const ,XiCsLevelDropGroup> const *,std::pair<unsigned long const ,XiCsLevelDropGroup> const &>
{
};

/* 1863 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,XiCsLevelDropGroup>,int,std::pair<unsigned long const ,XiCsLevelDropGroup> const *,std::pair<unsigned long const ,XiCsLevelDropGroup> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >::_Node *_Ptr;
};

/* 1864 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >::const_iterator
{
};

/* 1865 */
struct __cppobj std::vector<XiCsInstant *,std::allocator<XiCsInstant *> > : std::_Vector_val<XiCsInstant *,std::allocator<XiCsInstant *> >
{
  XiCsInstant **_Myfirst;
  XiCsInstant **_Mylast;
  XiCsInstant **_Myend;
};

/* 1866 */
struct __cppobj std::_Allocator_base<TickHandler *>
{
};

/* 1867 */
struct __cppobj std::allocator<TickHandler *> : std::_Allocator_base<TickHandler *>
{
};

/* 1868 */
struct std::_Vector_val<TickHandler *,std::allocator<TickHandler *> >
{
  std::allocator<TickHandler *> _Alval;
};

/* 1869 */
struct __cppobj std::vector<TickHandler *,std::allocator<TickHandler *> > : std::_Vector_val<TickHandler *,std::allocator<TickHandler *> >
{
  TickHandler **_Myfirst;
  TickHandler **_Mylast;
  TickHandler **_Myend;
};

/* 1870 */
struct __cppobj std::_Ranit<TickHandler *,int,TickHandler * const *,TickHandler * const &> : std::iterator<std::random_access_iterator_tag,TickHandler *,int,TickHandler * const *,TickHandler * const &>
{
};

/* 1871 */
struct __cppobj std::vector<TickHandler *,std::allocator<TickHandler *> >::const_iterator : std::_Ranit<TickHandler *,int,TickHandler * const *,TickHandler * const &>
{
  TickHandler **_Myptr;
};

/* 1872 */
struct __cppobj std::vector<TickHandler *,std::allocator<TickHandler *> >::iterator : std::vector<TickHandler *,std::allocator<TickHandler *> >::const_iterator
{
};

/* 1873 */
struct __cppobj std::codecvt<unsigned short,char,int> : std::codecvt_base
{
  _Cvtvec _Cvt;
};

/* 1874 */
struct std::_Vector_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
{
  std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > _Alval;
};

/* 1875 */
struct __cppobj std::vector<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > : std::_Vector_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > *_Myfirst;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > *_Mylast;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > *_Myend;
};

/* 1876 */
struct __cppobj std::_Ranit<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &> : std::iterator<std::random_access_iterator_tag,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &>
{
};

/* 1877 */
struct __cppobj std::vector<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::const_iterator : std::_Ranit<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &>
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > *_Myptr;
};

/* 1878 */
struct __cppobj std::vector<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::iterator : std::vector<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::const_iterator
{
};

/* 1879 */
struct std::pair<std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator,std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator>
{
  std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator first;
  std::list<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator second;
};

/* 1880 */
struct __declspec(align(4)) std::priority_queue<std::pair<unsigned long,void (__cdecl*)(void)>,std::vector<std::pair<unsigned long,void (__cdecl*)(void)>,std::allocator<std::pair<unsigned long,void (__cdecl*)(void)> > >,std::less<std::pair<unsigned long,void (__cdecl*)(void)> > >
{
  std::vector<std::pair<unsigned long,void (__cdecl*)(void)>,std::allocator<std::pair<unsigned long,void (__cdecl*)(void)> > > c;
  std::less<std::pair<unsigned long,void (__cdecl*)(void)> > comp;
};

/* 1881 */
struct __cppobj std::allocator<BS_SmartPtr<XiCsTeam> >::rebind<BS_SmartPtr<XiCsTeam> >
{
};

/* 1882 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiHuvInfo,int,XiHuvInfo const *,XiHuvInfo const &>
{
};

/* 1883 */
struct __declspec(align(4)) std::pair<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator,bool>
{
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator first;
  bool second;
};

/* 1884 */
struct __cppobj std::vector<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::const_iterator : std::_Ranit<BS_GameDispatch *,int,BS_GameDispatch * const *,BS_GameDispatch * const &>
{
  BS_GameDispatch **_Myptr;
};

/* 1885 */
struct __cppobj std::vector<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator : std::vector<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::const_iterator
{
};

/* 1886 */
struct __cppobj std::map<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> > > : std::_Tree<std::_Tmap_traits<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> >,0> >
{
};

/* 1887 */
struct __cppobj std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > > : std::_List_val<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >
{
  std::_List_nod<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1888 */
struct __cppobj std::_List_val<XiDBOperation *,std::allocator<XiDBOperation *> > : std::_List_ptr<XiDBOperation *,std::allocator<XiDBOperation *> >
{
  std::allocator<XiDBOperation *> _Alval;
};

/* 1889 */
struct __cppobj std::list<XiDBOperation *,std::allocator<XiDBOperation *> > : std::_List_val<XiDBOperation *,std::allocator<XiDBOperation *> >
{
  std::_List_nod<XiDBOperation *,std::allocator<XiDBOperation *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1890 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,XiDBOperation *,int,XiDBOperation * const *,XiDBOperation * const &>
{
};

/* 1891 */
struct __cppobj std::_Bidit<XiDBOperation *,int,XiDBOperation * const *,XiDBOperation * const &> : std::iterator<std::bidirectional_iterator_tag,XiDBOperation *,int,XiDBOperation * const *,XiDBOperation * const &>
{
};

/* 1892 */
struct __cppobj std::list<XiDBOperation *,std::allocator<XiDBOperation *> >::const_iterator : std::_Bidit<XiDBOperation *,int,XiDBOperation * const *,XiDBOperation * const &>
{
  std::_List_nod<XiDBOperation *,std::allocator<XiDBOperation *> >::_Node *_Ptr;
};

/* 1893 */
struct __cppobj std::list<XiDBOperation *,std::allocator<XiDBOperation *> >::iterator : std::list<XiDBOperation *,std::allocator<XiDBOperation *> >::const_iterator
{
};

/* 1894 */
struct __cppobj std::_Ranit<ChaseTable::HuvAttr,int,ChaseTable::HuvAttr const *,ChaseTable::HuvAttr const &> : std::iterator<std::random_access_iterator_tag,ChaseTable::HuvAttr,int,ChaseTable::HuvAttr const *,ChaseTable::HuvAttr const &>
{
};

/* 1895 */
struct __cppobj std::vector<bool,std::allocator<bool> >::_Vb_iter_base : std::_Ranit<bool,int,bool *,bool>
{
  unsigned int _Myoff;
  unsigned int *_Myptr;
};

/* 1896 */
struct __cppobj std::vector<bool,std::allocator<bool> >::reference : std::vector<bool,std::allocator<bool> >::_Vb_iter_base
{
};

/* 1897 */
struct __cppobj std::vector<bool,std::allocator<bool> >::const_iterator : std::vector<bool,std::allocator<bool> >::_Vb_iter_base
{
};

/* 1898 */
struct __cppobj std::vector<bool,std::allocator<bool> >::iterator : std::vector<bool,std::allocator<bool> >::const_iterator
{
};

/* 1899 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiCsCharInfo::InFriend,int,XiCsCharInfo::InFriend const *,XiCsCharInfo::InFriend const &>
{
};

/* 1900 */
struct __cppobj std::_Ranit<XiCsCharInfo::InFriend,int,XiCsCharInfo::InFriend const *,XiCsCharInfo::InFriend const &> : std::iterator<std::random_access_iterator_tag,XiCsCharInfo::InFriend,int,XiCsCharInfo::InFriend const *,XiCsCharInfo::InFriend const &>
{
};

/* 1901 */
struct __cppobj std::vector<XiCsCharInfo::InFriend,std::allocator<XiCsCharInfo::InFriend> >::const_iterator : std::_Ranit<XiCsCharInfo::InFriend,int,XiCsCharInfo::InFriend const *,XiCsCharInfo::InFriend const &>
{
  XiCsCharInfo::InFriend *_Myptr;
};

/* 1902 */
struct __cppobj std::vector<XiCsCharInfo::InFriend,std::allocator<XiCsCharInfo::InFriend> >::iterator : std::vector<XiCsCharInfo::InFriend,std::allocator<XiCsCharInfo::InFriend> >::const_iterator
{
};

/* 1903 */
struct __cppobj std::_Ranit<XiStrItem *,int,XiStrItem * const *,XiStrItem * const &> : std::iterator<std::random_access_iterator_tag,XiStrItem *,int,XiStrItem * const *,XiStrItem * const &>
{
};

/* 1904 */
struct __cppobj std::vector<XiStrItem *,std::allocator<XiStrItem *> >::const_iterator : std::_Ranit<XiStrItem *,int,XiStrItem * const *,XiStrItem * const &>
{
  XiStrItem **_Myptr;
};

/* 1905 */
struct __cppobj std::vector<XiStrItem *,std::allocator<XiStrItem *> >::iterator : std::vector<XiStrItem *,std::allocator<XiStrItem *> >::const_iterator
{
};

/* 1906 */
struct std::pair<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator>
{
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator first;
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator second;
};

/* 1907 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >::iterator first;
  bool second;
};

/* 1908 */
struct __cppobj std::_Allocator_base<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator>
{
};

/* 1909 */
struct __cppobj std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator> : std::_Allocator_base<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator>
{
};

/* 1910 */
struct __cppobj std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator>::rebind<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator>
{
};

/* 1911 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> const &>
{
};

/* 1912 */
struct __cppobj std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> const &>
{
};

/* 1913 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >::const_iterator : std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> const &>
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >::_Node *_Ptr;
};

/* 1914 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >::iterator : std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >::const_iterator
{
};

/* 1915 */
struct __cppobj std::allocator<BS_ChatRoom *>::rebind<BS_ChatRoom *>
{
};

/* 1916 */
struct __cppobj std::allocator<XiCsItemDropGroup>::rebind<XiCsItemDropGroup>
{
};

/* 1917 */
struct __cppobj std::allocator<XiStrMemberInfo>::rebind<XiStrMemberInfo>
{
};

/* 1918 */
struct __cppobj std::char_traits<unsigned short>
{
};

/* 1919 */
struct __cppobj std::_Ranit<XiHuvInfo,int,XiHuvInfo const *,XiHuvInfo const &> : std::iterator<std::random_access_iterator_tag,XiHuvInfo,int,XiHuvInfo const *,XiHuvInfo const &>
{
};

/* 1920 */
struct __cppobj std::_Ranit<XiStrCarInfo,int,XiStrCarInfo const *,XiStrCarInfo const &> : std::iterator<std::random_access_iterator_tag,XiStrCarInfo,int,XiStrCarInfo const *,XiStrCarInfo const &>
{
};

/* 1921 */
struct std::_Vector_val<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator,std::allocator<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator> >
{
  std::allocator<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator> _Alval;
};

/* 1922 */
struct __cppobj std::domain_error : std::logic_error
{
};

/* 1923 */
struct __cppobj std::allocator<XiCsCharInfo::InFriend>::rebind<XiCsCharInfo::InFriend>
{
};

/* 1924 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> const &>
{
};

/* 1925 */
struct __cppobj std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> const &>
{
};

/* 1926 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >::const_iterator : std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >::_Node *_Ptr;
};

/* 1927 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >::const_iterator
{
};

/* 1928 */
struct __cppobj std::allocator<std::pair<unsigned long const ,ItemGroup> >::rebind<std::pair<unsigned long const ,ItemGroup> >
{
};

/* 1929 */
struct __cppobj std::allocator<std::pair<unsigned long const ,ItemGroup> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >::_Node>
{
};

/* 1930 */
struct __cppobj std::allocator<std::pair<unsigned long const ,ItemGroup> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >::_Node *>
{
};

/* 1931 */
struct __cppobj std::allocator<std::pair<unsigned long const ,ItemGroup> >::rebind<unsigned long>
{
};

/* 1932 */
struct __cppobj std::allocator<std::pair<unsigned long const ,ItemGroup> >::rebind<char>
{
};

/* 1933 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >::rebind<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >
{
};

/* 1934 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >::_Node>
{
};

/* 1935 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >,0> >::_Node *>
{
};

/* 1936 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >::rebind<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
{
};

/* 1937 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CProperty *> >::rebind<char>
{
};

/* 1938 */
struct __cppobj std::vector<XiStrDropLimit,std::allocator<XiStrDropLimit> > : std::_Vector_val<XiStrDropLimit,std::allocator<XiStrDropLimit> >
{
  XiStrDropLimit *_Myfirst;
  XiStrDropLimit *_Mylast;
  XiStrDropLimit *_Myend;
};

/* 1939 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiStrDropLimit,int,XiStrDropLimit const *,XiStrDropLimit const &>
{
};

/* 1940 */
struct __cppobj std::_Ranit<XiStrDropLimit,int,XiStrDropLimit const *,XiStrDropLimit const &> : std::iterator<std::random_access_iterator_tag,XiStrDropLimit,int,XiStrDropLimit const *,XiStrDropLimit const &>
{
};

/* 1941 */
struct __cppobj std::vector<XiStrDropLimit,std::allocator<XiStrDropLimit> >::const_iterator : std::_Ranit<XiStrDropLimit,int,XiStrDropLimit const *,XiStrDropLimit const &>
{
  XiStrDropLimit *_Myptr;
};

/* 1942 */
struct __cppobj std::vector<XiStrDropLimit,std::allocator<XiStrDropLimit> >::iterator : std::vector<XiStrDropLimit,std::allocator<XiStrDropLimit> >::const_iterator
{
};

/* 1943 */
struct __cppobj std::allocator<AssistGroup *>::rebind<AssistGroup *>
{
};

/* 1944 */
struct __cppobj std::vector<unsigned long,std::allocator<unsigned long> > : std::_Vector_val<unsigned long,std::allocator<unsigned long> >
{
  unsigned int *_Myfirst;
  unsigned int *_Mylast;
  unsigned int *_Myend;
};

/* 1945 */
struct __cppobj std::iterator<std::random_access_iterator_tag,unsigned long,int,unsigned long const *,unsigned long const &>
{
};

/* 1946 */
struct __cppobj std::_Ranit<unsigned long,int,unsigned long const *,unsigned long const &> : std::iterator<std::random_access_iterator_tag,unsigned long,int,unsigned long const *,unsigned long const &>
{
};

/* 1947 */
struct __cppobj std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator : std::_Ranit<unsigned long,int,unsigned long const *,unsigned long const &>
{
  unsigned int *_Myptr;
};

/* 1948 */
struct __cppobj std::vector<unsigned long,std::allocator<unsigned long> >::iterator : std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator
{
};

/* 1949 */
struct __cppobj std::allocator<TickHandler *>::rebind<TickHandler *>
{
};

/* 1950 */
struct __cppobj std::overflow_error : std::runtime_error
{
};

/* 1951 */
struct __cppobj std::allocator<XiStrItem *>::rebind<XiStrItem *>
{
};

/* 1952 */
struct __cppobj std::allocator<char *>::rebind<std::_List_nod<char *,std::allocator<char *> >::_Node>
{
};

/* 1953 */
struct __cppobj std::allocator<char *>::rebind<std::_List_nod<char *,std::allocator<char *> >::_Node *>
{
};

/* 1954 */
struct __cppobj std::allocator<char *>::rebind<char *>
{
};

/* 1955 */
struct __cppobj std::vector<XiHuvInfo,std::allocator<XiHuvInfo> >::const_iterator : std::_Ranit<XiHuvInfo,int,XiHuvInfo const *,XiHuvInfo const &>
{
  XiHuvInfo *_Myptr;
};

/* 1956 */
struct __cppobj std::vector<XiHuvInfo,std::allocator<XiHuvInfo> >::iterator : std::vector<XiHuvInfo,std::allocator<XiHuvInfo> >::const_iterator
{
};

/* 1957 */
struct __cppobj std::range_error : std::runtime_error
{
};

/* 1958 */
struct __cppobj std::iterator<std::random_access_iterator_tag,long,int,long const *,long const &>
{
};

/* 1959 */
struct __cppobj std::_Ranit<long,int,long const *,long const &> : std::iterator<std::random_access_iterator_tag,long,int,long const *,long const &>
{
};

/* 1960 */
struct __cppobj std::vector<long,std::allocator<long> >::const_iterator : std::_Ranit<long,int,long const *,long const &>
{
  int *_Myptr;
};

/* 1961 */
struct __cppobj std::vector<long,std::allocator<long> >::iterator : std::vector<long,std::allocator<long> >::const_iterator
{
};

/* 1962 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >::rebind<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >
{
};

/* 1963 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >::_Node>
{
};

/* 1964 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >::_Node *>
{
};

/* 1965 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >::rebind<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
{
};

/* 1966 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >::rebind<char>
{
};

/* 1967 */
struct __cppobj std::iterator<std::random_access_iterator_tag,char *,int,char * const *,char * const &>
{
};

/* 1968 */
struct __cppobj std::_Ranit<char *,int,char * const *,char * const &> : std::iterator<std::random_access_iterator_tag,char *,int,char * const *,char * const &>
{
};

/* 1969 */
struct __cppobj std::vector<char *,std::allocator<char *> >::const_iterator : std::_Ranit<char *,int,char * const *,char * const &>
{
  char **_Myptr;
};

/* 1970 */
struct __cppobj std::vector<char *,std::allocator<char *> >::iterator : std::vector<char *,std::allocator<char *> >::const_iterator
{
};

/* 1971 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> >::rebind<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> >
{
};

/* 1972 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> >::rebind<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::_Node>
{
};

/* 1973 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> >::rebind<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::_Node *>
{
};

/* 1974 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> >::rebind<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator>
{
};

/* 1975 */
struct __cppobj std::allocator<XiStrItemParam>::rebind<XiStrItemParam>
{
};

/* 1976 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiCsQuest *>,int,std::pair<unsigned long const ,XiCsQuest *> const *,std::pair<unsigned long const ,XiCsQuest *> const &>
{
};

/* 1977 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,XiCsQuest *>,int,std::pair<unsigned long const ,XiCsQuest *> const *,std::pair<unsigned long const ,XiCsQuest *> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiCsQuest *>,int,std::pair<unsigned long const ,XiCsQuest *> const *,std::pair<unsigned long const ,XiCsQuest *> const &>
{
};

/* 1978 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,XiCsQuest *>,int,std::pair<unsigned long const ,XiCsQuest *> const *,std::pair<unsigned long const ,XiCsQuest *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >::_Node *_Ptr;
};

/* 1979 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >::const_iterator
{
};

/* 1980 */
struct std::_Vector_val<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator> >
{
  std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator> _Alval;
};

/* 1981 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> >,0> >::iterator first;
  bool second;
};

/* 1982 */
struct __cppobj std::vector<XiStrCarInfo,std::allocator<XiStrCarInfo> >::const_iterator : std::_Ranit<XiStrCarInfo,int,XiStrCarInfo const *,XiStrCarInfo const &>
{
  XiStrCarInfo *_Myptr;
};

/* 1983 */
struct __cppobj std::vector<XiStrCarInfo,std::allocator<XiStrCarInfo> >::iterator : std::vector<XiStrCarInfo,std::allocator<XiStrCarInfo> >::const_iterator
{
};

/* 1984 */
struct std::_Vector_val<unsigned short,std::allocator<unsigned short> >
{
  std::allocator<unsigned short> _Alval;
};

/* 1985 */
struct __cppobj std::vector<unsigned short,std::allocator<unsigned short> > : std::_Vector_val<unsigned short,std::allocator<unsigned short> >
{
  unsigned __int16 *_Myfirst;
  unsigned __int16 *_Mylast;
  unsigned __int16 *_Myend;
};

/* 1986 */
struct __cppobj std::vector<unsigned short,std::allocator<unsigned short> >::const_iterator : std::_Ranit<unsigned short,int,unsigned short const *,unsigned short const &>
{
  unsigned __int16 *_Myptr;
};

/* 1987 */
struct __cppobj std::vector<unsigned short,std::allocator<unsigned short> >::iterator : std::vector<unsigned short,std::allocator<unsigned short> >::const_iterator
{
};

/* 1988 */
struct __cppobj std::allocator<std::vector<int,std::allocator<int> > >::rebind<std::vector<int,std::allocator<int> > >
{
};

/* 1989 */
struct __cppobj std::allocator<XiCsSTItem *>::rebind<XiCsSTItem *>
{
};

/* 1990 */
struct _Collvec
{
  unsigned int _Hand;
  unsigned int _Page;
};

/* 1991 */
struct std::_Timevec
{
  void *_Timeptr;
};

/* 1992 */
struct lconv
{
  char *decimal_point;
  char *thousands_sep;
  char *grouping;
  char *int_curr_symbol;
  char *currency_symbol;
  char *mon_decimal_point;
  char *mon_thousands_sep;
  char *mon_grouping;
  char *positive_sign;
  char *negative_sign;
  char int_frac_digits;
  char frac_digits;
  char p_cs_precedes;
  char p_sep_by_space;
  char n_cs_precedes;
  char n_sep_by_space;
  char p_sign_posn;
  char n_sign_posn;
};

/* 1993 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiCsItem *,int,XiCsItem * const *,XiCsItem * const &>
{
};

/* 1994 */
struct __cppobj std::_Ranit<XiCsItem *,int,XiCsItem * const *,XiCsItem * const &> : std::iterator<std::random_access_iterator_tag,XiCsItem *,int,XiCsItem * const *,XiCsItem * const &>
{
};

/* 1995 */
struct __cppobj std::vector<XiCsItem *,std::allocator<XiCsItem *> >::const_iterator : std::_Ranit<XiCsItem *,int,XiCsItem * const *,XiCsItem * const &>
{
  XiCsItem **_Myptr;
};

/* 1996 */
struct __cppobj std::vector<XiCsItem *,std::allocator<XiCsItem *> >::iterator : std::vector<XiCsItem *,std::allocator<XiCsItem *> >::const_iterator
{
};

/* 1997 */
struct __cppobj std::allocator<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator>::rebind<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator>
{
};

/* 1998 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,ItemGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ItemGroup> >,0> >::iterator first;
  bool second;
};

/* 1999 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> const &>
{
};

/* 2000 */
struct __cppobj std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> const &>
{
};

/* 2001 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >::const_iterator : std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >::_Node *_Ptr;
};

/* 2002 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >::const_iterator
{
};

/* 2003 */
struct __cppobj std::iterator<std::random_access_iterator_tag,BS_ChunkList *,int,BS_ChunkList * const *,BS_ChunkList * const &>
{
};

/* 2004 */
struct __cppobj std::_Ranit<BS_ChunkList *,int,BS_ChunkList * const *,BS_ChunkList * const &> : std::iterator<std::random_access_iterator_tag,BS_ChunkList *,int,BS_ChunkList * const *,BS_ChunkList * const &>
{
};

/* 2005 */
struct __cppobj std::vector<BS_ChunkList *,std::allocator<BS_ChunkList *> >::const_iterator : std::_Ranit<BS_ChunkList *,int,BS_ChunkList * const *,BS_ChunkList * const &>
{
  BS_ChunkList **_Myptr;
};

/* 2006 */
struct __cppobj std::vector<BS_ChunkList *,std::allocator<BS_ChunkList *> >::iterator : std::vector<BS_ChunkList *,std::allocator<BS_ChunkList *> >::const_iterator
{
};

/* 2007 */
struct __cppobj std::vector<ChaseTable::HuvAttr,std::allocator<ChaseTable::HuvAttr> >::const_iterator : std::_Ranit<ChaseTable::HuvAttr,int,ChaseTable::HuvAttr const *,ChaseTable::HuvAttr const &>
{
  ChaseTable::HuvAttr *_Myptr;
};

/* 2008 */
struct __cppobj std::vector<ChaseTable::HuvAttr,std::allocator<ChaseTable::HuvAttr> >::iterator : std::vector<ChaseTable::HuvAttr,std::allocator<ChaseTable::HuvAttr> >::const_iterator
{
};

/* 2009 */
struct __cppobj std::allocator<XiHuvInfo>::rebind<XiHuvInfo>
{
};

/* 2010 */
struct __cppobj std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator> > : std::_Vector_val<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator> >
{
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator *_Myfirst;
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator *_Mylast;
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator *_Myend;
};

/* 2011 */
struct __cppobj std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator> >::const_iterator : std::_Ranit<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator,int,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator const *,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator const &>
{
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator *_Myptr;
};

/* 2012 */
struct __cppobj std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator> >::iterator : std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator> >::const_iterator
{
};

/* 2013 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >::rebind<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >
{
};

/* 2014 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >::_Node>
{
};

/* 2015 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >,0> >::_Node *>
{
};

/* 2016 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >::rebind<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
{
};

/* 2017 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> >::rebind<char>
{
};

/* 2018 */
struct __cppobj std::allocator<std::pair<__int64 const ,int> >::rebind<std::pair<__int64 const ,int> >
{
};

/* 2019 */
struct __cppobj std::allocator<std::pair<__int64 const ,int> >::rebind<std::_List_nod<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::_Node>
{
};

/* 2020 */
struct __cppobj std::allocator<std::pair<__int64 const ,int> >::rebind<std::_List_nod<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::_Node *>
{
};

/* 2021 */
struct __cppobj std::allocator<std::pair<__int64 const ,int> >::rebind<std::list<std::pair<__int64 const ,int>,std::allocator<std::pair<__int64 const ,int> > >::iterator>
{
};

/* 2022 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiCsItemDropGroup,int,XiCsItemDropGroup const *,XiCsItemDropGroup const &>
{
};

/* 2023 */
struct __cppobj std::_Ranit<XiCsItemDropGroup,int,XiCsItemDropGroup const *,XiCsItemDropGroup const &> : std::iterator<std::random_access_iterator_tag,XiCsItemDropGroup,int,XiCsItemDropGroup const *,XiCsItemDropGroup const &>
{
};

/* 2024 */
struct __cppobj std::vector<XiCsItemDropGroup,std::allocator<XiCsItemDropGroup> >::const_iterator : std::_Ranit<XiCsItemDropGroup,int,XiCsItemDropGroup const *,XiCsItemDropGroup const &>
{
  XiCsItemDropGroup *_Myptr;
};

/* 2025 */
struct __cppobj std::vector<XiCsItemDropGroup,std::allocator<XiCsItemDropGroup> >::iterator : std::vector<XiCsItemDropGroup,std::allocator<XiCsItemDropGroup> >::const_iterator
{
};

/* 2026 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsQuest *> >::rebind<std::pair<unsigned long const ,XiCsQuest *> >
{
};

/* 2027 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsQuest *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >::_Node>
{
};

/* 2028 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsQuest *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >::_Node *>
{
};

/* 2029 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsQuest *> >::rebind<unsigned long>
{
};

/* 2030 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCsQuest *> >::rebind<char>
{
};

/* 2031 */
struct __cppobj std::out_of_range : std::logic_error
{
};

/* 2032 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> > : std::_Tree_ptr<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >
{
  std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> > _Alval;
};

/* 2033 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> > : std::_Tree_val<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 2034 */
struct __cppobj std::_List_val<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > > : std::_List_ptr<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >
{
  std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > _Alval;
};

/* 2035 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >::iterator first;
  bool second;
};

/* 2036 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiStrCoupon,int,XiStrCoupon const *,XiStrCoupon const &>
{
};

/* 2037 */
struct __cppobj std::_Ranit<XiStrCoupon,int,XiStrCoupon const *,XiStrCoupon const &> : std::iterator<std::random_access_iterator_tag,XiStrCoupon,int,XiStrCoupon const *,XiStrCoupon const &>
{
};

/* 2038 */
struct __cppobj std::vector<XiStrCoupon,std::allocator<XiStrCoupon> >::const_iterator : std::_Ranit<XiStrCoupon,int,XiStrCoupon const *,XiStrCoupon const &>
{
  XiStrCoupon *_Myptr;
};

/* 2039 */
struct __cppobj std::vector<XiStrCoupon,std::allocator<XiStrCoupon> >::iterator : std::vector<XiStrCoupon,std::allocator<XiStrCoupon> >::const_iterator
{
};

/* 2040 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCouponParam> >::rebind<std::pair<unsigned long const ,XiCouponParam> >
{
};

/* 2041 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCouponParam> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >::_Node>
{
};

/* 2042 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCouponParam> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >::_Node *>
{
};

/* 2043 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCouponParam> >::rebind<unsigned long>
{
};

/* 2044 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCouponParam> >::rebind<char>
{
};

/* 2045 */
struct __cppobj std::allocator<unsigned short>::rebind<unsigned short>
{
};

/* 2046 */
struct __cppobj std::allocator<XiStrAssist *>::rebind<XiStrAssist *>
{
};

/* 2047 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >::rebind<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >
{
};

/* 2048 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >::_Node>
{
};

/* 2049 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >::_Node *>
{
};

/* 2050 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >::rebind<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
{
};

/* 2051 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >::rebind<char>
{
};

/* 2052 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,char *,int,char * const *,char * const &>
{
};

/* 2053 */
struct __cppobj std::_Bidit<char *,int,char * const *,char * const &> : std::iterator<std::bidirectional_iterator_tag,char *,int,char * const *,char * const &>
{
};

/* 2054 */
struct __cppobj std::list<char *,std::allocator<char *> >::const_iterator : std::_Bidit<char *,int,char * const *,char * const &>
{
  std::_List_nod<char *,std::allocator<char *> >::_Node *_Ptr;
};

/* 2055 */
struct __cppobj std::list<char *,std::allocator<char *> >::iterator : std::list<char *,std::allocator<char *> >::const_iterator
{
};

/* 2056 */
struct __cppobj std::allocator<XiBattleRecord>::rebind<XiBattleRecord>
{
};

/* 2057 */
struct __cppobj std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >::rebind<std::pair<int const ,ChaseTable::ChaseInfo> >
{
};

/* 2058 */
struct __cppobj std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Node>
{
};

/* 2059 */
struct __cppobj std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >::_Node *>
{
};

/* 2060 */
struct __cppobj std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >::rebind<int>
{
};

/* 2061 */
struct __cppobj std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >::rebind<char>
{
};

/* 2062 */
struct __cppobj std::allocator<BS_ChunkList *>::rebind<BS_ChunkList *>
{
};

/* 2063 */
struct __cppobj std::vector<XiCBattleItemInfo,std::allocator<XiCBattleItemInfo> >::const_iterator : std::_Ranit<XiCBattleItemInfo,int,XiCBattleItemInfo const *,XiCBattleItemInfo const &>
{
  XiCBattleItemInfo *_Myptr;
};

/* 2064 */
struct __cppobj std::vector<XiCBattleItemInfo,std::allocator<XiCBattleItemInfo> >::iterator : std::vector<XiCBattleItemInfo,std::allocator<XiCBattleItemInfo> >::const_iterator
{
};

/* 2065 */
struct __cppobj std::allocator<std::pair<unsigned long const ,DBOperStatic> >::rebind<std::pair<unsigned long const ,DBOperStatic> >
{
};

/* 2066 */
struct __cppobj std::allocator<std::pair<unsigned long const ,DBOperStatic> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >::_Node>
{
};

/* 2067 */
struct __cppobj std::allocator<std::pair<unsigned long const ,DBOperStatic> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> >,0> >::_Node *>
{
};

/* 2068 */
struct __cppobj std::allocator<std::pair<unsigned long const ,DBOperStatic> >::rebind<unsigned long>
{
};

/* 2069 */
struct __cppobj std::allocator<std::pair<unsigned long const ,DBOperStatic> >::rebind<char>
{
};

/* 2070 */
struct __cppobj std::map<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> > > : std::_Tree<std::_Tmap_traits<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> >,0> >
{
};

/* 2071 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrItem> >::rebind<std::pair<unsigned long const ,XiStrItem> >
{
};

/* 2072 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrItem> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >::_Node>
{
};

/* 2073 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrItem> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >::_Node *>
{
};

/* 2074 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrItem> >::rebind<unsigned long>
{
};

/* 2075 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrItem> >::rebind<char>
{
};

/* 2076 */
struct __cppobj std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > > : std::_List_val<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >
{
  std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 2077 */
struct __cppobj std::allocator<XiCsItem *>::rebind<XiCsItem *>
{
};

/* 2078 */
struct __cppobj std::allocator<BS_Actor *>::rebind<BS_Actor *>
{
};

/* 2079 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,XiCsQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsQuest *> >,0> >::iterator first;
  bool second;
};

/* 2080 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_CompletionHandlerMgr::BS_CompletionInfo,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_CompletionHandlerMgr::BS_CompletionInfo> >,0> >::iterator first;
  bool second;
};

/* 2081 */
struct __cppobj std::allocator<XiStrCoupon>::rebind<XiStrCoupon>
{
};

/* 2082 */
struct __cppobj std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >::const_iterator : std::_Ranit<unsigned short,int,unsigned short const *,unsigned short const &>
{
  const unsigned __int16 *_Myptr;
};

/* 2083 */
struct __cppobj std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >::iterator : std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >::const_iterator
{
};

/* 2084 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned int,BS_ChunkList *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,BS_ChunkList *> >,0> >::iterator first;
  bool second;
};

/* 2085 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,XiStrItem,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItem> >,0> >::iterator first;
  bool second;
};

/* 2086 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiAuctionItem *,int,XiAuctionItem * const *,XiAuctionItem * const &>
{
};

/* 2087 */
struct __cppobj std::_Ranit<XiAuctionItem *,int,XiAuctionItem * const *,XiAuctionItem * const &> : std::iterator<std::random_access_iterator_tag,XiAuctionItem *,int,XiAuctionItem * const *,XiAuctionItem * const &>
{
};

/* 2088 */
struct __cppobj std::vector<XiAuctionItem *,std::allocator<XiAuctionItem *> >::const_iterator : std::_Ranit<XiAuctionItem *,int,XiAuctionItem * const *,XiAuctionItem * const &>
{
  XiAuctionItem **_Myptr;
};

/* 2089 */
struct __cppobj std::vector<XiAuctionItem *,std::allocator<XiAuctionItem *> >::iterator : std::vector<XiAuctionItem *,std::allocator<XiAuctionItem *> >::const_iterator
{
};

/* 2090 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiCsSTItem *,int,XiCsSTItem * const *,XiCsSTItem * const &>
{
};

/* 2091 */
struct __cppobj std::_Ranit<XiCsSTItem *,int,XiCsSTItem * const *,XiCsSTItem * const &> : std::iterator<std::random_access_iterator_tag,XiCsSTItem *,int,XiCsSTItem * const *,XiCsSTItem * const &>
{
};

/* 2092 */
struct __cppobj std::vector<XiCsSTItem *,std::allocator<XiCsSTItem *> >::const_iterator : std::_Ranit<XiCsSTItem *,int,XiCsSTItem * const *,XiCsSTItem * const &>
{
  XiCsSTItem **_Myptr;
};

/* 2093 */
struct __cppobj std::vector<XiCsSTItem *,std::allocator<XiCsSTItem *> >::iterator : std::vector<XiCsSTItem *,std::allocator<XiCsSTItem *> >::const_iterator
{
};

/* 2094 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,BS_SingleDispatch *,int,BS_SingleDispatch * const *,BS_SingleDispatch * const &>
{
};

/* 2095 */
struct __cppobj std::_Bidit<BS_SingleDispatch *,int,BS_SingleDispatch * const *,BS_SingleDispatch * const &> : std::iterator<std::bidirectional_iterator_tag,BS_SingleDispatch *,int,BS_SingleDispatch * const *,BS_SingleDispatch * const &>
{
};

/* 2096 */
struct __cppobj std::list<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >::const_iterator : std::_Bidit<BS_SingleDispatch *,int,BS_SingleDispatch * const *,BS_SingleDispatch * const &>
{
  std::_List_nod<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >::_Node *_Ptr;
};

/* 2097 */
struct __cppobj std::list<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >::iterator : std::list<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >::const_iterator
{
};

/* 2098 */
struct __cppobj std::map<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> > > : std::_Tree<std::_Tmap_traits<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> >,0> >
{
};

/* 2099 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> >::rebind<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> >
{
};

/* 2100 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> >::rebind<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::_Node>
{
};

/* 2101 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> >::rebind<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::_Node *>
{
};

/* 2102 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> >::rebind<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator>
{
};

/* 2103 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >::rebind<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >
{
};

/* 2104 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >::_Node>
{
};

/* 2105 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_SessionContainer *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >,0> >::_Node *>
{
};

/* 2106 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >::rebind<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
{
};

/* 2107 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_SessionContainer *> >::rebind<char>
{
};

/* 2108 */
struct __cppobj std::allocator<unsigned int>::rebind<unsigned int>
{
};

/* 2109 */
struct __cppobj std::basic_string<char,std::char_traits<char>,std::allocator<char> >::const_iterator : std::_Ranit<char,int,char const *,char const &>
{
  const char *_Myptr;
};

/* 2110 */
struct __cppobj std::basic_string<char,std::char_traits<char>,std::allocator<char> >::iterator : std::basic_string<char,std::char_traits<char>,std::allocator<char> >::const_iterator
{
};

/* 2111 */
struct __cppobj std::iterator<std::random_access_iterator_tag,std::vector<int,std::allocator<int> >,int,std::vector<int,std::allocator<int> > const *,std::vector<int,std::allocator<int> > const &>
{
};

/* 2112 */
struct __cppobj std::_Ranit<std::vector<int,std::allocator<int> >,int,std::vector<int,std::allocator<int> > const *,std::vector<int,std::allocator<int> > const &> : std::iterator<std::random_access_iterator_tag,std::vector<int,std::allocator<int> >,int,std::vector<int,std::allocator<int> > const *,std::vector<int,std::allocator<int> > const &>
{
};

/* 2113 */
struct __cppobj std::vector<std::vector<int,std::allocator<int> >,std::allocator<std::vector<int,std::allocator<int> > > >::const_iterator : std::_Ranit<std::vector<int,std::allocator<int> >,int,std::vector<int,std::allocator<int> > const *,std::vector<int,std::allocator<int> > const &>
{
  std::vector<int,std::allocator<int> > *_Myptr;
};

/* 2114 */
struct __cppobj std::vector<std::vector<int,std::allocator<int> >,std::allocator<std::vector<int,std::allocator<int> > > >::iterator : std::vector<std::vector<int,std::allocator<int> >,std::allocator<std::vector<int,std::allocator<int> > > >::const_iterator
{
};

/* 2115 */
struct std::pair<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator>
{
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator first;
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator second;
};

/* 2116 */
struct __cppobj std::allocator<BS_SmartPtr<BS_Room> >::rebind<BS_SmartPtr<BS_Room> >
{
};

/* 2117 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,XiCouponParam,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParam> >,0> >::iterator first;
  bool second;
};

/* 2118 */
struct __cppobj std::_Ranit<XiBattleRecord,int,XiBattleRecord const *,XiBattleRecord const &> : std::iterator<std::random_access_iterator_tag,XiBattleRecord,int,XiBattleRecord const *,XiBattleRecord const &>
{
};

/* 2119 */
struct __cppobj std::bad_alloc : exception
{
};

/* 2120 */
struct __cppobj std::iterator<std::random_access_iterator_tag,BS_SingleDispatch *,int,BS_SingleDispatch * const *,BS_SingleDispatch * const &>
{
};

/* 2121 */
struct __cppobj std::_Ranit<BS_SingleDispatch *,int,BS_SingleDispatch * const *,BS_SingleDispatch * const &> : std::iterator<std::random_access_iterator_tag,BS_SingleDispatch *,int,BS_SingleDispatch * const *,BS_SingleDispatch * const &>
{
};

/* 2122 */
struct __cppobj std::vector<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >::const_iterator : std::_Ranit<BS_SingleDispatch *,int,BS_SingleDispatch * const *,BS_SingleDispatch * const &>
{
  BS_SingleDispatch **_Myptr;
};

/* 2123 */
struct __cppobj std::vector<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >::iterator : std::vector<BS_SingleDispatch *,std::allocator<BS_SingleDispatch *> >::const_iterator
{
};

/* 2124 */
struct __cppobj std::allocator<ChaseTable::HuvAttr>::rebind<ChaseTable::HuvAttr>
{
};

/* 2125 */
struct __cppobj std::_Nonscalar_ptr_iterator_tag
{
};

/* 2126 */
struct __cppobj std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator>::rebind<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,int> > >::iterator>
{
};

/* 2127 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_PacketAnalyze *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_PacketAnalyze *> >,0> >::iterator first;
  bool second;
};

/* 2128 */
struct __cppobj std::iterator<std::random_access_iterator_tag,BS_Actor *,int,BS_Actor * const *,BS_Actor * const &>
{
};

/* 2129 */
struct __cppobj std::_Ranit<BS_Actor *,int,BS_Actor * const *,BS_Actor * const &> : std::iterator<std::random_access_iterator_tag,BS_Actor *,int,BS_Actor * const *,BS_Actor * const &>
{
};

/* 2130 */
struct __cppobj std::vector<BS_Actor *,std::allocator<BS_Actor *> >::const_iterator : std::_Ranit<BS_Actor *,int,BS_Actor * const *,BS_Actor * const &>
{
  BS_Actor **_Myptr;
};

/* 2131 */
struct __cppobj std::vector<BS_Actor *,std::allocator<BS_Actor *> >::iterator : std::vector<BS_Actor *,std::allocator<BS_Actor *> >::const_iterator
{
};

/* 2132 */
struct __cppobj std::vector<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator,std::allocator<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator> > : std::_Vector_val<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator,std::allocator<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator> >
{
  std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator *_Myfirst;
  std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator *_Mylast;
  std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator *_Myend;
};

/* 2133 */
struct __cppobj std::iterator<std::random_access_iterator_tag,std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator,int,std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator const *,std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator const &>
{
};

/* 2134 */
struct __cppobj std::_Ranit<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator,int,std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator const *,std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator const &> : std::iterator<std::random_access_iterator_tag,std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator,int,std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator const *,std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator const &>
{
};

/* 2135 */
struct __cppobj std::vector<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator,std::allocator<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator> >::const_iterator : std::_Ranit<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator,int,std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator const *,std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator const &>
{
  std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator *_Myptr;
};

/* 2136 */
struct __cppobj std::vector<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator,std::allocator<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator> >::iterator : std::vector<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator,std::allocator<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator> >::const_iterator
{
};

/* 2137 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> >,0> >::iterator first;
  bool second;
};

/* 2138 */
struct __cppobj std::ios_base::failure : std::runtime_error
{
};

/* 2139 */
struct __cppobj std::ios_base::Init
{
};

/* 2140 */
struct __cppobj std::ostreambuf_iterator<unsigned short,std::char_traits<unsigned short> > : std::_Outit
{
  bool _Failed;
  std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *_Strbuf;
};

/* 2141 */
struct __cppobj std::num_put<unsigned short,std::ostreambuf_iterator<unsigned short,std::char_traits<unsigned short> > > : std::locale::facet
{
  _Cvtvec _Cvt;
};

/* 2142 */
struct std::basic_ostream<unsigned short,std::char_traits<unsigned short> >::_Sentry_base
{
  std::basic_ostream<unsigned short,std::char_traits<unsigned short> > *_Myostr;
};

/* 2143 */
struct __cppobj __declspec(align(4)) std::basic_ostream<unsigned short,std::char_traits<unsigned short> >::sentry : std::basic_ostream<unsigned short,std::char_traits<unsigned short> >::_Sentry_base
{
  bool _Ok;
};

/* 2144 */
struct __cppobj std::allocator<XiRankUnit>::rebind<XiRankUnit>
{
};

/* 2145 */
struct __cppobj std::allocator<XiTrackInfo>::rebind<XiTrackInfo>
{
};

/* 2146 */
struct __cppobj std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >::rebind<std::pair<unsigned long const ,VEHICLE_INFO> >
{
};

/* 2147 */
struct __cppobj std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >::_Node>
{
};

/* 2148 */
struct __cppobj std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >,0> >::_Node *>
{
};

/* 2149 */
struct __cppobj std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >::rebind<unsigned long>
{
};

/* 2150 */
struct __cppobj std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> >::rebind<char>
{
};

/* 2151 */
struct __cppobj std::_Scalar_ptr_iterator_tag
{
};

/* 2152 */
struct __cppobj std::vector<XiTrackGate,std::allocator<XiTrackGate> >::const_iterator : std::_Ranit<XiTrackGate,int,XiTrackGate const *,XiTrackGate const &>
{
  XiTrackGate *_Myptr;
};

/* 2153 */
struct __cppobj std::vector<XiTrackGate,std::allocator<XiTrackGate> >::iterator : std::vector<XiTrackGate,std::allocator<XiTrackGate> >::const_iterator
{
};

/* 2154 */
struct __cppobj std::vector<XiBattleRecord,std::allocator<XiBattleRecord> >::const_iterator : std::_Ranit<XiBattleRecord,int,XiBattleRecord const *,XiBattleRecord const &>
{
  XiBattleRecord *_Myptr;
};

/* 2155 */
struct __cppobj std::vector<XiBattleRecord,std::allocator<XiBattleRecord> >::iterator : std::vector<XiBattleRecord,std::allocator<XiBattleRecord> >::const_iterator
{
};

/* 2156 */
struct __unaligned __declspec(align(1)) DefQuerySKIDInsertLog
{
  char szName[21];
  int nKey;
  int nServerId;
  __int64 nCid;
  char szCName[33];
  int nArg1;
  int nArg2;
  int nArg3;
  char szText[65];
};

/* 2157 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktDelegateTeamMasterAck : BS_PktBody
{
  int m_Ret;
  __int64 m_TeamId;
  __int64 m_Cid;
};

/* 2158 */
struct XiStrFuelChargeRes
{
  unsigned int CarId;
  __unaligned __declspec(align(1)) __int64 Pay;
  float DeltaFuel;
  __int64 Gold;
  float Fuel;
  float UnitPrice;
  float SaleUnitPrice;
  float FuelCapacity;
  float FuelEfficiency;
  int SaleFlag;
};

/* 2159 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktRushMemberCnt : BS_PktBody
{
  unsigned int m_RushMemberCnt;
};

/* 2160 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktRegisterRoomObserverAck : BS_PktBody
{
  int m_Result;
  unsigned int m_PvpChannelId;
  XiPvpRoomFilter m_RoomFilter;
  unsigned int m_Page;
  unsigned int m_RealMatchEnable;
  unsigned int m_RealMatchTime;
};

/* 2161 */
struct __cppobj BS_PktRoomLeave : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int m_Serial;
  XiPvpRoomSlot m_Slot;
  __int16 m_RoomType;
};

/* 2162 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGetCBattleTimeAck : BS_PktBody
{
  int nAct;
  unsigned int nBattleTime;
};

/* 2163 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateCarInfo
{
  float fMitron;
  float fKm;
  float fConsume;
  int nServerId;
  __int64 nCid;
  int nCarId;
};

/* 2164 */
struct __unaligned __declspec(align(2)) DefQuerySKIDUpdateCharInfo
{
  int nLevel;
  int nExp;
  float fKM;
  int nPlayTime;
  int nArea;
  float fLastX;
  float fLastY;
  float fLastZ;
  float fLastW;
  int nCityId;
  int nPosState;
  char szQuickSlot1[33];
  char szQuickSlot2[33];
  int nServerId;
  __int64 nCid;
};

/* 2165 */
struct __cppobj __declspec(align(4)) XiUpdateCharInfoDB : XiDBOperation
{
  DefQuerySKIDUpdateCharInfo param;
};

/* 2166 */
struct __cppobj BS_SingletonHeap<BS_SingletonHeapLifeMgr,0>
{
};

/* 2167 */
struct __cppobj BS_SingletonHeapLifeMgr : BS_SingletonHeap<BS_SingletonHeapLifeMgr,0>
{
  std::priority_queue<std::pair<unsigned long,void (__cdecl*)(void)>,std::vector<std::pair<unsigned long,void (__cdecl*)(void)>,std::allocator<std::pair<unsigned long,void (__cdecl*)(void)> > >,std::less<std::pair<unsigned long,void (__cdecl*)(void)> > > m_SingletonQueue;
};

/* 2168 */
struct __cppobj BS_PktAreaList : BS_PktBody
{
};

/* 2169 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktReportHack : BS_PktBody
{
  unsigned int Serial;
  unsigned int Value;
};

/* 2170 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktLapTimeLoad : BS_PktBody
{
  int m_MapId;
  int m_AreaId;
};

/* 2171 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktItemUnionAck : BS_PktBody
{
  unsigned int DestInvenIdx;
  unsigned int SrcInvenIdx;
};

/* 2172 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktLeaveAreaAck : BS_PktBody
{
  int m_Result;
  __int16 m_MsgLen;
  wchar_t m_Msg[1];
};

/* 2173 */
struct __cppobj __unaligned __declspec(align(4)) BS_PktCBattleGetSettingAck : BS_PktBody
{
  int m_Act;
  int m_Channel;
  unsigned int m_OpenTime;
  unsigned int m_BattleTime;
  unsigned int m_EndTime;
  __int64 m_LeaderCid;
  XiStrCharName m_LeaderCName;
  __int64 m_OwnerCid;
  XiStrCharName m_OwnerCName;
  __int64 m_OwnerTeamId;
  XiStrTeamName m_OwnerTeamName;
  XiBattleRaceSetting m_raceSet[3];
};

/* 2174 */
struct __unaligned __declspec(align(1)) DefQuerySKIDResetPlayMode
{
  int nTryCnt;
  int nWinCnt;
  int nPoint;
  int nBestCnt;
  int nRetireCnt;
  int nServerId;
  __int64 nCid;
  char szMode[33];
};

/* 2175 */
struct XiSticker::Is
{
  __int64 sid;
};

/* 2176 */
struct XiStrFuelChargeReq
{
  unsigned int CarId;
  __unaligned __declspec(align(1)) __int64 Pay;
  float Fuel;
};

/* 2177 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktFuelChargeReq : BS_PktBody
{
  XiStrFuelChargeReq req;
};

/* 2178 */
struct __cppobj __unaligned __declspec(align(4)) BS_PktCBattleSet : BS_PktBody
{
  int m_Channel;
  unsigned int m_OpenTime;
  unsigned int m_BattleTime;
  unsigned int m_EndTime;
  __int64 m_LeaderCid;
  wchar_t m_LeaderCName[13];
  XiBattleRaceSetting m_raceSet[3];
};

/* 2179 */
struct XiPartyMemName
{
  unsigned int Num;
  XiStrCharName CharName[4];
};

/* 2180 */
struct __cppobj BS_PktGameCharInfoEx : BS_PktBody
{
  XiStrCharName Name;
};

/* 2181 */
struct XiStrIData
{
  unsigned int InvenIdx;
  char iData[32];
};

/* 2182 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktItemDataList : BS_PktBody
{
  unsigned int ItemNum;
  XiStrIData m_itemData[1];
};

/* 2183 */
struct __unaligned __declspec(align(4)) DefQuerySKIDInsertPlayLog
{
  int nServerId;
  __int64 nCid;
  char szCName[33];
  char szMemberID[33];
  int nMPlayTime;
  int nCPlayTime;
  __int64 nMoney;
  int nExp;
  int nLevel;
  int nCarId;
  int nCarType;
  int nCarGrade;
  int nSP;
  int nAC;
  __int64 nCP;
  int nBT;
  int nEQUIP;
  int nDeltaExp;
  int nDeltaLevel;
  __int64 nDeltaMoney;
  char szPlayMode[21];
  int nParam1;
  int nParam2;
  char szParam[33];
  float fRecord;
};

/* 2184 */
struct __cppobj XiInsertPlayLog : XiDBOperation
{
  DefQuerySKIDInsertPlayLog param;
};

/* 2185 */
struct __unaligned __declspec(align(2)) DefQuerySKIDInsertRecommendFriend
{
  __int64 nCid;
  int nServerId;
  char szCName[33];
  __int64 nFriendCid;
  int nFriendServerId;
  char szFriendCName[33];
};

/* 2186 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktPvpReadyState : BS_PktBody
{
  unsigned int m_Serial;
  bool m_bReady;
};

/* 2187 */
struct __unaligned __declspec(align(1)) DefQuerySKIDArbeitRankUpdate
{
  int nTime;
  __int64 nTId;
  char szTeamName[17];
  int nServerId;
  __int64 nCid;
  int nAid;
};

/* 2188 */
struct XiCBattleItemInfo::CidIs
{
  __int64 m_cid;
};

/* 2189 */
struct XiCBattleItemInfo::GidIs
{
  __int64 m_gid;
};

/* 2190 */
struct DefQuerySKIDInsertChannel
{
  int nServerId;
  int nChannelId;
};

/* 2191 */
struct XiVehicleListContainer
{
  XiVehicleListContainerVtbl *vfptr;
};

/* 2192 */
struct XiVehicleListContainerVtbl
{
  void (__thiscall *Resize)(XiVehicleListContainer *this, int);
  void (__thiscall *Add)(XiVehicleListContainer *this, VEHICLE_INFO *);
};

/* 2193 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktGameCharInfoAck : BS_PktBody
{
  XiStrCharInfo CharInfo;
  XiStrCarInfo CarInfo;
  XiStrStatInfo StatInfo;
  XiStrTeamInfo TeamInfo;
  unsigned int Serial;
  XiStrLocation Location;
};

/* 2194 */
struct XiCarIdentity
{
  unsigned __int16 Serial;
  unsigned __int16 CarSort;
};

/* 2195 */
struct stdext::_Hmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,XiCsCharInfo *,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> >,0>
{
  stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > comp;
};

/* 2196 */
struct __cppobj stdext::_Hash<stdext::_Hmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,XiCsCharInfo *,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> >,0> > : stdext::_Hmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,XiCsCharInfo *,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> >,0>
{
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > > _List;
  std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator> > _Vec;
  unsigned int _Mask;
  unsigned int _Maxidx;
};

/* 2197 */
struct __declspec(align(4)) std::pair<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator,bool>
{
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator first;
  bool second;
};

/* 2198 */
struct std::pair<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator>
{
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator first;
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > >::iterator second;
};

/* 2199 */
struct stdext::_Hmap_traits<__int64,XiCsCharInfo *,stdext::hash_compare<__int64,std::less<__int64> >,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> >,0>
{
  stdext::hash_compare<__int64,std::less<__int64> > comp;
};

/* 2200 */
struct __cppobj stdext::_Hash<stdext::_Hmap_traits<__int64,XiCsCharInfo *,stdext::hash_compare<__int64,std::less<__int64> >,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> >,0> > : stdext::_Hmap_traits<__int64,XiCsCharInfo *,stdext::hash_compare<__int64,std::less<__int64> >,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> >,0>
{
  std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > > _List;
  std::vector<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator,std::allocator<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator> > _Vec;
  unsigned int _Mask;
  unsigned int _Maxidx;
};

/* 2201 */
struct __declspec(align(4)) std::pair<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator,bool>
{
  std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator first;
  bool second;
};

/* 2202 */
struct std::pair<std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator,std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator>
{
  std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator first;
  std::list<std::pair<__int64 const ,XiCsCharInfo *>,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > >::iterator second;
};

/* 2203 */
struct stdext::_Hmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> >,0>
{
  stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > comp;
};

/* 2204 */
struct __cppobj stdext::_Hash<stdext::_Hmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> >,0> > : stdext::_Hmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> >,0>
{
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > > _List;
  std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > >::iterator> > _Vec;
  unsigned int _Mask;
  unsigned int _Maxidx;
};

/* 2205 */
struct __cppobj stdext::hash_map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > > : stdext::_Hash<stdext::_Hmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> >,0> >
{
};

/* 2206 */
struct __cppobj stdext::hash_map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,XiCsCharInfo *,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > > : stdext::_Hash<stdext::_Hmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,XiCsCharInfo *,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> >,0> >
{
};

/* 2207 */
struct __cppobj stdext::hash_map<__int64,XiCsCharInfo *,stdext::hash_compare<__int64,std::less<__int64> >,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > > : stdext::_Hash<stdext::_Hmap_traits<__int64,XiCsCharInfo *,stdext::hash_compare<__int64,std::less<__int64> >,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> >,0> >
{
};

/* 2208 */
struct __unaligned __declspec(align(1)) DefQuerySKIDCreateCar2
{
  int nServerId1;
  __int64 nCid1;
  int nServerId2;
  __int64 nCid2;
  char szCName[33];
  int nCarType;
  int nColor;
  int nUpgrade;
  int nAuctionCnt;
  float fMitron;
};

/* 2209 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktImageSaveResult : BS_PktBody
{
  __int64 m_ImageId;
  unsigned int m_TotalSize;
  int m_Result;
};

/* 2210 */
struct __declspec(align(4)) type_info
{
  type_infoVtbl *vfptr;
  void *_m_data;
  char _m_d_name[1];
};

/* 2211 */
struct type_infoVtbl
{
  void *(__thiscall *__vecDelDtor)(type_info *this, unsigned int);
};

/* 2212 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktTestPlayerAnswer : BS_PktBody
{
  int Question;
  int Answer;
};

/* 2213 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGMCmd : BS_PktBody
{
  int m_Idx;
  char m_Msg[1024];
};

/* 2214 */
struct BS_PktGateListAck::Unit
{
  int GateId;
  int Current;
  int Max;
};

/* 2215 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGateListAck : BS_PktBody
{
  unsigned int GateNum;
  BS_PktGateListAck::Unit m_Gate[1];
};

/* 2216 */
struct __cppobj BS_PktPartyPreCheck : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int Serial;
  XiStrCharName CName;
};

/* 2217 */
struct __cppobj BS_SingletonHeap<XiDBUpdateMgr,2>
{
};

/* 2218 */
struct __cppobj XiDBUpdateMgr : BS_SingletonHeap<XiDBUpdateMgr,2>
{
  BS_CriticalSection m_DBOperlock;
  BS_CriticalSection m_GameLoglock;
  BS_CriticalSection m_GameCharlock;
  BS_CriticalSection m_GameCarlock;
  BS_CriticalSection m_GameAuctionlock;
  BS_CriticalSection m_GameAuctionCarlock;
  BS_CriticalSection m_GameItemlock_01;
  BS_CriticalSection m_GameItemlock_02;
  BS_CriticalSection m_GameItemlock_03;
  std::map<unsigned long,DBOperStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,DBOperStatic> > > m_DBOperStaticMap;
  std::list<XiDBOperation *,std::allocator<XiDBOperation *> > m_DBOperationList;
  std::list<XiDBOperation *,std::allocator<XiDBOperation *> > m_GameLogList;
  std::list<XiDBOperation *,std::allocator<XiDBOperation *> > m_GameCharList;
  std::list<XiDBOperation *,std::allocator<XiDBOperation *> > m_GameCarList;
  std::list<XiDBOperation *,std::allocator<XiDBOperation *> > m_GameAuctionList;
  std::list<XiDBOperation *,std::allocator<XiDBOperation *> > m_GameAuctionCarList;
  std::list<XiDBOperation *,std::allocator<XiDBOperation *> > m_GameItemList_01;
  std::list<XiDBOperation *,std::allocator<XiDBOperation *> > m_GameItemList_02;
  std::list<XiDBOperation *,std::allocator<XiDBOperation *> > m_GameItemList_03;
};

/* 2219 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktDropItemAck : BS_PktBody
{
  unsigned int TableIdx;
  unsigned int InvenIdx;
  int Num;
};

/* 2220 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktRoomList : BS_PktBody
{
  XiPvpRoomFilter m_RoomFilter;
  unsigned int m_Page;
  unsigned int m_PageSize;
};

/* 2221 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktStickerList : BS_PktBody
{
  __int64 m_Cid;
  wchar_t m_CName[32];
  int m_Category;
  int m_Sort;
  int m_Reverse;
  unsigned int m_Offset;
  unsigned int m_Size;
  unsigned int m_UpdateTime;
};

/* 2222 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktJoinOBS : BS_PktBody
{
  unsigned int m_RoomId;
};

/* 2223 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktRushHitPoint : BS_PktBody
{
  unsigned int m_HuvIndex;
  unsigned __int16 m_Serial;
  unsigned __int16 m_CarSort;
  float m_fPoint;
  int m_HitTime;
};

/* 2224 */
struct DefQuerySKIDUpdateItem
{
  int nCarId;
  int nStackNum;
  int nState;
  int nUpgrade;
  int nBelonging;
  int nBox;
  int nServerId;
  __unaligned __declspec(align(1)) __int64 nCid;
  int nInvenIdx;
};

/* 2225 */
struct __cppobj XiUpdateItemDB : XiDBOperation
{
  DefQuerySKIDUpdateItem param;
};

/* 2226 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateStickerType
{
  int nStickerType;
  __int64 nStickerId;
};

/* 2227 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCheckInGameAck : BS_PktBody
{
  unsigned int m_Result;
};

/* 2228 */
struct XiObjectUpdate
{
  unsigned int m_ObjectId;
  XiVec4 m_Vel;
  float m_Decl;
  int m_Time;
};

/* 2229 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktObjectUpdate : BS_PktBody
{
  XiObjectUpdate m_object;
};

/* 2230 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateQuest
{
  int nState;
  int nFailNum;
  int nPlaceIdx;
  int nServerId;
  __int64 nCid;
  char szQuestId[20];
};

/* 2231 */
struct __cppobj XiUpdateQuestDB : XiDBOperation
{
  DefQuerySKIDUpdateQuest param;
};

/* 2232 */
struct __unaligned __declspec(align(2)) DefQuerySKIDInsertPvpLog
{
  int nServerId;
  __int64 nCid;
  char szCName[33];
  char szMemberID[33];
  int nMPlayTime;
  int nCPlayTime;
  __int64 nMoney;
  int nExp;
  int nLevel;
  int nCarId;
  int nCarType;
  int nCarGrade;
  int nSP;
  int nAC;
  __int64 nCP;
  int nBT;
  int nEQUIP;
  int nDeltaExp;
  int nDeltaLevel;
  __int64 nDeltaMoney;
  char szBattleType[21];
  __int64 nBattleId;
  int nRoomId;
  int nMapId;
  int nRank;
  int nMemberCnt;
  int nEndType;
  float fRecord;
  int nColCnt;
  int nOverCnt;
  float fFirstTime;
  float fBoostTime;
  char szRewardCnt[61];
  char szGateRec[201];
  char szGateRank[101];
};

/* 2233 */
struct DefQuerySKIDInsertItem
{
  int nServerId;
  __unaligned __declspec(align(1)) __int64 nCid;
  char szCName[33];
  __unaligned __declspec(align(1)) __int64 nGid;
  __unaligned __declspec(align(1)) int nCarId;
  __unaligned __declspec(align(1)) int nInvenIdx;
  char szItemId[33];
  __unaligned __declspec(align(1)) int nStackNum;
  __unaligned __declspec(align(1)) int nRandom;
  __unaligned __declspec(align(1)) int nState;
  __unaligned __declspec(align(1)) int nUpgrade;
  __unaligned __declspec(align(1)) int nBelonging;
  char szAssistA[33];
  char szAssistB[33];
  int nCTime;
};

/* 2234 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUCBossPatrolGiveup : BS_PktBody
{
  int Time;
};

/* 2235 */
struct __unaligned __declspec(align(1)) DefQuerySKIDUpdateUserExceptLogout
{
  int nLastPlayTime1;
  int nLastPlayTime2;
  char szMemberId[33];
};

/* 2236 */
struct __cppobj __declspec(align(4)) XiUpdateUserDBExceptLogout : XiDBOperation
{
  DefQuerySKIDUpdateUserExceptLogout param;
};

/* 2237 */
struct __cppobj BS_PktTradeOpenAck : BS_PktBody
{
  XiStrCharName HostName;
  XiStrCharName GuestName;
  __unaligned __declspec(align(1)) unsigned int HostCid;
  __unaligned __declspec(align(1)) unsigned int GuestCid;
  __unaligned __declspec(align(1)) unsigned int TradeIdx;
  unsigned __int16 Result;
};

/* 2238 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktPvpLoadingStatus : BS_PktBody
{
  unsigned int m_Serial;
  float m_Percent;
};

/* 2239 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAuctionBuyed : BS_PktBody
{
  unsigned int Serial;
};

/* 2240 */
struct __unaligned __declspec(align(1)) DefQuerySKIDUpdateCharExpByName
{
  __int64 nExp;
  char szCName[33];
};

/* 2241 */
struct __unaligned __declspec(align(4)) BS_PktTeamMembersAck::Member
{
  __int64 cid;
  wchar_t Name[17];
  int TeamRank;
  int NLevel;
  XiCarAttr CarAttr;
  unsigned __int16 Serial;
  XiStrLocation Loc;
  unsigned int JoinDate;
};

/* 2242 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktTeamMembersAck : BS_PktBody
{
  int m_Act;
  __int64 m_TeamId;
  int m_TargetChannel;
  __int64 m_TeamLeader;
  unsigned __int16 m_Size;
  unsigned __int16 m_Page;
  BS_PktTeamMembersAck::Member m_member[1];
};

/* 2243 */
struct DefQuerySKIDUpdateStickerLastDate
{
  __int64 nStickerId;
};

/* 2244 */
struct BS_PktChaseBeginConfirm::HuvUnit
{
  unsigned __int16 m_Serial;
  unsigned __int16 m_CarSort;
  int m_huvLevel;
  int m_huvId;
  float m_Speed;
  float m_MaxSpeed;
  float m_NosAccel;
  float m_NosTime;
  float m_NosRefreshRate;
  float m_Durability;
  float m_FrontPlayerAvoidanceRate;
  float m_FrontTrafficAvoidanceRate;
  float m_RearPlayerAvoidanceRate;
};

/* 2245 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktChaseBeginConfirm : BS_PktBody
{
  XiVec4 m_StartPos;
  char m_Accepted;
  int m_FindTimeout;
  int m_ArrestTimeout;
  unsigned __int16 m_huvSize;
  BS_PktChaseBeginConfirm::HuvUnit m_huv[1];
};

/* 2246 */
struct __cppobj BS_PktBlockAddByName : BS_PktBody
{
  XiStrCharName CharName;
};

/* 2247 */
struct DefQuerySKIDCheckTeamName
{
  char szCTeam[33];
};

/* 2248 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateCoupon
{
  float fPvPBattle;
  float fQuickService;
  float fChasing;
  float fCombo;
  float fDriveTime;
  float fDrift;
  float fArtDrive;
  float fJump;
  float fRevDrive;
  float fUnderCity;
  int nServerId;
  __int64 nCid;
};

/* 2249 */
struct __cppobj XiUpdateCouponDB : XiDBOperation
{
  DefQuerySKIDUpdateCoupon param;
};

/* 2250 */
struct __cppobj BS_PktDeleteChar : BS_PktBody
{
  XiStrCharName Name;
};

/* 2251 */
struct __cppobj BS_PktFriendAddByName : BS_PktBody
{
  XiStrCharName CharName;
};

/* 2252 */
struct __unaligned __declspec(align(2)) XiCarMove
{
  unsigned __int16 m_Serial;
  unsigned __int16 m_Age;
  XiCarAttr m_CarAttr;
  int m_dwGlobalTime;
  XiVec4 m_Pos;
  XiVec4 m_Vel;
  unsigned __int16 m_Progress;
};

/* 2253 */
struct __cppobj BS_PktResponseCar : BS_PktBody
{
  XiCarMove m_move;
};

/* 2254 */
struct __cppobj BS_PktJoinChat : BS_PktBody
{
  wchar_t m_Name[10];
};

/* 2255 */
struct __unaligned __declspec(align(1)) DefQuerySKIDInsertQuest
{
  int nServerId;
  __int64 nCid;
  char szCName[33];
  char szQuestId[20];
  int nState;
  int nFailNum;
  int nPlaceIdx;
};

/* 2256 */
struct __cppobj __declspec(align(4)) XiInsertQuestDB : XiDBOperation
{
  DefQuerySKIDInsertQuest param;
};

/* 2257 */
struct __unaligned __declspec(align(4)) XiSmpTeamInfo
{
  __int64 TeamId;
  __int64 TeamMarkId;
  unsigned int TeamRanking;
  unsigned int TeamPoint;
  unsigned int ChannelWinCnt;
  wchar_t TeamName[13];
  int MemberCnt;
  __int64 OwnerId;
  XiStrCharName OwnerName;
  __int64 TeamTotalExp;
};

/* 2258 */
struct __unaligned __declspec(align(2)) XiCBattleChannel
{
  int nChannel;
  XiSmpTeamInfo OwnTeam;
  XiSmpTeamInfo ChallengeTeam;
  XiCBattleSetting battleSetting;
  unsigned int ownTime;
  unsigned int openTime;
  unsigned int battleTime;
  unsigned int endTime;
  unsigned int openState;
};

/* 2259 */
struct __cppobj BS_PktIsValidCharName : BS_PktBody
{
  XiStrCharName CharName;
};

/* 2260 */
struct __unaligned __declspec(align(1)) DefQuerySKIDUpdateItemEx
{
  __int64 nNewCid;
  char szCNameNew[33];
  int nInvenIdxNew;
  int nCarId;
  int nStackNum;
  int nState;
  int nUpgrade;
  int nBelonging;
  int nBox;
  int nServerId;
  __int64 nCid;
  int nInvenIdx;
};

/* 2261 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktNotifyDelCharacterAck : BS_PktBody
{
  unsigned int m_Size;
  __int64 m_unit[1];
};

/* 2262 */
struct __cppobj BS_PktRoomBanish : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int m_Serial;
  XiPvpRoomSlot m_Slot;
  __int16 m_RoomType;
};

/* 2263 */
struct __cppobj BS_SingletonHeap<XiVehicleTable,5>
{
};

/* 2264 */
struct __cppobj XiVehicleMap : XiVehicleListContainer
{
  std::map<unsigned long,VEHICLE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLE_INFO> > > m_Table;
};

/* 2265 */
struct XiVehicleUpgradeListContainer
{
  XiVehicleUpgradeListContainerVtbl *vfptr;
};

/* 2266 */
struct XiVehicleUpgradeListContainerVtbl
{
  void (__thiscall *Resize)(XiVehicleUpgradeListContainer *this, int);
  void (__thiscall *Add)(XiVehicleUpgradeListContainer *this, VEHICLEUPGRADE_INFO *);
};

/* 2267 */
struct __cppobj XiVehicleUpgradeMap : XiVehicleUpgradeListContainer
{
  std::map<unsigned long,VEHICLEUPGRADE_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VEHICLEUPGRADE_INFO> > > m_Table;
};

/* 2268 */
struct __cppobj XiVehicleTable : BS_SingletonHeap<XiVehicleTable,5>
{
  XiVehicleMap m_VehicleMap;
  XiVehicleUpgradeMap m_VehicleUpgradeMap;
};

/* 2269 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktSetGameMode : BS_PktBody
{
  unsigned int GameMode;
};

/* 2270 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUCPatrolGoalPlaceAck : BS_PktBody
{
  unsigned int TableIdx;
  unsigned int PlaceIdx;
  unsigned int GetExp;
  unsigned int InvenIdx;
  unsigned int Serial;
  int DeltaMito;
  __int64 Mito;
};

/* 2271 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktHuvTimeBonus : BS_PktBody
{
  int TimeBonus;
  int TotalBonus;
};

/* 2272 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUnderCityReject : BS_PktBody
{
  unsigned int m_Serial;
  int m_Time;
};

/* 2273 */
struct __cppobj BS_PktCheckStat : BS_PktBody
{
};

/* 2274 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktVisualUpdate : BS_PktBody
{
  unsigned __int16 Serial;
  unsigned __int16 Age;
  unsigned int CarId;
  XiStrCarInfo CarInfo;
};

/* 2275 */
struct BS_PktAreaListAck::Unit
{
  int AreaId;
  int Current;
  int Max;
  int Open;
  float AccTax;
  XiSmpTeamInfo OwnTeam;
};

/* 2276 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAreaListAck : BS_PktBody
{
  unsigned int AreaNum;
  BS_PktAreaListAck::Unit m_Area[1];
};

/* 2277 */
struct DefQuerySKIDNextChannelBattle
{
  int nServerId;
  int nChannelId;
};

/* 2278 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktQuestStartAck : BS_PktBody
{
  unsigned int TableIdx;
  unsigned int FailNum;
};

/* 2279 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktEquipItem : BS_PktBody
{
  unsigned int InvenIdx;
  unsigned int DstSlotIdx;
  unsigned int CarID;
};

/* 2280 */
struct __cppobj BS_PktExpInfo : BS_PktBody
{
  __unaligned __declspec(align(1)) XiStrExpInfo ExpInfo;
  unsigned __int16 Level;
};

/* 2281 */
struct __cppobj BS_PktError : BS_PktBody
{
  unsigned __int16 m_Len;
};

/* 2282 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktBuyHistoryList : BS_PktBody
{
  unsigned int Offset;
  unsigned int ListNum;
  unsigned int Type;
};

/* 2283 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktRoomClose : BS_PktBody
{
  int m_Type;
  wchar_t m_Msg[32];
};

/* 2284 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktPvpItemEffect : BS_PktBody
{
  int m_PvpItemEffect;
};

/* 2285 */
struct XiStrMyItemMod
{
  XiStrMyItem MyItem;
  int State;
};

/* 2286 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktItemModList : BS_PktBody
{
  unsigned int ItemNum;
  XiStrMyItemMod ModItem[1];
};

/* 2287 */
struct __cppobj BS_PktSellCar : BS_PktBody
{
  XiStrCharName Name;
  unsigned int CarId;
};

/* 2288 */
struct __cppobj BS_PktGameStream : BS_PktBody
{
  unsigned __int16 m_Len;
};

/* 2289 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCastRushEvent : BS_PktBody
{
  int m_EventTime;
  int m_EventType;
  int m_iParam;
  float m_fParam;
};

/* 2290 */
struct DefQuerySKIDSearchStickerByName
{
  char szStickerName[33];
};

/* 2291 */
struct __cppobj BS_SingletonHeap<BS_Config,5>
{
};

/* 2292 */
struct XiServerConfig
{
  int Auth2Pass;
  int CBattleDay;
  int CBattleHour;
  int DormantEvent;
  int LevelMitoEvent;
  int CBUserEvent;
  int MitoDrinkBonus;
  int SpeedHackThreshold;
  int DisconnectHack;
  int WarnHack;
  int MaxMainCh;
  int MaxAllCh;
  int InviteFriendEvent;
  int CoinCashExpireTime;
};

/* 2293 */
struct __cppobj BS_Config : BS_SingletonHeap<BS_Config,5>
{
  wchar_t m_ScriptName[260];
  wchar_t m_LogDir[260];
  wchar_t m_LogName[260];
  wchar_t m_AuthTCPListenName[260];
  __int16 m_AuthTCPPort;
  __int16 m_AuthTCPMaxConn;
  wchar_t m_LobbyTCPListenName[260];
  __int16 m_LobbyTCPPort;
  __int16 m_LobbyTCPMaxConn;
  wchar_t m_GameTCPListenName[260];
  __int16 m_GameTCPPort;
  __int16 m_GameTCPMaxConn;
  wchar_t m_AreaTCPListenName[260];
  __int16 m_AreaTCPPort;
  __int16 m_AreaTCPMaxConn;
  wchar_t m_BAreaTCPListenName[260];
  __int16 m_BAreaTCPPort;
  __int16 m_BAreaTCPMaxConn;
  wchar_t m_RPCListenName[260];
  __int16 m_RPCPort;
  __int16 m_RPCMaxConn;
  wchar_t m_GMListenName[260];
  __int16 m_GMPort;
  __int16 m_GMMaxConn;
  wchar_t m_AreaUDPBindName[260];
  __int16 m_AreaUDPPort;
  wchar_t m_BAreaUDPBindName[260];
  __int16 m_BAreaUDPPort;
  wchar_t m_SystemUDPBindName[260];
  wchar_t m_AuthDBUDLName[260];
  wchar_t m_GameDBUDLName[260];
  wchar_t m_BillingName[260];
  wchar_t m_BillingHost[260];
  __int16 m_BillingPort;
  wchar_t m_BufferAllocName[260];
  int m_ServerId;
  wchar_t m_ServerName[32];
  bool m_bLocalBillingOn;
  bool m_bRealBillingOn;
  __int16 m_AuthOn;
  __int16 m_GameOn;
  __int16 m_LobbyOn;
  __int16 m_AreaOn;
  __int16 m_BAreaOn;
  __int16 m_GMTool;
  __int16 m_FEvent;
  __int16 m_LocaleIndex;
  __int16 m_DbIndex;
  __int16 m_CBattleOn;
  __int16 m_StickerOn;
  __int16 m_RecommendFriendOn;
  __int16 m_PCRoomEvent;
  __int16 m_Mito120Event;
  __int16 m_TeamEvent;
  __int16 m_PcRoomTimeEvent;
  __int16 m_PcRoomBattleEvent;
  __int16 m_PorscheEvent;
  __int16 m_GoldTimeEvent;
  __int16 m_ComboEvent;
  __int16 m_VipEvent;
  __int16 m_DisableDecal;
  __int16 m_DisablePCRoomDecal;
  __int16 m_HappyBeanEvent;
  __int16 m_ReserveItem;
  __int16 m_StickerUpCount;
  __int16 m_PcRoomCheat;
  __int16 m_MapCheat;
  __int16 m_DebugLog;
  __int16 m_CarAuctionEvent;
  int m_Cheatable;
  int m_AuthType;
  int m_GameSCipher;
  int m_GameCCipher;
  int m_GameGuardCheck;
  int m_ClientAuthTimeout;
  int m_DisconnectAuthFailClient;
  int m_RealService;
  __int16 m_SystemUDPPort;
  __int16 m_LobbySysUDPPort;
  __int16 m_GameSysUDPPort;
  __int16 m_AreaSysUDPPort;
  __int16 m_BAreaSysUDPPort;
  XiServerConfig m_Config;
  std::vector<unsigned long,std::allocator<unsigned long> > m_AuthServerIP;
  unsigned int m_GameServerIP;
  unsigned int m_LobbyServerIP;
  unsigned int m_AreaServerIP;
  unsigned int m_BAreaServerIP;
  unsigned int m_ExternServerIP;
  unsigned int m_BillingServerIP;
  char m_szExtraDBName[32];
  char m_szExtraDBUser[32];
  char m_szExtraDBPass[32];
  int m_RushMaxMemberCount;
};

/* 2294 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetPlayModeList
{
  int nServerId;
  __int64 nCid;
};

/* 2295 */
struct __unaligned __declspec(align(4)) DefQuerySKIDInsertCBattleRacerInfo
{
  int nServerId;
  int nChannelId;
  int nBattleId;
  __int64 nTeamId;
  __int64 nCid;
  int nRaceCnt;
  int nRoundWinCnt;
  int nPoint;
  char szCName[32];
  int nLevel;
};

/* 2296 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktBuyVisualItem : BS_PktBody
{
  unsigned int TableIdx;
  unsigned int CarID;
  XiStrPlateName PlateName;
  unsigned int PeriodIdx;
  bool UseMileage;
  __int64 CurCash;
};

/* 2297 */
struct __cppobj BS_PktSetAreaMap : BS_PktBody
{
  unsigned __int16 m_MapId;
  unsigned __int16 m_MaxTraffic;
  __unaligned __declspec(align(1)) int m_TrafficMode;
  unsigned __int16 m_CityId;
  char m_BattleString[32];
};

/* 2298 */
struct XiStrDriveInfo
{
  unsigned int CarId;
  int Time;
  float TotalDistance;
  float TotalFuel;
  float StepDistance;
  float StepFuel;
};

/* 2299 */
struct __cppobj BS_PktJoinTeamApply : BS_PktBody
{
  XiTeamBind m_bind;
};

/* 2300 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktCheckInGame : BS_PktBody
{
  unsigned int m_Version;
  unsigned int m_Ticket;
  int m_PcRoom;
  char m_crmcode[21];
};

/* 2301 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktRepairItem : BS_PktBody
{
  unsigned int SrcInvenIdx;
  unsigned int AddInvenIdx;
};

/* 2302 */
struct XiStickerCatalog
{
  __int64 StickerId;
  __int64 BigImageId;
  wchar_t StickerName[32];
  int StickerCategory;
  unsigned int StickerDownCount;
  __int64 CreatorId;
  wchar_t CreatorName[32];
};

/* 2303 */
struct __cppobj BS_PktRecommendFriend : BS_PktBody
{
  XiStrCharName m_FriendName;
};

/* 2304 */
struct __cppobj BS_PktLoadDummyChar : BS_PktBody
{
  XiStrCharName Name;
  unsigned int CarType;
  __int64 TeamId;
};

/* 2305 */
struct DefQuerySKIDUpdateGuildType
{
  int nGuildType;
  int nServerId;
  __int64 nCid;
};

/* 2306 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateCarUpgrade8
{
  int nUpgrade;
  int nServerId;
  __int64 nCid;
  int nCarId;
};

/* 2307 */
struct __unaligned __declspec(align(2)) DefQuerySKIDSetChannelOwner
{
  __int64 nOwnerCId;
  __int64 nOwnerTid;
  char szCName[33];
  char szTName[17];
  char szOwnDate[20];
  int nServerId;
  int nChannel;
};

/* 2308 */
struct _WSABUF
{
  unsigned int len;
  char *buf;
};

/* 2309 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUnderCityLoad : BS_PktBody
{
  int m_Time;
  int m_CityId;
  int m_Fee;
  __int64 m_Mito;
};

/* 2310 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCurrentGameMode : BS_PktBody
{
  unsigned int GameMode;
};

/* 2311 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUpgradeCarAck : BS_PktBody
{
  unsigned int CarID;
  unsigned int Grade;
  unsigned int Hancoin;
  unsigned int Mileage;
};

/* 2312 */
struct DefQuerySKIDInsertCBattleMatch
{
  int nServerId;
  int nChannelId;
  int nBattleId;
  int nMatchId;
  __int64 nDefTeamId;
  __int64 nAtkTeamId;
};

/* 2313 */
struct DefQuerySKIDDeleteSTItem
{
  int nServerId;
  __unaligned __declspec(align(1)) __int64 nCid;
  int nInvenIdx;
};

/* 2314 */
struct __cppobj BS_PktRemoveVehicle : BS_PktBody
{
  XiCarMove m_move;
};

/* 2315 */
struct __unaligned __declspec(align(4)) DefQuerySKIDDeleteFriend
{
  int nServerId;
  __int64 nCid;
  __int64 nFCid;
};

/* 2316 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktHuvParam : BS_PktBody
{
  float m_Pos[4];
};

/* 2317 */
struct __cppobj BS_PktExitRushZone : BS_PktBody
{
};

/* 2318 */
struct XiVisualItemListContainer
{
  XiVisualItemListContainerVtbl *vfptr;
};

/* 2319 */
struct XiVisualItemListContainerVtbl
{
  void (__thiscall *Resize)(XiVisualItemListContainer *this, int);
  void (__thiscall *Add)(XiVisualItemListContainer *this, int, XIVISUALITEM_INFO *);
};

/* 2320 */
struct __unaligned __declspec(align(2)) XiTrafficCarMove
{
  int m_time;
  float m_pos;
  hfloat m_vel;
  hfloat m_acl;
  unsigned __int16 m_TrafficCarId;
  unsigned __int16 m_carAttr;
  __int16 m_path;
};

/* 2321 */
struct __cppobj BS_PktCastTraffic : BS_PktBody
{
  __unaligned __declspec(align(1)) int m_AreaId;
  __unaligned __declspec(align(1)) float m_x;
  __unaligned __declspec(align(1)) float m_y;
  XiTrafficCarMove m_move;
};

/* 2322 */
struct __cppobj BS_PktDeleteRushHuv : BS_PktBody
{
  unsigned __int16 m_Serial;
  unsigned __int16 m_CarSort;
};

/* 2323 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCBattleRoomReady : BS_PktBody
{
  int Target;
  int State;
};

/* 2324 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetCharMileage
{
  int nServerId;
  __int64 nCid;
};

/* 2325 */
struct __cppobj BS_PktCastTCS : BS_PktBody
{
  __unaligned __declspec(align(1)) int m_AreaId;
  __unaligned __declspec(align(1)) float m_x;
  __unaligned __declspec(align(1)) float m_y;
  XiTCSCarMove m_move;
};

/* 2326 */
struct DefQuerySKIDUpdateAuctionMileage
{
  int nRegNum;
  int nBuyNum;
  int nSellNum;
  int nServerId;
  __int64 nCid;
};

/* 2327 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktInstantGoalPlace : BS_PktBody
{
  unsigned int TableIdx;
  unsigned int PlaceIdx;
};

/* 2328 */
struct __unaligned __declspec(align(1)) DefQuerySKIDCreateSticker
{
  __int64 nStickerId;
  __int64 nBigImageId;
  int nServerId;
  __int64 nCid;
  char szCName[33];
  int nStickerType;
  int nStickerCategory;
  char szStickerName[33];
  char szUStickerName[33];
};

/* 2329 */
struct __cppobj BS_PktLeaveOBS : BS_PktBody
{
};

/* 2330 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktRegisterRoomObserver : BS_PktBody
{
  unsigned int m_PvpChannelId;
  XiPvpRoomFilter m_RoomFilter;
  unsigned int m_Page;
  unsigned int m_PageSize;
};

/* 2331 */
struct __cppobj __unaligned __declspec(align(4)) BS_PktRoomInvite : BS_PktBody
{
  unsigned int m_Serial;
  unsigned int m_RoomId;
  unsigned int m_RoomLifeId;
  __int64 m_cid;
  XiStrCharName m_Name;
  wchar_t m_RoomName[30];
};

/* 2332 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGroupCombo : BS_PktBody
{
  int m_Serial;
  int m_GroupId;
  int m_comboType;
  int m_comboTime;
  float m_turboBonus;
  int m_turboTimer;
  unsigned int m_MyTotalCombo;
  unsigned int m_MyPartyCombo;
};

/* 2333 */
struct __cppobj __unaligned __declspec(align(4)) XiUpdateGuildTypeDB : XiDBOperation
{
  DefQuerySKIDUpdateGuildType param;
};

/* 2334 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktTutorialClear : BS_PktBody
{
  unsigned int Type;
};

/* 2335 */
struct __cppobj BS_SingletonHeap<XiCharInfoBox,2>
{
};

/* 2336 */
struct XiCharInfoBox::Pool
{
  std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> > List;
  stdext::hash_map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,std::list<XiCsCharInfo *,std::allocator<XiCsCharInfo *> >::iterator> > > NameMap;
  BS_CriticalSection Lock;
  int Size;
};

/* 2337 */
struct __cppobj XiCharInfoBox : BS_SingletonHeap<XiCharInfoBox,2>
{
  BS_CriticalSection m_InfoBoxLock;
  XiCharInfoBox::Pool m_cpool;
  stdext::hash_map<__int64,XiCsCharInfo *,stdext::hash_compare<__int64,std::less<__int64> >,std::allocator<std::pair<__int64 const ,XiCsCharInfo *> > > m_CharInfoList;
  stdext::hash_map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,XiCsCharInfo *,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > > m_CharInfoNameIndex;
};

/* 2338 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktSellItem : BS_PktBody
{
  unsigned int TableIdx;
  unsigned int Num;
  unsigned int InvenIdx;
};

/* 2339 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUnEquipVisualItemAck : BS_PktBody
{
  unsigned int InvenIdx;
  unsigned int CarID;
};

/* 2340 */
struct __cppobj BS_SendOverlappedForIOCP : BS_OverlappedPendding
{
  BS_Session *m_pSession;
  BS_Packet *m_pPacket;
};

/* 2341 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktInstantStart : BS_PktBody
{
  unsigned int TableIdx;
};

/* 2342 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktQuestComplete : BS_PktBody
{
  unsigned int TableIdx;
  float TotalTime;
};

/* 2343 */
struct __unaligned __declspec(align(4)) DefQuerySKIDTeamBanishDate
{
  int nServerId;
  __int64 nTeamId;
};

/* 2344 */
struct __unaligned __declspec(align(4)) XiPvpResult
{
  int EndType;
  unsigned int Serial;
  unsigned int DeltaMoney;
  unsigned __int64 Money;
  unsigned int DeltaExp;
  float Record;
  unsigned __int16 Rank;
  unsigned __int16 Level;
  XiStrExpInfo ExpInfo;
  unsigned int Point;
  unsigned int Flag;
};

/* 2345 */
struct _tagSTACKFRAME64
{
  _tagADDRESS64 AddrPC;
  _tagADDRESS64 AddrReturn;
  _tagADDRESS64 AddrFrame;
  _tagADDRESS64 AddrStack;
  _tagADDRESS64 AddrBStore;
  void *FuncTableEntry;
  unsigned __int64 Params[4];
  int Far;
  int Virtual;
  unsigned __int64 Reserved[3];
  _KDHELP64 KdHelp;
};

/* 2346 */
struct __cppobj __unaligned __declspec(align(4)) BS_PktMyCurStickerAck : BS_PktBody
{
  unsigned __int16 Serial;
  unsigned __int16 Age;
  unsigned int CarId;
  unsigned __int16 m_Size;
  XiSticker Sticker[1];
};

/* 2347 */
struct __unaligned __declspec(align(1)) DefQuerySKIDIncPlayMode
{
  int nTryCnt;
  int nWinCnt;
  int nPoint;
  int nPlayTime;
  int nExp;
  int nMoney;
  int nBestCnt;
  int nRetireCnt;
  int nServerId;
  __int64 nCid;
  char szMode[33];
};

/* 2348 */
struct __cppobj XiPlayMode : XiDBOperation
{
  wchar_t m_CName[33];
  char m_MemberId[33];
  DefQuerySKIDIncPlayMode param;
};

/* 2349 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktMyPositionAck : BS_PktBody
{
  int m_CityId;
  int m_ChannelId;
  XiVec4 m_Pos;
  int m_PositionState;
};

/* 2350 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCBattleItems : BS_PktBody
{
  int m_TargetChannel;
};

/* 2351 */
struct DefQuerySKIDGetCharacterCnt
{
  char szMemberId[33];
  char szMemberId1[33];
};

/* 2352 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateTeamTaxIncome
{
  __int64 nTaxIncome;
  int nServerId;
  __int64 nTeamId;
};

/* 2353 */
union $BDBC065E804B9590594210616B70BA0B
{
  float m_fLocalTime;
  unsigned int m_dwLocalTime;
};

/* 2354 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktLatency : BS_PktBody
{
  $BDBC065E804B9590594210616B70BA0B ___u1;
};

/* 2355 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktSaveCarPos : BS_PktBody
{
  int m_ChannelId;
  XiVec4 m_Pos;
  int m_CityId;
  int m_PositionState;
};

/* 2356 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktPvpGate : BS_PktBody
{
  unsigned int m_Serial;
  int m_Gate;
  int m_GateTime;
  float m_Record;
  float m_ColPoint;
};

/* 2357 */
struct __unaligned __declspec(align(1)) DefQuerySKIDUpdateTeamOwner
{
  __int64 nOwnerId;
  char nOwnerName[33];
  int nServerId;
  __int64 nTeamId;
};

/* 2358 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAuctionCarCancel : BS_PktBody
{
  unsigned int Serial;
};

/* 2359 */
struct __unaligned __declspec(align(1)) DefQuerySKIDInsertAccessLog
{
  char szServerId[21];
  char szGameID[21];
  char szMemberID[33];
  char szCName[21];
  char szLoginDate[20];
  char szLogoutDate[20];
  char szIp[21];
  char szCrmCode[16];
  int nLvLogin;
  int nLvLogout;
  int nStayTime;
  int nPlayTime;
  int nMatchCnt;
  int nWinCnt;
  int nDefeatCnt;
  int nDrawtCnt;
  __int64 nGameMoney1;
  __int64 nGameMoney2;
  char szGrade[2];
};

/* 2360 */
struct __cppobj __declspec(align(2)) XiInsertAccessLog : XiDBOperation
{
  DefQuerySKIDInsertAccessLog param;
};

/* 2361 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUCPatrolStart : BS_PktBody
{
  unsigned int TableIdx;
  unsigned int MapId;
};

/* 2362 */
struct __cppobj BS_PktSayAck : BS_PktBody
{
  wchar_t m_Name[10];
  unsigned __int16 m_Len;
};

/* 2363 */
struct __cppobj BS_PktMyQuestListAck : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int QuestNum;
  XiStrMyQuest MyQuest[1];
};

/* 2364 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUserAuth : BS_PktBody
{
  unsigned int m_Version;
  wchar_t m_ID[40];
  char m_PW[64];
};

/* 2365 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCheckEventAck : BS_PktBody
{
  int m_Result;
  __int64 Mito;
};

/* 2366 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGMBlock : BS_PktBody
{
  int m_Idx;
  char m_cname[32];
  int m_time;
};

/* 2367 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktArbeitGo : BS_PktBody
{
  unsigned int Serial;
};

/* 2368 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGetCBattleTime : BS_PktBody
{
  int nAct;
};

/* 2369 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAuctionCarCancelAck : BS_PktBody
{
  unsigned int Serial;
};

/* 2370 */
struct __cppobj BS_PktCBattleRewardMoney : BS_PktBody
{
  __unaligned __declspec(align(1)) int m_TargetChannel;
  __unaligned __declspec(align(1)) __int64 m_OwnerId;
  XiStrCharName m_OwnerName;
  __int64 m_Mito;
};

/* 2371 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUnderCityStage : BS_PktBody
{
  int m_StartType;
  int m_Stage;
  int m_Time;
};

/* 2372 */
struct __unaligned __declspec(align(2)) BS_PktUnderCityResult::ResultUnit
{
  int nPartyIndex;
  float fRank;
  int nLevel;
  XiStrCharName CName;
  int nExp;
  int nMito;
  int nPoint1;
  int nPoint2;
  int nPoint3;
  int nPoint4;
  int nItem1;
  int nItem2;
  int nItem3;
};

/* 2373 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUnderCityResult : BS_PktBody
{
  int m_Result;
  int m_ResultClass;
  int m_Retry;
  int m_Time;
  BS_PktUnderCityResult::ResultUnit m_CharResult[4];
};

/* 2374 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktEnterGroupComboAck : BS_PktBody
{
  int m_Group;
  unsigned int m_MyPartyCombo;
};

/* 2375 */
struct __unaligned __declspec(align(2)) DefQuerySKIDUpdateTeamName
{
  char szTeamName[17];
  char szUTeamName[17];
  int nServerId;
  __int64 nTeamId;
};

/* 2376 */
struct _IMAGEHLP_LINE64
{
  unsigned int SizeOfStruct;
  void *Key;
  unsigned int LineNumber;
  char *FileName;
  unsigned __int64 Address;
};

/* 2377 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCarPos : BS_PktBody
{
  XiVec4 m_Pos;
  int m_CityId;
};

/* 2378 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktSecureSwitchToPlayer : BS_PktBody
{
  XiPvpUserInfo m_UserInfo;
  wchar_t m_RoomPass[30];
};

/* 2379 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetSTItem
{
  int nServerId;
  __int64 nCid;
};

/* 2380 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAuctionSearch : BS_PktBody
{
  unsigned int Offset;
  unsigned int ListNum;
  unsigned int Type;
  unsigned int SortType;
  unsigned int SearchType;
  wchar_t Text[128];
  unsigned int StLevel;
  unsigned int EnLevel;
};

/* 2381 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktCharTeamInfoAck : BS_PktBody
{
  unsigned int m_Act;
  __int64 m_Cid;
  XiStrTeamInfo m_TeamInfo;
  int m_TeamRank;
};

/* 2382 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktDetachSticker : BS_PktBody
{
  unsigned int m_StickerIndex;
};

/* 2383 */
struct __cppobj BS_PktMoveTCSVehicle : BS_PktBody
{
  XiTCSCarMove m_move;
};

/* 2384 */
struct DefQuerySKIDGetCarRating
{
  int nServerId;
  __unaligned __declspec(align(1)) __int64 nCid;
  int nCarId;
};

/* 2385 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktStickerSearch : BS_PktBody
{
  __int64 m_Cid;
  wchar_t m_SearchName[32];
  wchar_t m_CName[32];
  int m_Category;
  int m_Sort;
  int m_Reverse;
  unsigned int m_Offset;
  unsigned int m_Size;
  unsigned int m_UpdateTime;
};

/* 2386 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAuctionList : BS_PktBody
{
  unsigned int Offset;
  unsigned int ListNum;
  unsigned int Type;
  unsigned int SortType;
  unsigned int StLevel;
  unsigned int EnLevel;
};

/* 2387 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktImageResponse : BS_PktBody
{
  __int64 m_ImageId;
  unsigned __int16 m_PartIndex;
  unsigned __int16 m_Size;
  unsigned int m_TotalSize;
  char m_data[1];
};

/* 2388 */
struct __cppobj BS_PktAttachStickerAck : BS_PktBody
{
  __unaligned __declspec(align(1)) int m_Result;
  unsigned __int16 m_Age;
  XiStrMySTItem m_stickerItem;
  __int64 DeltaMito;
  __int64 StickerCreator;
  __int64 StickerId;
};

/* 2389 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktChaseEnd : BS_PktBody
{
  unsigned __int16 m_Serial;
  unsigned __int16 m_CarSort;
  unsigned int m_Type;
  float m_Life;
  unsigned int m_Result;
  XiVec4 m_Pos;
  XiVec4 m_Vel;
  int m_Time;
};

/* 2390 */
struct __cppobj BS_PktFriendList : BS_PktBody
{
};

/* 2391 */
struct __cppobj BS_PktGetCouponForVar : BS_PktBody
{
};

/* 2392 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktMoveVehicleSimpl : BS_PktBody
{
  XiCarMove m_move;
  unsigned int m_Ip;
  unsigned __int16 m_Port;
};

/* 2393 */
struct DefQuerySKIDLogEventSerial
{
  char szName[33];
  char szMemberId[33];
  char szSerial[33];
};

/* 2394 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktSelectCar : BS_PktBody
{
  unsigned int CarId;
};

/* 2395 */
struct DefQuerySKIDUpdateCBattle
{
  int nMasterTeam;
  int nSuccessiveWin;
  int nServerId;
  int nChannelId;
  int nBattleId;
};

/* 2396 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktClientAuth : BS_PktBody
{
  unsigned int m_Size;
};

/* 2397 */
struct __cppobj BS_PktRoomJoin : BS_PktBody
{
  unsigned __int16 m_Serial;
  unsigned __int16 m_Age;
  __unaligned __declspec(align(1)) XiPvpUserInfo m_UserInfo;
  __unaligned __declspec(align(1)) XiCarAttr m_CarAttr;
  __unaligned __declspec(align(1)) unsigned int m_RoomId;
  __unaligned __declspec(align(1)) unsigned int m_RoomLifeId;
  __unaligned __declspec(align(1)) XiPlayerInfo m_PlayerInfo;
  XiPvpRoomSlot m_Slot;
  __int16 m_RoomType;
};

/* 2398 */
struct __cppobj BS_PktLeaveChat : BS_PktBody
{
  wchar_t m_Name[10];
};

/* 2399 */
struct __cppobj BS_PktDayMileageGetReward : BS_PktBody
{
};

/* 2400 */
struct __cppobj BS_CBattleBoard : TickHandler
{
  int m_nextBattleStartTime;
  BS_CBattleLobby m_lobby[24];
};

/* 2401 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUCBossPatrolGiveupAck : BS_PktBody
{
  int Time;
};

/* 2402 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktItemUseAck : BS_PktBody
{
  unsigned int InvenIdx;
  unsigned int Num;
  XiStrItemUseInfo ItemUseInfo;
};

/* 2403 */
struct DefQuerySKIDUpdateCharHancoinInven
{
  int nHancoinInven;
  int nServerId;
  __int64 nCid;
};

/* 2404 */
struct auto_lock<BS_SpinLock>
{
  BS_SpinLock *Lock;
};

/* 2405 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktDayMissionGetReward : BS_PktBody
{
  unsigned int m_StampCnt;
};

/* 2406 */
struct _EXCEPTION_POINTERS
{
  _EXCEPTION_RECORD *ExceptionRecord;
  _CONTEXT *ContextRecord;
};

/* 2407 */
struct __cppobj BS_PktInstantGoalPlaceAck : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int TableIdx;
  __unaligned __declspec(align(1)) unsigned int PlaceIdx;
  __unaligned __declspec(align(1)) unsigned int GetExp;
  __unaligned __declspec(align(1)) XiStrExpInfo ExpInfo;
  unsigned __int16 Level;
  unsigned int InvenIdx;
};

/* 2408 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktDayEventCompleteAck : BS_PktBody
{
  unsigned int m_Result;
};

/* 2409 */
struct XiCarState
{
  char m_data[44];
};

/* 2410 */
struct __cppobj BS_PktJumpVehicle : BS_PktBody
{
  XiCarMove m_move;
  XiCarState m_state;
  XiVec4 m_sPos;
  XiVec4 m_sVel;
};

/* 2411 */
struct DefQuerySKIDGetChannel
{
  int nServerId;
};

/* 2412 */
struct __cppobj BS_PktExitGroup : BS_PktBody
{
};

/* 2413 */
struct __unaligned __declspec(align(1)) DefQuerySKIDInsertCarLog
{
  int nServerId;
  __int64 nCid;
  char szCName[33];
  char szMemberID[33];
  int nMPlayTime;
  int nCPlayTime;
  __int64 nMoney;
  int nExp;
  int nLevel;
  int nCarId;
  int nCarType;
  int nCarGrade;
  int nSP;
  int nAC;
  __int64 nCP;
  int nBT;
  int nEQUIP;
  int nDeltaExp;
  int nDeltaLevel;
  __int64 nDeltaMoney;
  char szTxnType[21];
  int nCarId0;
  int nCarType0;
  int nCarGrade0;
};

/* 2414 */
struct __cppobj BS_PktFriendDel : BS_PktBody
{
  XiStrCharName CharName;
};

/* 2415 */
struct __cppobj BS_PktFirstPosition : BS_PktBody
{
};

/* 2416 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktScriptMessage : BS_PktBody
{
  int m_Type;
  wchar_t m_ScriptId[64];
};

/* 2417 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktSwitchToPlayer : BS_PktBody
{
  XiPvpUserInfo m_UserInfo;
};

/* 2418 */
struct XiBattleInstance
{
  int TargetChannelId;
  int AreaId;
  int MapId;
  int ObserverCount;
};

/* 2419 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCBattleInstanceAck : BS_PktBody
{
  int m_Act;
  unsigned int m_Size;
  XiBattleInstance m_battle[1];
};

/* 2420 */
struct DefQuerySKIDSetChannelBattle
{
  char szOpenDate[20];
  char szBattleDate[20];
  char szEndDate[20];
  __unaligned __declspec(align(1)) __int64 nLeaderCid;
  char szLeaderName[20];
  char szBattleMap1[40];
  char szBattleMap2[40];
  char szBattleMap3[40];
  int nServerId;
  int nChannel;
};

/* 2421 */
struct BS_SocketUtils::SockAddr
{
  sockaddr_in m_SockAddr;
};

/* 2422 */
struct __cppobj BS_PktComboExp : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int GetExp;
  __unaligned __declspec(align(1)) unsigned int GetMoney;
  __unaligned __declspec(align(1)) XiStrExpInfo ExpInfo;
  unsigned __int16 Level;
  float fGetExp;
};

/* 2423 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGetCouponAck : BS_PktBody
{
  unsigned int Type;
  int StampIdx;
};

/* 2424 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktCreateTeamAck : BS_PktBody
{
  int m_Result;
  XiStrTeamInfo m_TeamInfo;
  unsigned __int16 m_Age;
  __int64 m_ResultMoney;
};

/* 2425 */
struct XiStrMySTItem::Is
{
  unsigned int nStickerIndex;
};

/* 2426 */
struct __unaligned __declspec(align(1)) DefQuerySKIDGetCharacterByName
{
  int nServerId;
  char szCName[33];
};

/* 2427 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktEquipVisualItem : BS_PktBody
{
  unsigned int InvenIdx;
  unsigned int DstSlotIdx;
  unsigned int CarID;
};

/* 2428 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktQuestCompleteAck : BS_PktBody
{
  unsigned int TableIdx;
};

/* 2429 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktSetTeamUrl : BS_PktBody
{
  __int64 m_TeamId;
  char m_TeamUrl[33];
};

/* 2430 */
struct BS_BestRecord
{
  float Record[120];
  wchar_t Recorder[120][32];
};

/* 2431 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktEnterAreaAck : BS_PktBody
{
  int m_Area;
  int m_Result;
  int m_nLocalTime;
  int m_nGlobalTime;
  __int16 m_MsgLen;
  wchar_t m_Msg[1];
};

/* 2432 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktSellItemAck : BS_PktBody
{
  unsigned int TableIdx;
  unsigned int Num;
  unsigned int Gold;
  unsigned int InvenIdx;
};

/* 2433 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetCouponStamp
{
  int nServerId;
  __int64 nCid;
};

/* 2434 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGMNoticeAck : BS_PktBody
{
  int m_Idx;
  int m_Ret;
};

/* 2435 */
struct XiFreeCarMove
{
  unsigned __int16 m_TrafficCarId;
  unsigned __int16 m_Owner;
  unsigned __int16 m_carAttr;
  unsigned __int16 m_path;
  XiVec4 m_Pos;
  XiVec4 m_Vel;
  int m_OwnTime;
  int m_dwGlobalTime;
  int m_FreedTime;
};

/* 2436 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktJumpFreeTrafficVehicle : BS_PktBody
{
  XiFreeCarMove m_move;
  XiVec4 m_sVel;
  float m_lastCollPos[3];
};

/* 2437 */
struct XiTCSSignal
{
  int m_time;
  int m_signal;
  int m_state;
};

/* 2438 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCastTCSSignal : BS_PktBody
{
  int m_AreaId;
  float m_x;
  float m_y;
  XiTCSSignal m_signal;
};

/* 2439 */
struct __cppobj BS_PktCBattleBroadcast : BS_PktBody
{
  __unaligned __declspec(align(1)) int m_Offset;
  __unaligned __declspec(align(1)) int m_Size;
  XiBattleRecord m_Record[1];
};

/* 2440 */
struct __cppobj DefQuerySKIDNextEventId
{
};

/* 2441 */
struct __unaligned __declspec(align(1)) DefQuerySKIDInsertVisualItemHistory
{
  int nServerId;
  __int64 nCid;
  char szCName[33];
  __int64 nGid;
  char szItemId[33];
  int nBuyTime;
  int nGetType;
  int nGoldType;
  int nPeriodIdx;
  int nHancoin;
  int nMito;
  int nMileage;
  int nState;
  char szData[20];
  char szMsg[100];
  char szDstName[33];
};

/* 2442 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktBonusUpdate : BS_PktBody
{
  unsigned int ExpBonus;
  unsigned int MitoBonus;
  unsigned int RepireGirl;
  unsigned int TurboMan;
  unsigned int Sticker;
  unsigned int DoubleUpgrade;
  unsigned int HalfMitronCharge;
  unsigned int DrinkItemDrop2X;
  unsigned int ExtendInvenUpgrade;
};

/* 2443 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktModifyItemAck : BS_PktBody
{
  unsigned int SrcInvenIdx;
  unsigned int TransInvenIdx;
  int TransNum;
};

/* 2444 */
struct DefQuerySKIDGetUserInfo
{
  char szMemberId[33];
};

/* 2445 */
struct DefQuerySKIDGetArbeitRank
{
  int nServerId;
  int nAid;
};

/* 2446 */
struct __unaligned __declspec(align(2)) DefQuerySKIDSelectMsg
{
  int nServerId;
  __int64 nRid;
  char szState[2];
};

/* 2447 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktTradeItemOn : BS_PktBody
{
  unsigned int TradeIdx;
  unsigned int InvenIdx;
  int TradeNum;
};

/* 2448 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateRecommendFriendReward
{
  __int64 nCid;
  int nServerId;
};

/* 2449 */
struct XiStrUserPermission
{
  unsigned int m_Flag;
};

/* 2450 */
struct __unaligned __declspec(align(2)) XiStrUserInfo
{
  XiStrUserPermission Permission;
  unsigned int LastPlayTime;
  unsigned int TotalPlayTime;
  XiStrCharName LastChar;
};

/* 2451 */
struct __unaligned __declspec(align(4)) DefQuerySKIDCreateTeam
{
  int nServerId;
  __int64 nTeamMarkId;
  char szTeamName[17];
  char szUTeamName[17];
  char szTeamDesc[81];
  int nTeamLevel;
  int nTeamPoint;
  int nMemberCnt;
  __int64 nCid;
  char szCName[33];
};

/* 2452 */
struct __unaligned __declspec(align(1)) DefQuerySKIDInsertInstant
{
  int nServerId;
  __int64 nCid;
  char szCName[33];
  int nIdx;
  int nState;
};

/* 2453 */
struct DefQuerySKIDInsertCBattle
{
  int nServerId;
  int nChannelId;
  int nBattleId;
  int nMasterTeam;
  int nSuccessiveWin;
};

/* 2454 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktSelectCarAck : BS_PktBody
{
  XiStrCarInfo CurCarInfo;
};

/* 2455 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktStickerSmallImage : BS_PktBody
{
  unsigned int m_Index;
  unsigned int m_ImageAttr;
  unsigned int m_ColorKey;
};

/* 2456 */
struct XiStrItemData
{
  XiStrItemID itemid;
  XiStrItemUnit unit;
};

/* 2457 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCBattleItemsAck : BS_PktBody
{
  int m_TargetChannel;
  int m_Page;
  int m_Size;
  XiStrItemData m_items[1];
};

/* 2458 */
struct XiStrChannelName
{
  wchar_t m_Name[64];
};

/* 2459 */
struct __unaligned __declspec(align(2)) DefQuerySKIDInsertCurrentUserCnt
{
  char szServerName[41];
  char szServerIp[41];
  int nUserCnt;
};

/* 2460 */
struct __cppobj __declspec(align(4)) XiInsertCurrentUserCnt : XiDBOperation
{
  DefQuerySKIDInsertCurrentUserCnt param;
};

/* 2461 */
struct __cppobj BS_PktBuyHistoryListAck : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int Type;
  __unaligned __declspec(align(1)) unsigned int Size;
  XiStrVisualItemBuyUnit ItemBuyUnit[1];
};

/* 2462 */
struct __cppobj BS_PktCheckTeamNameAck : BS_PktBody
{
  __unaligned __declspec(align(1)) int m_Result;
  wchar_t m_TeamName[17];
};

/* 2463 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktPvpStartReq : BS_PktBody
{
  int m_MapId;
  int m_MapFlag;
  int m_StartTime;
};

/* 2464 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktCheckTeamUrlAck : BS_PktBody
{
  int m_Result;
  char m_TeamUrl[17];
};

/* 2465 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktInstantEvent : BS_PktBody
{
  int nYoungCount;
  int nOldCount;
};

/* 2466 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUpdateQuickSlot : BS_PktBody
{
  unsigned int Slot1;
  unsigned int Slot2;
};

/* 2467 */
struct __cppobj BS_PktUpdateRoomInfo : BS_PktBody
{
  unsigned __int16 m_ObsCount;
};

/* 2468 */
struct XiStrCarInfo::Is
{
  unsigned int CarId;
};

/* 2469 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktIsValidCharNameAck : BS_PktBody
{
  int Invalid;
  __int64 Gid;
};

/* 2470 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAssignHuvControl : BS_PktBody
{
  unsigned __int16 m_Serial;
  unsigned __int16 m_CarSort;
  unsigned int m_nHuvType;
  unsigned int m_nCourseId;
  unsigned int m_RushEndTime;
};

/* 2471 */
struct __unaligned __declspec(align(2)) DefQuerySKIDArbeitRankInsert
{
  int nServerId;
  int nAid;
  int nTime;
  __int64 nCid;
  char szCName[33];
  __int64 nTId;
  char szTeamName[17];
};

/* 2472 */
struct __cppobj __declspec(align(2)) XiInsertArbeitRankDB : XiDBOperation
{
  DefQuerySKIDArbeitRankInsert param1;
  DefQuerySKIDArbeitRankUpdate param2;
};

/* 2473 */
struct HashedVector<TickHandler *,256,32>::Monitor
{
  _RTL_CRITICAL_SECTION m_cs;
};

/* 2474 */
struct __cppobj HashedVector<TickHandler *,256,32>::Vector : std::vector<TickHandler *,std::allocator<TickHandler *> >
{
  HashedVector<TickHandler *,256,32>::Monitor m_monitor;
};

/* 2475 */
struct HashedVector<TickHandler *,256,32>
{
  HashedVector<TickHandler *,256,32>::Vector m_vector[256];
  int m_nCount;
};

/* 2476 */
struct TickTimer::CallTick
{
  int m_nTick;
};

/* 2477 */
struct __cppobj TickTimer : BS_Thread
{
  HashedVector<TickHandler *,256,32> m_tickHandlers;
  unsigned int m_interval;
  bool m_bStop;
  TickTimer::CallTick m_callTick;
};

/* 2478 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktUpgradeCar : BS_PktBody
{
  unsigned int CarID;
  __int64 CurCash;
  bool UseMileage;
};

/* 2479 */
struct __cppobj XiUpdateCarInfoDB : XiDBOperation
{
  DefQuerySKIDUpdateCarInfo param;
};

/* 2480 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktSystemMessage : BS_PktBody
{
  int m_Type;
  int m_Flag;
  unsigned __int16 m_Size;
  wchar_t m_Msg[1];
};

/* 2481 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCBattleRewardItems : BS_PktBody
{
  int m_TargetChannel;
  int m_Page;
  int m_Size;
  XiStrItemData m_items[1];
};

/* 2482 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateCarUpgrade2
{
  int nUpgrade;
  int nServerId;
  __int64 nCid;
  int nCarId;
};

/* 2483 */
struct __cppobj XiDeleteVSItemDB : XiDBOperation
{
  DefQuerySKIDDeleteVSItem param;
};

/* 2484 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktPvpResult : BS_PktBody
{
  int m_ResultKind;
  unsigned int m_TeamPoint[2];
  float m_BestRecord;
  int m_Time;
  int m_Num;
  XiPvpResult m_Result[1];
};

/* 2485 */
struct __unaligned __declspec(align(2)) DefQuerySKIDCloseTeam
{
  char szCloseState[2];
  float fCloseDateOffset;
  int nServerId;
  __int64 nTeamId;
};

/* 2486 */
struct __unaligned __declspec(align(2)) DefQuerySKIDUpdateTeamUrl
{
  char szTeamUrl1[33];
  char szTeamUrl2[33];
  int nServerId;
  __int64 nTeamId;
};

/* 2487 */
struct __cppobj BS_SingletonHeap<BS_GameDB,1>
{
};

/* 2488 */
struct BS_StrUtils::BS_FmtStr<1024>
{
  wchar_t *m_pBuffer;
  int m_BufferLen;
};

/* 2489 */
struct IUnknown
{
  IUnknownVtbl *vfptr;
};

/* 8610 */
typedef int HRESULT;

/* 2490 */
struct IUnknownVtbl
{
  HRESULT (__stdcall *QueryInterface)(IUnknown *this, _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
};

/* 2491 */
struct __cppobj IErrorInfo : IUnknown
{
};

/* 2492 */
struct ATL::CComPtrBase<IErrorInfo>
{
  IErrorInfo *p;
};

/* 2493 */
struct __cppobj ATL::CComPtr<IErrorInfo> : ATL::CComPtrBase<IErrorInfo>
{
};

/* 2494 */
struct __cppobj IErrorRecords : IUnknown
{
};

/* 2495 */
struct ATL::CComPtrBase<IErrorRecords>
{
  IErrorRecords *p;
};

/* 2496 */
struct __cppobj ATL::CComPtr<IErrorRecords> : ATL::CComPtrBase<IErrorRecords>
{
};

/* 2497 */
struct ATL::CDBErrorInfo
{
  ATL::CComPtr<IErrorInfo> m_spErrorInfo;
  ATL::CComPtr<IErrorRecords> m_spErrorRecords;
};

/* 2498 */
struct __cppobj IDBInitialize : IUnknown
{
};

/* 2499 */
struct ATL::CComPtrBase<IDBInitialize>
{
  IDBInitialize *p;
};

/* 2500 */
struct __cppobj ATL::CComPtr<IDBInitialize> : ATL::CComPtrBase<IDBInitialize>
{
};

/* 2501 */
struct ATL::CDataSource
{
  ATL::CComPtr<IDBInitialize> m_spInit;
};

/* 2502 */
struct __cppobj IOpenRowset : IUnknown
{
};

/* 2503 */
struct ATL::CComPtrBase<IOpenRowset>
{
  IOpenRowset *p;
};

/* 2504 */
struct __cppobj ATL::CComPtr<IOpenRowset> : ATL::CComPtrBase<IOpenRowset>
{
};

/* 2505 */
struct ATL::CSession
{
  ATL::CComPtr<IOpenRowset> m_spOpenRowset;
};

/* 2506 */
struct __declspec(align(4)) BS_OleDB
{
  ATL::CDBErrorInfo m_DBErrorInfo;
  ATL::CDataSource m_DataSession;
  ATL::CSession m_Session;
  wchar_t m_ErrorBuffer[255];
  HRESULT m_hResult;
  bool m_bIsOpen;
};

/* 2507 */
struct __cppobj BS_GameDB : BS_SingletonHeap<BS_GameDB,1>
{
  BS_CriticalSection m_lock;
  int m_ServerId;
  BS_StrUtils::BS_FmtStr<1024> FMT;
  BS_OleDB *m_pOleDB;
  BS_Log *m_Log;
};

/* 2508 */
struct DefQuerySKIDGetAuction
{
  int nServerId;
  int nState;
};

/* 2509 */
struct __unaligned __declspec(align(4)) DefQuerySKIDCheckSameTeamChar
{
  __int64 nCId;
  int nServerId;
  __int64 nTeamId;
};

/* 2510 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktServerMessage : BS_PktBody
{
  unsigned int m_ServerId;
};

/* 2511 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktQuestRewardAck : BS_PktBody
{
  unsigned int TableIdx;
  unsigned int GetExp;
  unsigned int GetMoney;
  XiStrExpInfo ExpInfo;
  unsigned __int16 Level;
  unsigned __int16 ItemNum;
  unsigned int RewardItem[3];
};

/* 2512 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktChannelInfoAck : BS_PktBody
{
  XiStrChannelName m_Name;
  sockaddr_in m_Addr;
  unsigned int m_Ticket;
};

/* 2513 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUCPatrolGoalPlace : BS_PktBody
{
  unsigned int TableIdx;
  unsigned int PlaceIdx;
  int PlaceType;
};

/* 2514 */
struct __cppobj BS_PktCreateCharAck : BS_PktBody
{
  XiStrCharName Name;
  __unaligned __declspec(align(1)) __int64 CId;
  int CarId;
};

/* 2515 */
struct XiStrCharKey
{
  XiStrCharName Name;
  __unaligned __declspec(align(1)) __int64 cid;
  __unaligned __declspec(align(1)) int nAvatar;
  __unaligned __declspec(align(1)) int nLevel;
  __unaligned __declspec(align(1)) int nCarId;
  __unaligned __declspec(align(1)) int nCarType;
  __unaligned __declspec(align(1)) int nCarColor;
  __unaligned __declspec(align(1)) int dTime;
  __unaligned __declspec(align(1)) __int64 nTeamId;
  __unaligned __declspec(align(1)) __int64 nTeamMarkId;
  wchar_t szTeamName[13];
  unsigned int nGuild;
};

/* 2516 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUserInfoAck : BS_PktBody
{
  unsigned int Permission;
  unsigned int CharNameNum;
  XiStrCharKey Character[1];
};

/* 2517 */
struct __unaligned __declspec(align(2)) XiStrAuctionItemData
{
  XiStrAuctionClientUnit Client;
  XiStrAuctionUnit Auction;
  XiStrItemUnit Item;
};

/* 2518 */
struct __cppobj BS_PktAuctionListAck : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int AuctionTotalNum;
  __unaligned __declspec(align(1)) unsigned int AuctionNum;
  XiStrAuctionItemData AuctionData[1];
};

/* 2519 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktChaseSwitch : BS_PktBody
{
  unsigned __int16 m_OldSerial;
  unsigned __int16 m_OldCarSort;
  unsigned __int16 m_NewSerial;
  unsigned __int16 m_NewCarSort;
  int m_Time;
};

/* 2520 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAuctionCarComplete : BS_PktBody
{
  unsigned int Serial;
};

/* 2521 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCancelCloseTeam : BS_PktBody
{
  __int64 m_TeamId;
};

/* 2522 */
struct __cppobj BS_PktHuvReq : BS_PktBody
{
  __unaligned __declspec(align(1)) int m_StartTime;
  __unaligned __declspec(align(1)) unsigned int m_Size;
  XiHuvInfo m_huv[1];
};

/* 2523 */
struct __cppobj BS_PktGameCharInfoExAck : BS_PktBody
{
  XiStrCharInfo CharInfo;
  XiStrCarInfo CarInfo;
  XiStrStatInfo StatInfo;
  unsigned int Serial;
  XiStrLocation Location;
};

/* 2524 */
struct __cppobj BS_PktSwitchToOBS : BS_PktBody
{
};

/* 2525 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAuctionCarCompleteAck : BS_PktBody
{
  unsigned int Serial;
  unsigned int Price;
};

/* 2526 */
struct __cppobj BS_PktGameCharInfo : BS_PktBody
{
  XiStrCharName Name;
};

/* 2527 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktBuyItem : BS_PktBody
{
  unsigned int TableIdx;
  unsigned int Num;
};

/* 2528 */
struct __unaligned __declspec(align(4)) DefQuerySKIDBlockGame
{
  float fDay;
  __int64 nCid;
};

/* 2529 */
struct __cppobj XiCBattleLog : XiDBOperation
{
  DefQuerySKIDInsertCBattleLog param;
};

/* 2530 */
struct __unaligned __declspec(align(4)) XiCharacterTeamParam
{
  __int64 Cid;
  __int64 TeamId;
  unsigned int Ip;
};

/* 2531 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktNotifyDelCharacter : BS_PktBody
{
  unsigned int m_Size;
  XiCharacterTeamParam m_unit[1];
};

/* 2532 */
struct __unaligned __declspec(align(2)) BS_PktCBattleState::SimpleTeamInfo
{
  wchar_t Name[13];
  __int64 TeamId;
  __int64 TeamMarkId;
};

/* 2533 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCBattleState : BS_PktBody
{
  unsigned int m_StartTime;
  unsigned int m_EndTime;
  int m_Area;
  int m_Channel;
  BS_PktCBattleState::SimpleTeamInfo m_Def;
  BS_PktCBattleState::SimpleTeamInfo m_Atk;
  int SubResult[4];
};

/* 2534 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktDeleteStickerCatalogAck : BS_PktBody
{
  __int64 m_Cid;
  __int64 m_StickerId;
  int m_Ret;
};

/* 2535 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktPvpFinish : BS_PktBody
{
  int m_FinishTime;
};

/* 2536 */
struct DefQuerySKIDGetCBattleNextMatch
{
  int nServerId;
  int nChannelId;
  int nBattleId;
};

/* 2537 */
struct __cppobj XiUpdateTeamTaxIncomeDB : XiDBOperation
{
  DefQuerySKIDUpdateTeamTaxIncome param;
};

/* 2538 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktPartyEnChantUpdate : BS_PktBody
{
  XiStrEnChantBonus EnChantBonus;
};

/* 2539 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCBattleInfo : BS_PktBody
{
  int nAct;
};

/* 2540 */
struct __cppobj BS_PktItemList : BS_PktBody
{
};

/* 2541 */
struct DefQuerySKIDHancoinLog
{
  char szCode[11];
  __unaligned __declspec(align(1)) int nServerId;
  __unaligned __declspec(align(1)) __int64 nCid;
  char szCName[33];
  char szIp[21];
  char szKind[2];
  char szItemCode[33];
  int nHancoin;
  int nLevel;
};

/* 2542 */
struct __cppobj BS_PktSendVisualItem : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int TableIdx;
  XiStrPlateName PlateName;
  __unaligned __declspec(align(1)) unsigned int PeriodIdx;
  XiStrCharName DstName;
  XiStrGiftMsg GiftMsg;
};

/* 2543 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGetDateTime : BS_PktBody
{
  int Action;
  int GlobalTime;
  float LocalTime;
};

/* 2544 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktMailContent : BS_PktBody
{
  __int64 m_mid;
  __int64 m_sid;
  __int64 m_rid;
  XiStrCharName m_senderName;
  int m_sendDate;
  int m_Kind;
  int m_State;
  wchar_t m_Subject[21];
  __int64 m_Gold;
  char m_Item[101];
  int m_MsgLen;
};

/* 2545 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateCarUpgrade5
{
  int nUpgrade;
  int nServerId;
  __int64 nCid;
  int nCarId;
};

/* 2546 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUCPatrolGiveUpAck : BS_PktBody
{
  unsigned int TableIdx;
};

/* 2547 */
struct __cppobj BS_PktExitRushZoneAck : BS_PktBody
{
};

/* 2548 */
struct __unaligned __declspec(align(2)) XiStrAuctionCarData
{
  XiStrAuctionClientUnit Client;
  XiStrAuctionUnit Auction;
  XiStrCarUnit Car;
};

/* 2549 */
struct __cppobj BS_PktAuctionCarListAck : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int AuctionTotalNum;
  __unaligned __declspec(align(1)) unsigned int AuctionNum;
  XiStrAuctionCarData AuctionData[1];
};

/* 2550 */
struct DefQuerySKIDJoinTeam
{
  __int64 nTeamId1;
  int nTeamRank;
  int nServerId;
  __int64 nCid;
  __int64 nTeamId2;
};

/* 2551 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateAuction
{
  int nState;
  int nServerId;
  __int64 nCid;
  int nRegId;
};

/* 2552 */
struct __cppobj XiUpdateAuctionDB : XiDBOperation
{
  DefQuerySKIDUpdateAuction param;
};

/* 2553 */
struct XiStrSimpleCharInfo
{
  unsigned int Serial;
  wchar_t Name[16];
  unsigned int Level;
  unsigned int CarLevel;
};

/* 2554 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktInviteeListAck : BS_PktBody
{
  unsigned int m_Size;
  unsigned int m_Page;
  XiStrSimpleCharInfo m_invitee[1];
};

/* 2555 */
struct DefQuerySKIDUpdatePartInvenIdx
{
  int nPartInvenIdx;
  int nServerId;
  __int64 nCid;
};

/* 2556 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGetCouponForVarAck : BS_PktBody
{
  XiStrCouponForVar CouponForVar;
};

/* 2557 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktArbeitReadyAck : BS_PktBody
{
  unsigned int Serial;
  unsigned int Ready;
};

/* 2558 */
struct __cppobj BS_PktMoveVehicleP2P : BS_PktBody
{
  XiCarMove m_move;
  XiCarState m_state;
  int dueTime;
  int areaId;
};

/* 2559 */
struct __unaligned __declspec(align(1)) DefQuerySKIDGetPlayMode
{
  int nServerId;
  __int64 nCid;
  char szMode[33];
};

/* 2560 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktReplenishItemAck : BS_PktBody
{
  unsigned int InvenIdx;
  unsigned int VSInvenIdx;
  int ExpireHour;
  int ReplenishedHour;
};

/* 2561 */
struct DefQuerySKIDCreateUser
{
  char szMemberId[33];
  char szMemberNum[21];
};

/* 2562 */
struct __cppobj BS_PktUnregisterRoomObserver : BS_PktBody
{
};

/* 2563 */
struct __cppobj BS_PktExitCBattleChannel : BS_PktBody
{
};

/* 2564 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktBlockAddByNameAck : BS_PktBody
{
  XiStrFriend Friend;
};

/* 2565 */
struct DefQuerySKIDUpdateUserLogin
{
  char szIp[21];
  char szMemberId[33];
};

/* 2566 */
struct __cppobj __declspec(align(4)) XiUpdateUserLoginDB : XiDBOperation
{
  DefQuerySKIDUpdateUserLogin param;
};

/* 2567 */
struct BS_PktChannelOwnershipListAck::Unit
{
  int ChannelId;
  float AccTax;
  int SuccessiveWin;
  int MajorChannelWin;
  int TotalChannelWin;
  XiSmpTeamInfo OwnTeam;
};

/* 2568 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktChannelOwnershipListAck : BS_PktBody
{
  unsigned int ChannelNum;
  BS_PktChannelOwnershipListAck::Unit m_Channel[1];
};

/* 2569 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateCharacterDate
{
  int nLogin;
  int nLogout;
  int nServerId;
  __int64 nCid;
};

/* 2570 */
struct __cppobj XiUpdateCharacterDateDB : XiDBOperation
{
  DefQuerySKIDUpdateCharacterDate param;
};

/* 2571 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktInstantRequest : BS_PktBody
{
  unsigned int MapId;
};

/* 2572 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktStickerSearchAck : BS_PktBody
{
  int m_Category;
  unsigned int m_Offset;
  unsigned int m_TotalSize;
  unsigned int m_UpdateTime;
  unsigned int m_Size;
  XiStickerCatalog m_unit[1];
};

/* 2573 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktDeleteStickerCatalog : BS_PktBody
{
  __int64 m_Cid;
  __int64 m_StickerId;
};

/* 2574 */
struct __cppobj BS_PktAuctionCarSearchAck : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int AuctionTotalNum;
  __unaligned __declspec(align(1)) unsigned int AuctionNum;
  XiStrAuctionCarData AuctionData[1];
};

/* 2575 */
struct __cppobj BS_PktReplaceCarAck : BS_PktBody
{
  unsigned __int16 OldSerial;
  unsigned __int16 NewSerial;
  unsigned __int16 CarSort;
  unsigned __int16 HuvType;
  __unaligned __declspec(align(1)) float Health;
  XiCarMove m_move;
};

/* 2576 */
struct BS_StrUtils::BS_MBtoWide
{
  wchar_t *m_pBuffer;
  int m_StrLen;
};

/* 2577 */
struct BS_StrUtils::BS_Token
{
  std::vector<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > m_TokenList;
};

/* 2578 */
struct BS_StrUtils::BS_WidetoMB
{
  char *m_pBuffer;
  int m_StrLen;
};

/* 2579 */
struct __unaligned __declspec(align(1)) DefQuerySKIDInsertPlayMode
{
  int nServerId;
  __int64 nCid;
  char szCName[33];
  char szMode[33];
  int nTryCnt;
  int nWinCnt;
  int nPoint;
  int nPlayTime;
  int nExp;
  int nMoney;
  int nBestCnt;
  int nRetireCnt;
  char szMemberId[33];
};

/* 2580 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktStickerUploadAck : BS_PktBody
{
  int m_Result;
  wchar_t m_Name[32];
  __int64 m_ImageId;
};

/* 2581 */
struct __cppobj XiDeleteAuctionCarDB : XiDBOperation
{
  DefQuerySKIDDeleteAuctionCar param;
};

/* 2582 */
struct DefQuerySKIDCheckCharacterName
{
  char szMemberId[33];
  char szCName[33];
  char szCName1[33];
};

/* 2583 */
struct XiRealMatchStat
{
  XiStrStatInfo m_StatInfo;
  XiStrEnChantBonus m_EnChantBonus;
  XiStrEnChantBonus m_EnChantPartyBonus;
};

/* 2584 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetTeamInfo
{
  int nServerId;
  __int64 nTeamId;
};

/* 2585 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAuctionCarOn : BS_PktBody
{
  unsigned int TableIdx;
  unsigned int InvenIdx;
  unsigned int CarId;
  unsigned int Price;
};

/* 2586 */
struct __cppobj BS_PktMyCurSticker : BS_PktBody
{
};

/* 2587 */
struct __cppobj BS_PktTradePropose : BS_PktBody
{
  XiStrCharName Name;
  unsigned int TradeIdx;
};

/* 2588 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktBuyCarAck : BS_PktBody
{
  XiStrCarInfo CarInfo;
  unsigned int Gold;
};

/* 2589 */
struct __cppobj BS_PktExitClient : BS_PktBody
{
};

/* 2590 */
struct __cppobj BS_PktRoomModify : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int m_RoomId;
  unsigned __int16 m_MapId;
  unsigned __int16 m_MapFlag;
  unsigned __int16 m_PlayerCapacity;
  XiPvpRoomSlot m_Slot;
};

/* 2591 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktPvpGo : BS_PktBody
{
  int m_StartTime;
  int m_CountDown;
  char m_BattleString[32];
};

/* 2592 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAuctionOnAck : BS_PktBody
{
  unsigned int InvenIdx;
  unsigned int Tex;
  XiStrAuctionItemDataIn AuctionData;
};

/* 2593 */
struct __cppobj BS_PktObserverSupport : BS_PktBody
{
  __unaligned __declspec(align(1)) int m_Kind;
  __unaligned __declspec(align(1)) unsigned int m_TargetSerial;
  XiStrCharName m_Name;
};

/* 2594 */
struct __unaligned __declspec(align(2)) DefQuerySKIDUpdateGMCmdLine
{
  char szReadYN[2];
  __int64 nCmd;
};

/* 2595 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktLobbyTimeAck : BS_PktBody
{
  float LocalTime;
  unsigned int Time_t;
};

/* 2596 */
struct __cppobj BS_PktServerMessageAck : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int m_ServerId;
  __unaligned __declspec(align(1)) unsigned int m_Size;
  wchar_t m_Message[1];
};

/* 2597 */
struct __cppobj XiInsertItemDB : XiDBOperation
{
  DefQuerySKIDInsertItem param;
};

/* 2598 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktBattleReq : BS_PktBody
{
  XiVec4 m_Pos;
};

/* 2599 */
struct XiStrPartyName
{
  wchar_t m_Name[64];
};

/* 2600 */
struct __cppobj DefQuerySKIDLogTest
{
};

/* 2601 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktInviteeList : BS_PktBody
{
  int m_PvpChannelId;
};

/* 2602 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktChatBlock : BS_PktBody
{
  bool bisBlock;
  int date;
};

/* 2603 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktModifyItem : BS_PktBody
{
  unsigned int SrcInvenIdx;
  unsigned int TransInvenIdx;
  int TransNum;
};

/* 2604 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktRushResult : BS_PktBody
{
  __int64 m_RewardMoney;
  __int64 m_ResultMoney;
  XiStrCharName m_TeamName;
  XiStrTeamName m_CharName;
};

/* 2605 */
struct __unaligned __declspec(align(2)) DefQuerySKIDInsertAuctionCar
{
  int nServerId;
  __int64 nCid;
  char szCName[33];
  int nRegId;
  char szItemId[33];
  int nInvenIdx;
  int nCarId;
  int nCarType;
  int nBaseColor;
  int nGrade;
  int nSlot;
  float fMitron;
  float fKMH;
  int nPrice;
  int nState;
};

/* 2606 */
struct __cppobj __declspec(align(4)) XiInsertAuctionCarDB : XiDBOperation
{
  DefQuerySKIDInsertAuctionCar param;
};

/* 2607 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktHuvTimeout : BS_PktBody
{
  int Timeout;
  int Penalty;
};

/* 2608 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGMKickAck : BS_PktBody
{
  int m_Idx;
  int m_Ret;
};

/* 2609 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetRecommendFriend
{
  __int64 nCid;
  int nServerId;
};

/* 2610 */
struct XiChaseSpawnListContainer
{
  XiChaseSpawnListContainerVtbl *vfptr;
};

/* 2612 */
struct XiChaseSpawnListContainerVtbl
{
  void (__thiscall *Resize)(XiChaseSpawnListContainer *this, int);
  void (__thiscall *Add)(XiChaseSpawnListContainer *this, CHASESPAWN_INFO *);
};

/* 2611 */
struct CHASESPAWN_INFO
{
  int nCityIdx;
  int nPointID;
  unsigned __int16 tszPosName[64];
};

/* 2613 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktFriendRequest : BS_PktBody
{
  XiStrFriend Friend;
};

/* 2614 */
struct XiPvpRoomInfo
{
  unsigned int m_RoomId;
  unsigned __int16 m_MapFlag;
  unsigned __int16 m_Reserve;
  unsigned int m_CreateTime;
  unsigned __int16 m_MapId;
  unsigned __int16 m_State;
  __int16 m_AreaId;
  __int16 m_RoomType;
  unsigned __int16 m_PlayerCount;
  unsigned __int16 m_PlayerCapacity;
  unsigned __int16 m_VeiwerCount;
  unsigned __int16 m_VeiwerCapacity;
  wchar_t m_RoomName[30];
  __int64 m_TeamId;
  __int64 m_TeamMarkId;
};

/* 2615 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktRoomListAck : BS_PktBody
{
  unsigned int m_Page;
  unsigned int m_TotalPage;
  unsigned int m_Size;
  int m_TimeStamp;
  XiPvpRoomInfo m_unit[1];
};

/* 2616 */
struct RoomListBuilder
{
  BS_ProtocolPacket *m_pPacket;
  BS_PktRoomListAck *m_pAckMsg;
  unsigned int m_MaxSize;
};

/* 2617 */
struct DefQuerySKIDCheckPREventCount
{
  char szMemberId[33];
  char szEventName[33];
};

/* 2618 */
struct __cppobj BS_PktLeaveTeamAck : BS_PktBody
{
  __unaligned __declspec(align(1)) int m_Result;
  unsigned __int16 m_Age;
};

/* 2619 */
struct __unaligned __declspec(align(1)) DefQuerySKIDInsertAuctionMileage
{
  int nServerId;
  __int64 nCid;
  char szCName[33];
  int nRegNum;
  int nBuyNum;
  int nSellNum;
};

/* 2620 */
struct DefQuerySKIDInsertCouponParam
{
  int nServerId;
  __unaligned __declspec(align(1)) __int64 nCid;
  char szCType[16];
  float fValue;
};

/* 2621 */
struct __cppobj XiInsertCouponParamDB : XiDBOperation
{
  DefQuerySKIDInsertCouponParam param;
};

/* 2622 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktStickerNameCheck : BS_PktBody
{
  __int64 m_Cid;
  wchar_t m_CName[32];
  wchar_t m_SName[32];
  int m_Category;
};

/* 2623 */
struct DefQuerySKIDGetUserDateFromLogout
{
  char szMemberID[33];
};

/* 2624 */
struct __cppobj BS_PktMita500BuffInfo : BS_PktBody
{
  XiMita500Buff m_Mita500Buff;
  bool m_bNewBuff;
};

/* 2625 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktMyAuctionCarListAck : BS_PktBody
{
  unsigned int ListUpdate;
  unsigned int AuctionNum;
  XiStrAuctionCarDataIn AuctionData[1];
};

/* 2626 */
struct __cppobj BS_PktMita500GetBuff : BS_PktBody
{
};

/* 2627 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktSetTeamUrlAck : BS_PktBody
{
  int m_Result;
  __int64 m_TeamId;
  char m_TeamUrl[33];
};

/* 2628 */
struct __unaligned __declspec(align(1)) DefQuerySKIDGetContribCount1
{
  char szMemberId[33];
  int nThemeId;
  char szDate1[16];
  char szDate2[16];
};

/* 2629 */
struct XiStrCharKey::Is
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > Name;
};

/* 2630 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktVisualItemListAck : BS_PktBody
{
  unsigned int ListUpdate;
  unsigned int ItemNum;
  XiStrMyVSItem MyItem[1];
};

/* 2631 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktChannelRoomJoin : BS_PktBody
{
  unsigned __int16 m_Serial;
  unsigned __int16 m_Age;
  XiPvpUserInfo m_UserInfo;
  XiCarAttr m_CarAttr;
  unsigned int m_PvpChannelId;
  unsigned int m_RoomId;
  unsigned int m_RoomLifeId;
  XiPlayerInfo m_PlayerInfo;
  XiPvpRoomSlot m_Slot;
};

/* 2632 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktSecureJoinOBS : BS_PktBody
{
  unsigned int m_RoomId;
  wchar_t m_RoomPass[30];
};

/* 2633 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAllAreaStatusAck : BS_PktBody
{
  unsigned int m_UserCnt[100];
  unsigned int m_PvpAreaCnt;
  unsigned int m_PvpUserCnt;
};

/* 2634 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCarPosAck : BS_PktBody
{
  XiVec4 m_Pos;
  int m_CityId;
};

/* 2635 */
struct __unaligned __declspec(align(4)) DefQuerySKIDSetPREventValue
{
  char szSParam[33];
  __int64 nParam;
  char szEParam[33];
  char szMemberId[33];
  char szEventName[33];
};

/* 2636 */
struct __cppobj BS_PktOpenChat : BS_PktBody
{
  wchar_t m_Name[10];
};

/* 2637 */
struct DefQuerySKIDGetCharMemberInfo
{
  __int64 nCid;
};

/* 2638 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetCarList
{
  int nServerId;
  __int64 nCid;
};

/* 2639 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktQuestPositionAck : BS_PktBody
{
  unsigned int m_MapID;
  XiVec4 m_Pos;
};

/* 2640 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUpdateCouponParam : BS_PktBody
{
  unsigned int CType;
  float Value;
};

/* 2641 */
struct __cppobj BS_PktGetMyHancoin : BS_PktBody
{
};

/* 2642 */
struct BS_SwitchableRef<std::map<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> > > >
{
  int m_time;
  std::map<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> > > m_object[2];
  std::map<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> > > *m_current;
  std::map<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> > > *m_back;
};

/* 2643 */
struct __cppobj BS_PktCheckOutLobby : BS_PktBody
{
};

/* 2644 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUCBossPatrolStart : BS_PktBody
{
  unsigned int MapId;
  int Time;
};

/* 2645 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUpgradeItemDoubleAck : BS_PktBody
{
  unsigned int Gold;
  unsigned int Result1;
  unsigned int Result2;
  unsigned int SrcInvenIdx;
  unsigned int AddInvenIdx;
  int AddNum;
  unsigned int VSInvenIdx;
};

/* 2646 */
struct __cppobj __unaligned __declspec(align(4)) XiUpdateAuctionMileageDB : XiDBOperation
{
  DefQuerySKIDUpdateAuctionMileage param;
};

/* 2647 */
struct __cppobj BS_PktPvpEnd : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int m_Serial;
  __unaligned __declspec(align(1)) int m_EndType;
  __unaligned __declspec(align(1)) int m_EndTime;
  __unaligned __declspec(align(1)) float m_Record;
  __unaligned __declspec(align(1)) int m_Rank;
  __unaligned __declspec(align(1)) float m_TotalDistance;
  XiPvpEventCounter m_eventCounter;
};

/* 2648 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktQuestGiveUp : BS_PktBody
{
  unsigned int TableIdx;
};

/* 2649 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktVisualItemUseAck : BS_PktBody
{
  unsigned int InvenIdx;
  unsigned int CarID;
};

/* 2650 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktImageSave : BS_PktBody
{
  unsigned __int16 m_PartIndex;
  unsigned __int16 m_Size;
  unsigned int m_TotalSize;
  char m_data[1];
};

/* 2651 */
struct DefQuerySKIDUpdateCouponParam
{
  float fValue;
  int nServerId;
  __int64 nCid;
  char szCType[16];
};

/* 2652 */
struct __cppobj BS_PktBattleEnd : BS_PktBody
{
  unsigned __int16 m_Serial;
  unsigned int m_Type;
  unsigned int m_Result;
  XiVec4 m_Pos;
  XiVec4 m_Vel;
  int m_Time;
};

/* 2653 */
struct DefQuerySKIDCalcChannelTax
{
  int nServerId;
};

/* 2654 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktItemExpireCmd : BS_PktBody
{
  unsigned int InvenIdx;
  unsigned int TableIdx;
  unsigned int ItemCmd;
};

/* 2655 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktLog : BS_PktBody
{
  unsigned int Key;
  int NArg1;
  int NArg2;
  int NArg3;
  char Name[20];
  char Content[64];
};

/* 2656 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktRoomCreate : BS_PktBody
{
  XiPvpUserInfo m_UserInfo;
  __int16 m_RoomType;
  unsigned __int16 m_MapId;
  unsigned __int16 m_PlayerCapacity;
  unsigned __int16 m_MapFlag;
  wchar_t m_RoomName[30];
  wchar_t m_RoomPass[30];
};

/* 2657 */
struct XiStrRankInfo
{
  XiStrCharName CharName;
  XiStrTeamName TeamName;
  unsigned int Data;
  unsigned int Rank;
};

/* 2658 */
struct XiStrArbeitInfo
{
  XiStrRankInfo Rank[3];
  XiRankUnit MyRankUnit[6];
  unsigned int Idx;
  unsigned int Aver;
};

/* 2659 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktArbeitListAck : BS_PktBody
{
  unsigned int GivePostIdx;
  unsigned int ArbeitNum;
  XiStrArbeitInfo ArbeitInfo[1];
};

/* 2660 */
struct __cppobj BS_PktTradeItemOffAck : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int TradeIdx;
  __unaligned __declspec(align(1)) int ItemIdx;
  XiStrCharName Name;
};

/* 2661 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAuctionCarList : BS_PktBody
{
  unsigned int Offset;
  unsigned int ListNum;
  unsigned int Grade;
  unsigned int SortType;
  unsigned int StLevel;
  unsigned int EnLevel;
};

/* 2662 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGetTeamMark : BS_PktBody
{
  __int64 m_TeamId;
};

/* 2663 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktBuyItemAck : BS_PktBody
{
  unsigned int TableIdx;
  unsigned int Num;
  unsigned int Gold;
};

/* 2664 */
struct DefQuerySKIDCreateUnalCoin
{
  char szMemberId[33];
};

/* 2665 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktItemUseEx : BS_PktBody
{
  unsigned int DestInvenIdx;
  unsigned int SrcInvenIdx;
  unsigned int CarID;
};

/* 2666 */
struct __cppobj BS_PktMita500Position : BS_PktBody
{
  __unaligned __declspec(align(1)) int m_GetCnt;
  unsigned __int16 m_Size;
  XiMita500Info m_Info[1];
};

/* 2667 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGMStatus : BS_PktBody
{
  int m_Idx;
};

/* 2668 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktInstantReward : BS_PktBody
{
  unsigned int TableIdx;
};

/* 2669 */
struct __cppobj BS_PktJoinTeamConfirm : BS_PktBody
{
  XiTeamBind m_bind;
  int m_Result;
};

/* 2670 */
struct DefQuerySKIDCheckPCBangIP
{
  char szServerIp[33];
};

/* 2671 */
struct __unaligned __declspec(align(2)) DefQuerySKIDInsertSTItem
{
  int nServerId;
  __int64 nCid;
  char szCName[33];
  int nInvenIdx;
  int nCarId;
  int nStickerId;
  char szStickerName[33];
  int nColor;
  int nPosX;
  int nPosY;
  int nScaleX;
  int nScaleY;
  int nRotate;
  int nFlip;
  int nPart;
};

/* 2672 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktGetImageAck : BS_PktBody
{
  int m_Act;
  int m_Result;
  __int64 m_ImageId;
  __int64 m_ObjectId;
  unsigned int m_ColorKey;
  unsigned int m_ImageAttr;
  int m_Page;
  int m_Size;
  int m_TotalSize;
  char m_Data[1];
};

/* 2673 */
struct __cppobj __unaligned __declspec(align(4)) BS_PktGetVisualItemAck : BS_PktBody
{
  unsigned int Type;
  __int64 GID;
  unsigned int InvenIdx;
  unsigned int TableIdx;
  int Period;
  XiStrCharName DstName;
};

/* 2674 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktArbeitRankListAck : BS_PktBody
{
  unsigned int ArbeitIdx;
  unsigned int PageIdx;
  unsigned int Num;
  XiStrRankInfo RankInfo[1];
};

/* 2675 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktVisualItemUse : BS_PktBody
{
  unsigned int InvenIdx;
  unsigned int CarID;
};

/* 2676 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktInstantComplete : BS_PktBody
{
  unsigned int TableIdx;
};

/* 2677 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUnEquipItemAck : BS_PktBody
{
  unsigned int InvenIdx;
  unsigned int CarID;
};

/* 2678 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateCarRating
{
  float fCarRat;
  int nServerId;
  __int64 nCid;
  int nCarId;
};

/* 2679 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktServerConfig : BS_PktBody
{
  int CarAuction;
};

/* 2680 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktArbeitList : BS_PktBody
{
  unsigned int GivePostIdx;
};

/* 2681 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUserAuthAck : BS_PktBody
{
  unsigned int m_Ticket;
  unsigned int m_Ret;
  unsigned int m_Time;
  char m_STicket[64];
};

/* 2682 */
struct XiStrCarSlot
{
  int nSpeed;
  int nCrash;
  int nAccel;
  int nBoost;
  int nOpSpeed;
  int nOpCrash;
  int nOpAccel;
  int nOpBoost;
};

/* 2683 */
struct DefQuerySKIDDeleteAuction
{
  int nServerId;
  __unaligned __declspec(align(1)) __int64 nCid;
  int nRegId;
};

/* 2684 */
struct __cppobj XiDeleteAuctionDB : XiDBOperation
{
  DefQuerySKIDDeleteAuction param;
};

/* 2685 */
struct __cppobj BS_PktRecommendFriendReward : BS_PktBody
{
  XiStrCharName m_NewCommer;
  XiStrCharName m_FriendName;
};

/* 2686 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAuctionBuy : BS_PktBody
{
  unsigned int Serial;
};

/* 2687 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktLeaveTeam : BS_PktBody
{
  __int64 m_TeamId;
};

/* 2688 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktStickerListAck : BS_PktBody
{
  int m_Category;
  unsigned int m_Offset;
  unsigned int m_TotalSize;
  unsigned int m_UpdateTime;
  unsigned int m_Size;
  XiStickerCatalog m_unit[1];
};

/* 2689 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGMCmdAck : BS_PktBody
{
  int m_Idx;
  int m_Ret;
};

/* 2690 */
struct __cppobj __declspec(align(4)) XiUpdateArbeitRankDB : XiDBOperation
{
  DefQuerySKIDArbeitRankUpdate param;
};

/* 2691 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUpdateFriend : BS_PktBody
{
  XiStrFriend Friend;
};

/* 2692 */
struct WaitBlock
{
  BS_Session *m_pSession;
};

/* 2693 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktQuestFailAck : BS_PktBody
{
  unsigned int TableIdx;
};

/* 2694 */
struct DefQuerySKIDPubAuth
{
  char szMemberId[33];
  char szPassword[33];
};

/* 2695 */
struct DefQuerySKIDDeleteItem
{
  int nServerId;
  __unaligned __declspec(align(1)) __int64 nCid;
  int nInvenIdx;
};

/* 2696 */
struct __cppobj XiDeleteItemDB : XiDBOperation
{
  DefQuerySKIDDeleteItem param;
};

/* 2697 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktStickerUpload : BS_PktBody
{
  unsigned int m_Index;
  unsigned int m_ImageAttr;
  unsigned int m_ColorKey;
  wchar_t m_Name[32];
  __int64 m_Cid;
  wchar_t m_CName[32];
  int m_Category;
};

/* 2698 */
struct DefQuerySKIDInsertCBattleRec
{
  int nServerId;
  int nChannelId;
  int nBattleId;
  int nMatchId;
  int nRound;
  __unaligned __declspec(align(1)) __int64 nTeamId;
  __unaligned __declspec(align(1)) __int64 nCid;
  int nAttackMode;
  int nCarId;
  int nCarType;
  int nRank;
  int nPoint;
};

/* 2699 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUnEquipVisualItem : BS_PktBody
{
  unsigned int InvenIdx;
  unsigned int CarID;
};

/* 2700 */
struct __cppobj BS_PktFlushCast : BS_PktBody
{
};

/* 2701 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktObserveMode : BS_PktBody
{
  unsigned int m_mode;
  int m_areaId;
  unsigned int m_Serial;
};

/* 2702 */
struct XiGMCmdLine
{
  __int64 nCmdId;
  char szCmd[1024];
};

/* 2703 */
struct __unaligned __declspec(align(4)) DefQuerySKIDClearTeamInfo
{
  int nServerId;
  __int64 nTeamId;
};

/* 2704 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktReplenishItem : BS_PktBody
{
  unsigned int InvenIdx;
  unsigned int VSInvenIdx;
};

/* 2705 */
struct DefQuerySKIDUpdateVisualItemHistory
{
  int nState;
  int nUseTime;
  __int64 nGid;
};

/* 2706 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktMyStickerListAck : BS_PktBody
{
  unsigned int m_nSize;
  unsigned int m_nListUpdate;
  XiStrMySTItem m_stickerItem[1];
};

/* 2707 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCBattleRoomReadyAck : BS_PktBody
{
  int Target;
  int Result;
};

/* 2708 */
struct DefQuerySKIDGetAuctionCar
{
  int nServerId;
  int nState;
};

/* 2709 */
struct __cppobj BS_PktPartyReject : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int m_Serial;
  __unaligned __declspec(align(1)) unsigned int m_Ticket;
  XiStrPartyMemberInfo m_memberinfo;
  wchar_t m_Msg[100];
};

/* 2710 */
struct __cppobj BS_PktRecommendFriendAck : BS_PktBody
{
  __unaligned __declspec(align(1)) int m_Result;
  XiStrCharName m_FriendName;
};

/* 2711 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktRoomIdDirectJoin : BS_PktBody
{
  int m_nPvpChannelId;
  unsigned int m_Serial;
  XiPvpUserInfo m_UserInfo;
  XiPlayerInfo m_PlayerInfo;
  XiCarAttr m_CarAttr;
  XiPvpRoomFilter m_RoomFilter;
  unsigned int m_RoomId;
};

/* 2712 */
struct XiStrCouponParamID
{
  wchar_t m_Name[16];
};

/* 2713 */
struct DefQuerySKIDCollectChannelTax
{
  int nServerId;
};

/* 2714 */
struct DefQuerySKIDGetCarInfo
{
  int nServerId;
  __unaligned __declspec(align(1)) __int64 nCid;
  int nCarId;
};

/* 2715 */
struct DefQuerySKIDGetCBattleWinCount
{
  int nServerId;
  int nChannelId;
  __int64 nMasterTeam;
};

/* 2716 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktMoneyMessage : BS_PktBody
{
  int m_Kind;
  int m_MsgLen;
  __int64 m_DeltaMoney;
  __int64 m_ResultMoney;
};

/* 2717 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktOpenCouponAck : BS_PktBody
{
  unsigned int Type;
  int StampIdx;
};

/* 2718 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktFuelChargeRes : BS_PktBody
{
  XiStrFuelChargeRes res;
};

/* 2719 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAuctionCompleteAck : BS_PktBody
{
  unsigned int Serial;
  unsigned int Price;
};

/* 2720 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktMyAuctionListAck : BS_PktBody
{
  unsigned int ListUpdate;
  unsigned int AuctionNum;
  XiStrAuctionItemDataIn AuctionData[1];
};

/* 2721 */
struct __cppobj BS_PktLevelUp : BS_PktBody
{
  XiStrCharName Name;
  unsigned int Level;
};

/* 2722 */
struct DefQuerySKIDUpdateCBattleRacerInfo
{
  int nRaceCnt;
  int nRoundWinCnt;
  int nPoint;
  int nServerId;
  int nChannelId;
  int nBattleId;
  __int64 nTeamId;
  __int64 nCid;
};

/* 2723 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktMyTeamInfoAck : BS_PktBody
{
  unsigned int m_Act;
  __int64 m_Cid;
  int m_TeamRank;
  XiStrTeamInfo m_TeamInfo;
  unsigned __int16 m_Age;
};

/* 2724 */
struct __cppobj BS_PktLoadCharAck : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int m_ServerId;
  __unaligned __declspec(align(1)) unsigned int m_ServerStartTime;
  XiStrCharInfo CharInfo;
  __unaligned __declspec(align(1)) unsigned int m_nCarSize;
  XiStrCarInfo CarInfo[1];
};

/* 2725 */
struct DefQuerySKIDGetCidEx
{
  char szCName[33];
};

/* 2726 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktLobbyTime : BS_PktBody
{
  float LocalTime;
};

/* 2727 */
union $43FC83DAC0138A0340A76C16734A339F
{
  int nTime;
  float fTime;
};

/* 2728 */
struct __cppobj BS_PktUDPSync : BS_PktBody
{
  __unaligned __declspec(align(1)) int m_Serial;
  __unaligned __declspec(align(1)) $43FC83DAC0138A0340A76C16734A339F m_Local;
  __unaligned __declspec(align(1)) int m_nGlobalTime;
  __int16 m_AckType;
};

/* 2729 */
struct __cppobj DefQuerySKIDGetTime
{
};

/* 2730 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGMKick : BS_PktBody
{
  int m_Idx;
  char m_cname[32];
  int m_time;
};

/* 2731 */
struct __cppobj BS_PktJoinChannelAck : BS_PktBody
{
  wchar_t m_Name[10];
  wchar_t m_Player[16];
  unsigned __int16 m_MySerial;
  unsigned __int16 m_MyAge;
};

/* 2732 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktMailSet : BS_PktBody
{
  __int64 m_mid;
  int m_cmd;
};

/* 2733 */
struct __unaligned __declspec(align(4)) DefQuerySKIDDeleteAuctionMileage
{
  int nServerId;
  __int64 nCid;
};

/* 2734 */
struct XiCharacterTeamParam::Is
{
  __int64 Cid;
};

/* 2735 */
struct DefQuerySKIDGetCBattleLastOwner
{
  int nServerId;
  int nChannelId;
  int nBattleId;
};

/* 2736 */
struct __cppobj BS_PktCBattleInfoAck : BS_PktBody
{
  __unaligned __declspec(align(1)) int nAct;
  __unaligned __declspec(align(1)) unsigned int m_BattleTime;
  __unaligned __declspec(align(1)) int m_Page;
  __unaligned __declspec(align(1)) int m_Size;
  XiCBattleChannel m_channel[1];
};

/* 2737 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktLeaveArea : BS_PktBody
{
  int m_Area;
};

/* 2738 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktChaseRequest : BS_PktBody
{
  bool m_Now;
  XiVec4 m_StartPos;
};

/* 2739 */
struct __cppobj BS_PktTradeCompleteAck : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int TradeIdx;
  __unaligned __declspec(align(1)) unsigned int LockState;
  XiStrCharName Name;
};

/* 2740 */
struct __unaligned __declspec(align(1)) DefQuerySKIDInsertServerTick
{
  int nServerId;
  char szServerName[41];
  int nServerTick;
};

/* 2741 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAuctionCancel : BS_PktBody
{
  unsigned int Serial;
};

/* 2742 */
struct __unaligned __declspec(align(1)) DefQuerySKIDInsertPREvent
{
  int nServerId;
  __int64 nCid;
  char szCName[33];
  char szMemberID[33];
  char szEventName[21];
  __int64 nParam;
  char szEventSParam[33];
  char szEventEParam[33];
  char szCDate[20];
};

/* 2743 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktMyCityPosition : BS_PktBody
{
  int m_ChannelId;
};

/* 2744 */
struct CGlobalProperty
{
  std::map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CPropertySet *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,CPropertySet *> > > m_mapPropertySet;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > m_strCurSection;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > m_strDeaultPath;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > m_strUserPath;
  CPropertySet *m_pCurPropertySet;
  int m_nNationIdx;
};

/* 2745 */
struct XiTrackData
{
  std::map<int,XiTrackData::PvpTrafficSet,std::less<int>,std::allocator<std::pair<int const ,XiTrackData::PvpTrafficSet> > > m_trafficSet;
};

/* 2746 */
struct DefQuerySKIDGetAuctionCarMaxRegID
{
  int nServerId;
};

/* 2747 */
struct __unaligned __declspec(align(1)) DefQuerySKIDRequestCouponItem
{
  int nServerId;
  __int64 nCid;
  char szName[33];
  char szMemberID[33];
  char szCouponStr[33];
};

/* 2748 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktEquipItemAck : BS_PktBody
{
  unsigned int InvenIdx;
  unsigned int DstSlotIdx;
  unsigned int CarID;
};

/* 2749 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktCreateTeam : BS_PktBody
{
  XiStrTeamInfo m_TeamInfo;
};

/* 2750 */
struct __cppobj __unaligned __declspec(align(4)) BS_PktStickerInfoRes : BS_PktBody
{
  unsigned __int16 Serial;
  unsigned __int16 Age;
  unsigned int CarId;
  unsigned __int16 Size;
  XiSticker Sticker[1];
};

/* 2751 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCBattleJoinOBS : BS_PktBody
{
  int m_TargetChannel;
};

/* 2752 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUpgradeItemDouble : BS_PktBody
{
  unsigned int SrcInvenIdx;
  unsigned int AddInvenIdx;
  int AddNum;
  unsigned int VSInvenIdx;
};

/* 2753 */
struct __cppobj bad_cast : exception
{
};

/* 2754 */
struct __cppobj BS_PktVisualItemList : BS_PktBody
{
};

/* 2755 */
struct DefQuerySKIDUpdateTeamChannelWinCnt
{
  int nChannelWinCnt;
  int nServerId;
  __int64 nTeamId;
};

/* 2756 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktPartyLeave : BS_PktBody
{
  unsigned int m_Serial;
};

/* 2757 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktRoomChangeTeam : BS_PktBody
{
  unsigned int m_RoomId;
  unsigned int m_Serial;
  unsigned int m_TeamId;
};

/* 2758 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktCheckTeamUrl : BS_PktBody
{
  char m_TeamUrl[17];
};

/* 2759 */
struct BS_PvpChannel::CallTick
{
  int m_nTick;
};

/* 2760 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAssignTeamRankAck : BS_PktBody
{
  __int64 m_Cid;
  int m_TeamRank;
};

/* 2761 */
struct __unaligned __declspec(align(2)) DefQuerySKIDUpdatePublCount
{
  char szGameId1[33];
  char sContentId1[33];
  char szMemberId1[33];
  int nCount1;
  char szGameId2[33];
  char sContentId2[33];
  char szMemberId2[33];
  int nCount2;
};

/* 2762 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetAuctionCarEx
{
  int nServerId;
  __int64 nCid;
};

/* 2763 */
struct __unaligned __declspec(align(1)) DefQuerySKIDInsertCoupon
{
  int nServerId;
  __int64 nCid;
  char szCName[33];
  float fPvPBattle;
  float fQuickService;
  float fChasing;
  float fCombo;
  float fDriveTime;
  float fDrift;
  float fArtDrive;
  float fJump;
  float fRevDrive;
  float fUnderCity;
};

/* 2764 */
struct __cppobj __declspec(align(4)) XiInsertCouponDB : XiDBOperation
{
  DefQuerySKIDInsertCoupon param;
};

/* 2765 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktDayEventInfo : BS_PktBody
{
  unsigned int m_TodayMissionIdx;
  XiDayEvent m_DayEvent;
};

/* 2766 */
struct BS_PktGetRoomInfoAck::Unit
{
  XiStrCharName Name;
};

/* 2767 */
struct __cppobj BS_PktGetRoomInfoAck : BS_PktBody
{
  __unaligned __declspec(align(1)) int m_Act;
  __unaligned __declspec(align(1)) unsigned int m_RoomId;
  __unaligned __declspec(align(1)) unsigned int m_Size;
  BS_PktGetRoomInfoAck::Unit m_unit[1];
};

/* 2768 */
struct BS_PktRealMatchInfo::Item
{
  unsigned int ItemIdx;
  XiStrItemUnit Unit;
};

/* 2769 */
struct __cppobj BS_PktRealMatchInfo : BS_PktBody
{
  __unaligned __declspec(align(1)) XiStrStatInfo m_StatInfo;
  __unaligned __declspec(align(1)) XiStrEnChantBonus m_EnChantBonus;
  __unaligned __declspec(align(1)) XiStrEnChantBonus m_EnChantPartyBonus;
  XiVisualItem m_VisualItem;
  unsigned int m_ItemNum;
  BS_PktRealMatchInfo::Item m_ItemData[1];
};

/* 2770 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktGetImageData : BS_PktBody
{
  int m_Act;
  int m_Page;
  int m_Size;
  char m_Data[1];
};

/* 2771 */
struct __cppobj BS_PktLoadChar : BS_PktBody
{
  XiStrCharName Name;
  unsigned int Serial;
};

/* 2772 */
struct $62088D89544C919916107709F8EA580F
{
  unsigned __int16 tszItemCode007[16];
  unsigned __int16 tszItemCode030[16];
  unsigned __int16 tszItemCode090[16];
};

/* 2773 */
struct __unaligned __declspec(align(4)) $F70045D11EB4EFDEAF4263D33A1B0DFF
{
  __int64 qwStickerId;
  __int64 qwBigImageId;
  __int64 qwStickerOwnerId;
  wchar_t wszStickerCreator[32];
  unsigned int dwDownCount;
};

/* 2774 */
union $5FCC33513D8AAB9B1E728A4968B4372B
{
  $62088D89544C919916107709F8EA580F __s0;
  $F70045D11EB4EFDEAF4263D33A1B0DFF __s1;
};

/* 2775 */
struct XiVShop::ITEM_INFO
{
  unsigned int dwId;
  unsigned __int16 tszVisualItemId[32];
  unsigned __int16 tszMarketName[32];
  std::vector<unsigned short,std::allocator<unsigned short> > tszMarketDesc;
  wchar_t wszParam[16];
  XiVShop::CATEGORY_TOP eCategoryTop;
  XiVShop::CATEGORY eCategory;
  XiVShop::CATEGORY_SUB eCategorySub;
  unsigned __int16 tszCategoryName[32];
  int bRefToVisualItem;
  int nSellable;
  int bPcRoomPart;
  int nPartFeature;
  int bDefaultPart;
  int nDisplayOrder;
  int bInstant;
  int bHot;
  int bRebate;
  int bUseMito;
  unsigned int dwPriceMito;
  int bUseMileage;
  int bUseHancoin;
  unsigned int dwPeriod7Day;
  unsigned int dwPriceHancoin7Day;
  unsigned int dwPriceMito7Day;
  unsigned int dwPriceMileage7Day;
  unsigned int dwBonusMito7Day;
  unsigned int dwPeriod30Day;
  unsigned int dwPriceHancoin30Day;
  unsigned int dwPriceMito30Day;
  unsigned int dwPriceMileage30Day;
  unsigned int dwBonusMito30Day;
  unsigned int dwPeriod90Day;
  unsigned int dwPriceHancoin90Day;
  unsigned int dwPriceMito90Day;
  unsigned int dwPriceMileage90Day;
  unsigned int dwBonusMito90Day;
  unsigned int dwPeriod365Day;
  unsigned int dwPriceHancoin365Day;
  unsigned int dwPriceMito365Day;
  unsigned int dwPriceMileage365Day;
  unsigned int dwBonusMito365Day;
  unsigned int dwPeriod000Day;
  unsigned int dwPriceHancoin000Day;
  unsigned int dwPriceMito000Day;
  unsigned int dwPriceMileage000Day;
  unsigned int dwBonusMito000Day;
  unsigned int dwBonusSpeed;
  unsigned int dwBonusAccel;
  unsigned int dwBonusBoost;
  unsigned int dwBonusCrash;
  $5FCC33513D8AAB9B1E728A4968B4372B ___u51;
  unsigned __int16 tszItemCode365[16];
  unsigned __int16 tszItemCode000[16];
};

/* 2776 */
struct __cppobj std::_Allocator_base<XiStrItemBox>
{
};

/* 2777 */
struct __cppobj std::allocator<XiStrItemBox> : std::_Allocator_base<XiStrItemBox>
{
};

/* 2778 */
struct std::_Vector_val<XiStrItemBox,std::allocator<XiStrItemBox> >
{
  std::allocator<XiStrItemBox> _Alval;
};

/* 2779 */
struct XiStrItemBox
{
  XiStrItem *m_pStrItem;
  unsigned int m_Num;
};

/* 2780 */
struct __cppobj std::vector<XiStrItemBox,std::allocator<XiStrItemBox> > : std::_Vector_val<XiStrItemBox,std::allocator<XiStrItemBox> >
{
  XiStrItemBox *_Myfirst;
  XiStrItemBox *_Mylast;
  XiStrItemBox *_Myend;
};

/* 2781 */
struct __cppobj std::_Allocator_base<XiStrIData>
{
};

/* 2782 */
struct __cppobj std::allocator<XiStrIData> : std::_Allocator_base<XiStrIData>
{
};

/* 2783 */
struct std::_Vector_val<XiStrIData,std::allocator<XiStrIData> >
{
  std::allocator<XiStrIData> _Alval;
};

/* 2784 */
struct __cppobj std::vector<XiStrIData,std::allocator<XiStrIData> > : std::_Vector_val<XiStrIData,std::allocator<XiStrIData> >
{
  XiStrIData *_Myfirst;
  XiStrIData *_Mylast;
  XiStrIData *_Myend;
};

/* 2785 */
struct XiStrMyVSItemMod
{
  XiStrMyVSItem MyItem;
  int State;
};

/* 2786 */
struct XiCsCharInfo::InFriend::CidIs
{
  __int64 cid;
};

/* 2787 */
struct XiCsCharInfo::InFriend::NameIs
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > Name;
};

/* 2788 */
struct BS_Room::GroupData
{
  std::vector<BS_GameDispatch *,std::allocator<BS_GameDispatch *> > members;
  std::vector<int,std::allocator<int> > slot;
};

/* 2789 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktLapTimeReady : BS_PktBody
{
  int m_ReadyTime;
  unsigned int m_Serial;
};

/* 2790 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktLapTimeGate : BS_PktBody
{
  unsigned int m_Serial;
  int m_RecTime;
  int m_nGateTime;
  float m_fGateTime;
};

/* 2791 */
struct __unaligned __declspec(align(4)) DefQuerySKIDSelectFriend
{
  int nServerId;
  __int64 nCid;
};

/* 2792 */
struct XiServerInfo
{
  wchar_t ServerName[32];
  unsigned int ServerId;
  float Current;
  float Capacity;
  int State;
  int GameUpdateTime;
  int LobbyUpdateTime;
  int Area1UpdateTime;
  int Area2UpdateTime;
  unsigned int GameIp;
  unsigned int LobbyIp;
  unsigned int Area1Ip;
  unsigned int Area2Ip;
  unsigned __int16 GamePort;
  unsigned __int16 LobbyPort;
  unsigned __int16 Area1Port;
  unsigned __int16 Area2Port;
  unsigned __int16 Area1UDPPort;
  unsigned __int16 Area2UDPPort;
};

/* 2793 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktServerList : BS_PktBody
{
  unsigned int m_Size;
  XiServerInfo m_Servers[1];
};

/* 2794 */
struct __cppobj BS_PktChatMsg : BS_PktBody
{
  wchar_t m_Name[10];
  __unaligned __declspec(align(1)) unsigned int m_Color;
  unsigned __int16 m_Len;
};

/* 2795 */
struct __cppobj BS_PktDetachStickerAck : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int m_StickerIndex;
  unsigned __int16 m_Age;
  int m_Result;
};

/* 2796 */
struct __unaligned __declspec(align(1)) DefQuerySKIDInsertCouponStamp
{
  int nServerId;
  __int64 nCid;
  char szCName[33];
  int nType;
  int nStampIdx;
  int nState;
};

/* 2797 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktArbeitGoalPlace : BS_PktBody
{
  unsigned int Serial;
  unsigned int PlaceIdx;
  unsigned int Time;
};

/* 2798 */
struct __unaligned __declspec(align(4)) DefQuerySKIDClearQuest
{
  int nServerId;
  __int64 nCid;
};

/* 2799 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktPvpSubResult : BS_PktBody
{
  int m_nPcRoomBattleTryCnt;
  int m_nRewardMoney;
  int m_nRewardItem;
  int m_nEventCount;
  int m_nEventEnabled;
};

/* 2800 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktTradeComplete : BS_PktBody
{
  unsigned int TradeIdx;
  __int64 Gold;
};

/* 2801 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetCharItem
{
  int nServerId;
  __int64 nCid;
};

/* 2802 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktResCouponItem : BS_PktBody
{
  int m_Result;
  unsigned int m_ItemIndex;
};

/* 2803 */
struct __cppobj BS_PktTimeSyncByUDP : BS_PktBody
{
  __unaligned __declspec(align(1)) $43FC83DAC0138A0340A76C16734A339F m_Local;
  __unaligned __declspec(align(1)) int m_nGlobalTime;
  __unaligned __declspec(align(1)) unsigned int Ip;
  unsigned __int16 Port;
};

/* 2804 */
struct DefQuerySKIDCheckReservedMember
{
  char szMemberId[33];
};

/* 2805 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktMoveVehicleExt : BS_PktBody
{
  XiCarMove m_move;
  XiCarState m_state;
  unsigned int m_Ip;
  unsigned __int16 m_Port;
};

/* 2806 */
struct __cppobj BS_PktObserverCount : BS_PktBody
{
  unsigned __int16 m_ObserverCount;
};

/* 2807 */
struct __declspec(align(4)) BS_OBSRoom::CastCall
{
  BS_OBSRoom *m_pOBSRoom;
  bool m_bRemove;
};

/* 2808 */
struct __cppobj BS_PktChaseHit : BS_PktBody
{
  unsigned __int16 m_Serial;
  unsigned __int16 m_TargetSerial;
  unsigned __int16 m_TargetCarSort;
  float m_Damage;
  int m_Time;
  unsigned int m_Flag;
  float m_ResultLife;
  wchar_t m_Name[10];
};

/* 2809 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateCharTeamInfo
{
  __int64 nTeamId;
  int nTeamRank;
  int nJoin;
  int nClose;
  int nLeave;
  int nServerId;
  __int64 nCid;
};

/* 2810 */
struct __cppobj BS_PktGetCouponStampList : BS_PktBody
{
};

/* 2811 */
struct __unaligned __declspec(align(1)) XiStrCharMemberInfo
{
  wchar_t Name[16];
  __int64 TeamId;
  __int64 TeamRank;
  char MemberId[33];
};

/* 2812 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktMarkCoupon : BS_PktBody
{
  unsigned int Type;
  int StampIdx;
};

/* 2813 */
struct __unaligned __declspec(align(2)) BS_PktPartyJoinResult::Unit
{
  unsigned int Serial;
  XiStrPartyMemberInfo Info;
};

/* 2814 */
struct __cppobj BS_PktPartyJoinResult : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int m_Result;
  __unaligned __declspec(align(1)) int m_PartyId;
  wchar_t m_PartyName[30];
  __unaligned __declspec(align(1)) unsigned int m_Size;
  BS_PktPartyJoinResult::Unit m_Member[1];
};

/* 2815 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktQuestPosition : BS_PktBody
{
  int m_PositionId;
};

/* 2816 */
struct __cppobj __unaligned __declspec(align(4)) BS_PktReceiveVisualItem : BS_PktBody
{
  unsigned int TableIdx;
  int Period;
  __int64 Gid;
  int Date;
  XiStrGiftMsg GiftMsg;
  XiStrCharName DstName;
};

/* 2817 */
struct __cppobj std::_Allocator_base<XiStrCharKey>
{
};

/* 2818 */
struct __cppobj std::allocator<XiStrCharKey> : std::_Allocator_base<XiStrCharKey>
{
};

/* 2819 */
struct std::_Vector_val<XiStrCharKey,std::allocator<XiStrCharKey> >
{
  std::allocator<XiStrCharKey> _Alval;
};

/* 2820 */
struct __cppobj std::vector<XiStrCharKey,std::allocator<XiStrCharKey> > : std::_Vector_val<XiStrCharKey,std::allocator<XiStrCharKey> >
{
  XiStrCharKey *_Myfirst;
  XiStrCharKey *_Mylast;
  XiStrCharKey *_Myend;
};

/* 2821 */
struct __cppobj std::_Allocator_base<XiStrMessage>
{
};

/* 2822 */
struct __cppobj std::allocator<XiStrMessage> : std::_Allocator_base<XiStrMessage>
{
};

/* 2823 */
struct std::_Vector_val<XiStrMessage,std::allocator<XiStrMessage> >
{
  std::allocator<XiStrMessage> _Alval;
};

/* 2824 */
struct __unaligned __declspec(align(4)) XiStrMessage
{
  __int64 Rid;
  __int64 MsgId;
  __int64 Sid;
  XiStrCharName Name;
  int MsgKind;
  char MsgState;
  wchar_t Subject[21];
  wchar_t Content[201];
  __int64 Gold;
  char Item[101];
  int SendDate;
};

/* 2825 */
struct __cppobj std::vector<XiStrMessage,std::allocator<XiStrMessage> > : std::_Vector_val<XiStrMessage,std::allocator<XiStrMessage> >
{
  XiStrMessage *_Myfirst;
  XiStrMessage *_Mylast;
  XiStrMessage *_Myend;
};

/* 2826 */
struct XiImageParam
{
  int imageSize;
  int imageType;
  unsigned int imageColorKey;
};

/* 2827 */
struct BS_Lobby
{
  unsigned __int16 m_SessionId;
  unsigned int m_TicketSerial;
  XiStrUserInfo *m_pUserInfo;
  wchar_t m_MemberId[40];
  char m_mbMemberId[40];
  int m_LoginTime;
  bool m_bLogined;
  std::vector<XiStrCharKey,std::allocator<XiStrCharKey> > m_CharKeyList;
};

/* 2828 */
struct __cppobj std::_Allocator_base<XiMyStickerData>
{
};

/* 2829 */
struct __cppobj std::allocator<XiMyStickerData> : std::_Allocator_base<XiMyStickerData>
{
};

/* 2830 */
struct std::_Vector_val<XiMyStickerData,std::allocator<XiMyStickerData> >
{
  std::allocator<XiMyStickerData> _Alval;
};

/* 2831 */
struct __declspec(align(8)) XiMyStickerData
{
  int cTime;
  __int64 stickerId;
  __int64 bigImageId;
  wchar_t SName[32];
  int Rate;
};

/* 2832 */
struct __cppobj std::vector<XiMyStickerData,std::allocator<XiMyStickerData> > : std::_Vector_val<XiMyStickerData,std::allocator<XiMyStickerData> >
{
  XiMyStickerData *_Myfirst;
  XiMyStickerData *_Mylast;
  XiMyStickerData *_Myend;
};

/* 2833 */
struct __cppobj BS_LobbyDispatch : BS_MultiDispatch
{
  BS_Lobby *m_pLobby;
  __int64 m_lastImageId;
  std::vector<char,std::allocator<char> > m_buffer;
  __int64 m_myCid;
  std::vector<XiMyStickerData,std::allocator<XiMyStickerData> > m_mySticker;
  int m_StickerUpTime;
  int m_StickerUpCount;
};

/* 2834 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktEndingUserRecordAck : BS_PktBody
{
  wchar_t m_CName[32];
  int m_ctime;
  char m_MemberId[32];
  wchar_t m_TeamName[32];
  char m_RankOfTeam;
  float m_fPlayTime;
  float m_fTimeOfDrive;
  float m_fTotalDistance;
  unsigned int m_CurCarType;
  unsigned int m_TotalHistoryCarNum;
  unsigned int m_TotalCarNum;
  unsigned int m_Level;
  unsigned int m_Exp;
  __int64 m_Mito;
  unsigned int m_PvpWInCnt;
  unsigned int m_PvpTryCnt;
  unsigned int m_TPvpWinCnt;
  unsigned int m_TPvpTryCnt;
  unsigned int m_ChaseWinCnt;
  unsigned int m_QuickCnt;
  unsigned int m_DriftCnt;
  unsigned int m_JumpCnt;
  float m_ReverseDriveTime;
};

/* 2835 */
struct __cppobj std::_Allocator_base<XiGMCmdLine>
{
};

/* 2836 */
struct __cppobj std::allocator<XiGMCmdLine> : std::_Allocator_base<XiGMCmdLine>
{
};

/* 2837 */
struct std::_Vector_val<XiGMCmdLine,std::allocator<XiGMCmdLine> >
{
  std::allocator<XiGMCmdLine> _Alval;
};

/* 2838 */
struct __cppobj std::vector<XiGMCmdLine,std::allocator<XiGMCmdLine> > : std::_Vector_val<XiGMCmdLine,std::allocator<XiGMCmdLine> >
{
  XiGMCmdLine *_Myfirst;
  XiGMCmdLine *_Mylast;
  XiGMCmdLine *_Myend;
};

/* 2839 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktDayMileageGetRewardAck : BS_PktBody
{
  unsigned int m_GetMileage;
  unsigned int m_TotalMileage;
};

/* 2840 */
struct $0CF186778A251D9C8878198E002E2878
{
  unsigned __int32 SkidShop : 1;
  unsigned __int32 Sticker : 1;
  unsigned __int32 Mix : 1;
  unsigned __int32 AuctionCar : 1;
  unsigned __int32 TeamMark : 1;
  unsigned __int32 TeamBoard : 1;
  unsigned __int32 PartsInvenLine : 2;
  unsigned __int32 NewField : 1;
  unsigned __int32 NewChasing : 1;
  unsigned __int32 NewUpgrade : 1;
  unsigned __int32 HalfLevelPoint : 1;
  unsigned __int32 OpenGate : 4;
  unsigned __int32 AuctionCommission : 16;
  unsigned __int32 MitronUnitPrice : 16;
  unsigned __int32 SemiCh : 1;
  unsigned __int32 CouponBook : 1;
  unsigned __int32 NewCombo : 1;
  unsigned __int32 InvenUpgrade : 1;
  unsigned __int32 OptionItem : 1;
};

/* 2841 */
union $DB0FAE23CA4912FB1877842362730A9A
{
  $0CF186778A251D9C8878198E002E2878 __s0;
  unsigned int Reserve[2];
};

/* 2842 */
struct $AA9F972BB92A76D3DEC033A69E655AC7
{
  unsigned __int32 MoonPalace : 1;
  unsigned __int32 Koinonia : 1;
  unsigned __int32 Cras : 1;
  unsigned __int32 Oros : 1;
  unsigned __int32 RushTime : 1;
  unsigned __int32 UnderCity : 1;
  unsigned __int32 MoonPalaceUC : 1;
  unsigned __int32 KoinoniaUC : 1;
  unsigned __int32 CrasUC : 1;
  unsigned __int32 OrosUC : 1;
};

/* 2843 */
union $0DD4B33C073023417872EA8CED6F2DDD
{
  $AA9F972BB92A76D3DEC033A69E655AC7 __s0;
  unsigned int Reserve[2];
};

/* 2844 */
struct $73A61F5660F91D01F35768F8EAEE0BC6
{
  unsigned __int32 Combo : 1;
  unsigned __int32 Stunt : 1;
  unsigned __int32 QuickService : 1;
  unsigned __int32 TeamBattle : 1;
  unsigned __int32 Patrol : 1;
  unsigned __int32 NewQuickRecord : 1;
  unsigned __int32 DayMission : 1;
  unsigned __int32 Mita500 : 1;
  unsigned __int32 Mita500RegenCnt : 9;
  unsigned __int32 Mita500RegenSec : 12;
  unsigned __int32 Mita500BuffSec : 12;
  unsigned __int32 Mita500LuckyHour : 12;
};

/* 2845 */
union $BC38EB482D2F6A79B6B111B75A262B8C
{
  $73A61F5660F91D01F35768F8EAEE0BC6 __s0;
  unsigned int Reserve[2];
};

/* 2846 */
struct $4B01A023AFD5B41B16965A0264F5DC8D
{
  unsigned __int32 Floor1 : 1;
  unsigned __int32 FloorB1 : 1;
  unsigned __int32 AutoShop : 1;
  unsigned __int32 PartsShop : 1;
  unsigned __int32 BattleZone : 1;
  unsigned __int32 TeamCenter : 1;
  unsigned __int32 Garage : 1;
  unsigned __int32 Auction : 1;
};

/* 2847 */
union $4E8F37A3F6D6B87BB48A2F1B998AA8A8
{
  $4B01A023AFD5B41B16965A0264F5DC8D __s0;
  unsigned int Reserve[2];
};

/* 2848 */
struct $2D919EC7B917937493F7121CD07067FE
{
  unsigned __int32 Tutorial : 1;
  unsigned __int32 Friend : 1;
  unsigned __int32 LapTime : 1;
  unsigned __int32 ChannelFree : 1;
  unsigned __int32 Channel2X : 1;
  unsigned __int32 Channel3X : 1;
  unsigned __int32 Channel4X : 1;
  unsigned __int32 Channel6X : 1;
  unsigned __int32 Channel8X : 1;
  unsigned __int32 RealMatch : 1;
  unsigned __int32 RealMatchTimeFree : 1;
  unsigned __int32 RealMatchGate : 1;
  unsigned __int32 PracticeMode : 1;
  unsigned __int32 ObserveAllMode : 1;
};

/* 2849 */
union $7013679043733EF8723FA3DC8A9EC46B
{
  $2D919EC7B917937493F7121CD07067FE __s0;
  unsigned int Reserve[2];
};

/* 2850 */
struct $708C001E19D61EE46049B65A36B55BD9
{
  unsigned __int32 CreateDestroy : 1;
  unsigned __int32 ChannelBattle : 1;
  unsigned __int32 ChannelBattleView : 1;
};

/* 2851 */
union $B7E5D9F027A9688984BB7A2553381BDD
{
  $708C001E19D61EE46049B65A36B55BD9 __s0;
  unsigned int Reserve[2];
};

/* 2852 */
struct $8FC8CDF15705F0A78E60E9AFC559BE5E
{
  unsigned __int32 VShopOpenStage : 6;
  unsigned __int32 CarOpenStage : 6;
  unsigned __int32 MaxStickerAttach : 5;
  unsigned __int32 StickerPrice : 13;
  unsigned __int32 StickerProgressiveTax : 1;
  unsigned __int32 Indy4Event : 1;
  unsigned __int32 ExitPopup : 1;
};

/* 2853 */
union $78416BC78E9AD0F44F1FE4F6B8D72513
{
  $8FC8CDF15705F0A78E60E9AFC559BE5E __s0;
  unsigned int Reserve[2];
};

/* 2854 */
struct XiContentsFlag
{
  $DB0FAE23CA4912FB1877842362730A9A Main;
  $0DD4B33C073023417872EA8CED6F2DDD City;
  $BC38EB482D2F6A79B6B111B75A262B8C InstantMission;
  $4E8F37A3F6D6B87BB48A2F1B998AA8A8 OMDBase;
  $7013679043733EF8723FA3DC8A9EC46B BattleZone;
  $B7E5D9F027A9688984BB7A2553381BDD TeamCenter;
  $78416BC78E9AD0F44F1FE4F6B8D72513 Etc;
};

/* 2855 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUCPatrolResult : BS_PktBody
{
  unsigned int TableIdx;
  unsigned int Result;
  unsigned int GetExp;
  unsigned int InvenIdx;
  int DeltaMito;
  __int64 Mito;
};

/* 2856 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktArbeitGiveUp : BS_PktBody
{
  unsigned int Serial;
};

/* 2857 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktCheckCharNameAck : BS_PktBody
{
  XiStrCharName Name;
  bool Usable;
};

/* 2858 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktNotifyFreeCar : BS_PktBody
{
  int m_AreaId;
  XiFreeCarMove m_move;
};

/* 2859 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGetCoupon : BS_PktBody
{
  unsigned int Type;
  int StampIdx;
};

/* 2860 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktItemUse : BS_PktBody
{
  unsigned int InvenIdx;
  unsigned int Num;
};

/* 2861 */
struct __cppobj BS_PktPartyPreCheckAck : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int Serial;
  __unaligned __declspec(align(1)) __int64 Cid;
  XiStrCharName CName;
  int PartyId;
  wchar_t PartyName[30];
};

/* 2862 */
struct __cppobj BS_PktUDPSyncAck : BS_PktBody
{
  __unaligned __declspec(align(1)) int m_Serial;
  __unaligned __declspec(align(1)) $43FC83DAC0138A0340A76C16734A339F m_Local;
  __unaligned __declspec(align(1)) int m_nGlobalTime;
  __unaligned __declspec(align(1)) unsigned int Ip;
  unsigned __int16 Port;
};

/* 2863 */
struct __cppobj BS_PktGetMail : BS_PktBody
{
};

/* 2864 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktChannelRoomSecureJoin : BS_PktBody
{
  unsigned __int16 m_Serial;
  unsigned __int16 m_Age;
  XiPvpUserInfo m_UserInfo;
  XiCarAttr m_CarAttr;
  unsigned int m_PvpChannelId;
  unsigned int m_RoomId;
  unsigned int m_RoomLifeId;
  XiPlayerInfo m_PlayerInfo;
  wchar_t m_RoomPass[30];
  XiPvpRoomSlot m_Slot;
};

/* 2865 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktTradeItemOff : BS_PktBody
{
  unsigned int TradeIdx;
  int ItemIdx;
};

/* 2866 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateCharMileage
{
  __int64 nMileage;
  int nServerId;
  __int64 nCid;
};

/* 2867 */
struct __cppobj XiUpdateCharMileage : XiDBOperation
{
  DefQuerySKIDUpdateCharMileage param;
};

/* 2868 */
struct XiServerPing
{
  wchar_t ServerName[32];
  unsigned int ServerId;
  unsigned int ServerType;
  float Current;
  float Capacity;
  int State;
  unsigned int Ip;
  unsigned __int16 Port;
  unsigned __int16 UdpPort;
};

/* 2869 */
struct DefQuerySKIDLoadStickerId
{
  int nServerId;
  int nType;
};

/* 2870 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktStatUpdate : BS_PktBody
{
  XiStrStatInfo StatInfo;
  XiStrEnChantBonus EnChantBonus;
};

/* 2871 */
struct __unaligned __declspec(align(4)) DefQuerySKIDLoadMyStickerCatalog
{
  int nServerId;
  __int64 nCId;
};

/* 2872 */
struct __cppobj BS_PktDormantEvent : BS_PktBody
{
};

/* 2873 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCBattleGetSetting : BS_PktBody
{
  int m_Act;
  int m_Channel;
};

/* 2874 */
struct DefQuerySKIDGetAuctionMileage
{
  int nServerId;
};

/* 2875 */
struct __cppobj DefQuerySKIDNextImageId
{
};

/* 2876 */
struct XiBlockInfo
{
  unsigned int m_Serial;
  int m_DueTime;
};

/* 2877 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCheckInLobby : BS_PktBody
{
  unsigned int m_Version;
  unsigned int m_Ticket;
  wchar_t m_ID[40];
  unsigned int m_Time;
  char m_STicket[64];
};

/* 2878 */
struct DefQuerySKIDGetAuctionMaxRegID
{
  int nServerId;
};

/* 2879 */
struct VEHICLE_INFO::VEHICLE_COLOR
{
  char kBody0;
  char kWindow;
};

/* 2880 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktGroupUpdate : BS_PktBody
{
  unsigned int m_Size;
  char m_data[1];
};

/* 2881 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktFriendAddAck : BS_PktBody
{
  XiStrFriend Friend;
};

/* 2882 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateTeamMark
{
  __int64 nTeamMarkId;
  int nServerId;
  __int64 nTeamId;
};

/* 2883 */
struct DefQuerySKIDGetPREventValue
{
  char szMemberId[33];
  char szEventName[33];
};

/* 2884 */
struct DefQuerySKIDGetImage
{
  __int64 nImageId;
};

/* 2885 */
struct __cppobj BS_PktExitUnderCity : BS_PktBody
{
};

/* 2886 */
struct DefQuerySKIDGetUnalCoin
{
  char szMemberId[33];
};

/* 2887 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktNotifyAreaLoc : BS_PktBody
{
  int m_Area;
  float m_Loc[4];
};

/* 2888 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUpdateCouponForVar : BS_PktBody
{
  XiStrCouponForVar CouponForVar;
};

/* 2889 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGMStatusAck : BS_PktBody
{
  int m_Idx;
  int m_nCurUser;
  int m_Time;
};

/* 2890 */
struct __cppobj BS_PktSetVisualItem : BS_PktBody
{
  XiVisualItem m_vitem;
};

/* 2891 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktRushNotice : BS_PktBody
{
  unsigned int m_RushStartTime;
};

/* 2892 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktLapTimeFinishing : BS_PktBody
{
  int m_FinishTime;
};

/* 2893 */
struct __cppobj BS_PktTradeProposeAck : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int TradeIdx;
  unsigned __int16 Result;
};

/* 2894 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktSetTeamMark : BS_PktBody
{
  __int64 m_TeamId;
  int m_Size;
};

/* 2895 */
struct _tagADDRESS
{
  unsigned int Offset;
  unsigned __int16 Segment;
  ADDRESS_MODE Mode;
};

/* 2896 */
struct XiCsSTItem::Is
{
  unsigned int nStickerIndex;
};

/* 2897 */
struct __unaligned __declspec(align(1)) DefQuerySKIDMoneyLog
{
  char szCode[11];
  int nServerId;
  __int64 nCid;
  char szCName[33];
  char szIp[21];
  char szKind[2];
  char szItemCode[33];
  __int64 nGameMoney;
  __int64 nPrevGameMoney;
  int nLevel;
  char szEventCode[33];
};

/* 2898 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktArbeitStartAck : BS_PktBody
{
  unsigned int Serial;
  unsigned int TableIdx;
  unsigned int CompleteNum;
};

/* 2899 */
struct BS_PktSwitchRushHuv::HuvInfo
{
  unsigned __int16 OldSerial;
  unsigned __int16 NewSerial;
  unsigned __int16 CarSort;
  unsigned __int16 HuvType;
  float Health;
};

/* 2900 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktSwitchRushHuv : BS_PktBody
{
  unsigned int m_nHuv;
  BS_PktSwitchRushHuv::HuvInfo m_huv[1];
};

/* 2901 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAuctionComplete : BS_PktBody
{
  unsigned int Serial;
};

/* 2902 */
struct __cppobj BS_PktRoomPrivateInvite : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int m_Serial;
  __unaligned __declspec(align(1)) unsigned int m_RoomId;
  __unaligned __declspec(align(1)) unsigned int m_RoomLifeId;
  __unaligned __declspec(align(1)) __int64 m_cid;
  XiStrCharName m_Name;
  wchar_t m_RoomName[30];
  wchar_t m_RoomPass[30];
};

/* 2903 */
struct DefQuerySKIDCheckPREventCountByDate
{
  char szMemberId[33];
  char szEventName[33];
  char szDate1[10];
  char szDate2[10];
};

/* 2904 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktPvpGateReward : BS_PktBody
{
  unsigned int m_Serial;
  int m_GateReward;
};

/* 2905 */
struct DefQuerySKIDGetArbeitRankDateToDate
{
  int nServerId;
  int nAid;
  char szFromDate[20];
  char szUntilDate[20];
  int nLimitCnt;
};

/* 2906 */
struct __unaligned __declspec(align(2)) DefQuerySKIDUpdateFriend
{
  char szFState[2];
  int nServerId;
  __int64 nCid;
  __int64 nFCid;
};

/* 2907 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUCBossPatrolGoalPlaceAck : BS_PktBody
{
  int Time;
  unsigned int TableIdx;
  unsigned int PlaceIdx;
  unsigned int GetExp;
  unsigned int InvenIdx;
  unsigned int Serial;
  int DeltaMito;
  __int64 Mito;
};

/* 2908 */
struct __unaligned __declspec(align(2)) DefQuerySKIDInsertCBattleTeam
{
  int nServerId;
  int nChannelId;
  int nBattleId;
  __int64 nTeamId;
  int nWinCnt;
  int nDefeatedCnt;
  int nRoundWinCnt;
  int nRoundDefeatedCnt;
  char szTeamName[33];
  __int64 nTeamMasterId;
  char szTeamMasterName[33];
};

/* 2909 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktItemListAck : BS_PktBody
{
  unsigned int ListUpdate;
  unsigned int ItemNum;
  XiStrMyItem MyItem[1];
};

/* 2910 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktTCSSignal : BS_PktBody
{
  XiTCSSignal m_signal;
};

/* 2911 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktDriveInfoUpdate : BS_PktBody
{
  XiStrDriveInfo driveInfo;
};

/* 2912 */
struct __unaligned __declspec(align(1)) DefQuerySKIDCreateCharacter
{
  int nServerId;
  char szCName[33];
  char szUCName[33];
  int nCharAvatar;
  char szMemberId[33];
};

/* 2913 */
struct __unaligned __declspec(align(1)) DefQuerySKIDInsertItemLog
{
  int nServerId;
  __int64 nCid;
  char szCName[33];
  char szMemberID[33];
  int nMPlayTime;
  int nCPlayTime;
  __int64 nMoney;
  int nExp;
  int nLevel;
  int nCarId;
  int nCarType;
  int nCarGrade;
  int nSP;
  int nAC;
  int nCP;
  int nBT;
  int nEQUIP;
  int nDeltaExp;
  int nDeltaLevel;
  __int64 nDeltaMoney;
  char szTxnType[21];
  __int64 nGid;
  int nInvenIdx;
  char szItemId[33];
  int nItemCarId;
  int nStackNum;
  int nRandom;
  int nState;
  int nUpgrade;
  int nBelonging;
  __int64 nPrice;
  char szAssistA[33];
  char szAssistB[33];
  int nCTime;
  char szEventCode[33];
};

/* 2914 */
struct __cppobj __declspec(align(2)) XiInsertItemLog : XiDBOperation
{
  DefQuerySKIDInsertItemLog param;
};

/* 2915 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateCharMoney
{
  __int64 nGameMoney;
  __int64 nCid;
  int nServerId;
};

/* 2916 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktJoinArea : BS_PktBody
{
  int m_Area;
};

/* 2917 */
struct __unaligned __declspec(align(2)) DefQuerySKIDSetUnalCoin
{
  int nCoin;
  char szLastAction[4];
  char szLastCName[33];
  char szMemberID[33];
};

/* 2918 */
struct __cppobj BS_PktPartyAccept : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int m_Serial;
  __unaligned __declspec(align(1)) unsigned int m_Ticket;
  XiStrPartyMemberInfo m_memberinfo;
};

/* 2919 */
struct __cppobj BS_PktSendVisualItemAck : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int TableIdx;
  __unaligned __declspec(align(1)) int Period;
  __unaligned __declspec(align(1)) int Mito;
  __unaligned __declspec(align(1)) int Hancoin;
  __unaligned __declspec(align(1)) int BonusMito;
  XiStrCharName DstName;
};

/* 2920 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktPvpLoadComplete : BS_PktBody
{
  int m_Time;
  int m_CompletePercent;
};

/* 2921 */
struct __cppobj BS_PktJoinChannel : BS_PktBody
{
  wchar_t m_Name[10];
};

/* 2922 */
struct __cppobj BS_PktCheckCharName : BS_PktBody
{
  XiStrCharName Name;
};

/* 2923 */
struct __unaligned __declspec(align(4)) DefQuerySKIDSetImageType
{
  __int64 nImageId;
  int nImageSize;
};

/* 2924 */
struct __cppobj BS_PktRejectTeamApply : BS_PktBody
{
  unsigned __int16 m_Serial;
  XiStrCharName m_CharName;
  __unaligned __declspec(align(1)) __int64 m_Cid;
  XiStrTeamName m_TeamName;
  __int64 m_TeamId;
};

/* 2925 */
struct __cppobj BS_PktAssignTeamRank : BS_PktBody
{
  __unaligned __declspec(align(1)) __int64 m_Cid;
  __unaligned __declspec(align(1)) int m_TeamRank;
  XiStrCharName m_CharName;
};

/* 2926 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktTutorialClearAck : BS_PktBody
{
  unsigned int Type;
};

/* 2927 */
struct __cppobj BS_PktTradeOpen : BS_PktBody
{
  XiStrCharName Name;
};

/* 2928 */
struct DefQuerySKIDUpdateServerTick
{
  int nServerTick;
  int nServerId;
};

/* 2929 */
struct __cppobj __declspec(align(4)) XiInsertPvpLog : XiDBOperation
{
  DefQuerySKIDInsertPvpLog param;
};

/* 2930 */
struct __cppobj BS_PktLeaveTeamRequest : BS_PktBody
{
  XiTeamBind m_bind;
};

/* 2931 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktDayEventGetItem : BS_PktBody
{
  unsigned int m_GetItemIdx;
  unsigned int m_GetItemCnt;
};

/* 2932 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGetTeamMarkAck : BS_PktBody
{
  int m_Result;
  __int64 m_TeamId;
  __int64 m_ImgId;
  int m_Size;
};

/* 2933 */
struct DefQuerySKIDGetArbeitRankDate
{
  int nServerId;
  int nAid;
  char szFromDate[20];
  int nLimitCnt;
};

/* 2934 */
struct __cppobj BS_PktJoinChatAck : BS_PktBody
{
  wchar_t m_Name[10];
  wchar_t m_Player[16];
};

/* 2935 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateCharExp
{
  __int64 nExp;
  int nServerId;
  __int64 nCid;
};

/* 2936 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAuctionCarBuyed : BS_PktBody
{
  unsigned int Serial;
};

/* 2937 */
struct __unaligned __declspec(align(1)) DefQuerySKIDInsertVSItem
{
  int nServerId;
  __int64 nCid;
  char szCName[33];
  __int64 nGID;
  char szItemId[33];
  int nInvenIdx;
  int nCarId;
  int nState;
  char szData[21];
  int nPeriod;
  int nCTime;
  int nUTime;
};

/* 2938 */
struct __cppobj BS_PktUserInfo : BS_PktBody
{
};

/* 2939 */
struct __cppobj __declspec(align(4)) XiUpdateItemExDB : XiDBOperation
{
  DefQuerySKIDUpdateItemEx param;
};

/* 2940 */
struct __cppobj BS_PktDayEventComplete : BS_PktBody
{
};

/* 2941 */
struct SEHException
{
  _EXCEPTION_POINTERS *m_pException;
};

/* 2942 */
struct __cppobj SEHException::XiStackFrame : _tagSTACKFRAME64
{
};

/* 2943 */
struct SEHException::Monitor
{
  _RTL_CRITICAL_SECTION m_cs;
};

/* 2944 */
struct SEHException::Locker
{
  SEHException::Monitor *m;
};

/* 2945 */
struct __unaligned __declspec(align(2)) DefQuerySKIDUpdatePublContentCount
{
  char szGameId1[33];
  char sContentId1[33];
  int nCount1;
};

/* 2946 */
struct tm
{
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;
};

/* 2947 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktRegisterAgent : BS_PktBody
{
  int m_AreaId;
};

/* 2948 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktEnterGroup : BS_PktBody
{
  int m_Group;
};

/* 2949 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktPackItem : BS_PktBody
{
  unsigned int DestInvenIdx;
  unsigned int BoxInvenIdx;
};

/* 2950 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktEnterCBattleChannel : BS_PktBody
{
  int Target;
};

/* 2951 */
struct __cppobj BS_PktChaseProgress : BS_PktBody
{
  unsigned __int16 m_Serial;
  unsigned __int16 m_TargetSerial;
  unsigned __int16 m_TargetCarSort;
  int m_Time;
  int m_State;
};

/* 2952 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUCPatrolGiveUp : BS_PktBody
{
  unsigned int TableIdx;
};

/* 2953 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateCarUpgrade6
{
  int nUpgrade;
  int nServerId;
  __int64 nCid;
  int nCarId;
};

/* 2954 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktServerPing : BS_PktBody
{
  XiServerPing serverPing;
};

/* 2955 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktArbeitReady : BS_PktBody
{
  unsigned int Serial;
  unsigned int Ready;
};

/* 2956 */
struct __cppobj BS_PktChannelList : BS_PktBody
{
};

/* 2957 */
struct XiStrMemberInfo::Is
{
  __int64 Cid;
};

/* 2958 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetEndingInfo
{
  int nServerId;
  __int64 nCid;
};

/* 2959 */
struct COUPONTYPE_INFO
{
  XI_COUPONTYPE eCouponType;
  int nCouponIdx;
  int bCouponStampDisplay;
  int nCnt;
  int nTimeMin;
  unsigned __int16 tszCarName[32];
  unsigned int dwCarID;
  unsigned __int16 tszCouponID[32];
  int nCarGrade;
};

/* 2960 */
struct __cppobj BS_PktCloseChat : BS_PktBody
{
  wchar_t m_Name[10];
};

/* 2961 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCBattleMissedItems : BS_PktBody
{
  int m_TargetChannel;
  int m_Page;
  int m_Size;
  XiStrItemData m_items[1];
};

/* 2962 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktPackItemAck : BS_PktBody
{
  unsigned int DestInvenIdx;
  unsigned int BoxInvenIdx;
};

/* 2963 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAuctionOn : BS_PktBody
{
  unsigned int TableIdx;
  unsigned int InvenIdx;
  unsigned int ItemNum;
  unsigned int Price;
};

/* 2964 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktNotifyEvent : BS_PktBody
{
  int m_EventType;
  int m_Progress;
};

/* 2965 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktCloseTeamAck : BS_PktBody
{
  int m_Result;
  XiStrTeamInfo m_TeamInfo;
};

/* 2966 */
struct __cppobj BS_PktChatMsgAck : BS_PktBody
{
  wchar_t m_Name[10];
  wchar_t m_Player[16];
  __unaligned __declspec(align(1)) unsigned int m_Color;
  unsigned __int16 m_Len;
};

/* 2967 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetInstant
{
  int nServerId;
  __int64 nCid;
};

/* 2968 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUnderCityStageAck : BS_PktBody
{
  int m_Stage;
  int m_Time;
};

/* 2969 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAuctionCarSearch : BS_PktBody
{
  unsigned int Offset;
  unsigned int ListNum;
  unsigned int Grade;
  unsigned int SortType;
  unsigned int SearchType;
  wchar_t Text[128];
  unsigned int StLevel;
  unsigned int EnLevel;
};

/* 2970 */
struct BS_PktImageRequest::Part
{
  unsigned __int16 PartIndex;
};

/* 2971 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktImageRequest : BS_PktBody
{
  __int64 m_ImageId;
  unsigned __int16 m_NumPart;
  BS_PktImageRequest::Part m_Part[1];
};

/* 2972 */
struct DefQuerySKIDDelImage
{
  __int64 nImageId;
};

/* 2973 */
struct __cppobj __declspec(align(4)) XiInsertAuctionMileageDB : XiDBOperation
{
  DefQuerySKIDInsertAuctionMileage param;
};

/* 2974 */
struct BS_Thread::BS_ThreadInfo
{
  unsigned int dwType;
  const char *szName;
  unsigned int dwThreadID;
  unsigned int dwFlags;
};

/* 2975 */
struct __unaligned __declspec(align(2)) DefQuerySKIDInsertContrib
{
  int nThemeId;
  char szMemberId[33];
  char szName[33];
};

/* 2976 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktMarkCouponAck : BS_PktBody
{
  unsigned int Type;
  int StampIdx;
};

/* 2977 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUnPackItem : BS_PktBody
{
  unsigned int InvenIdx;
};

/* 2978 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktExitArea : BS_PktBody
{
  int m_Area;
};

/* 2979 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktWeather : BS_PktBody
{
  $38636D0EA7AD20B267BDBB95270A9F80 m_weather;
};

/* 2980 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateAuctionCar
{
  int nState;
  int nServerId;
  __int64 nCid;
  int nRegId;
};

/* 2981 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktJoinTeamAck : BS_PktBody
{
  int m_Result;
  XiStrTeamInfo m_TeamInfo;
  unsigned __int16 m_Age;
};

/* 2982 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCBattleRoomJoin : BS_PktBody
{
  XiPvpUserInfo m_UserInfo;
  XiCarAttr m_CarAttr;
  int Target;
};

/* 2983 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktArbeitFail : BS_PktBody
{
  unsigned int Serial;
};

/* 2984 */
struct DefQuerySKIDDeleteMsg
{
  __int64 nMid;
};

/* 2985 */
struct __unaligned __declspec(align(2)) DefQuerySKIDCheckPREventById
{
  char szMemberId[33];
  char szEventName[33];
  int nParam;
};

/* 2986 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktSellCarAck : BS_PktBody
{
  unsigned int CarId;
  unsigned int Gold;
};

/* 2987 */
struct DefQuerySKIDUpdateCBattleTick
{
  int nBattleTick;
  int nServerId;
  int nChannelId;
};

/* 2988 */
struct HashedVector<BS_GameDispatch *,4,16>::Lock
{
  HashedVector<BS_GameDispatch *,4,16>::Monitor *m_pMonitor;
};

/* 2989 */
struct __cppobj BS_PktMyStickerList : BS_PktBody
{
};

/* 2990 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetVSItem
{
  int nServerId;
  __int64 nCid;
};

/* 2991 */
struct BS_GameLog::AStr
{
  BS_StrUtils::BS_WidetoMB m_str;
};

/* 2992 */
struct BS_GameLog::DeltaData
{
  unsigned int Level;
  unsigned int Exp;
  __int64 Money;
};

/* 2993 */
struct __cppobj BS_GameLog
{
};

/* 2994 */
struct BS_GameLog::ItemData
{
  __int64 Gid;
  unsigned int TableIdx;
  int ItemCarId;
  int InvenIdx;
  int StackNum;
  int Random;
  int State;
  int Upgrade;
  int Belonging;
  unsigned int AssistA;
  unsigned int AssistB;
  int CTime;
  const char *EventCode;
};

/* 2995 */
struct BS_GameLog::VSItemData
{
  __int64 Gid;
  unsigned int TableIdx;
  int ItemCarId;
  int InvenIdx;
  int State;
  XiStrPlateName PlateName;
  int Period;
  int UTime;
  int CTime;
};

/* 2996 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCreateChar : BS_PktBody
{
  XiStrCharName Name;
  unsigned __int16 Avatar;
  unsigned int CarType;
  unsigned int Color;
};

/* 2997 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetAllHancoinInvenHistory
{
  int nServerId;
  __int64 nCid;
};

/* 2998 */
struct __unaligned __declspec(align(2)) DefQuerySKIDModifyMsgState
{
  char szState[2];
  __int64 nMid;
};

/* 2999 */
struct __cppobj BS_SingletonHeap<XiItemDropTable,5>
{
};

/* 3000 */
struct __cppobj XiItemDropTable : BS_SingletonHeap<XiItemDropTable,5>
{
  std::map<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> > > m_LevelDropTable;
  std::map<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> > > m_LevelDropTable_PcBang;
  std::map<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> > > m_LevelDropTable_PcBangGold;
  std::map<unsigned long,XiCsLevelDropGroup,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCsLevelDropGroup> > > m_LevelDropTable_Bad;
  std::vector<GradeStandard,std::allocator<GradeStandard> > m_GradeTable;
  std::vector<XiStrDropLimit,std::allocator<XiStrDropLimit> > m_DropLimitTable;
};

/* 3001 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktDropVisualItem : BS_PktBody
{
  unsigned int TableIdx;
  unsigned int InvenIdx;
};

/* 3002 */
struct __cppobj BS_PktAreaStatus : BS_PktBody
{
};

/* 3003 */
struct __cppobj BS_PktDormantAccept : BS_PktBody
{
};

/* 3004 */
struct DefQuerySKIDUpdateVSItem
{
  int nCarId;
  int nState;
  int nPeriod;
  int nUTime;
  int nServerId;
  __unaligned __declspec(align(1)) __int64 nCid;
  int nInvenIdx;
};

/* 3005 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktItemUseExAck : BS_PktBody
{
  unsigned int DestInvenIdx;
  unsigned int SrcInvenIdx;
  unsigned int CarID;
};

/* 3006 */
struct BS_PktLapTimeResult::Result
{
  unsigned int Serial;
  float Record;
  unsigned int RewardItem[3];
};

/* 3007 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktLapTimeResult : BS_PktBody
{
  unsigned int m_Size;
  unsigned int m_Page;
  BS_PktLapTimeResult::Result m_result[1];
};

/* 3008 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUCChaseMiddleReward : BS_PktBody
{
  unsigned int GetExp;
  unsigned int InvenIdx;
  int DeltaMito;
  __int64 Mito;
};

/* 3009 */
struct __cppobj BS_PktRegisterChannelAdmin : BS_PktBody
{
  wchar_t m_Name[10];
};

/* 3010 */
struct HashedVector<TickHandler *,256,32>::Lock
{
  HashedVector<TickHandler *,256,32>::Monitor *m_pMonitor;
};

/* 3011 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktMoveFreeTrafficVehicle : BS_PktBody
{
  XiFreeCarMove m_move;
};

/* 3012 */
struct DefQuerySKIDCheckTeamUrl
{
  char szTeamUrl[33];
};

/* 3013 */
struct __cppobj __declspec(align(2)) XiInsertCarLog : XiDBOperation
{
  DefQuerySKIDInsertCarLog param;
};

/* 3014 */
struct __cppobj BS_PktHuvHit : BS_PktBody
{
  unsigned __int16 HitterSerial;
  unsigned __int16 HuvId;
  unsigned __int16 CarSerial;
  unsigned __int16 CarSort;
  unsigned __int16 Reserve;
  int HP;
  int Damage;
  __int16 isCritical;
  __int16 isDrift;
  int DeltaMito;
  __unaligned __declspec(align(1)) __int64 Mito;
  int GetExp;
};

/* 3015 */
struct __cppobj __unaligned __declspec(align(4)) BS_PktDelegateTeamMaster : BS_PktBody
{
  __int64 m_TeamId;
  __int64 m_Cid;
  XiStrCharName m_CharName;
};

/* 3016 */
struct __cppobj BS_PktLeaveChatAck : BS_PktBody
{
  wchar_t m_Name[10];
  wchar_t m_Player[16];
};

/* 3017 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCBattleInstance : BS_PktBody
{
  int m_Act;
  unsigned int m_Size;
};

/* 3018 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktRushObjectUpdate : BS_PktBody
{
  unsigned int m_ObjectType;
  unsigned int m_ObjectIndex;
  int m_Time;
};

/* 3019 */
struct DefQuerySKIDInsertBeanEvent
{
  char szMemberId[33];
  char szGameId[33];
  char szGatherMethod[33];
  char szGatherDesc[33];
  int nCount;
};

/* 3020 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktChunk : BS_PktBody
{
  unsigned int Len;
};

/* 3021 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktInstantRequestAck : BS_PktBody
{
  unsigned int TableIdx;
};

/* 3022 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktPartyUpdate : BS_PktBody
{
  unsigned int m_Serial;
  unsigned int m_Level;
};

/* 3023 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateCarUpgrade7
{
  int nUpgrade;
  int nServerId;
  __int64 nCid;
  int nCarId;
};

/* 3024 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktBattleRes : BS_PktBody
{
  unsigned __int16 m_Serial;
  XiVec4 m_Pos;
  char m_Accepted;
};

/* 3025 */
struct __cppobj BS_PktUCBossPatrolReset : BS_PktBody
{
};

/* 3026 */
struct __cppobj BS_PktTradeLock : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int TradeIdx;
  unsigned __int16 Lock;
};

/* 3027 */
struct __cppobj XiResetPlayMode : XiDBOperation
{
  wchar_t m_CName[33];
  char m_MemberId[33];
  DefQuerySKIDResetPlayMode param;
};

/* 3028 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktBuyVisualItemAck : BS_PktBody
{
  unsigned int Type;
  unsigned int TableIdx;
  unsigned int CarID;
  unsigned int InvenIdx;
  int Period;
  int Mito;
  int Hancoin;
  int BonusMito;
  int Mileage;
};

/* 3029 */
struct __cppobj XiUpdateVSItemDB : XiDBOperation
{
  DefQuerySKIDUpdateVSItem param;
};

/* 3030 */
struct DefQuerySKIDDeleteStickerCatalog
{
  __int64 nStickerId;
};

/* 3031 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAuctionBuyAck : BS_PktBody
{
  unsigned int Serial;
  unsigned int Price;
};

/* 3032 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGameSetting : BS_PktBody
{
  int ServerVersion;
  int Reserve;
  XiContentsFlag m_ContentsFlag;
};

/* 3033 */
struct DefQuerySKIDGetGMCmdLine
{
  int nServerId;
};

/* 3034 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktMyQuestList : BS_PktBody
{
  unsigned int GivePostIdx;
};

/* 3035 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktCharInfoAck : BS_PktBody
{
  XiStrCharInfo CharInfo;
  unsigned int CarInfoNum;
};

/* 3036 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGroupComboReset : BS_PktBody
{
  int m_Serial;
  int m_GroupId;
};

/* 3037 */
struct __cppobj BS_PktJoinTeamApplyByName : BS_PktBody
{
  wchar_t m_TeamName[13];
  XiTeamBind m_bind;
};

/* 3038 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktStickerReportAttach : BS_PktBody
{
  __int64 m_Cid;
  unsigned int attachedCarId;
  XiSticker m_sticker;
  __int64 StickerId;
  wchar_t StickerName[32];
  __int64 StickerCreator;
  wchar_t StickerCreatorName[32];
};

/* 3039 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGlobalTime : BS_PktBody
{
  $BDBC065E804B9590594210616B70BA0B ___u1;
  unsigned int m_dwGlobalTime;
};

/* 3040 */
struct __cppobj BS_PktMoveVehiclePlus : BS_PktBody
{
  XiCarMove m_move;
  char data[64];
};

/* 3041 */
struct __unaligned __declspec(align(1)) DefQuerySKIDInsertAuctionCarLog
{
  char szCode[33];
  __int64 nCSerial;
  int nCCarType;
  int nCCarGrade;
  int nCCarPrice;
  int nSSerial;
  int nSCarType;
  int nSCarGrade;
  int nSCarPrice;
  char szActName[33];
  char szRegName[33];
};

/* 3042 */
struct DefQuerySKIDUpdateCharTeamRank
{
  int nTeamRank;
  int nServerId;
  __int64 nCid;
  __int64 nTeamId;
};

/* 3043 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktExitAreaAck : BS_PktBody
{
  int m_Result;
  __int16 m_MsgLen;
  wchar_t m_Msg[1];
};

/* 3044 */
struct __cppobj BS_PktMoveVehicle : BS_PktBody
{
  XiCarMove m_move;
  XiCarState m_state;
};

/* 3045 */
struct __cppobj BS_PktRequestSwitchRushHuv : BS_PktBody
{
  unsigned __int16 CarSerial;
  unsigned __int16 CarSort;
};

/* 3046 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetCharQuest
{
  int nServerId;
  __int64 nCid;
};

/* 3047 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktLapTimeNotifyStart : BS_PktBody
{
  int m_Serial;
  int m_StartTime;
  int m_StartLap;
};

/* 3048 */
struct __cppobj BS_PktCharInfo : BS_PktBody
{
  XiStrCharName Name;
};

/* 3049 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGetRoomInfo : BS_PktBody
{
  int m_Act;
  unsigned int m_RoomId;
};

/* 3050 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktSelectGuild : BS_PktBody
{
  int Guild;
};

/* 3051 */
struct DefQuerySKIDAuth
{
  char szMemberId[33];
};

/* 3052 */
struct DefQuerySKIDGetServerTick
{
  int nServerId;
};

/* 3053 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktDayMissionCompleteAck : BS_PktBody
{
  unsigned int m_Result;
  int m_EventSeason;
  unsigned int m_EventTokenCnt;
  unsigned int m_EventEntryCnt;
};

/* 3054 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktChaseBegin : BS_PktBody
{
  int m_ChaseType;
  XiVec4 m_StartPos;
  int m_firstHuvLevel;
  int m_firstHuvId;
  int m_HuvNum;
};

/* 3055 */
struct ChaseTable
{
  BS_SwitchableRef<std::map<int,ChaseTable::ChaseInfo,std::less<int>,std::allocator<std::pair<int const ,ChaseTable::ChaseInfo> > > > m_chaseInfo;
};

/* 3056 */
struct DefQuerySKIDInsertTeamLog
{
  int nServerId;
  __unaligned __declspec(align(1)) __int64 nCid;
  char szCName[33];
  char szMemberID[33];
  __unaligned __declspec(align(1)) int nMPlayTime;
  __unaligned __declspec(align(1)) int nCPlayTime;
  __unaligned __declspec(align(1)) __int64 nMoney;
  __unaligned __declspec(align(1)) int nExp;
  __unaligned __declspec(align(1)) int nLevel;
  __unaligned __declspec(align(1)) int nCarId;
  __unaligned __declspec(align(1)) int nCarType;
  __unaligned __declspec(align(1)) int nCarGrade;
  __unaligned __declspec(align(1)) int nSP;
  __unaligned __declspec(align(1)) int nAC;
  __unaligned __declspec(align(1)) __int64 nCP;
  __unaligned __declspec(align(1)) int nBT;
  __unaligned __declspec(align(1)) int nEQUIP;
  __unaligned __declspec(align(1)) int nDeltaExp;
  __unaligned __declspec(align(1)) int nDeltaLevel;
  __unaligned __declspec(align(1)) __int64 nDeltaMoney;
  char szTxnType[21];
  __unaligned __declspec(align(1)) __int64 nTeamId;
  __unaligned __declspec(align(1)) __int64 nTeamMarkId;
  char szTeamName[17];
  __int64 nTeamLevel;
  __int64 nTeamPoint;
  __int64 nMemberCnt;
};

/* 3057 */
struct __cppobj __unaligned __declspec(align(4)) XiInsertTeamLog : XiDBOperation
{
  DefQuerySKIDInsertTeamLog param;
};

/* 3058 */
struct __unaligned __declspec(align(1)) DefQuerySKIDUpdateUser
{
  int nLastPlayTime1;
  int nLastPlayTime2;
  char szMemberId[33];
};

/* 3059 */
struct __cppobj BS_PktChannelInfo : BS_PktBody
{
  XiStrChannelName m_Name;
};

/* 3060 */
struct __cppobj BS_SingletonHeap<XiAssistTable,5>
{
};

/* 3061 */
struct __cppobj XiAssistTable : BS_SingletonHeap<XiAssistTable,5>
{
  std::map<unsigned long,XiStrAssist,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrAssist> > > m_AssistTable;
  std::map<unsigned short,AssistGroup,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,AssistGroup> > > m_AssistGroupTable;
};

/* 3062 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktPushImageData : BS_PktBody
{
  unsigned int m_Offset;
  unsigned int m_Size;
  unsigned int m_TotalSize;
  char m_data[1];
};

/* 3063 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktTimeSync : BS_PktBody
{
  $43FC83DAC0138A0340A76C16734A339F m_Local;
  int m_nGlobalTime;
};

/* 3064 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktPlayerInfoRes : BS_PktBody
{
  unsigned int m_Size;
  XiPlayerInfo m_playerInfo[1];
};

/* 3065 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktRoomMaster : BS_PktBody
{
  unsigned int m_RoomId;
  unsigned int m_MasterSerial;
};

/* 3066 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktReplaceCar : BS_PktBody
{
  unsigned __int16 OldSerial;
  unsigned __int16 NewSerial;
  unsigned __int16 CarSort;
  unsigned __int16 HuvType;
  float Health;
  int Time;
};

/* 3067 */
struct DefQuerySKIDUpdateCouponStamp
{
  int nState;
  int nServerId;
  __int64 nCid;
  int nType;
  int nStampIdx;
};

/* 3068 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktPlayerInfoReq : BS_PktBody
{
  unsigned int m_Size;
  XiPlayerKey m_PlayerKey[1];
};

/* 3069 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUnPackItemAck : BS_PktBody
{
  unsigned int InvenIdx;
};

/* 3070 */
struct __unaligned __declspec(align(4)) DefQuerySKIDAddStickerAttachCount
{
  int nDeltaCnt;
  __int64 nStickerId;
};

/* 3071 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktLapTimeStart : BS_PktBody
{
  int m_StartTime;
  int m_StartLap;
  int m_SafeStart;
};

/* 3072 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAuctionCancelAck : BS_PktBody
{
  unsigned int Serial;
};

/* 3073 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktPing : BS_PktBody
{
  $BDBC065E804B9590594210616B70BA0B ___u1;
};

/* 3074 */
struct __unaligned __declspec(align(1)) DefQuerySKIDGetTeamInfoByName
{
  int nServerId;
  char szTeamName[17];
};

/* 3075 */
struct __unaligned __declspec(align(2)) DefQuerySKIDInsertFriend
{
  int nServerId;
  __int64 nCid;
  __int64 nFCid;
  char szFState[2];
};

/* 3076 */
struct DefQuerySKIDPubAuthTW
{
  char szMemberId[33];
  char szPassword[33];
  char szUserIP[33];
};

/* 3077 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktInstantCompleteAck : BS_PktBody
{
  unsigned int TableIdx;
};

/* 3078 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCloseTeam : BS_PktBody
{
  __int64 m_TeamId;
};

/* 3079 */
struct DefQuerySKIDGiveChannelTax
{
  __int64 nGold1;
  __int64 nGold2;
  int nServerId;
  int nChannel;
};

/* 3080 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktQuestReward : BS_PktBody
{
  unsigned int TableIdx;
};

/* 3081 */
struct DefQuerySKIDUpdateCharHancoinGarage
{
  int nHancoinGarage;
  int nServerId;
  __int64 nCid;
};

/* 3082 */
struct __unaligned __declspec(align(2)) DefQuerySKIDUpdateTeam
{
  __int64 nDeltaPoint;
  int nMemberCnt;
  __int64 nTeamTotalPoint;
  char szTeamGrade[2];
  int nServerId;
  __int64 nTeamId;
};

/* 3083 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktInstantGiveUpAck : BS_PktBody
{
  unsigned int TableIdx;
};

/* 3084 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktVSItemModList : BS_PktBody
{
  unsigned int ItemNum;
  XiStrMyVSItemMod ModItem[1];
};

/* 3085 */
struct __cppobj BS_PktSay : BS_PktBody
{
  unsigned __int16 m_Len;
};

/* 3086 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUCBossPatrolStartAck : BS_PktBody
{
  int Time;
  int BarrierNum;
};

/* 3087 */
struct DefQuerySKIDPutImage
{
  __int64 nImageId;
  int nServerId;
  int nImageType;
  int nImageSize;
  int nImageColorKey;
};

/* 3088 */
struct __cppobj BS_PktWhisper : BS_PktBody
{
  wchar_t m_Name[20];
  __unaligned __declspec(align(1)) unsigned int m_From;
  unsigned __int16 m_Len;
};

/* 3089 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktBlockList : BS_PktBody
{
  unsigned int m_Num;
  XiBlockInfo m_unit[1];
};

/* 3090 */
struct $AC0F3713F3C687B975BCB8CC420EC848
{
  unsigned int mB;
  unsigned int mA;
};

/* 3091 */
union $8DA1A03A397BEA4A496C463A9832F3FA
{
  $AC0F3713F3C687B975BCB8CC420EC848 __s0;
  unsigned __int64 mID;
};

/* 3092 */
struct ChClassID
{
  $8DA1A03A397BEA4A496C463A9832F3FA ___u0;
};

/* 3093 */
struct DefQuerySKIDGetEventSerial
{
  char szName[33];
};

/* 3094 */
struct __cppobj BS_PktArbeitRewardAck : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int Serial;
  __unaligned __declspec(align(1)) unsigned int GetExp;
  __unaligned __declspec(align(1)) unsigned int GetMoney;
  __unaligned __declspec(align(1)) unsigned int RewardItemNum;
  __unaligned __declspec(align(1)) unsigned int RewardItem;
  __unaligned __declspec(align(1)) XiStrExpInfo ExpInfo;
  unsigned __int16 Level;
  XiRankUnit BestRankUnit;
  XiRankUnit CurRankUnit;
  unsigned int Result;
};

/* 3095 */
struct __cppobj BS_PktAreaChat : BS_PktBody
{
  wchar_t m_Name[10];
  wchar_t m_Player[16];
  __unaligned __declspec(align(1)) unsigned int m_Color;
  unsigned __int16 m_Len;
};

/* 3096 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktArbeitReward : BS_PktBody
{
  unsigned int Serial;
};

/* 3097 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateCarUpgrade9
{
  int nUpgrade;
  int nServerId;
  __int64 nCid;
  int nCarId;
};

/* 3098 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktMyTeamInfo : BS_PktBody
{
  unsigned int m_Act;
};

/* 3099 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktEquipVisualItemAck : BS_PktBody
{
  unsigned int InvenIdx;
  unsigned int DstSlotIdx;
  unsigned int CarID;
};

/* 3100 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktDropItem : BS_PktBody
{
  unsigned int TableIdx;
  unsigned int InvenIdx;
  int Num;
};

/* 3101 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetCoupon
{
  int nServerId;
  __int64 nCid;
};

/* 3102 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCheckEvent : BS_PktBody
{
  int m_EventId;
};

/* 3103 */
struct __cppobj BS_PktClearAreaMap : BS_PktBody
{
};

/* 3104 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetTeamExtState
{
  __int64 nTeamId;
  int nServerId;
};

/* 3105 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGMBlockAck : BS_PktBody
{
  int m_Idx;
  int m_Ret;
};

/* 3106 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetCharExp
{
  int nServerId;
  __int64 nCid;
};

/* 3107 */
struct __unaligned __declspec(align(1)) DefQuerySKIDUpdateItemExten
{
  char szItemId[33];
  int nCarId;
  int nStackNum;
  int nState;
  int nUpgrade;
  int nBelonging;
  char szAssistA[33];
  char szAssistB[33];
  int nBox;
  int nCTime;
  int nServerId;
  __int64 nCid;
  int nInvenIdx;
};

/* 3108 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktFriendRequestAck : BS_PktBody
{
  __int64 cid;
  __int16 Ret;
  XiStrCharName CharName;
};

/* 3109 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCombiItemAck : BS_PktBody
{
  unsigned int Type;
  unsigned int InvenIdx;
};

/* 3110 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktETCInfo : BS_PktBody
{
  int m_IsPcBang;
  int m_NumPCBangCoupon;
  int m_reserve[32];
};

/* 3111 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktLobbyETCInfo : BS_PktBody
{
  int m_IsPcBang;
  int m_NumReserve;
  int m_reserve[32];
};

/* 3112 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCombiItem : BS_PktBody
{
  unsigned int Type;
  unsigned int Src1InvenIdx;
  unsigned int Src2InvenIdx;
  unsigned int Src3InvenIdx;
};

/* 3113 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktTrafficItemEvent : BS_PktBody
{
  int m_Type;
  int m_Time;
  float m_Arg;
  int m_nArg1;
  int m_nArg2;
  int m_nArg3;
};

/* 3114 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktMita500Get : BS_PktBody
{
  unsigned int m_Index;
};

/* 3115 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktCancelCloseTeamAck : BS_PktBody
{
  int m_Result;
  XiStrTeamInfo m_TeamInfo;
};

/* 3116 */
struct __unaligned __declspec(align(4)) XiChaseResultInfo
{
  wchar_t m_Name[32];
  unsigned __int16 m_Serial;
  unsigned __int16 m_CarSort;
  int m_DeltaHuvMoney;
  int m_DeltaBonusMoney;
  __int64 m_Money;
  unsigned int m_DeltaHuvExp;
  unsigned int m_DeltaBonusExp;
  XiStrExpInfo m_ExpInfo;
  unsigned int m_Level;
  float m_Point;
  unsigned int m_RewardItemCnt;
  unsigned int m_RewardItem[2];
};

/* 3117 */
struct __cppobj BS_PktEndingUserRecord : BS_PktBody
{
};

/* 3118 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktInstantStartAck : BS_PktBody
{
  unsigned int TableIdx;
};

/* 3119 */
struct __cppobj BS_PktTradeItemOnAck : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int TradeIdx;
  __unaligned __declspec(align(1)) XiStrTradeInfo TradeInfo;
  XiStrCharName Name;
};

/* 3120 */
struct __unaligned __declspec(align(4)) DefQuerySKIDDeleteCharacter
{
  int nServerId;
  __int64 nCid;
};

/* 3121 */
struct __cppobj BS_PktAuctionSearchAck : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int AuctionTotalNum;
  __unaligned __declspec(align(1)) unsigned int AuctionNum;
  XiStrAuctionItemData AuctionData[1];
};

/* 3122 */
struct BS_PktGetDateTimeAck::Date
{
  __int16 year;
  __int16 month;
  __int16 mday;
  __int16 wday;
};

/* 3123 */
struct BS_PktGetDateTimeAck::Time
{
  char hour;
  char min;
  char sec;
  char ped;
};

/* 3124 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGetDateTimeAck : BS_PktBody
{
  int Action;
  int GlobalTime;
  float LocalTime;
  int Time_t;
  unsigned int ServerTickTime;
  int ServerTick;
  BS_PktGetDateTimeAck::Date m_date;
  BS_PktGetDateTimeAck::Time m_time;
};

/* 3125 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAreaStatusAck : BS_PktBody
{
  unsigned int m_UserCnt[100];
};

/* 3126 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetNextCarId
{
  int nServerId;
  __int64 nCid;
};

/* 3127 */
struct BS_CBattleLobby::RoomClose
{
  BS_CBattleLobby *m_pLobby;
};

/* 3128 */
struct BS_CBattleLobby::SendBattleState
{
  BS_CBattleLobby *m_pLobby;
  BS_Packet *m_pPacket;
  BS_Packet *m_pPacket2;
};

/* 3129 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktArbeitRankList : BS_PktBody
{
  unsigned int ArbeitIdx;
  unsigned int PageIdx;
  unsigned int DateType;
};

/* 3130 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktRoomDirectJoin : BS_PktBody
{
  int m_nPvpChannelId;
  unsigned int m_Serial;
  XiPvpUserInfo m_UserInfo;
  XiPlayerInfo m_PlayerInfo;
  XiCarAttr m_CarAttr;
  XiPvpRoomFilter m_RoomFilter;
};

/* 3131 */
struct __unaligned __declspec(align(2)) DefQuerySKIDUpdateMoney
{
  char szCode[21];
  int nServerId;
  __int64 nCid;
  char szCName[33];
  char szCIp[21];
  char nKind[2];
  char szItemCode[21];
  __int64 nGameMoney;
  int nLevel;
};

/* 3132 */
struct __cppobj BS_PktRequestCar : BS_PktBody
{
  unsigned __int16 m_Size;
  XiCarIdentity m_req[1];
};

/* 3133 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGLNotifyChangeMaster : BS_PktBody
{
  int nIdx;
  char gameId[32];
  char teamId[32];
  char serverName[32];
  char oldMasterUId[32];
  char newMasterUId[32];
  char ip[32];
};

/* 3134 */
struct __cppobj __unaligned __declspec(align(4)) BS_PktLobbyChat : BS_PktBody
{
  __int64 m_Cid;
  wchar_t m_CName[16];
  wchar_t m_Name[10];
  unsigned int m_Color;
  unsigned __int16 m_Len;
};

/* 3135 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktTradeClose : BS_PktBody
{
  unsigned int TradeIdx;
};

/* 3136 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetCharacter
{
  int nServerId;
  __int64 nCid;
};

/* 3137 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktNullPing : BS_PktBody
{
  int m_Value;
};

/* 3138 */
struct __cppobj BS_PktRoomCreateAck : BS_PktBody
{
  __unaligned __declspec(align(1)) XiPvpUserInfo m_UserInfo;
  __unaligned __declspec(align(1)) int m_Result;
  __unaligned __declspec(align(1)) unsigned int m_RoomId;
  __unaligned __declspec(align(1)) unsigned int m_RoomLifeId;
  __int16 m_RoomType;
  unsigned __int16 m_MapId;
  unsigned __int16 m_MapFlag;
};

/* 3139 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGetMyHancoinAck : BS_PktBody
{
  unsigned int Hancoin;
  __int64 Mileage;
};

/* 3140 */
struct __cppobj BS_PktGroupTCSSignal : BS_PktBody
{
  unsigned __int16 m_Size;
  XiTCSSignal m_signal[1];
};

/* 3141 */
struct __cppobj __declspec(align(2)) XiUpdateItemExtenDB : XiDBOperation
{
  DefQuerySKIDUpdateItemExten param;
};

/* 3142 */
struct __cppobj BS_PktBattleResult : BS_PktBody
{
  unsigned __int16 m_Serial;
  unsigned int m_Exp;
  unsigned int m_ItemCode;
};

/* 3143 */
struct __cppobj BS_PktSilentMove : BS_PktBody
{
  XiCarMove m_move;
  XiCarState m_state;
};

/* 3144 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktSelectGuildAck : BS_PktBody
{
  int Guild;
};

/* 3145 */
struct __cppobj BS_PktRecommendEvent : BS_PktBody
{
};

/* 3146 */
struct __cppobj BS_XORCrypt
{
};

/* 3147 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktUserAuthEtc : BS_PktBody
{
  int m_IsPcBang;
  char m_CrmCode[21];
};

/* 3148 */
struct __cppobj BS_PktReqCouponItem : BS_PktBody
{
  char m_CouponString[32];
};

/* 3149 */
struct __unaligned __declspec(align(4)) DefQuerySKIDCountFriend
{
  int nServerId;
  __int64 nCid;
};

/* 3150 */
struct __cppobj BS_PktBattleMove : BS_PktBody
{
  unsigned __int16 m_Serial;
  unsigned int m_Type;
  XiVec4 m_Pos;
  XiVec4 m_Vel;
  int m_Time;
};

/* 3151 */
struct __unaligned __declspec(align(4)) DefQuerySKIDSetCharExp
{
  __int64 nExp;
  int nServerId;
  __int64 nCid;
};

/* 3152 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktRoomSecureJoin : BS_PktBody
{
  unsigned int m_Serial;
  XiPvpUserInfo m_UserInfo;
  XiCarAttr m_CarAttr;
  unsigned int m_RoomId;
  unsigned int m_RoomLifeId;
  XiPlayerInfo m_PlayerInfo;
  wchar_t m_RoomPass[30];
  XiPvpRoomSlot m_Slot;
};

/* 3153 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktPartyBanish : BS_PktBody
{
  unsigned int m_Serial;
};

/* 3154 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktHuvHealth : BS_PktBody
{
  unsigned __int16 HuvId;
  unsigned __int16 CarSerial;
  unsigned __int16 CarSort;
  unsigned __int16 HealthType;
  int HP;
  int Delta;
};

/* 3155 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUnderCityAgree : BS_PktBody
{
  unsigned int m_Serial;
  int m_Time;
};

/* 3156 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktNotifyServerIp : BS_PktBody
{
  unsigned int GameServerIp;
  unsigned int LobbyServerIp;
  unsigned int AreaServerIp;
  unsigned int BAreaServerIp;
};

/* 3157 */
struct __cppobj BS_PktBuyCar : BS_PktBody
{
  XiStrCharName Name;
  unsigned int CarType;
  unsigned int Color;
};

/* 3158 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktDayEventGetItemAck : BS_PktBody
{
  unsigned int m_Result;
  unsigned int m_GetItemIdx;
};

/* 3159 */
struct __unaligned __declspec(align(1)) DefQuerySKIDCreateCar
{
  int nServerId;
  __int64 nCid;
  char szCName[33];
  int nCarType;
  int nColor;
  int nUpgrade;
  int nAuctionRec;
  float fMitron;
  float fKm;
};

/* 3160 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCheckInLobbyAck : BS_PktBody
{
  unsigned int m_Result;
  unsigned int m_Permission;
};

/* 3161 */
struct __cppobj BS_PktMoveTrafficVehicle : BS_PktBody
{
  XiTrafficCarMove m_move;
};

/* 3162 */
struct __cppobj BS_PktChaseResult : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int m_Result;
  __unaligned __declspec(align(1)) int m_TimeRecord;
  unsigned __int16 m_UnitSize;
  XiChaseResultInfo m_Unit[1];
};

/* 3163 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktUpgradeItemAck : BS_PktBody
{
  unsigned int Gold;
  unsigned int Result;
  unsigned int SrcInvenIdx;
  unsigned int AddInvenIdx;
  int AddNum;
};

/* 3164 */
struct __cppobj BS_PktEnterRushZone : BS_PktBody
{
};

/* 3165 */
struct __unaligned __declspec(align(4)) DefQuerySKIDUpdateCarUpgrade3
{
  int nUpgrade;
  int nServerId;
  __int64 nCid;
  int nCarId;
};

/* 3166 */
struct DefQuerySKIDUpdateCBattleMatch
{
  int nDefWinRound;
  int nAtkWinRound;
  int nServerId;
  int nChannelId;
  int nBattleId;
  int nMatchId;
};

/* 3167 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktCharTeamInfo : BS_PktBody
{
  unsigned int m_Act;
  __int64 m_Cid;
  __int64 m_TeamId;
  int m_TeamRank;
};

/* 3168 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktNotifyRushHuv : BS_PktBody
{
  unsigned int m_HuvIndex;
  unsigned __int16 m_Serial;
  unsigned __int16 m_CarSort;
  unsigned int m_nHuvType;
  unsigned int m_nCourseId;
  float m_fHealth;
  int m_StartTime;
  unsigned int m_Timeout;
  unsigned int m_RushMemberCount;
};

/* 3169 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktEnterRushZoneAck : BS_PktBody
{
  unsigned int m_RushStartTime;
  unsigned int m_nHuvType;
  unsigned int m_nCourseId;
};

/* 3170 */
struct __cppobj BS_PktHuvRes : BS_PktBody
{
  __unaligned __declspec(align(1)) int m_StartTime;
  __unaligned __declspec(align(1)) float m_Pos[4];
  __unaligned __declspec(align(1)) unsigned int m_Size;
  XiHuvInfo m_huv[1];
};

/* 3171 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktQuestGiveUpAck : BS_PktBody
{
  unsigned int TableIdx;
};

/* 3172 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktNotifySelledSticker : BS_PktBody
{
  __int64 StickerId;
  wchar_t StickerName[32];
  __int64 StickerCreator;
  wchar_t StickerCreatorName[32];
  __int64 DeltaMito;
};

/* 3173 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktInstantGiveUp : BS_PktBody
{
  unsigned int TableIdx;
};

/* 3174 */
struct __cppobj BS_SingletonHeap<XiRealMatch,5>
{
};

/* 3175 */
struct __cppobj XiRealMatch : BS_SingletonHeap<XiRealMatch,5>
{
  std::vector<int,std::allocator<int> > m_RealMatchDay[7];
  BS_CriticalSection m_cblock;
  XiRealMatchStat m_RealMatchStat;
  std::vector<XiStrItemParam,std::allocator<XiStrItemParam> > m_ItemList;
  int m_lastCheckTime;
  int m_nextRealMatchTime;
  bool m_RealMatchEnable;
  BS_Buffer *m_pBuffer;
};

/* 3176 */
struct __cppobj BS_PktLeaveChannel : BS_PktBody
{
  wchar_t m_Name[10];
};

/* 3177 */
struct __cppobj BS_PktPartyJoin : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int m_Serial;
  __unaligned __declspec(align(1)) unsigned int m_Ticket;
  XiStrPartyMemberInfo m_memberinfo;
};

/* 3178 */
struct __cppobj BS_PktChannelListAck : BS_PktBody
{
};

/* 3179 */
struct DefQuerySKIDGetCid
{
  char szCName[33];
};

/* 3180 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktHuvResult : BS_PktBody
{
  int Result;
  unsigned int RewardItemIndex;
};

/* 3181 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGMNotice : BS_PktBody
{
  int m_Idx;
  char m_Msg[1024];
};

/* 3182 */
struct __cppobj BS_PktMyAuctionList : BS_PktBody
{
};

/* 3183 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktNotifyBadSticker : BS_PktBody
{
  unsigned int m_Size;
  __int64 m_StickerId[1];
};

/* 3184 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktQuestGoalPlace : BS_PktBody
{
  unsigned int TableIdx;
};

/* 3185 */
struct BS_Pulse::CTraffic
{
  unsigned int m_dwTTPOver;
  unsigned int m_dwTTPOverTwoTime;
};

/* 3186 */
struct BS_Pulse
{
  unsigned int m_dwPulseCount;
  int m_iTickPerPulse;
  int m_iCurrentTick;
  int m_iPastTick;
  int m_iInterval;
  BS_Pulse::CTraffic m_Traffic;
};

/* 3187 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktArbeitStart : BS_PktBody
{
  unsigned int TableIdx;
};

/* 3188 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktItemUnion : BS_PktBody
{
  unsigned int DestInvenIdx;
  unsigned int SrcInvenIdx;
};

/* 3189 */
struct __cppobj BS_PktLeaveChannelAck : BS_PktBody
{
  wchar_t m_Name[10];
  wchar_t m_Player[16];
};

/* 3190 */
struct __cppobj BS_PktChasePropose : BS_PktBody
{
  unsigned __int16 m_Serial;
  XiVec4 m_StartPos;
  XiVec4 m_EndPos;
  int m_Type;
  int m_courseId;
  int m_firstHuvLevel;
  int m_firstHuvId;
  wchar_t m_PosName[100];
};

/* 3191 */
struct __cppobj BS_PktAllAreaStatus : BS_PktBody
{
};

/* 3192 */
struct __cppobj __unaligned __declspec(align(1)) BS_PktAuctionCarBuyAck : BS_PktBody
{
  unsigned int Serial;
  unsigned int Price;
  XiStrCarInfo CarInfo;
};

/* 3193 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktTeamMembers : BS_PktBody
{
  int m_Act;
  __int64 m_TeamId;
  int m_TargetChannel;
};

/* 3194 */
struct __unaligned __declspec(align(4)) DefQuerySKIDGetAllHancoinGarage
{
  int nServerId;
  __int64 nCid;
};

/* 3195 */
struct __cppobj __unaligned __declspec(align(4)) XiUpdateCouponParamDB : XiDBOperation
{
  DefQuerySKIDUpdateCouponParam param;
};

/* 3196 */
struct __cppobj BS_PktPartyInvite : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int m_Serial;
  __unaligned __declspec(align(1)) unsigned int m_Ticket;
  XiStrPartyMemberInfo m_memberinfo;
  wchar_t m_PartyName[30];
  wchar_t m_Msg[100];
};

/* 3197 */
struct DefQuerySKIDInsertCBattleRound
{
  int nServerId;
  int nChannelId;
  int nBattleId;
  int nMatchId;
  int nRound;
  __unaligned __declspec(align(1)) __int64 nDefTeamId;
  __unaligned __declspec(align(1)) __int64 nAtkTeamId;
  int nMapId;
};

/* 3198 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGetCouponStampListAck : BS_PktBody
{
  unsigned int CouponNum;
  XiStrCoupon Coupon[1];
};

/* 3199 */
struct __cppobj DefQuerySKIDNextItemId
{
};

/* 3200 */
struct __unaligned __declspec(align(4)) DefQuerySKIDBlockChat
{
  float fDay;
  __int64 nCid;
};

/* 3201 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktAttachSticker : BS_PktBody
{
  unsigned int attachedCarId;
  XiSticker m_sticker;
  __int64 StickerId;
  wchar_t StickerName[32];
  __int64 StickerCreator;
  wchar_t StickerCreatorName[32];
  __int64 m_SellCnt;
};

/* 3202 */
struct BS_PktRushStatus::HuvInfo
{
  unsigned __int16 Serial;
  unsigned __int16 CarSort;
  unsigned __int16 HuvType;
  unsigned __int16 Reserved;
  float Health;
};

/* 3203 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktRushStatus : BS_PktBody
{
  unsigned int m_nHuv;
  BS_PktRushStatus::HuvInfo m_huv[1];
};

/* 3204 */
struct __cppobj XiUpdateAuctionCarDB : XiDBOperation
{
  DefQuerySKIDUpdateAuctionCar param;
};

/* 3205 */
struct __cppobj BS_DumyPacketDispatch : BS_PacketDispatch
{
};

/* 3206 */
struct DefQuerySKIDDeleteCar
{
  int nServerId;
  __unaligned __declspec(align(1)) __int64 nCid;
  int nCarId;
};

/* 3207 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktStickerNameCheckAck : BS_PktBody
{
  wchar_t m_SName[32];
  __int64 m_Cid;
  int m_Category;
  int m_Ret;
};

/* 3208 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktExtendUpdate : BS_PktBody
{
  unsigned int HancoinInven;
  unsigned int HancoinGarage;
};

/* 3209 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktStickerReportAttachAck : BS_PktBody
{
  __int64 m_Cid;
  unsigned int attachedCarId;
  XiSticker m_sticker;
  __int64 StickerId;
  wchar_t StickerName[32];
  __int64 StickerCreator;
  wchar_t StickerCreatorName[32];
  __int64 m_SellCnt;
};

/* 3210 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktRepairItemAck : BS_PktBody
{
  unsigned int Gold;
  unsigned int Result;
  unsigned int SrcInvenIdx;
  unsigned int AddInvenIdx;
};

/* 3211 */
struct __cppobj __declspec(align(4)) XiUpdateUserDB : XiDBOperation
{
  DefQuerySKIDUpdateUser param;
};

/* 3212 */
struct __cppobj BS_PktArbeitGoalPlaceAck : BS_PktBody
{
  __unaligned __declspec(align(1)) unsigned int Serial;
  __unaligned __declspec(align(1)) unsigned int PlaceIdx;
  unsigned __int16 Complete;
};

/* 3213 */
struct __cppobj __unaligned __declspec(align(2)) BS_PktGetVisualItem : BS_PktBody
{
  __int64 GID;
  unsigned int CarID;
};

/* 3214 */
struct $983F061E0B702DD8AE0B4B955735A6A3
{
  unsigned int Lo;
  int Hi;
};

/* 3215 */
union tagCY
{
  $983F061E0B702DD8AE0B4B955735A6A3 __s0;
  __int64 int64;
};

/* 3216 */
struct __cppobj IDispatch : IUnknown
{
};

/* 3217 */
struct tagSAFEARRAYBOUND
{
  unsigned int cElements;
  int lLbound;
};

/* 3218 */
struct tagSAFEARRAY
{
  unsigned __int16 cDims;
  unsigned __int16 fFeatures;
  unsigned int cbElements;
  unsigned int cLocks;
  void *pvData;
  tagSAFEARRAYBOUND rgsabound[1];
};

/* 3226 */
struct $E2F13C0D8C7A5E44CBEA2DDC2BADB614
{
  unsigned __int16 vt;
  unsigned __int16 wReserved1;
  unsigned __int16 wReserved2;
  unsigned __int16 wReserved3;
  __int64 llVal;
};

/* 3220 */
struct $5CC4D6FD2BF4E5B80FE1FD714DCA0CFA
{
  char scale;
  char sign;
};

/* 3221 */
union $ACF54D4416F45F16A26C2F27F36FA853
{
  $5CC4D6FD2BF4E5B80FE1FD714DCA0CFA __s0;
  unsigned __int16 signscale;
};

/* 3222 */
struct $A04CD8C0331024E133CCEC4B0AB36956
{
  unsigned int Lo32;
  unsigned int Mid32;
};

/* 3223 */
union $D9ABA483A3D2F703F609F30BAB6A81F5
{
  $A04CD8C0331024E133CCEC4B0AB36956 __s0;
  unsigned __int64 Lo64;
};

/* 3224 */
struct tagDEC
{
  unsigned __int16 wReserved;
  $ACF54D4416F45F16A26C2F27F36FA853 ___u1;
  unsigned int Hi32;
  $D9ABA483A3D2F703F609F30BAB6A81F5 ___u3;
};

/* 3227 */
struct $899E38118E2C19956B442E366E247149
{
  _BYTE gap0[8];
  int lVal;
  IRecordInfo *pRecInfo;
};

/* 3228 */
struct $F28A51B4B40B0D33C72915D739D42B4B
{
  _BYTE gap0[8];
  char bVal;
};

/* 3229 */
struct $31126B8528A05AF3606C6D495FD178E8
{
  _BYTE gap0[8];
  __int16 iVal;
};

/* 3230 */
struct $50230A970D9734D4E9774CFC619DF0F6
{
  _BYTE gap0[8];
  float fltVal;
};

/* 3231 */
struct $4C0EC2258454B893CE739DAE89D8DB7B
{
  _BYTE gap0[8];
  long double dblVal;
};

/* 3232 */
struct $6DB36323059316E675433BB10D285009
{
  _BYTE gap0[8];
  __int16 boolVal;
};

/* 3233 */
struct $8E3C8731874D1B3BC66617C4DD3163A6
{
  _BYTE gap0[8];
  int scode;
};

/* 3234 */
struct $8E955093B10CFBD1DFAF97EDAE1BF6B9
{
  _BYTE gap0[8];
  tagCY cyVal;
};

/* 3235 */
struct $E94952165EEA9EEA990FEB33603E1B19
{
  _BYTE gap0[8];
  long double date;
};

/* 3236 */
struct $C854646156F6772BF5D6F8470C9CCFAF
{
  _BYTE gap0[8];
  unsigned __int16 *bstrVal;
};

/* 3237 */
struct $2C71C321B2BF88330F91744C54E4CA2D
{
  _BYTE gap0[8];
  IUnknown *punkVal;
};

/* 3238 */
struct $5B551BFDA7DCAD1DA1F02314550ECDA3
{
  _BYTE gap0[8];
  IDispatch *pdispVal;
};

/* 3239 */
struct $5CD1CE9C6824AFDE8D31E832A050EF3D
{
  _BYTE gap0[8];
  tagSAFEARRAY *parray;
};

/* 3240 */
struct $166B1F81F6EA96F97683A65F38FB1A59
{
  _BYTE gap0[8];
  char *pbVal;
};

/* 3241 */
struct $76732A64405C0E287FCB302687644550
{
  _BYTE gap0[8];
  __int16 *piVal;
};

/* 3242 */
struct $E5FC128E66C26C95254032BA69D36E74
{
  _BYTE gap0[8];
  int *plVal;
};

/* 3243 */
struct $E9CDCC48CD0BB58E8F361AA17BFDA76E
{
  _BYTE gap0[8];
  __int64 *pllVal;
};

/* 3244 */
struct $BF8CC88CDF129BD6E4FA4ABA13F521AD
{
  _BYTE gap0[8];
  float *pfltVal;
};

/* 3245 */
struct $2CABE618CF1C2625A4479554E4967E0A
{
  _BYTE gap0[8];
  long double *pdblVal;
};

/* 3246 */
struct $AAA92DA1D6E1B0E8462F69216B62027C
{
  _BYTE gap0[8];
  __int16 *pboolVal;
};

/* 3247 */
struct $F7167AE7A8ABA03C094C204FB1564A28
{
  _BYTE gap0[8];
  int *pscode;
};

/* 3248 */
struct $AFFCFD3BD348E21A3E95CA8FE7387107
{
  _BYTE gap0[8];
  tagCY *pcyVal;
};

/* 3249 */
struct $6857AE69DB7C952EEFD665431A7B503A
{
  _BYTE gap0[8];
  long double *pdate;
};

/* 3250 */
struct $0878F16B0390542D20060EB711608720
{
  _BYTE gap0[8];
  unsigned __int16 **pbstrVal;
};

/* 3251 */
struct $C73DB64F647F63C1A0A3E689EFF1EB6A
{
  _BYTE gap0[8];
  IUnknown **ppunkVal;
};

/* 3252 */
struct $869C6FA35098B9F56D4C962596BC44C6
{
  _BYTE gap0[8];
  IDispatch **ppdispVal;
};

/* 3253 */
struct $23A3AE71F457A9102388E3453A1C3CBE
{
  _BYTE gap0[8];
  tagSAFEARRAY **pparray;
};

/* 3254 */
struct $C10EF9D317076AAF44B6C95094B9E122
{
  _BYTE gap0[8];
  tagVARIANT *pvarVal;
};

/* 3255 */
struct $6C39A09D97B880131B2C5BB4943CBB45
{
  _BYTE gap0[8];
  void *byref;
};

/* 3256 */
struct $E898A5260D8380431CCAA47FCC291563
{
  _BYTE gap0[8];
  char cVal;
};

/* 3257 */
struct $48802A31D3D0701BC13CEF9CEA041E7B
{
  _BYTE gap0[8];
  unsigned __int16 uiVal;
};

/* 3258 */
struct $B644145F46FF1F932B106BFA6CC3F6D9
{
  _BYTE gap0[8];
  unsigned int ulVal;
};

/* 3259 */
struct $EA00B0D50EAA1933F67C45009B664198
{
  _BYTE gap0[8];
  unsigned __int64 ullVal;
};

/* 3260 */
struct $5CA90CF57237397281FB12BFD52C1905
{
  _BYTE gap0[8];
  int intVal;
};

/* 3261 */
struct $E7F48E2F4EAA3149E57D87E5D1B2C6B8
{
  _BYTE gap0[8];
  unsigned int uintVal;
};

/* 3262 */
struct $7AD4A21598B03416DE917C6AE665D9BC
{
  _BYTE gap0[8];
  tagDEC *pdecVal;
};

/* 3263 */
struct $E1D71D20C3D01115E20D79FAE9629CE8
{
  _BYTE gap0[8];
  char *pcVal;
};

/* 3264 */
struct $5669F5A4AD19EF2CB42A5602080CB0A6
{
  _BYTE gap0[8];
  unsigned __int16 *puiVal;
};

/* 3265 */
struct $886F8AE9D7C8B1B861B6CA58D67B682A
{
  _BYTE gap0[8];
  unsigned int *pulVal;
};

/* 3266 */
struct $ADBB94A21537A8461C6168A5B871A740
{
  _BYTE gap0[8];
  unsigned __int64 *pullVal;
};

/* 3267 */
struct $CDA73A427DD2A30CDA26CA3394C33CF0
{
  _BYTE gap0[8];
  int *pintVal;
};

/* 3268 */
struct $2516E53E690D8CC5659AAB7EDC49E664
{
  _BYTE gap0[8];
  unsigned int *puintVal;
};

/* 3269 */
struct $17B4421FDC73B39569D8A12F584CB67F
{
  _BYTE gap0[8];
  void *pvRecord;
};

/* 3270 */
union $FE599700D2CB031939553C434342EE14
{
  $E2F13C0D8C7A5E44CBEA2DDC2BADB614 __s0;
  tagDEC decVal;
  $899E38118E2C19956B442E366E247149 __s2;
  $F28A51B4B40B0D33C72915D739D42B4B __s3;
  $31126B8528A05AF3606C6D495FD178E8 __s4;
  $50230A970D9734D4E9774CFC619DF0F6 __s5;
  $4C0EC2258454B893CE739DAE89D8DB7B __s6;
  $6DB36323059316E675433BB10D285009 __s7;
  $8E3C8731874D1B3BC66617C4DD3163A6 __s8;
  $8E955093B10CFBD1DFAF97EDAE1BF6B9 __s9;
  $E94952165EEA9EEA990FEB33603E1B19 __s10;
  $C854646156F6772BF5D6F8470C9CCFAF __s11;
  $2C71C321B2BF88330F91744C54E4CA2D __s12;
  $5B551BFDA7DCAD1DA1F02314550ECDA3 __s13;
  $5CD1CE9C6824AFDE8D31E832A050EF3D __s14;
  $166B1F81F6EA96F97683A65F38FB1A59 __s15;
  $76732A64405C0E287FCB302687644550 __s16;
  $E5FC128E66C26C95254032BA69D36E74 __s17;
  $E9CDCC48CD0BB58E8F361AA17BFDA76E __s18;
  $BF8CC88CDF129BD6E4FA4ABA13F521AD __s19;
  $2CABE618CF1C2625A4479554E4967E0A __s20;
  $AAA92DA1D6E1B0E8462F69216B62027C __s21;
  $F7167AE7A8ABA03C094C204FB1564A28 __s22;
  $AFFCFD3BD348E21A3E95CA8FE7387107 __s23;
  $6857AE69DB7C952EEFD665431A7B503A __s24;
  $0878F16B0390542D20060EB711608720 __s25;
  $C73DB64F647F63C1A0A3E689EFF1EB6A __s26;
  $869C6FA35098B9F56D4C962596BC44C6 __s27;
  $23A3AE71F457A9102388E3453A1C3CBE __s28;
  $C10EF9D317076AAF44B6C95094B9E122 __s29;
  $6C39A09D97B880131B2C5BB4943CBB45 __s30;
  $E898A5260D8380431CCAA47FCC291563 __s31;
  $48802A31D3D0701BC13CEF9CEA041E7B __s32;
  $B644145F46FF1F932B106BFA6CC3F6D9 __s33;
  $EA00B0D50EAA1933F67C45009B664198 __s34;
  $5CA90CF57237397281FB12BFD52C1905 __s35;
  $E7F48E2F4EAA3149E57D87E5D1B2C6B8 __s36;
  $7AD4A21598B03416DE917C6AE665D9BC __s37;
  $E1D71D20C3D01115E20D79FAE9629CE8 __s38;
  $5669F5A4AD19EF2CB42A5602080CB0A6 __s39;
  $886F8AE9D7C8B1B861B6CA58D67B682A __s40;
  $ADBB94A21537A8461C6168A5B871A740 __s41;
  $CDA73A427DD2A30CDA26CA3394C33CF0 __s42;
  $2516E53E690D8CC5659AAB7EDC49E664 __s43;
  $17B4421FDC73B39569D8A12F584CB67F __s44;
};

/* 3219 */
struct tagVARIANT
{
  $FE599700D2CB031939553C434342EE14 ___u0;
};

/* 3225 */
struct __cppobj IRecordInfo : IUnknown
{
};

/* 3271 */
struct tagPARAMDESCEX
{
  unsigned int cBytes;
  tagVARIANT varDefaultValue;
};

/* 3272 */
struct __declspec(align(4)) tagPARAMDESC
{
  tagPARAMDESCEX *pparamdescex;
  unsigned __int16 wParamFlags;
};

/* 3275 */
union $33578FD7F9327EC81873413DB8B3F499
{
  tagTYPEDESC *lptdesc;
  tagARRAYDESC *lpadesc;
  unsigned int hreftype;
};

/* 3273 */
struct __declspec(align(4)) tagTYPEDESC
{
  $33578FD7F9327EC81873413DB8B3F499 ___u0;
  unsigned __int16 vt;
};

/* 3274 */
struct __unaligned __declspec(align(4)) tagARRAYDESC
{
  tagTYPEDESC tdescElem;
  unsigned __int16 cDims;
  __declspec(align(4)) tagSAFEARRAYBOUND rgbounds[1];
};

/* 3276 */
struct __declspec(align(4)) tagIDLDESC
{
  unsigned int dwReserved;
  unsigned __int16 wIDLFlags;
};

/* 3277 */
union $6034F6350B70BEA5413C2092D00F307F
{
  tagIDLDESC idldesc;
  tagPARAMDESC paramdesc;
};

/* 3278 */
struct tagELEMDESC
{
  tagTYPEDESC tdesc;
  $6034F6350B70BEA5413C2092D00F307F ___u1;
};

/* 3279 */
struct __declspec(align(4)) tagFUNCDESC
{
  int memid;
  int *lprgscode;
  tagELEMDESC *lprgelemdescParam;
  tagFUNCKIND funckind;
  tagINVOKEKIND invkind;
  tagCALLCONV callconv;
  __int16 cParams;
  __int16 cParamsOpt;
  __int16 oVft;
  __int16 cScodes;
  tagELEMDESC elemdescFunc;
  unsigned __int16 wFuncFlags;
};

/* 3280 */
union $7FD59E4BD56550DF78DDBD84B622985D
{
  unsigned int oInst;
  tagVARIANT *lpvarValue;
};

/* 3281 */
struct tagVARDESC
{
  int memid;
  unsigned __int16 *lpstrSchema;
  $7FD59E4BD56550DF78DDBD84B622985D ___u2;
  tagELEMDESC elemdescVar;
  unsigned __int16 wVarFlags;
  tagVARKIND varkind;
};

/* 3282 */
struct __cppobj ITypeComp : IUnknown
{
};

/* 3283 */
union tagBINDPTR
{
  tagFUNCDESC *lpfuncdesc;
  tagVARDESC *lpvardesc;
  ITypeComp *lptcomp;
};

/* 3284 */
struct __declspec(align(4)) tagTLIBATTR
{
  _GUID guid;
  unsigned int lcid;
  tagSYSKIND syskind;
  unsigned __int16 wMajorVerNum;
  unsigned __int16 wMinorVerNum;
  unsigned __int16 wLibFlags;
};

/* 3285 */
struct tagEXCEPINFO
{
  unsigned __int16 wCode;
  unsigned __int16 wReserved;
  unsigned __int16 *bstrSource;
  unsigned __int16 *bstrDescription;
  unsigned __int16 *bstrHelpFile;
  unsigned int dwHelpContext;
  void *pvReserved;
  HRESULT (__stdcall *pfnDeferredFillIn)(tagEXCEPINFO *);
  int scode;
};

/* 3286 */
struct $B950AFB169DC87688B328897744C612F
{
  unsigned int LowPart;
  unsigned int HighPart;
};

/* 3287 */
union _ULARGE_INTEGER
{
  $B950AFB169DC87688B328897744C612F __s0;
  $B950AFB169DC87688B328897744C612F u;
  unsigned __int64 QuadPart;
};

/* 3288 */
struct _FILETIME
{
  unsigned int dwLowDateTime;
  unsigned int dwHighDateTime;
};

/* 3289 */
struct tagSTATSTG
{
  unsigned __int16 *pwcsName;
  unsigned int type;
  _ULARGE_INTEGER cbSize;
  _FILETIME mtime;
  _FILETIME ctime;
  _FILETIME atime;
  unsigned int grfMode;
  unsigned int grfLocksSupported;
  _GUID clsid;
  unsigned int grfStateBits;
  unsigned int reserved;
};

/* 3290 */
struct tagCABSTR
{
  unsigned int cElems;
  unsigned __int16 **pElems;
};

/* 3291 */
struct tagCACLSID
{
  unsigned int cElems;
  _GUID *pElems;
};

/* 3292 */
struct tagCADBL
{
  unsigned int cElems;
  long double *pElems;
};

/* 3293 */
struct tagCAUB
{
  unsigned int cElems;
  char *pElems;
};

/* 3294 */
struct tagCACY
{
  unsigned int cElems;
  tagCY *pElems;
};

/* 3295 */
struct tagCAUL
{
  unsigned int cElems;
  unsigned int *pElems;
};

/* 3296 */
struct tagBSTRBLOB
{
  unsigned int cbSize;
  char *pData;
};

/* 3297 */
struct $FAF74743FBE1C8632047CFB668F7028A
{
  unsigned int LowPart;
  int HighPart;
};

/* 3298 */
union _LARGE_INTEGER
{
  $FAF74743FBE1C8632047CFB668F7028A __s0;
  $FAF74743FBE1C8632047CFB668F7028A u;
  __int64 QuadPart;
};

/* 3299 */
struct tagCAH
{
  unsigned int cElems;
  _LARGE_INTEGER *pElems;
};

/* 3300 */
struct __cppobj ITypeInfo : IUnknown
{
};

/* 3301 */
struct tagCAUI
{
  unsigned int cElems;
  unsigned __int16 *pElems;
};

/* 3302 */
struct tagCAFILETIME
{
  unsigned int cElems;
  _FILETIME *pElems;
};

/* 3303 */
struct tagDISPPARAMS
{
  tagVARIANT *rgvarg;
  int *rgdispidNamedArgs;
  unsigned int cArgs;
  unsigned int cNamedArgs;
};

/* 3304 */
struct tagCLIPDATA
{
  unsigned int cbSize;
  int ulClipFmt;
  char *pClipData;
};

/* 3305 */
struct tagBLOB
{
  unsigned int cbSize;
  char *pBlobData;
};

/* 3306 */
struct __cppobj ISequentialStream : IUnknown
{
};

/* 3307 */
struct __cppobj IStream : ISequentialStream
{
};

/* 3308 */
struct __cppobj IStorage : IUnknown
{
};

/* 3309 */
struct tagVersionedStream
{
  _GUID guidVersion;
  IStream *pStream;
};

/* 3310 */
struct tagCAC
{
  unsigned int cElems;
  char *pElems;
};

/* 3311 */
struct tagCAI
{
  unsigned int cElems;
  __int16 *pElems;
};

/* 3312 */
struct tagCAL
{
  unsigned int cElems;
  int *pElems;
};

/* 3313 */
struct tagCAUH
{
  unsigned int cElems;
  _ULARGE_INTEGER *pElems;
};

/* 3314 */
struct tagCAFLT
{
  unsigned int cElems;
  float *pElems;
};

/* 3315 */
struct tagCABOOL
{
  unsigned int cElems;
  __int16 *pElems;
};

/* 3316 */
struct tagCASCODE
{
  unsigned int cElems;
  int *pElems;
};

/* 3317 */
struct tagCADATE
{
  unsigned int cElems;
  long double *pElems;
};

/* 3318 */
struct tagCACLIPDATA
{
  unsigned int cElems;
  tagCLIPDATA *pElems;
};

/* 3319 */
struct tagCABSTRBLOB
{
  unsigned int cElems;
  tagBSTRBLOB *pElems;
};

/* 3320 */
struct tagCALPSTR
{
  unsigned int cElems;
  char **pElems;
};

/* 3321 */
struct tagCALPWSTR
{
  unsigned int cElems;
  unsigned __int16 **pElems;
};

/* 3322 */
struct tagCAPROPVARIANT
{
  unsigned int cElems;
  tagPROPVARIANT *pElems;
};

/* 3324 */
struct __unaligned __declspec(align(1)) $5DF3780F58367B9F2537DF425A8A812E
{
  unsigned __int16 vt;
  unsigned __int16 wReserved1;
  unsigned __int16 wReserved2;
  unsigned __int16 wReserved3;
  char cVal;
};

/* 3325 */
struct $6D336DA143C556260FF80C12817B08DB
{
  _BYTE gap0[8];
  int lVal;
};

/* 3326 */
struct $C75577ACC65EE7ECA47CFEE5F196BA52
{
  _BYTE gap0[8];
  _LARGE_INTEGER hVal;
};

/* 3327 */
struct $4C4FF26F7CBB070FF1D1EFB2B9FB86AE
{
  _BYTE gap0[8];
  _ULARGE_INTEGER uhVal;
};

/* 3328 */
struct $8EED45DA5214B84313E62033986E087D
{
  _BYTE gap0[8];
  _FILETIME filetime;
};

/* 3329 */
struct $16A0B4D0DD1D10F45CD0F1C0DFD73366
{
  _BYTE gap0[8];
  _GUID *puuid;
};

/* 3330 */
struct $F738725378215A88AB669E27C4DFE8AC
{
  _BYTE gap0[8];
  tagCLIPDATA *pclipdata;
};

/* 3331 */
struct $FAD7FAFB0A1A33A1CDEC2994B535E8DD
{
  _BYTE gap0[8];
  tagBSTRBLOB bstrblobVal;
};

/* 3332 */
struct $4EB213F45943DBB91C53A6B31939011B
{
  _BYTE gap0[8];
  tagBLOB blob;
};

/* 3333 */
struct $17BA733FE6B8BEB3CC80B954432F0727
{
  _BYTE gap0[8];
  char *pszVal;
};

/* 3334 */
struct $EBA1CD9B4FB6C45FF9EDB12F2AB230DE
{
  _BYTE gap0[8];
  unsigned __int16 *pwszVal;
};

/* 3335 */
struct $12A61E8CE2B8B043DA2B0D2F4425128F
{
  _BYTE gap0[8];
  IStream *pStream;
};

/* 3336 */
struct $05AD4CA1310A8715AB75D70D7186CDBA
{
  _BYTE gap0[8];
  IStorage *pStorage;
};

/* 3337 */
struct $31ADFD0E64F79BF149EF6DC51317A1AB
{
  _BYTE gap0[8];
  tagVersionedStream *pVersionedStream;
};

/* 3338 */
struct $F756E014464E10A3CBF359210C8E2985
{
  _BYTE gap0[8];
  tagCAC cac;
};

/* 3339 */
struct $47890860BB04D9FB462D1B49C9C91793
{
  _BYTE gap0[8];
  tagCAUB caub;
};

/* 3340 */
struct $8BC1F6A096FA790E916FAE011E43612B
{
  _BYTE gap0[8];
  tagCAI cai;
};

/* 3341 */
struct $F022FE83A8242AFEC06CA68879FC3564
{
  _BYTE gap0[8];
  tagCAUI caui;
};

/* 3342 */
struct $7AEB5E724E4CF994E6EB9013306D3EB9
{
  _BYTE gap0[8];
  tagCAL cal;
};

/* 3343 */
struct $12694D5DCFD8F7DE3F8FC98A217A8838
{
  _BYTE gap0[8];
  tagCAUL caul;
};

/* 3344 */
struct $F056EAD3169E76B7D1704564D35D0E69
{
  _BYTE gap0[8];
  tagCAH cah;
};

/* 3345 */
struct $929626C14751BDD2C2C4E7B6976FBC39
{
  _BYTE gap0[8];
  tagCAUH cauh;
};

/* 3346 */
struct $50BADB2627C09AD530413BDDCE12E9DE
{
  _BYTE gap0[8];
  tagCAFLT caflt;
};

/* 3347 */
struct $3D72CDB848F31B012F57C97CFF995E72
{
  _BYTE gap0[8];
  tagCADBL cadbl;
};

/* 3348 */
struct $D51E76153C84CB137C1F56D059AD008E
{
  _BYTE gap0[8];
  tagCABOOL cabool;
};

/* 3349 */
struct $F09F68E99463CC42CBC3C1FE74F878CB
{
  _BYTE gap0[8];
  tagCASCODE cascode;
};

/* 3350 */
struct $1CE27B3489CB6A5AA14C2A0A910EE1FA
{
  _BYTE gap0[8];
  tagCACY cacy;
};

/* 3351 */
struct $E9C0E9D0AEDFC88E1ACA553E77936B7A
{
  _BYTE gap0[8];
  tagCADATE cadate;
};

/* 3352 */
struct $68D55B85E7D29E70F6BE1F71D5EC4D07
{
  _BYTE gap0[8];
  tagCAFILETIME cafiletime;
};

/* 3353 */
struct $0A1E64B0A5F91CC342651C0E66F9F8DB
{
  _BYTE gap0[8];
  tagCACLSID cauuid;
};

/* 3354 */
struct $76E5A21089DF5A4D5CABC8787FA0D1DE
{
  _BYTE gap0[8];
  tagCACLIPDATA caclipdata;
};

/* 3355 */
struct $D00ADD9D9CB9013D5D3BCB3027C7274A
{
  _BYTE gap0[8];
  tagCABSTR cabstr;
};

/* 3356 */
struct $425607804884362992E2313D786AE472
{
  _BYTE gap0[8];
  tagCABSTRBLOB cabstrblob;
};

/* 3357 */
struct $51F70166564F4B532B47A2EDCE71D485
{
  _BYTE gap0[8];
  tagCALPSTR calpstr;
};

/* 3358 */
struct $278365F936C66CCD6C12827C4B0B4A3E
{
  _BYTE gap0[8];
  tagCALPWSTR calpwstr;
};

/* 3359 */
struct $23F16865728D03A7575BB215FB95FE16
{
  _BYTE gap0[8];
  tagCAPROPVARIANT capropvar;
};

/* 3360 */
struct $89A949721177363E8BCC844CD4B375F3
{
  _BYTE gap0[8];
  tagPROPVARIANT *pvarVal;
};

/* 3361 */
union $928E0FB4010F1F2CDD7F2A90F486B903
{
  $5DF3780F58367B9F2537DF425A8A812E __s0;
  tagDEC decVal;
  $F28A51B4B40B0D33C72915D739D42B4B __s2;
  $31126B8528A05AF3606C6D495FD178E8 __s3;
  $48802A31D3D0701BC13CEF9CEA041E7B __s4;
  $6D336DA143C556260FF80C12817B08DB __s5;
  $B644145F46FF1F932B106BFA6CC3F6D9 __s6;
  $5CA90CF57237397281FB12BFD52C1905 __s7;
  $E7F48E2F4EAA3149E57D87E5D1B2C6B8 __s8;
  $C75577ACC65EE7ECA47CFEE5F196BA52 __s9;
  $4C4FF26F7CBB070FF1D1EFB2B9FB86AE __s10;
  $50230A970D9734D4E9774CFC619DF0F6 __s11;
  $4C0EC2258454B893CE739DAE89D8DB7B __s12;
  $6DB36323059316E675433BB10D285009 __s13;
  $8E3C8731874D1B3BC66617C4DD3163A6 __s14;
  $8E955093B10CFBD1DFAF97EDAE1BF6B9 __s15;
  $E94952165EEA9EEA990FEB33603E1B19 __s16;
  $8EED45DA5214B84313E62033986E087D __s17;
  $16A0B4D0DD1D10F45CD0F1C0DFD73366 __s18;
  $F738725378215A88AB669E27C4DFE8AC __s19;
  $C854646156F6772BF5D6F8470C9CCFAF __s20;
  $FAD7FAFB0A1A33A1CDEC2994B535E8DD __s21;
  $4EB213F45943DBB91C53A6B31939011B __s22;
  $17BA733FE6B8BEB3CC80B954432F0727 __s23;
  $EBA1CD9B4FB6C45FF9EDB12F2AB230DE __s24;
  $2C71C321B2BF88330F91744C54E4CA2D __s25;
  $5B551BFDA7DCAD1DA1F02314550ECDA3 __s26;
  $12A61E8CE2B8B043DA2B0D2F4425128F __s27;
  $05AD4CA1310A8715AB75D70D7186CDBA __s28;
  $31ADFD0E64F79BF149EF6DC51317A1AB __s29;
  $5CD1CE9C6824AFDE8D31E832A050EF3D __s30;
  $F756E014464E10A3CBF359210C8E2985 __s31;
  $47890860BB04D9FB462D1B49C9C91793 __s32;
  $8BC1F6A096FA790E916FAE011E43612B __s33;
  $F022FE83A8242AFEC06CA68879FC3564 __s34;
  $7AEB5E724E4CF994E6EB9013306D3EB9 __s35;
  $12694D5DCFD8F7DE3F8FC98A217A8838 __s36;
  $F056EAD3169E76B7D1704564D35D0E69 __s37;
  $929626C14751BDD2C2C4E7B6976FBC39 __s38;
  $50BADB2627C09AD530413BDDCE12E9DE __s39;
  $3D72CDB848F31B012F57C97CFF995E72 __s40;
  $D51E76153C84CB137C1F56D059AD008E __s41;
  $F09F68E99463CC42CBC3C1FE74F878CB __s42;
  $1CE27B3489CB6A5AA14C2A0A910EE1FA __s43;
  $E9C0E9D0AEDFC88E1ACA553E77936B7A __s44;
  $68D55B85E7D29E70F6BE1F71D5EC4D07 __s45;
  $0A1E64B0A5F91CC342651C0E66F9F8DB __s46;
  $76E5A21089DF5A4D5CABC8787FA0D1DE __s47;
  $D00ADD9D9CB9013D5D3BCB3027C7274A __s48;
  $425607804884362992E2313D786AE472 __s49;
  $51F70166564F4B532B47A2EDCE71D485 __s50;
  $278365F936C66CCD6C12827C4B0B4A3E __s51;
  $23F16865728D03A7575BB215FB95FE16 __s52;
  $E1D71D20C3D01115E20D79FAE9629CE8 __s53;
  $166B1F81F6EA96F97683A65F38FB1A59 __s54;
  $76732A64405C0E287FCB302687644550 __s55;
  $5669F5A4AD19EF2CB42A5602080CB0A6 __s56;
  $E5FC128E66C26C95254032BA69D36E74 __s57;
  $886F8AE9D7C8B1B861B6CA58D67B682A __s58;
  $CDA73A427DD2A30CDA26CA3394C33CF0 __s59;
  $2516E53E690D8CC5659AAB7EDC49E664 __s60;
  $BF8CC88CDF129BD6E4FA4ABA13F521AD __s61;
  $2CABE618CF1C2625A4479554E4967E0A __s62;
  $AAA92DA1D6E1B0E8462F69216B62027C __s63;
  $7AD4A21598B03416DE917C6AE665D9BC __s64;
  $F7167AE7A8ABA03C094C204FB1564A28 __s65;
  $AFFCFD3BD348E21A3E95CA8FE7387107 __s66;
  $6857AE69DB7C952EEFD665431A7B503A __s67;
  $0878F16B0390542D20060EB711608720 __s68;
  $C73DB64F647F63C1A0A3E689EFF1EB6A __s69;
  $869C6FA35098B9F56D4C962596BC44C6 __s70;
  $23A3AE71F457A9102388E3453A1C3CBE __s71;
  $89A949721177363E8BCC844CD4B375F3 __s72;
};

/* 3323 */
struct tagPROPVARIANT
{
  $928E0FB4010F1F2CDD7F2A90F486B903 ___u0;
};

/* 3362 */
struct tagTYPEATTR
{
  _GUID guid;
  unsigned int lcid;
  unsigned int dwReserved;
  int memidConstructor;
  int memidDestructor;
  unsigned __int16 *lpstrSchema;
  unsigned int cbSizeInstance;
  tagTYPEKIND typekind;
  unsigned __int16 cFuncs;
  unsigned __int16 cVars;
  unsigned __int16 cImplTypes;
  unsigned __int16 cbSizeVft;
  unsigned __int16 cbAlignment;
  unsigned __int16 wTypeFlags;
  unsigned __int16 wMajorVerNum;
  unsigned __int16 wMinorVerNum;
  tagTYPEDESC tdescAlias;
  tagIDLDESC idldescType;
};

/* 3363 */
struct __cppobj IEnumSTATSTG : IUnknown
{
};

/* 3364 */
struct __cppobj ITypeLib : IUnknown
{
};

/* 3365 */
struct XiStrInstantDrop
{
  unsigned int Level;
  ItemGroup *Post50;
  ItemGroup *Post100;
  ItemGroup *Post150;
  ItemGroup *Post160;
};

/* 3366 */
struct __cppobj BS_SingletonHeap<XiInstantDropTable,5>
{
};

/* 3367 */
struct std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0>
{
  std::less<unsigned long> comp;
};

/* 3368 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >::_Node>
{
};

/* 3369 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >::_Node>
{
};

/* 3370 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> > : std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >::_Node> _Alnod;
};

/* 3371 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >::_Node *>
{
};

/* 3372 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >::_Node *>
{
};

/* 3373 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >::_Node *> _Alptr;
};

/* 3374 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,XiStrInstantDrop> >
{
};

/* 3375 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> > : std::_Allocator_base<std::pair<unsigned long const ,XiStrInstantDrop> >
{
};

/* 3376 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >
{
  std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> > _Alval;
};

/* 3377 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,XiStrInstantDrop> _Myval;
  char _Color;
  char _Isnil;
};

/* 3378 */
struct std::pair<unsigned long const ,XiStrInstantDrop>
{
  const unsigned int first;
  XiStrInstantDrop second;
};

/* 3379 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 3380 */
struct __cppobj std::map<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> > > : std::_Tree<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >
{
};

/* 3381 */
struct __cppobj XiInstantDropTable : BS_SingletonHeap<XiInstantDropTable,5>
{
  std::map<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> > > m_InstantDropTable;
};

/* 3382 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiStrInstantDrop>,int,std::pair<unsigned long const ,XiStrInstantDrop> const *,std::pair<unsigned long const ,XiStrInstantDrop> const &>
{
};

/* 3383 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,XiStrInstantDrop>,int,std::pair<unsigned long const ,XiStrInstantDrop> const *,std::pair<unsigned long const ,XiStrInstantDrop> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiStrInstantDrop>,int,std::pair<unsigned long const ,XiStrInstantDrop> const *,std::pair<unsigned long const ,XiStrInstantDrop> const &>
{
};

/* 3384 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,XiStrInstantDrop>,int,std::pair<unsigned long const ,XiStrInstantDrop> const *,std::pair<unsigned long const ,XiStrInstantDrop> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >::_Node *_Ptr;
};

/* 3385 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >::const_iterator
{
};

/* 3386 */
struct __cppobj BS_SingletonHeap<XiInstantTable,5>
{
};

/* 3387 */
struct std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0>
{
  std::less<unsigned long> comp;
};

/* 3388 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >::_Node>
{
};

/* 3389 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >::_Node>
{
};

/* 3390 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> > : std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >::_Node> _Alnod;
};

/* 3391 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >::_Node *>
{
};

/* 3392 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >::_Node *>
{
};

/* 3393 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >::_Node *> _Alptr;
};

/* 3394 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,XiStrInstant> >
{
};

/* 3395 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrInstant> > : std::_Allocator_base<std::pair<unsigned long const ,XiStrInstant> >
{
};

/* 3396 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >
{
  std::allocator<std::pair<unsigned long const ,XiStrInstant> > _Alval;
};

/* 3397 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,XiStrInstant> _Myval;
  char _Color;
  char _Isnil;
};

/* 3398 */
struct std::pair<unsigned long const ,XiStrInstant>
{
  const unsigned int first;
  XiStrInstant second;
};

/* 3399 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 3400 */
struct __cppobj std::map<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> > > : std::_Tree<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >
{
};

/* 3401 */
struct __cppobj XiInstantTable : BS_SingletonHeap<XiInstantTable,5>
{
  std::map<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> > > m_InstantTable;
};

/* 3402 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiStrInstant>,int,std::pair<unsigned long const ,XiStrInstant> const *,std::pair<unsigned long const ,XiStrInstant> const &>
{
};

/* 3403 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,XiStrInstant>,int,std::pair<unsigned long const ,XiStrInstant> const *,std::pair<unsigned long const ,XiStrInstant> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiStrInstant>,int,std::pair<unsigned long const ,XiStrInstant> const *,std::pair<unsigned long const ,XiStrInstant> const &>
{
};

/* 3404 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,XiStrInstant>,int,std::pair<unsigned long const ,XiStrInstant> const *,std::pair<unsigned long const ,XiStrInstant> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >::_Node *_Ptr;
};

/* 3405 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >::const_iterator
{
};

/* 3406 */
struct sVersion
{
  unsigned __int16 Major;
  unsigned __int16 Minor;
};

/* 3407 */
struct sHeader::sDate
{
  unsigned __int16 Year;
  char Month;
  char Day;
};

/* 3408 */
struct sHeader
{
  sHeader::sDate Date;
  unsigned int Flag;
  unsigned int Offset;
  unsigned int Col;
  unsigned int Row;
};

/* 3409 */
struct XiTDFRead
{
  XiTDFReadVtbl *vfptr;
  _iobuf *m_fp;
  sVersion m_Ver;
  sHeader m_Header;
  int *m_DataTable;
  char *m_ResTable;
  int m_CurRow;
  int m_CurCol;
};

/* 3410 */
struct XiTDFReadVtbl
{
  void *(__thiscall *__vecDelDtor)(XiTDFRead *this, unsigned int);
};

/* 3411 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >::_Node *_Right;
  std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> _Myval;
  char _Color;
  char _Isnil;
};

/* 3412 */
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long>
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > first;
  unsigned int second;
};

/* 3413 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >::_Node *>
{
};

/* 3414 */
struct std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0>
{
  std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > comp;
};

/* 3415 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >::_Node>
{
};

/* 3416 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >::_Node>
{
};

/* 3417 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> > : std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >::_Node> _Alnod;
};

/* 3418 */
struct __cppobj std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >
{
};

/* 3419 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> > : std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >
{
};

/* 3420 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >::_Node *>
{
};

/* 3421 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> > : std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >::_Node *> _Alptr;
};

/* 3422 */
struct std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0>
{
  std::less<unsigned long> comp;
};

/* 3423 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >::_Node>
{
};

/* 3424 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >::_Node>
{
};

/* 3425 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> > : std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >::_Node> _Alnod;
};

/* 3426 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,XiStrIcon> _Myval;
  char _Color;
  char _Isnil;
};

/* 3427 */
struct std::pair<unsigned long const ,XiStrIcon>
{
  const unsigned int first;
  XiStrIcon second;
};

/* 3428 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,XiStrIcon> >
{
};

/* 3429 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrIcon> > : std::_Allocator_base<std::pair<unsigned long const ,XiStrIcon> >
{
};

/* 3430 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >::_Node *>
{
};

/* 3431 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >::_Node *>
{
};

/* 3432 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >::_Node *> _Alptr;
};

/* 3433 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> > : std::_Tree_ptr<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >
{
  std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> > _Alval;
};

/* 3434 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >
{
  std::allocator<std::pair<unsigned long const ,XiStrIcon> > _Alval;
};

/* 3435 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >::rebind<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >
{
};

/* 3436 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >::_Node>
{
};

/* 3437 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >::_Node *>
{
};

/* 3438 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >::rebind<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
{
};

/* 3439 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >::rebind<char>
{
};

/* 3440 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> > : std::_Tree_val<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 3441 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> const &>
{
};

/* 3442 */
struct __cppobj std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> const &>
{
};

/* 3443 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >::const_iterator : std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> const &>
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >::_Node *_Ptr;
};

/* 3444 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >::iterator : std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >::const_iterator
{
};

/* 3445 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >::iterator first;
  bool second;
};

/* 3446 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >::iterator first;
  bool second;
};

/* 3447 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >::iterator first;
  bool second;
};

/* 3448 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiStrArbeit *,int,XiStrArbeit * const *,XiStrArbeit * const &>
{
};

/* 3449 */
struct __cppobj std::_Ranit<XiStrArbeit *,int,XiStrArbeit * const *,XiStrArbeit * const &> : std::iterator<std::random_access_iterator_tag,XiStrArbeit *,int,XiStrArbeit * const *,XiStrArbeit * const &>
{
};

/* 3450 */
struct __cppobj std::vector<XiStrArbeit *,std::allocator<XiStrArbeit *> >::const_iterator : std::_Ranit<XiStrArbeit *,int,XiStrArbeit * const *,XiStrArbeit * const &>
{
  XiStrArbeit **_Myptr;
};

/* 3451 */
struct __cppobj std::vector<XiStrArbeit *,std::allocator<XiStrArbeit *> >::iterator : std::vector<XiStrArbeit *,std::allocator<XiStrArbeit *> >::const_iterator
{
};

/* 3452 */
struct __cppobj std::allocator<XiStrArbeit *>::rebind<XiStrArbeit *>
{
};

/* 3453 */
struct std::pair<unsigned long,XiStrInstantDrop>
{
  unsigned int first;
  XiStrInstantDrop second;
};

/* 3454 */
struct __cppobj std::map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> > > : std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> >,0> >
{
};

/* 3455 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 3456 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiStrIcon>,int,std::pair<unsigned long const ,XiStrIcon> const *,std::pair<unsigned long const ,XiStrIcon> const &>
{
};

/* 3457 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,XiStrIcon>,int,std::pair<unsigned long const ,XiStrIcon> const *,std::pair<unsigned long const ,XiStrIcon> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiStrIcon>,int,std::pair<unsigned long const ,XiStrIcon> const *,std::pair<unsigned long const ,XiStrIcon> const &>
{
};

/* 3458 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,XiStrIcon>,int,std::pair<unsigned long const ,XiStrIcon> const *,std::pair<unsigned long const ,XiStrIcon> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >::_Node *_Ptr;
};

/* 3459 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >::const_iterator
{
};

/* 3460 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >::iterator first;
  bool second;
};

/* 3461 */
struct std::pair<unsigned long,XiStrInstant>
{
  unsigned int first;
  XiStrInstant second;
};

/* 3462 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrInstant> >::rebind<std::pair<unsigned long const ,XiStrInstant> >
{
};

/* 3463 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrInstant> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >::_Node>
{
};

/* 3464 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrInstant> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstant,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstant> >,0> >::_Node *>
{
};

/* 3465 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrInstant> >::rebind<unsigned long>
{
};

/* 3466 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrInstant> >::rebind<char>
{
};

/* 3467 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrIcon> >::rebind<std::pair<unsigned long const ,XiStrIcon> >
{
};

/* 3468 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrIcon> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >::_Node>
{
};

/* 3469 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrIcon> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >::_Node *>
{
};

/* 3470 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrIcon> >::rebind<unsigned long>
{
};

/* 3471 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrIcon> >::rebind<char>
{
};

/* 3472 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >::rebind<std::pair<unsigned long const ,XiStrInstantDrop> >
{
};

/* 3473 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >::_Node>
{
};

/* 3474 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrInstantDrop,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >,0> >::_Node *>
{
};

/* 3475 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >::rebind<unsigned long>
{
};

/* 3476 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrInstantDrop> >::rebind<char>
{
};

/* 3477 */
struct __cppobj std::map<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> > > : std::_Tree<std::_Tmap_traits<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> >,0> >
{
};

/* 3478 */
struct __cppobj BS_SingletonHeap<XiIconTable,5>
{
};

/* 3479 */
struct UnderCityStart
{
  XiStrIcon *StartPos[4];
  XiStrIcon *DirPos[4];
  float Ang[4];
};

/* 3480 */
struct __cppobj XiIconTable : BS_SingletonHeap<XiIconTable,5>
{
  std::map<unsigned long,XiStrIcon,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrIcon> > > m_IconTable;
  std::map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,unsigned long,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,unsigned long> > > m_IconIndexMap;
  UnderCityStart m_UcStart[4];
};

/* 3481 */
struct __cppobj BS_SingletonHeap<BS_FastRand,5>
{
};

/* 3482 */
struct __cppobj BS_FastRand : BS_SingletonHeap<BS_FastRand,5>
{
  CGenRandMT m_randMT;
};

/* 3483 */
struct XiGlobalBilling
{
  XiGlobalBillingVtbl *vfptr;
};

/* 3484 */
struct XiGlobalBillingVtbl
{
  __int64 (__thiscall *GetCash)(XiGlobalBilling *this, __int64, const char *);
  __int64 (__thiscall *BuyItem)(XiGlobalBilling *this, __int64, const char *, const char *, int, __int64, __int64);
};

/* 3485 */
struct HINSTANCE__
{
  int unused;
};

/* 3486 */
struct Param
{
  ParamVtbl *vfptr;
  int m_typeCode;
};

/* 3487 */
struct ParamVtbl
{
  void *(__thiscall *__vecDelDtor)(Param *this, unsigned int);
  bool (__thiscall *isValid)(Param *this);
};

/* 3488 */
struct IFunctor
{
  IFunctorVtbl *vfptr;
};

/* 3489 */
struct FINFO
{
  void *pObj;
  void *pFunc;
};

/* 3490 */
struct IFunctorVtbl
{
  int (__thiscall *Call)(IFunctor *this, Param *);
  void (__thiscall *Release)(IFunctor *this);
  FINFO (__thiscall *Info)(IFunctor *this);
};

/* 3491 */
struct tARTP_PKT_SIZE
{
  unsigned __int16 m_pktSize;
};

/* 3492 */
struct __cppobj __unaligned __declspec(align(2)) tARTP_HEADERv1 : tARTP_PKT_SIZE
{
  char m_hdrProtocolType;
  unsigned __int16 m_hdrProtoSetNo;
  unsigned __int16 m_hdrPacketIndex;
  unsigned __int16 m_hdrPacketSubIndex;
  char m_hdrIsEncoded;
  __int64 m_hdrTime;
};

/* 3493 */
struct __cppobj __unaligned __declspec(align(2)) tARTP_RCS_ROOT : tARTP_HEADERv1
{
  int m_usn;
  unsigned __int16 m_memberID[32];
};

/* 3494 */
struct __cppobj tARTP_RCS_GETRIOCASH : tARTP_RCS_ROOT
{
};

/* 3495 */
struct __cppobj __unaligned __declspec(align(2)) tARTP_RCS_RESULT : tARTP_RCS_ROOT
{
  unsigned int m_result;
  unsigned int m_subResult;
};

/* 3496 */
struct __cppobj __unaligned __declspec(align(2)) tARTP_RET_RCS_GETRIOCASH : tARTP_RCS_RESULT
{
  int m_cash;
};

/* 3497 */
struct __cppobj __unaligned __declspec(align(2)) tARTP_RCS_USERIOCASH : tARTP_RCS_ROOT
{
  int m_clientRemainder;
  unsigned __int16 m_itemID[50];
  unsigned __int16 m_gameCode[8];
  unsigned __int16 m_serverID[8];
  __int64 m_characterID;
  unsigned __int16 m_reserved[100];
};

/* 3498 */
struct __cppobj __unaligned __declspec(align(2)) tARTP_RET_RCS_USERIOCASH : tARTP_RCS_RESULT
{
  int m_remainder;
  unsigned __int16 m_itemID[50];
  unsigned __int16 m_hashcode[32];
};

/* 3499 */
struct __cppobj XiGlobalBillingImpl : XiGlobalBilling
{
  BS_CriticalSection m_cs;
  HINSTANCE__ *m_hInst;
  void (__cdecl *m_pSetResultCallbackFunction)(IFunctor *);
  void (__cdecl *m_pGetRioCashAsync)(tARTP_RCS_GETRIOCASH *);
  int (__cdecl *m_pGetRioCash)(tARTP_RCS_GETRIOCASH *, tARTP_RET_RCS_GETRIOCASH *);
  int (__cdecl *m_pUseRioCash)(tARTP_RCS_USERIOCASH *, tARTP_RET_RCS_USERIOCASH *);
};

/* 3500 */
struct __cppobj std::_Allocator_base<BS_Stream *>
{
};

/* 3501 */
struct __cppobj std::allocator<BS_Stream *> : std::_Allocator_base<BS_Stream *>
{
};

/* 3502 */
struct std::_Vector_val<BS_Stream *,std::allocator<BS_Stream *> >
{
  std::allocator<BS_Stream *> _Alval;
};

/* 3503 */
struct __cppobj std::vector<BS_Stream *,std::allocator<BS_Stream *> > : std::_Vector_val<BS_Stream *,std::allocator<BS_Stream *> >
{
  BS_Stream **_Myfirst;
  BS_Stream **_Mylast;
  BS_Stream **_Myend;
};

/* 3504 */
struct __cppobj BS_TxtFileLog : BS_Log
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > m_FileName;
  std::vector<BS_Stream *,std::allocator<BS_Stream *> > m_DeleteStreamVec;
};

/* 3505 */
struct tagCONNECTDATA
{
  IUnknown *pUnk;
  unsigned int dwCookie;
};

/* 3506 */
struct tagCATEGORYINFO
{
  _GUID catid;
  unsigned int lcid;
  unsigned __int16 szDescription[128];
};

/* 3507 */
struct __cppobj IPersist : IUnknown
{
};

/* 3508 */
struct __cppobj CSFunctor : IFunctor
{
  int (__cdecl *m_pFunc)(Param *);
};

/* 3509 */
struct __cppobj IConnectionPoint : IUnknown
{
};

/* 3510 */
struct _POINTL
{
  int x;
  int y;
};

/* 3511 */
struct HKEY__
{
  int unused;
};

/* 3512 */
struct _SECURITY_ATTRIBUTES
{
  unsigned int nLength;
  void *lpSecurityDescriptor;
  int bInheritHandle;
};

/* 3513 */
struct std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0>
{
  std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > comp;
};

/* 3514 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >::_Node>
{
};

/* 3515 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >::_Node>
{
};

/* 3516 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> > : std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >::_Node> _Alnod;
};

/* 3517 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >::_Node *_Right;
  std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> _Myval;
  char _Color;
  char _Isnil;
};

/* 3518 */
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *>
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > first;
  BS_Pool *second;
};

/* 3519 */
struct __cppobj std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >
{
};

/* 3520 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> > : std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >
{
};

/* 3521 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >::_Node *>
{
};

/* 3522 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >::_Node *>
{
};

/* 3523 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> > : std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >::_Node *> _Alptr;
};

/* 3524 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >
{
  std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> > _Alval;
};

/* 3525 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >::rebind<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >
{
};

/* 3526 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >::_Node>
{
};

/* 3527 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >::_Node *>
{
};

/* 3528 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >::rebind<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
{
};

/* 3529 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >::rebind<char>
{
};

/* 3530 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> > : std::_Tree_val<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 3531 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> const &>
{
};

/* 3532 */
struct __cppobj std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> const &>
{
};

/* 3533 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >::const_iterator : std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >::_Node *_Ptr;
};

/* 3534 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >::const_iterator
{
};

/* 3535 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >::iterator first;
  bool second;
};

/* 3536 */
struct __cppobj std::allocator<BS_Stream *>::rebind<BS_Stream *>
{
};

/* 3537 */
struct __cppobj std::map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> > > : std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> >,0> >
{
};

/* 3538 */
struct __cppobj std::iterator<std::random_access_iterator_tag,BS_Stream *,int,BS_Stream * const *,BS_Stream * const &>
{
};

/* 3539 */
struct __cppobj std::_Ranit<BS_Stream *,int,BS_Stream * const *,BS_Stream * const &> : std::iterator<std::random_access_iterator_tag,BS_Stream *,int,BS_Stream * const *,BS_Stream * const &>
{
};

/* 3540 */
struct __cppobj std::vector<BS_Stream *,std::allocator<BS_Stream *> >::const_iterator : std::_Ranit<BS_Stream *,int,BS_Stream * const *,BS_Stream * const &>
{
  BS_Stream **_Myptr;
};

/* 3541 */
struct __cppobj std::vector<BS_Stream *,std::allocator<BS_Stream *> >::iterator : std::vector<BS_Stream *,std::allocator<BS_Stream *> >::const_iterator
{
};

/* 3542 */
struct _DLLVERSIONINFO
{
  unsigned int cbSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformID;
};

/* 3543 */
struct ATL::ATLSTRINGRESOURCEIMAGE
{
  unsigned __int16 nLength;
  unsigned __int16 achString[];
};

/* 3544 */
struct ATL::CSimpleMap<unsigned short *,unsigned short *,ATL::CExpansionVectorEqualHelper>
{
  unsigned __int16 **m_aKey;
  unsigned __int16 **m_aVal;
  int m_nSize;
};

/* 3545 */
struct __cppobj ATL::CExpansionVector : ATL::CSimpleMap<unsigned short *,unsigned short *,ATL::CExpansionVectorEqualHelper>
{
};

/* 3546 */
struct __cppobj IPersistStream : IPersist
{
};

/* 3547 */
struct ATL::CComPtrBase<IPersistStream>
{
  IPersistStream *p;
};

/* 3548 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IPersistStream> : IPersistStream
{
};

/* 3549 */
struct ATL::CComCriticalSection
{
  _RTL_CRITICAL_SECTION m_sec;
};

/* 3550 */
struct ATL::_AtlCreateWndData
{
  void *m_pThis;
  unsigned int m_dwThreadID;
  ATL::_AtlCreateWndData *m_pNext;
};

/* 3551 */
struct ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
{
  unsigned __int16 *m_aT;
  int m_nSize;
  int m_nAllocSize;
};

/* 3552 */
struct ATL::_ATL_WIN_MODULE70
{
  unsigned int cbSize;
  ATL::CComCriticalSection m_csWindowCreate;
  ATL::_AtlCreateWndData *m_pCreateWndList;
  ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> > m_rgWindowClassAtoms;
};

/* 3553 */
const struct ATL::_ATL_CATMAP_ENTRY
{
  int iType;
  _GUID *pcatid;
};

/* 3554 */
struct ATL::_ATL_OBJMAP_ENTRY30
{
  _GUID *pclsid;
  HRESULT (__stdcall *pfnUpdateRegistry)(int);
  HRESULT (__stdcall *pfnGetClassObject)(void *, _GUID *, void **);
  HRESULT (__stdcall *pfnCreateInstance)(void *, _GUID *, void **);
  IUnknown *pCF;
  unsigned int dwRegister;
  const unsigned __int16 *(__stdcall *pfnGetObjectDescription)();
  ATL::_ATL_CATMAP_ENTRY *(__cdecl *pfnGetCategoryMap)();
  void (__stdcall *pfnObjectMain)(bool);
};

/* 3555 */
struct ATL::_ATL_COM_MODULE70
{
  unsigned int cbSize;
  HINSTANCE__ *m_hInstTypeLib;
  ATL::_ATL_OBJMAP_ENTRY30 **m_ppAutoObjMapFirst;
  ATL::_ATL_OBJMAP_ENTRY30 **m_ppAutoObjMapLast;
  ATL::CComCriticalSection m_csObjMap;
};

/* 3556 */
struct ATL::CStringData
{
  ATL::IAtlStringMgr *pStringMgr;
  int nDataLength;
  int nAllocLength;
  int nRefs;
};

/* 3557 */
struct ATL::IAtlStringMgr
{
  ATL::IAtlStringMgrVtbl *vfptr;
};

/* 3558 */
struct ATL::IAtlStringMgrVtbl
{
  ATL::CStringData *(__thiscall *Allocate)(ATL::IAtlStringMgr *this, int, int);
  void (__thiscall *Free)(ATL::IAtlStringMgr *this, ATL::CStringData *);
  ATL::CStringData *(__thiscall *Reallocate)(ATL::IAtlStringMgr *this, ATL::CStringData *, int, int);
  ATL::CStringData *(__thiscall *GetNilString)(ATL::IAtlStringMgr *this);
  ATL::IAtlStringMgr *(__thiscall *Clone)(ATL::IAtlStringMgr *this);
};

/* 3559 */
struct ATL::IAtlMemMgr
{
  ATL::IAtlMemMgrVtbl *vfptr;
};

/* 3560 */
struct ATL::IAtlMemMgrVtbl
{
  void *(__thiscall *Allocate)(ATL::IAtlMemMgr *this, unsigned int);
  void (__thiscall *Free)(ATL::IAtlMemMgr *this, void *);
  void *(__thiscall *Reallocate)(ATL::IAtlMemMgr *this, void *, unsigned int);
  unsigned int (__thiscall *GetSize)(ATL::IAtlMemMgr *this, void *);
};

/* 3561 */
struct __cppobj ATL::CGlobalHeap : ATL::IAtlMemMgr
{
};

/* 3562 */
struct ATL::CTime
{
  __int64 m_time;
};

/* 3563 */
struct _SYSTEMTIME
{
  unsigned __int16 wYear;
  unsigned __int16 wMonth;
  unsigned __int16 wDayOfWeek;
  unsigned __int16 wDay;
  unsigned __int16 wHour;
  unsigned __int16 wMinute;
  unsigned __int16 wSecond;
  unsigned __int16 wMilliseconds;
};

/* 3564 */
struct ATL::CTimeSpan
{
  __int64 m_timeSpan;
};

/* 3565 */
struct tagDBTIMESTAMP
{
  __int16 year;
  unsigned __int16 month;
  unsigned __int16 day;
  unsigned __int16 hour;
  unsigned __int16 minute;
  unsigned __int16 second;
  unsigned int fraction;
};

/* 3566 */
struct ATL::CSimpleStringT<unsigned short,0>
{
  unsigned __int16 *m_pszData;
};

/* 3567 */
struct __cppobj ATL::CStringT<unsigned short,ATL::StrTraitATL<unsigned short,ATL::ChTraitsCRT<unsigned short> > > : ATL::CSimpleStringT<unsigned short,0>
{
};

/* 3568 */
struct ATL::IFixedStringLog
{
  ATL::IFixedStringLogVtbl *vfptr;
};

/* 3569 */
struct ATL::IFixedStringLogVtbl
{
  void (__thiscall *OnAllocateSpill)(ATL::IFixedStringLog *this, int, int, ATL::CStringData *);
  void (__thiscall *OnReallocateSpill)(ATL::IFixedStringLog *this, int, int, ATL::CStringData *);
};

/* 3570 */
struct __cppobj IConnectionPointContainer : IUnknown
{
};

/* 3571 */
struct ATL::CComPtrBase<IConnectionPointContainer>
{
  IConnectionPointContainer *p;
};

/* 3572 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IConnectionPointContainer> : IConnectionPointContainer
{
};

/* 3573 */
struct ATL::CComPtrBase<IConnectionPoint>
{
  IConnectionPoint *p;
};

/* 3574 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IConnectionPoint> : IConnectionPoint
{
};

/* 3575 */
struct __cppobj IMalloc : IUnknown
{
};

/* 3576 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IMalloc> : IMalloc
{
};

/* 3577 */
struct ATL::_ATL_REGMAP_ENTRY
{
  const unsigned __int16 *szKey;
  const unsigned __int16 *szData;
};

/* 3578 */
struct __cppobj ATL::CLocalHeap : ATL::IAtlMemMgr
{
};

/* 3579 */
struct __cppobj ATL::CAtlComModule : ATL::_ATL_COM_MODULE70
{
};

/* 3580 */
struct __cppobj ATL::ChTraitsBase<unsigned short>
{
};

/* 3581 */
struct __cppobj ATL::ChTraitsCRT<unsigned short> : ATL::ChTraitsBase<unsigned short>
{
};

/* 3582 */
struct ATL::_ATL_TERMFUNC_ELEM
{
  void (__stdcall *pFunc)(unsigned int);
  unsigned int dw;
  ATL::_ATL_TERMFUNC_ELEM *pNext;
};

/* 3583 */
struct ATL::_ATL_MODULE70
{
  unsigned int cbSize;
  int m_nLockCnt;
  ATL::_ATL_TERMFUNC_ELEM *m_pTermFuncs;
  ATL::CComCriticalSection m_csStaticDataInitAndTypeInfo;
};

/* 3584 */
struct ATL::CComPtrBase<IUnknown>
{
  IUnknown *p;
};

/* 3585 */
struct __cppobj ATL::CAtlModule : ATL::_ATL_MODULE70
{
  ATL::CAtlModuleVtbl *vfptr;
  IGlobalInterfaceTable *m_pGIT;
};

/* 3588 */
struct ATL::CAtlModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(ATL::CAtlModule *this, unsigned int);
  int (__thiscall *Lock)(ATL::CAtlModule *this);
  int (__thiscall *Unlock)(ATL::CAtlModule *this);
  int (__thiscall *GetLockCount)(ATL::CAtlModule *this);
  HRESULT (__thiscall *GetGITPtr)(ATL::CAtlModule *this, IGlobalInterfaceTable **);
  HRESULT (__thiscall *AddCommonRGSReplacements)(ATL::CAtlModule *this, IRegistrarBase *);
};

/* 3586 */
struct __cppobj IGlobalInterfaceTable : IUnknown
{
};

/* 3587 */
struct __cppobj IRegistrarBase : IUnknown
{
};

/* 3589 */
struct __cppobj ATL::CAtlModuleT<ATL::CComModule> : ATL::CAtlModule
{
};

/* 3590 */
struct __cppobj ATL::CComModule : ATL::CAtlModuleT<ATL::CComModule>
{
  ATL::_ATL_OBJMAP_ENTRY30 *m_pObjMap;
};

/* 3591 */
struct ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode
{
  ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode *m_pNext;
  char _pad[4];
};

/* 3592 */
struct ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
{
  ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode *m_pHead;
};

/* 3593 */
struct __cppobj ATL::CRTThreadTraits
{
};

/* 3594 */
struct __cppobj ATL::CComAutoCriticalSection : ATL::CComCriticalSection
{
};

/* 3595 */
struct __cppobj ATL::CComPtr<IConnectionPoint> : ATL::CComPtrBase<IConnectionPoint>
{
};

/* 3596 */
struct ATL::CComApartment
{
  unsigned int m_dwThreadID;
  void *m_hThread;
  int m_nLockCnt;
};

/* 3597 */
struct __cppobj ATL::CLocalAllocator
{
};

/* 3598 */
struct __cppobj ATL::CComPtr<IPersistStream> : ATL::CComPtrBase<IPersistStream>
{
};

/* 3599 */
struct ATL::_AtlAptCreateObjData
{
  HRESULT (__stdcall *pfnCreateInstance)(void *, _GUID *, void **);
  _GUID *piid;
  void *hEvent;
  IStream *pStream;
  HRESULT hRes;
};

/* 3600 */
struct __cppobj ATL::ChTraitsOS<unsigned short> : ATL::ChTraitsBase<unsigned short>
{
};

/* 3601 */
struct ATL::CComPtrBase<IDispatch>
{
  IDispatch *p;
};

/* 3602 */
struct __cppobj ATL::StrTraitATL<unsigned short,ATL::ChTraitsCRT<unsigned short> > : ATL::ChTraitsCRT<unsigned short>
{
};

/* 3603 */
struct ATL::CSimpleStringT<unsigned short,1>
{
  unsigned __int16 *m_pszData;
};

/* 3604 */
struct __cppobj ATL::CComPtr<IUnknown> : ATL::CComPtrBase<IUnknown>
{
};

/* 3605 */
struct __cppobj ATL::CComQIPtr<IUnknown,&IID_IUnknown> : ATL::CComPtr<IUnknown>
{
};

/* 3606 */
struct __cppobj ATL::CRegObject : IRegistrarBase
{
  ATL::CExpansionVector m_RepMap;
  ATL::CComAutoCriticalSection m_csMap;
};

/* 3607 */
struct ATL::CRegParser
{
  unsigned __int16 *m_pchCur;
  ATL::CRegObject *m_pRegObj;
};

/* 3608 */
struct ATL::CRegKey
{
  HKEY__ *m_hKey;
};

/* 3609 */
struct ATL::CRegParser::CParseBuffer
{
  int nPos;
  int nSize;
  unsigned __int16 *p;
};

/* 3610 */
struct __cppobj ATL::CCRTHeap : ATL::IAtlMemMgr
{
};

/* 3611 */
struct ATL::CSimpleArray<HINSTANCE__ *,ATL::CSimpleArrayEqualHelper<HINSTANCE__ *> >
{
  HINSTANCE__ **m_aT;
  int m_nSize;
  int m_nAllocSize;
};

/* 3612 */
struct ATL::CSimpleArray<HINSTANCE__ *,ATL::CSimpleArrayEqualHelper<HINSTANCE__ *> >::Wrapper
{
  HINSTANCE__ *t;
};

/* 3613 */
struct ATL::CComBSTR
{
  unsigned __int16 *m_str;
};

/* 3614 */
struct ATL::IAtlAutoThreadModule
{
  ATL::IAtlAutoThreadModuleVtbl *vfptr;
};

/* 3615 */
struct ATL::IAtlAutoThreadModuleVtbl
{
  HRESULT (__thiscall *CreateInstance)(ATL::IAtlAutoThreadModule *this, void *, _GUID *, void **);
};

/* 3616 */
struct ATL::CComSimpleThreadAllocator
{
  int m_nThread;
};

/* 3617 */
struct __cppobj ATL::CAtlAutoThreadModuleT<ATL::CAtlAutoThreadModule,ATL::CComSimpleThreadAllocator,4294967295> : ATL::IAtlAutoThreadModule
{
  unsigned int dwThreadID;
  int m_nThreads;
  ATL::CComApartment *m_pApartments;
  ATL::CComSimpleThreadAllocator m_Allocator;
};

/* 3618 */
struct ATL::CComPtrBase<IMalloc>
{
  IMalloc *p;
};

/* 3619 */
struct ATL::CTempBuffer<unsigned short,256,ATL::CCRTAllocator>
{
  unsigned __int16 *m_p;
  char m_abFixedBuffer[256];
};

/* 3620 */
struct ATL::CAtlException
{
  HRESULT m_hr;
};

/* 3621 */
struct ATL::CTempBuffer<char,1024,ATL::CCRTAllocator>
{
  char *m_p;
  char m_abFixedBuffer[1024];
};

/* 3622 */
struct __cppobj ATL::CComMultiThreadModel
{
};

/* 3623 */
struct __cppobj ATL::CComMultiThreadModelNoCS
{
};

/* 3624 */
struct ATL::CFileTimeSpan
{
  __int64 m_nSpan;
};

/* 3625 */
struct __cppobj ATL::CComAllocator
{
};

/* 3626 */
struct __cppobj ATL::CComPtr<IConnectionPointContainer> : ATL::CComPtrBase<IConnectionPointContainer>
{
};

/* 3627 */
struct ATL::CComPtrBase<ITypeLib>
{
  ITypeLib *p;
};

/* 3628 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<ITypeLib> : ITypeLib
{
};

/* 3629 */
struct __cppobj ICatRegister : IUnknown
{
};

/* 3630 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<ICatRegister> : ICatRegister
{
};

/* 3631 */
struct __cppobj ATL::CGlobalAllocator
{
};

/* 3632 */
struct ATL::CHandle
{
  void *m_h;
};

/* 3633 */
struct __declspec(align(4)) ATL::CCritSecLock
{
  _RTL_CRITICAL_SECTION *m_cs;
  bool m_bLocked;
};

/* 3634 */
struct __cppobj ATL::CComSingleThreadModel
{
};

/* 3635 */
struct __cppobj ATL::CComFakeCriticalSection
{
};

/* 3636 */
struct ATL::_ATL_BASE_MODULE70
{
  unsigned int cbSize;
  HINSTANCE__ *m_hInst;
  HINSTANCE__ *m_hInstResource;
  bool m_bNT5orWin98;
  unsigned int dwAtlBuildVer;
  _GUID *pguidVer;
  ATL::CComCriticalSection m_csResource;
  ATL::CSimpleArray<HINSTANCE__ *,ATL::CSimpleArrayEqualHelper<HINSTANCE__ *> > m_rgResourceInstance;
};

/* 3637 */
struct __cppobj ATL::CAtlBaseModule : ATL::_ATL_BASE_MODULE70
{
};

/* 3638 */
struct __cppobj ATL::CComHeap : ATL::IAtlMemMgr
{
};

/* 3639 */
struct ATL::CSimpleMap<unsigned short *,unsigned short *,ATL::CExpansionVectorEqualHelper>::Wrapper<unsigned short *>
{
  unsigned __int16 *t;
};

/* 3640 */
struct __cppobj ATL::CComPtr<ITypeLib> : ATL::CComPtrBase<ITypeLib>
{
};

/* 3641 */
struct ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>
{
  char *m_p;
  char m_abFixedBuffer[256];
};

/* 3642 */
struct __cppobj ATL::CNilStringData : ATL::CStringData
{
  wchar_t achNil[2];
};

/* 3643 */
struct ATL::CTempBuffer<unsigned short,1024,ATL::CCRTAllocator>
{
  unsigned __int16 *m_p;
  char m_abFixedBuffer[1024];
};

/* 3644 */
struct __cppobj ATL::CComVariant : tagVARIANT
{
};

/* 3645 */
struct ATL::_ATL_INTMAP_ENTRY
{
  _GUID *piid;
  unsigned int dw;
  HRESULT (__stdcall *pFunc)(void *, _GUID *, void **, unsigned int);
};

/* 3646 */
struct __unaligned __declspec(align(1)) ATL::_stdcallthunk
{
  unsigned int m_mov;
  unsigned int m_this;
  char m_jmp;
  unsigned int m_relproc;
};

/* 3647 */
struct __cppobj ATL::CComPtr<IMalloc> : ATL::CComPtrBase<IMalloc>
{
};

/* 3648 */
struct __cppobj ATL::CFixedStringLog : ATL::IFixedStringLog
{
};

/* 3649 */
struct __cppobj ATL::CFileTime : _FILETIME
{
};

/* 3650 */
struct __cppobj ATL::CAtlWinModule : ATL::_ATL_WIN_MODULE70
{
};

/* 3651 */
struct ATL::CComPtrBase<ICatRegister>
{
  ICatRegister *p;
};

/* 3652 */
struct __cppobj ATL::CCRTAllocator
{
};

/* 3653 */
struct __cppobj ATL::CExpansionVectorEqualHelper
{
};

/* 3654 */
struct ATL::CDynamicStdCallThunk
{
  ATL::_stdcallthunk *pThunk;
};

/* 3655 */
struct __cppobj __declspec(align(4)) ATL::CWin32Heap : ATL::IAtlMemMgr
{
  void *m_hHeap;
  bool m_bOwnHeap;
};

/* 3656 */
struct __cppobj ATL::CComPtr<ICatRegister> : ATL::CComPtrBase<ICatRegister>
{
};

/* 3657 */
struct __declspec(align(4)) ATL::CComCritSecLock<ATL::CComCriticalSection>
{
  ATL::CComCriticalSection *m_cs;
  bool m_bLocked;
};

/* 3658 */
struct __cppobj ATL::CComPtr<IDispatch> : ATL::CComPtrBase<IDispatch>
{
};

/* 3659 */
struct __cppobj ATL::CFixedStringMgr : ATL::IAtlStringMgr
{
  ATL::IAtlStringMgr *m_pMgr;
  ATL::CStringData *m_pData;
};

/* 3660 */
struct __cppobj ATL::CTraceCategory
{
};

/* 3661 */
struct __cppobj ATL::Win32ThreadTraits
{
};

/* 3662 */
struct __cppobj ATL::CAtlStringMgr : ATL::IAtlStringMgr
{
  ATL::IAtlMemMgr *m_pMemMgr;
  ATL::CNilStringData m_nil;
};

/* 3663 */
struct $5ACE225D4D14CE0550A9F5A217E306C5
{
  __int16 dmOrientation;
  __int16 dmPaperSize;
  __int16 dmPaperLength;
  __int16 dmPaperWidth;
};

/* 3664 */
union $ED802450718D9382EFF58A8793584E8B
{
  $5ACE225D4D14CE0550A9F5A217E306C5 __s0;
  _POINTL dmPosition;
};

/* 3665 */
struct $84BDF2D0EF3E6D92B6C33770B276E406
{
  __int16 dmScale;
  __int16 dmCopies;
};

/* 3666 */
union $8014D1CBBF1ED844B31D78C7A6AF6738
{
  $84BDF2D0EF3E6D92B6C33770B276E406 __s0;
  unsigned int dmDisplayOrientation;
};

/* 3667 */
struct $319163E49F0A6F35652FDFBFBA0FF503
{
  __int16 dmDefaultSource;
  __int16 dmPrintQuality;
};

/* 3668 */
union $5FBEA0A40043EB80BABE485B66F3B173
{
  $319163E49F0A6F35652FDFBFBA0FF503 __s0;
  unsigned int dmDisplayFixedOutput;
};

/* 3669 */
union $309666D137CBB19809FA597AD348B415
{
  unsigned int dmDisplayFlags;
  unsigned int dmNup;
};

/* 3670 */
struct _devicemodeA
{
  char dmDeviceName[32];
  unsigned __int16 dmSpecVersion;
  unsigned __int16 dmDriverVersion;
  unsigned __int16 dmSize;
  unsigned __int16 dmDriverExtra;
  unsigned int dmFields;
  $ED802450718D9382EFF58A8793584E8B ___u6;
  $8014D1CBBF1ED844B31D78C7A6AF6738 ___u7;
  $5FBEA0A40043EB80BABE485B66F3B173 ___u8;
  __int16 dmColor;
  __int16 dmDuplex;
  __int16 dmYResolution;
  __int16 dmTTOption;
  __int16 dmCollate;
  char dmFormName[32];
  unsigned __int16 dmLogPixels;
  unsigned int dmBitsPerPel;
  unsigned int dmPelsWidth;
  unsigned int dmPelsHeight;
  $309666D137CBB19809FA597AD348B415 ___u19;
  unsigned int dmDisplayFrequency;
  unsigned int dmICMMethod;
  unsigned int dmICMIntent;
  unsigned int dmMediaType;
  unsigned int dmDitherType;
  unsigned int dmReserved1;
  unsigned int dmReserved2;
  unsigned int dmPanningWidth;
  unsigned int dmPanningHeight;
};

/* 3671 */
struct __declspec(align(4)) tagTEXTMETRICW
{
  int tmHeight;
  int tmAscent;
  int tmDescent;
  int tmInternalLeading;
  int tmExternalLeading;
  int tmAveCharWidth;
  int tmMaxCharWidth;
  int tmWeight;
  int tmOverhang;
  int tmDigitizedAspectX;
  int tmDigitizedAspectY;
  unsigned __int16 tmFirstChar;
  unsigned __int16 tmLastChar;
  unsigned __int16 tmDefaultChar;
  unsigned __int16 tmBreakChar;
  char tmItalic;
  char tmUnderlined;
  char tmStruckOut;
  char tmPitchAndFamily;
  char tmCharSet;
};

/* 3672 */
struct _OSVERSIONINFOW
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  unsigned __int16 szCSDVersion[128];
};

/* 3673 */
struct BS_PoolMgr
{
  BS_PoolMgrVtbl *vfptr;
  BS_SpinLock m_PoolMgrLock;
  std::map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Pool *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Pool *> > > m_Pools;
};

/* 3674 */
struct BS_PoolMgrVtbl
{
  void *(__thiscall *__vecDelDtor)(BS_PoolMgr *this, unsigned int);
};

/* 3675 */
struct __cppobj BS_SingletonHeap<BS_LogMgr,3>
{
};

/* 3676 */
struct __cppobj __declspec(align(4)) BS_LogMgr : BS_PoolMgr, BS_SingletonHeap<BS_LogMgr,3>
{
  _BYTE gap14[1];
};

/* 3677 */
struct __cppobj IEnumConnections : IUnknown
{
};

/* 3678 */
struct HWND__
{
  int unused;
};

/* 3679 */
struct HRSRC__
{
  int unused;
};

/* 3680 */
struct _devicemodeW
{
  unsigned __int16 dmDeviceName[32];
  unsigned __int16 dmSpecVersion;
  unsigned __int16 dmDriverVersion;
  unsigned __int16 dmSize;
  unsigned __int16 dmDriverExtra;
  unsigned int dmFields;
  $ED802450718D9382EFF58A8793584E8B ___u6;
  $8014D1CBBF1ED844B31D78C7A6AF6738 ___u7;
  $5FBEA0A40043EB80BABE485B66F3B173 ___u8;
  __int16 dmColor;
  __int16 dmDuplex;
  __int16 dmYResolution;
  __int16 dmTTOption;
  __int16 dmCollate;
  unsigned __int16 dmFormName[32];
  unsigned __int16 dmLogPixels;
  unsigned int dmBitsPerPel;
  unsigned int dmPelsWidth;
  unsigned int dmPelsHeight;
  $309666D137CBB19809FA597AD348B415 ___u19;
  unsigned int dmDisplayFrequency;
  unsigned int dmICMMethod;
  unsigned int dmICMIntent;
  unsigned int dmMediaType;
  unsigned int dmDitherType;
  unsigned int dmReserved1;
  unsigned int dmReserved2;
  unsigned int dmPanningWidth;
  unsigned int dmPanningHeight;
};

/* 3681 */
struct _IMAGE_DOS_HEADER
{
  unsigned __int16 e_magic;
  unsigned __int16 e_cblp;
  unsigned __int16 e_cp;
  unsigned __int16 e_crlc;
  unsigned __int16 e_cparhdr;
  unsigned __int16 e_minalloc;
  unsigned __int16 e_maxalloc;
  unsigned __int16 e_ss;
  unsigned __int16 e_sp;
  unsigned __int16 e_csum;
  unsigned __int16 e_ip;
  unsigned __int16 e_cs;
  unsigned __int16 e_lfarlc;
  unsigned __int16 e_ovno;
  unsigned __int16 e_res[4];
  unsigned __int16 e_oemid;
  unsigned __int16 e_oeminfo;
  unsigned __int16 e_res2[10];
  int e_lfanew;
};

/* 3682 */
struct tagPOINT
{
  int x;
  int y;
};

/* 3683 */
struct __cppobj IEnumConnectionPoints : IUnknown
{
};

/* 3684 */
struct CFunctor
{
  IFunctor *m_pFnt;
};

/* 3685 */
struct __cppobj IRegistrar : IRegistrarBase
{
};

/* 3686 */
struct __cppobj ArParam : Param
{
  tARTP_HEADERv1 *m_pInfo;
};

/* 3687 */
struct __cppobj IObjectWithSite : IUnknown
{
};

/* 3688 */
struct __declspec(align(4)) tagTEXTMETRICA
{
  int tmHeight;
  int tmAscent;
  int tmDescent;
  int tmInternalLeading;
  int tmExternalLeading;
  int tmAveCharWidth;
  int tmMaxCharWidth;
  int tmWeight;
  int tmOverhang;
  int tmDigitizedAspectX;
  int tmDigitizedAspectY;
  char tmFirstChar;
  char tmLastChar;
  char tmDefaultChar;
  char tmBreakChar;
  char tmItalic;
  char tmUnderlined;
  char tmStruckOut;
  char tmPitchAndFamily;
  char tmCharSet;
};

/* 3689 */
struct tagMSG
{
  HWND__ *hwnd;
  unsigned int message;
  unsigned int wParam;
  int lParam;
  unsigned int time;
  tagPOINT pt;
};

/* 3690 */
struct __cppobj std::binary_function<PvpTrackKey,PvpTrackKey,bool>
{
};

/* 3691 */
struct __cppobj std::less<PvpTrackKey> : std::binary_function<PvpTrackKey,PvpTrackKey,bool>
{
};

/* 3692 */
struct std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0>
{
  std::less<PvpTrackKey> comp;
};

/* 3693 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >::_Node>
{
};

/* 3694 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >::_Node>
{
};

/* 3695 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> > : std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >::_Node> _Alnod;
};

/* 3696 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >::_Node *>
{
};

/* 3697 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >::_Node *>
{
};

/* 3698 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> > : std::_Tree_nod<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >::_Node *> _Alptr;
};

/* 3699 */
struct __cppobj std::_Allocator_base<std::pair<PvpTrackKey const ,PvpTrafficSet> >
{
};

/* 3700 */
struct __cppobj std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> > : std::_Allocator_base<std::pair<PvpTrackKey const ,PvpTrafficSet> >
{
};

/* 3701 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> > : std::_Tree_ptr<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >
{
  std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> > _Alval;
};

/* 3702 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >::_Node *_Right;
  std::pair<PvpTrackKey const ,PvpTrafficSet> _Myval;
  char _Color;
  char _Isnil;
};

/* 3703 */
const struct PvpTrackKey
{
  __int16 m_mapId;
};

/* 3704 */
struct PvpTrafficSet
{
  int traffic_number[3][32];
};

/* 3705 */
struct std::pair<PvpTrackKey const ,PvpTrafficSet>
{
  PvpTrackKey first;
  PvpTrafficSet second;
};

/* 3706 */
struct __cppobj std::_Tree<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> > : std::_Tree_val<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 3707 */
struct __cppobj std::map<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> > > : std::_Tree<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >
{
};

/* 3708 */
struct BS_SwitchableRef<std::map<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> > > >
{
  int m_time;
  std::map<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> > > m_object[2];
  std::map<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> > > *m_current;
  std::map<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> > > *m_back;
};

/* 3709 */
struct __cppobj std::iterator<std::random_access_iterator_tag,std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator,int,std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator const *,std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator const &>
{
};

/* 3710 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >::_Node *_Right;
  std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > _Myval;
  char _Color;
  char _Isnil;
};

/* 3711 */
struct std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0>
{
  std::less<int> comp;
};

/* 3712 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >::_Node>
{
};

/* 3713 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >::_Node>
{
};

/* 3714 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> > : std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >::_Node> _Alnod;
};

/* 3715 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >::_Node *>
{
};

/* 3716 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >::_Node *>
{
};

/* 3717 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> > : std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >::_Node *> _Alptr;
};

/* 3718 */
struct __cppobj std::_Allocator_base<std::pair<int const ,PvpTrackTable::PvpRate> >
{
};

/* 3719 */
struct __cppobj std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > : std::_Allocator_base<std::pair<int const ,PvpTrackTable::PvpRate> >
{
};

/* 3720 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> > : std::_Tree_ptr<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >
{
  std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > _Alval;
};

/* 3724 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> > : std::_Tree_val<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 3725 */
struct __cppobj std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > : std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >
{
};

/* 3726 */
struct std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > >
{
  const int first;
  std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > second;
};

/* 3721 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >::_Node *_Right;
  std::pair<int const ,PvpTrackTable::PvpRate> _Myval;
  char _Color;
  char _Isnil;
};

/* 3722 */
struct PvpTrackTable::PvpRate
{
  float fRat;
};

/* 3723 */
struct std::pair<int const ,PvpTrackTable::PvpRate>
{
  const int first;
  PvpTrackTable::PvpRate second;
};

/* 3727 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >::_Node *>
{
};

/* 3728 */
struct PvpTrackTable::PvpExp
{
  unsigned int nVal;
};

/* 3729 */
struct std::pair<int const ,PvpTrackTable::PvpExp>
{
  const int first;
  PvpTrackTable::PvpExp second;
};

/* 3730 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,PvpTrackTable::PvpExp>,int,std::pair<int const ,PvpTrackTable::PvpExp> const *,std::pair<int const ,PvpTrackTable::PvpExp> const &>
{
};

/* 3731 */
struct __cppobj std::_Allocator_base<PvpTrackKey>
{
};

/* 3732 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,PvpTrackTable::PvpRate>,int,std::pair<int const ,PvpTrackTable::PvpRate> const *,std::pair<int const ,PvpTrackTable::PvpRate> const &>
{
};

/* 3733 */
struct __cppobj std::allocator<PvpTrackKey> : std::_Allocator_base<PvpTrackKey>
{
};

/* 3734 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<PvpTrackKey const ,PvpTrafficSet>,int,std::pair<PvpTrackKey const ,PvpTrafficSet> const *,std::pair<PvpTrackKey const ,PvpTrafficSet> const &>
{
};

/* 3735 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >::_Node *_Right;
  std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > _Myval;
  char _Color;
  char _Isnil;
};

/* 3736 */
struct std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0>
{
  std::less<int> comp;
};

/* 3737 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >::_Node>
{
};

/* 3738 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >::_Node>
{
};

/* 3739 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> > : std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >::_Node> _Alnod;
};

/* 3740 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >::_Node *>
{
};

/* 3741 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >::_Node *>
{
};

/* 3742 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> > : std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >::_Node *> _Alptr;
};

/* 3743 */
struct __cppobj std::_Allocator_base<std::pair<int const ,PvpTrackTable::PvpExp> >
{
};

/* 3744 */
struct __cppobj std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > : std::_Allocator_base<std::pair<int const ,PvpTrackTable::PvpExp> >
{
};

/* 3745 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> > : std::_Tree_ptr<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >
{
  std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > _Alval;
};

/* 3747 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> > : std::_Tree_val<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 3748 */
struct __cppobj std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > : std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >
{
};

/* 3749 */
struct std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > >
{
  const int first;
  std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > second;
};

/* 3746 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >::_Node *_Right;
  std::pair<int const ,PvpTrackTable::PvpExp> _Myval;
  char _Color;
  char _Isnil;
};

/* 3750 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >::_Node *>
{
};

/* 3751 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > >,int,std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > const *,std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > const &>
{
};

/* 3752 */
struct std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0>
{
  std::less<int> comp;
};

/* 3753 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >::_Node>
{
};

/* 3754 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >::_Node>
{
};

/* 3755 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> > : std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >::_Node> _Alnod;
};

/* 3756 */
struct __cppobj std::_Allocator_base<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >
{
};

/* 3757 */
struct __cppobj std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > > : std::_Allocator_base<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >
{
};

/* 3758 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >::_Node *>
{
};

/* 3759 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> > : std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >::_Node *> _Alptr;
};

/* 3760 */
struct std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0>
{
  std::less<int> comp;
};

/* 3761 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >::_Node>
{
};

/* 3762 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >::_Node>
{
};

/* 3763 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> > : std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >::_Node> _Alnod;
};

/* 3764 */
struct __cppobj std::_Allocator_base<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >
{
};

/* 3765 */
struct __cppobj std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > > : std::_Allocator_base<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >
{
};

/* 3766 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >::_Node *>
{
};

/* 3767 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> > : std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >::_Node *> _Alptr;
};

/* 3768 */
struct PvpTrackTable::PvpMoney
{
  float fVal;
};

/* 3769 */
struct std::pair<int const ,PvpTrackTable::PvpMoney>
{
  const int first;
  PvpTrackTable::PvpMoney second;
};

/* 3770 */
struct __cppobj std::_Allocator_base<std::pair<int const ,PvpTrackTable::PvpMoney> >
{
};

/* 3771 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,PvpTrackTable::PvpMoney>,int,std::pair<int const ,PvpTrackTable::PvpMoney> const *,std::pair<int const ,PvpTrackTable::PvpMoney> const &>
{
};

/* 3772 */
struct __cppobj std::_Ranit<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator,int,std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator const *,std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator const &> : std::iterator<std::random_access_iterator_tag,std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator,int,std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator const *,std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator const &>
{
};

/* 3773 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> const &>
{
};

/* 3774 */
struct __cppobj std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> const &>
{
};

/* 3775 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >::const_iterator : std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >::_Node *_Ptr;
};

/* 3776 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >::const_iterator
{
};

/* 3777 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >::iterator first;
  bool second;
};

/* 3778 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,BS_TradeRoom *,int,BS_TradeRoom * const *,BS_TradeRoom * const &>
{
};

/* 3779 */
struct __cppobj std::_Bidit<BS_TradeRoom *,int,BS_TradeRoom * const *,BS_TradeRoom * const &> : std::iterator<std::bidirectional_iterator_tag,BS_TradeRoom *,int,BS_TradeRoom * const *,BS_TradeRoom * const &>
{
};

/* 3780 */
struct __cppobj std::list<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >::const_iterator : std::_Bidit<BS_TradeRoom *,int,BS_TradeRoom * const *,BS_TradeRoom * const &>
{
  std::_List_nod<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >::_Node *_Ptr;
};

/* 3781 */
struct __cppobj std::list<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >::iterator : std::list<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >::const_iterator
{
};

/* 3782 */
struct __cppobj std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >::rebind<std::pair<int const ,PvpTrackTable::PvpExp> >
{
};

/* 3783 */
struct __cppobj std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >::_Node>
{
};

/* 3784 */
struct __cppobj std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >::_Node *>
{
};

/* 3785 */
struct __cppobj std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >::rebind<int>
{
};

/* 3786 */
struct __cppobj std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >::rebind<char>
{
};

/* 3787 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> > : std::_Tree_ptr<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >
{
  std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > > _Alval;
};

/* 3788 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> > : std::_Tree_val<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 3789 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > >,int,std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > const *,std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > const &>
{
};

/* 3790 */
struct __cppobj std::_Bidit<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > >,int,std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > const *,std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > >,int,std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > const *,std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > const &>
{
};

/* 3791 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >::const_iterator : std::_Bidit<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > >,int,std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > const *,std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > const &>
{
  std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >::_Node *_Ptr;
};

/* 3792 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >::iterator : std::_Tree<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >::const_iterator
{
};

/* 3793 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >::iterator first;
  bool second;
};

/* 3794 */
struct __cppobj std::_Bidit<std::pair<PvpTrackKey const ,PvpTrafficSet>,int,std::pair<PvpTrackKey const ,PvpTrafficSet> const *,std::pair<PvpTrackKey const ,PvpTrafficSet> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<PvpTrackKey const ,PvpTrafficSet>,int,std::pair<PvpTrackKey const ,PvpTrafficSet> const *,std::pair<PvpTrackKey const ,PvpTrafficSet> const &>
{
};

/* 3795 */
struct __cppobj std::_Tree<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >::const_iterator : std::_Bidit<std::pair<PvpTrackKey const ,PvpTrafficSet>,int,std::pair<PvpTrackKey const ,PvpTrafficSet> const *,std::pair<PvpTrackKey const ,PvpTrafficSet> const &>
{
  std::_Tree_nod<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >::_Node *_Ptr;
};

/* 3796 */
struct __cppobj std::_Tree<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >::iterator : std::_Tree<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >::const_iterator
{
};

/* 3797 */
struct __cppobj std::_Bidit<std::pair<int const ,PvpTrackTable::PvpRate>,int,std::pair<int const ,PvpTrackTable::PvpRate> const *,std::pair<int const ,PvpTrackTable::PvpRate> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,PvpTrackTable::PvpRate>,int,std::pair<int const ,PvpTrackTable::PvpRate> const *,std::pair<int const ,PvpTrackTable::PvpRate> const &>
{
};

/* 3798 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >::const_iterator : std::_Bidit<std::pair<int const ,PvpTrackTable::PvpRate>,int,std::pair<int const ,PvpTrackTable::PvpRate> const *,std::pair<int const ,PvpTrackTable::PvpRate> const &>
{
  std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >::_Node *_Ptr;
};

/* 3799 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >::iterator : std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >::const_iterator
{
};

/* 3800 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >::iterator first;
  bool second;
};

/* 3801 */
struct __cppobj std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >::rebind<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >
{
};

/* 3802 */
struct __cppobj std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >::rebind<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >::_Node>
{
};

/* 3803 */
struct __cppobj std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >::rebind<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >::_Node *>
{
};

/* 3804 */
struct __cppobj std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >::rebind<int>
{
};

/* 3805 */
struct __cppobj std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >::rebind<char>
{
};

/* 3806 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >::_Node *_Right;
  std::pair<int const ,PvpTrackTable::PvpMoney> _Myval;
  char _Color;
  char _Isnil;
};

/* 3807 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >::_Node *>
{
};

/* 3808 */
struct __cppobj std::_Bidit<std::pair<int const ,PvpTrackTable::PvpMoney>,int,std::pair<int const ,PvpTrackTable::PvpMoney> const *,std::pair<int const ,PvpTrackTable::PvpMoney> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,PvpTrackTable::PvpMoney>,int,std::pair<int const ,PvpTrackTable::PvpMoney> const *,std::pair<int const ,PvpTrackTable::PvpMoney> const &>
{
};

/* 3809 */
struct std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0>
{
  std::less<int> comp;
};

/* 3810 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >::_Node>
{
};

/* 3811 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >::_Node>
{
};

/* 3812 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> > : std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >::_Node> _Alnod;
};

/* 3813 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >::_Node *>
{
};

/* 3814 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> > : std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >::_Node *> _Alptr;
};

/* 3815 */
struct __cppobj std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> > : std::_Allocator_base<std::pair<int const ,PvpTrackTable::PvpMoney> >
{
};

/* 3816 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> > : std::_Tree_ptr<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >
{
  std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> > _Alval;
};

/* 3817 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> > : std::_Tree_val<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 3818 */
struct __cppobj std::map<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> > > : std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >
{
};

/* 3819 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >::const_iterator : std::_Bidit<std::pair<int const ,PvpTrackTable::PvpMoney>,int,std::pair<int const ,PvpTrackTable::PvpMoney> const *,std::pair<int const ,PvpTrackTable::PvpMoney> const &>
{
  std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >::_Node *_Ptr;
};

/* 3820 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >::iterator : std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >::const_iterator
{
};

/* 3821 */
struct __cppobj std::_Bidit<std::pair<int const ,PvpTrackTable::PvpExp>,int,std::pair<int const ,PvpTrackTable::PvpExp> const *,std::pair<int const ,PvpTrackTable::PvpExp> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,PvpTrackTable::PvpExp>,int,std::pair<int const ,PvpTrackTable::PvpExp> const *,std::pair<int const ,PvpTrackTable::PvpExp> const &>
{
};

/* 3822 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >::const_iterator : std::_Bidit<std::pair<int const ,PvpTrackTable::PvpExp>,int,std::pair<int const ,PvpTrackTable::PvpExp> const *,std::pair<int const ,PvpTrackTable::PvpExp> const &>
{
  std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >::_Node *_Ptr;
};

/* 3823 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >::iterator : std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >::const_iterator
{
};

/* 3824 */
struct __cppobj std::allocator<BS_TradeRoom *>::rebind<BS_TradeRoom *>
{
};

/* 3825 */
struct __cppobj std::allocator<BS_TradeRoom *>::rebind<std::_List_nod<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >::_Node>
{
};

/* 3826 */
struct __cppobj std::allocator<BS_TradeRoom *>::rebind<std::_List_nod<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >::_Node *>
{
};

/* 3827 */
struct __cppobj std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >::rebind<std::pair<PvpTrackKey const ,PvpTrafficSet> >
{
};

/* 3828 */
struct __cppobj std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >::rebind<std::_Tree_nod<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >::_Node>
{
};

/* 3829 */
struct __cppobj std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >::rebind<std::_Tree_nod<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >::_Node *>
{
};

/* 3830 */
struct __cppobj std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >::rebind<PvpTrackKey>
{
};

/* 3831 */
struct __cppobj std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >::rebind<char>
{
};

/* 3832 */
struct __cppobj std::map<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > > > : std::_Tree<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > >,0> >
{
};

/* 3833 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> > : std::_Tree_ptr<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >
{
  std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > > _Alval;
};

/* 3834 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> > : std::_Tree_val<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 3835 */
struct __cppobj std::_Bidit<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > >,int,std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > const *,std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > >,int,std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > const *,std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > const &>
{
};

/* 3836 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >::const_iterator : std::_Bidit<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > >,int,std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > const *,std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > const &>
{
  std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >::_Node *_Ptr;
};

/* 3837 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >::iterator : std::_Tree<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >::const_iterator
{
};

/* 3838 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >::iterator first;
  bool second;
};

/* 3839 */
struct __cppobj std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >::rebind<std::pair<int const ,PvpTrackTable::PvpMoney> >
{
};

/* 3840 */
struct __cppobj std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >::_Node>
{
};

/* 3841 */
struct __cppobj std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >::_Node *>
{
};

/* 3842 */
struct __cppobj std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >::rebind<int>
{
};

/* 3843 */
struct __cppobj std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >::rebind<char>
{
};

/* 3844 */
struct __cppobj std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >::rebind<std::pair<int const ,PvpTrackTable::PvpRate> >
{
};

/* 3845 */
struct __cppobj std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >::_Node>
{
};

/* 3846 */
struct __cppobj std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >,0> >::_Node *>
{
};

/* 3847 */
struct __cppobj std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >::rebind<int>
{
};

/* 3848 */
struct __cppobj std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> >::rebind<char>
{
};

/* 3849 */
struct __cppobj std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> >::rebind<std::pair<unsigned long const ,BS_GameDispatch *> >
{
};

/* 3850 */
struct __cppobj std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> >::rebind<std::_List_nod<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::_Node>
{
};

/* 3851 */
struct __cppobj std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> >::rebind<std::_List_nod<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::_Node *>
{
};

/* 3852 */
struct __cppobj std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> >::rebind<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator>
{
};

/* 3853 */
struct __cppobj std::iterator<std::random_access_iterator_tag,BS_TradeRoom *,int,BS_TradeRoom * const *,BS_TradeRoom * const &>
{
};

/* 3854 */
struct __cppobj std::_Ranit<BS_TradeRoom *,int,BS_TradeRoom * const *,BS_TradeRoom * const &> : std::iterator<std::random_access_iterator_tag,BS_TradeRoom *,int,BS_TradeRoom * const *,BS_TradeRoom * const &>
{
};

/* 3855 */
struct __cppobj std::vector<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >::const_iterator : std::_Ranit<BS_TradeRoom *,int,BS_TradeRoom * const *,BS_TradeRoom * const &>
{
  BS_TradeRoom **_Myptr;
};

/* 3856 */
struct __cppobj std::vector<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >::iterator : std::vector<BS_TradeRoom *,std::allocator<BS_TradeRoom *> >::const_iterator
{
};

/* 3857 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >::rebind<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >
{
};

/* 3858 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >::_Node>
{
};

/* 3859 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_ChatRoom *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >,0> >::_Node *>
{
};

/* 3860 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >::rebind<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
{
};

/* 3861 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_ChatRoom *> >::rebind<char>
{
};

/* 3862 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> >,0> >::iterator first;
  bool second;
};

/* 3863 */
struct __cppobj std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >::rebind<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >
{
};

/* 3864 */
struct __cppobj std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >::rebind<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >::_Node>
{
};

/* 3865 */
struct __cppobj std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >::rebind<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >::_Node *>
{
};

/* 3866 */
struct __cppobj std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >::rebind<int>
{
};

/* 3867 */
struct __cppobj std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >::rebind<char>
{
};

/* 3868 */
struct __cppobj std::allocator<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator>::rebind<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator>
{
};

/* 3869 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> >,0> >::iterator first;
  bool second;
};

/* 3870 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> const &>
{
};

/* 3871 */
struct __cppobj std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> const &>
{
};

/* 3872 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >::const_iterator : std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >::_Node *_Ptr;
};

/* 3873 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >::const_iterator
{
};

/* 3874 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >::iterator first;
  bool second;
};

/* 3875 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> >,0> >::iterator first;
  bool second;
};

/* 3876 */
struct __cppobj std::vector<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator,std::allocator<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator> >::const_iterator : std::_Ranit<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator,int,std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator const *,std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator const &>
{
  std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator *_Myptr;
};

/* 3877 */
struct __cppobj std::vector<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator,std::allocator<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator> >::iterator : std::vector<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator,std::allocator<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator> >::const_iterator
{
};

/* 3878 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >::rebind<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >
{
};

/* 3879 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >::_Node>
{
};

/* 3880 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_GameDispatch *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >,0> >::_Node *>
{
};

/* 3881 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >::rebind<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
{
};

/* 3882 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_GameDispatch *> >::rebind<char>
{
};

/* 3883 */
struct __cppobj std::map<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > > > : std::_Tree<std::_Tmap_traits<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > >,0> >
{
};

/* 3884 */
struct __declspec(align(4)) std::pair<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator,bool>
{
  std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator first;
  bool second;
};

/* 3885 */
struct std::pair<std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator,std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator>
{
  std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator first;
  std::list<std::pair<unsigned long const ,BS_GameDispatch *>,std::allocator<std::pair<unsigned long const ,BS_GameDispatch *> > >::iterator second;
};

/* 3886 */
struct __cppobj BS_String : std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >
{
};

/* 3887 */
struct PvpTrackTable
{
  BS_SwitchableRef<std::map<PvpTrackKey,PvpTrafficSet,std::less<PvpTrackKey>,std::allocator<std::pair<PvpTrackKey const ,PvpTrafficSet> > > > m_PvpTrafficSetTable;
  std::map<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > > > m_pvpExpBase;
  std::map<int,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpExp,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpExp> > > > > > m_teamPvpExpBase;
  std::map<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > > > m_pvpMoneyRate;
  std::map<int,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > > > > m_teamPvpMoneyRate;
  std::map<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> > > m_pvpMoneyBase;
  std::map<int,PvpTrackTable::PvpMoney,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpMoney> > > m_teamPvpMoneyBase;
  std::map<int,PvpTrackTable::PvpRate,std::less<int>,std::allocator<std::pair<int const ,PvpTrackTable::PvpRate> > > m_pvpExpRate;
};

/* 3888 */
struct AOI::Monitor
{
  _RTL_CRITICAL_SECTION m_cs;
};

/* 3889 */
struct BS_Console
{
  BS_ConsoleVtbl *vfptr;
  BS_ConsoleOut *m_pConsoleOut;
  BS_ConsoleThread *m_pConsoleThread;
};

/* 3890 */
struct BS_ConsoleVtbl
{
  void *(__thiscall *__vecDelDtor)(BS_Console *this, unsigned int);
  bool (__thiscall *Parser)(BS_Console *this, wchar_t *);
};

/* 3891 */
struct BS_Out
{
  BS_OutVtbl *vfptr;
};

/* 3894 */
struct __cppobj BS_ConsoleOut : BS_Out
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > m_Buffer;
  void *m_Handle;
};

/* 3895 */
struct __cppobj BS_ConsoleThread : BS_Thread
{
  BS_Console *m_pConsole;
  void *m_hInputHandle;
  volatile int m_bQuit;
};

/* 3892 */
union $8C2D293CC67B8107CE34DAF4835FD0AD
{
  void (__thiscall *Write)(BS_Out *this, const wchar_t);
  unsigned int (__thiscall *Write)(BS_Out *this, const wchar_t *, unsigned int);
};

/* 3893 */
struct BS_OutVtbl
{
  void *(__thiscall *__vecDelDtor)(BS_Out *this, unsigned int);
  __declspec(align(8)) $8C2D293CC67B8107CE34DAF4835FD0AD ___u1;
  bool (__thiscall *Flush)(BS_Out *this);
};

/* 3896 */
struct __cppobj BS_IOWorker : BS_Thread
{
  BS_CompletionHandler *m_pIOCP;
};

/* 3897 */
struct __cppobj std::allocator<BS_LuaBind *>::rebind<BS_LuaBind *>
{
};

/* 3898 */
struct __cppobj std::iterator<std::random_access_iterator_tag,BS_LuaBind *,int,BS_LuaBind * const *,BS_LuaBind * const &>
{
};

/* 3899 */
struct __cppobj std::_Ranit<BS_LuaBind *,int,BS_LuaBind * const *,BS_LuaBind * const &> : std::iterator<std::random_access_iterator_tag,BS_LuaBind *,int,BS_LuaBind * const *,BS_LuaBind * const &>
{
};

/* 3900 */
struct __cppobj std::vector<BS_LuaBind *,std::allocator<BS_LuaBind *> >::const_iterator : std::_Ranit<BS_LuaBind *,int,BS_LuaBind * const *,BS_LuaBind * const &>
{
  BS_LuaBind **_Myptr;
};

/* 3901 */
struct __cppobj std::vector<BS_LuaBind *,std::allocator<BS_LuaBind *> >::iterator : std::vector<BS_LuaBind *,std::allocator<BS_LuaBind *> >::const_iterator
{
};

/* 3902 */
struct LuaStack::PopFront
{
  struct lua_State *m_LuaState;
};

/* 3903 */
struct LuaStack::PopBack
{
  struct lua_State *m_LuaState;
};

/* 3904 */
struct std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0>
{
  std::less<int> comp;
};

/* 3905 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >::_Node>
{
};

/* 3906 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >::_Node>
{
};

/* 3907 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> > : std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >::_Node> _Alnod;
};

/* 3908 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >::_Node *>
{
};

/* 3909 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >::_Node *>
{
};

/* 3910 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> > : std::_Tree_nod<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >::_Node *> _Alptr;
};

/* 3911 */
struct __cppobj std::_Allocator_base<std::pair<int const ,GDataTable::Float> >
{
};

/* 3912 */
struct __cppobj std::allocator<std::pair<int const ,GDataTable::Float> > : std::_Allocator_base<std::pair<int const ,GDataTable::Float> >
{
};

/* 3913 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> > : std::_Tree_ptr<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >
{
  std::allocator<std::pair<int const ,GDataTable::Float> > _Alval;
};

/* 3914 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >::_Node *_Right;
  std::pair<int const ,GDataTable::Float> _Myval;
  char _Color;
  char _Isnil;
};

/* 3915 */
struct GDataTable::Float
{
  float fVal;
};

/* 3916 */
struct std::pair<int const ,GDataTable::Float>
{
  const int first;
  GDataTable::Float second;
};

/* 3917 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> > : std::_Tree_val<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 3918 */
struct __cppobj std::map<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> > > : std::_Tree<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >
{
};

/* 3919 */
struct GDataTable
{
  std::map<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> > > m_comboExp;
};

/* 3920 */
struct __cppobj std::allocator<std::pair<int const ,GDataTable::Float> >::rebind<std::pair<int const ,GDataTable::Float> >
{
};

/* 3921 */
struct __cppobj std::allocator<std::pair<int const ,GDataTable::Float> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >::_Node>
{
};

/* 3922 */
struct __cppobj std::allocator<std::pair<int const ,GDataTable::Float> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >::_Node *>
{
};

/* 3923 */
struct __cppobj std::allocator<std::pair<int const ,GDataTable::Float> >::rebind<int>
{
};

/* 3924 */
struct __cppobj std::allocator<std::pair<int const ,GDataTable::Float> >::rebind<char>
{
};

/* 3925 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,GDataTable::Float>,int,std::pair<int const ,GDataTable::Float> const *,std::pair<int const ,GDataTable::Float> const &>
{
};

/* 3926 */
struct __cppobj std::_Bidit<std::pair<int const ,GDataTable::Float>,int,std::pair<int const ,GDataTable::Float> const *,std::pair<int const ,GDataTable::Float> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,GDataTable::Float>,int,std::pair<int const ,GDataTable::Float> const *,std::pair<int const ,GDataTable::Float> const &>
{
};

/* 3927 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >::const_iterator : std::_Bidit<std::pair<int const ,GDataTable::Float>,int,std::pair<int const ,GDataTable::Float> const *,std::pair<int const ,GDataTable::Float> const &>
{
  std::_Tree_nod<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >::_Node *_Ptr;
};

/* 3928 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >::iterator : std::_Tree<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >::const_iterator
{
};

/* 3929 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<int,GDataTable::Float,std::less<int>,std::allocator<std::pair<int const ,GDataTable::Float> >,0> >::iterator first;
  bool second;
};

/* 3930 */
struct __cppobj BS_SingletonHeap<BS_MemPoolMgr,2>
{
};

/* 3931 */
struct __cppobj __declspec(align(4)) BS_MemPoolMgr : BS_PoolMgr, BS_SingletonHeap<BS_MemPoolMgr,2>
{
  _BYTE gap14[1];
};

/* 3932 */
struct __cppobj std::_Allocator_base<BS_MemPool *>
{
};

/* 3933 */
struct __cppobj std::allocator<BS_MemPool *> : std::_Allocator_base<BS_MemPool *>
{
};

/* 3934 */
struct std::_Vector_val<BS_MemPool *,std::allocator<BS_MemPool *> >
{
  std::allocator<BS_MemPool *> _Alval;
};

/* 3935 */
struct __cppobj std::vector<BS_MemPool *,std::allocator<BS_MemPool *> > : std::_Vector_val<BS_MemPool *,std::allocator<BS_MemPool *> >
{
  BS_MemPool **_Myfirst;
  BS_MemPool **_Mylast;
  BS_MemPool **_Myend;
};

/* 3936 */
struct __cppobj std::iterator<std::random_access_iterator_tag,BS_MemPool *,int,BS_MemPool * const *,BS_MemPool * const &>
{
};

/* 3937 */
struct __cppobj std::_Ranit<BS_MemPool *,int,BS_MemPool * const *,BS_MemPool * const &> : std::iterator<std::random_access_iterator_tag,BS_MemPool *,int,BS_MemPool * const *,BS_MemPool * const &>
{
};

/* 3938 */
struct __cppobj std::vector<BS_MemPool *,std::allocator<BS_MemPool *> >::const_iterator : std::_Ranit<BS_MemPool *,int,BS_MemPool * const *,BS_MemPool * const &>
{
  BS_MemPool **_Myptr;
};

/* 3939 */
struct __cppobj std::vector<BS_MemPool *,std::allocator<BS_MemPool *> >::iterator : std::vector<BS_MemPool *,std::allocator<BS_MemPool *> >::const_iterator
{
};

/* 3940 */
struct __cppobj std::allocator<BS_MemPool *>::rebind<BS_MemPool *>
{
};

/* 3941 */
struct __cppobj BS_Functors::fnRelease
{
};

/* 3942 */
struct std::pair<unsigned short const *,BS_SessionContainer *>
{
  const wchar_t *first;
  BS_SessionContainer *second;
};

/* 3943 */
struct __cppobj BS_SingletonHeap<XiTokenEvent,5>
{
};

/* 3944 */
struct XiTokenEventCharInfo
{
  wchar_t m_CharName[21];
  char m_szMemberId[32];
  unsigned __int16 m_Level;
  int m_BattleCnt;
  int m_EventCnt;
};

/* 3945 */
struct __cppobj XiTokenEvent : BS_SingletonHeap<XiTokenEvent,5>
{
  XiTokenEventCharInfo m_TokenEventCharInfo[4][200];
  int m_TokenEventCharInfoCnt[4];
  int m_TokenEventCharInfoTotalCnt[4];
  int m_SeasonIdx;
};

/* 3946 */
struct XiTokenReward
{
  int m_nRewardType;
  XiStrItem *m_pStrItem;
  int m_nRewardCnt;
};

/* 3947 */
struct XiTokenRewardBox
{
  int m_nExchangeCnt;
  XiTokenReward m_TokenReward[4];
};

/* 3948 */
struct __cppobj BS_SingletonHeap<XiTokenRewardTable,5>
{
};

/* 3949 */
struct __cppobj std::_Allocator_base<XiTokenRewardBox>
{
};

/* 3950 */
struct __cppobj std::allocator<XiTokenRewardBox> : std::_Allocator_base<XiTokenRewardBox>
{
};

/* 3951 */
struct std::_Vector_val<XiTokenRewardBox,std::allocator<XiTokenRewardBox> >
{
  std::allocator<XiTokenRewardBox> _Alval;
};

/* 3952 */
struct __cppobj std::vector<XiTokenRewardBox,std::allocator<XiTokenRewardBox> > : std::_Vector_val<XiTokenRewardBox,std::allocator<XiTokenRewardBox> >
{
  XiTokenRewardBox *_Myfirst;
  XiTokenRewardBox *_Mylast;
  XiTokenRewardBox *_Myend;
};

/* 3953 */
struct __cppobj XiTokenRewardTable : BS_SingletonHeap<XiTokenRewardTable,5>
{
  std::vector<XiTokenRewardBox,std::allocator<XiTokenRewardBox> > m_TokenRewardBoxList;
};

/* 3954 */
struct __cppobj BS_SingletonHeap<XiDayMission,5>
{
};

/* 3955 */
struct __cppobj std::_Allocator_base<XiStrInstant *>
{
};

/* 3956 */
struct __cppobj std::allocator<XiStrInstant *> : std::_Allocator_base<XiStrInstant *>
{
};

/* 3957 */
struct std::_Vector_val<XiStrInstant *,std::allocator<XiStrInstant *> >
{
  std::allocator<XiStrInstant *> _Alval;
};

/* 3958 */
struct __cppobj std::vector<XiStrInstant *,std::allocator<XiStrInstant *> > : std::_Vector_val<XiStrInstant *,std::allocator<XiStrInstant *> >
{
  XiStrInstant **_Myfirst;
  XiStrInstant **_Mylast;
  XiStrInstant **_Myend;
};

/* 3959 */
struct __cppobj XiDayMission : BS_SingletonHeap<XiDayMission,5>
{
  std::vector<XiStrInstant *,std::allocator<XiStrInstant *> > m_DayMissionInstantList;
  int m_nextResetTime;
  int m_prevResetTime;
  unsigned int m_TodayMissionIdx;
  BS_Buffer *m_pBuffer;
};

/* 3960 */
struct __cppobj std::_Allocator_base<TOKENBOOK_INFO>
{
};

/* 3961 */
struct __cppobj std::allocator<TOKENBOOK_INFO> : std::_Allocator_base<TOKENBOOK_INFO>
{
};

/* 3962 */
struct std::_Vector_val<TOKENBOOK_INFO,std::allocator<TOKENBOOK_INFO> >
{
  std::allocator<TOKENBOOK_INFO> _Alval;
};

/* 3963 */
struct TOKENBOOK_INFO
{
  int nExchangeCnt;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > strTooltip;
  unsigned __int16 sz1st_Desc[32];
  unsigned __int16 sz1st_ItemName[16];
  int n1st_ItemCnt;
  unsigned __int16 sz2nd_Desc[32];
  unsigned __int16 sz2nd_ItemName[16];
  int n2nd_ItemCnt;
  unsigned __int16 sz3rd_Desc[32];
  unsigned __int16 sz3rd_ItemName[16];
  int n3rd_ItemCnt;
  unsigned __int16 sz4th_Desc[32];
  unsigned __int16 sz4th_ItemName[16];
  int n4th_ItemCnt;
};

/* 3964 */
struct __cppobj std::vector<TOKENBOOK_INFO,std::allocator<TOKENBOOK_INFO> > : std::_Vector_val<TOKENBOOK_INFO,std::allocator<TOKENBOOK_INFO> >
{
  TOKENBOOK_INFO *_Myfirst;
  TOKENBOOK_INFO *_Mylast;
  TOKENBOOK_INFO *_Myend;
};

/* 3965 */
struct XiTokenBookMgr
{
  std::vector<TOKENBOOK_INFO,std::allocator<TOKENBOOK_INFO> > m_vecTokenBook;
};

/* 3966 */
struct std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0>
{
  std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > comp;
};

/* 3967 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >::_Node>
{
};

/* 3968 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >::_Node>
{
};

/* 3969 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> > : std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >::_Node> _Alnod;
};

/* 3970 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >::_Node *>
{
};

/* 3971 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >::_Node *>
{
};

/* 3972 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> > : std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >::_Node *> _Alptr;
};

/* 3973 */
struct __cppobj std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >
{
};

/* 3974 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> > : std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >
{
};

/* 3975 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >
{
  std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> > _Alval;
};

/* 3976 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >::_Node *_Right;
  std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> _Myval;
  char _Color;
  char _Isnil;
};

/* 3977 */
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *>
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > first;
  BS_Channel *second;
};

/* 3978 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> > : std::_Tree_val<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 3979 */
struct __cppobj std::map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> > > : std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >
{
};

/* 3980 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> const &>
{
};

/* 3981 */
struct __cppobj std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> const &>
{
};

/* 3982 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >::const_iterator : std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >::_Node *_Ptr;
};

/* 3983 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >::const_iterator
{
};

/* 3984 */
struct __cppobj std::iterator<std::random_access_iterator_tag,TOKENBOOK_INFO,int,TOKENBOOK_INFO const *,TOKENBOOK_INFO const &>
{
};

/* 3985 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiStrInstant *,int,XiStrInstant * const *,XiStrInstant * const &>
{
};

/* 3986 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >::iterator first;
  bool second;
};

/* 3987 */
struct __cppobj std::_Ranit<XiStrInstant *,int,XiStrInstant * const *,XiStrInstant * const &> : std::iterator<std::random_access_iterator_tag,XiStrInstant *,int,XiStrInstant * const *,XiStrInstant * const &>
{
};

/* 3988 */
struct __cppobj std::_Ranit<TOKENBOOK_INFO,int,TOKENBOOK_INFO const *,TOKENBOOK_INFO const &> : std::iterator<std::random_access_iterator_tag,TOKENBOOK_INFO,int,TOKENBOOK_INFO const *,TOKENBOOK_INFO const &>
{
};

/* 3989 */
struct __cppobj std::vector<TOKENBOOK_INFO,std::allocator<TOKENBOOK_INFO> >::const_iterator : std::_Ranit<TOKENBOOK_INFO,int,TOKENBOOK_INFO const *,TOKENBOOK_INFO const &>
{
  TOKENBOOK_INFO *_Myptr;
};

/* 3990 */
struct __cppobj std::vector<TOKENBOOK_INFO,std::allocator<TOKENBOOK_INFO> >::iterator : std::vector<TOKENBOOK_INFO,std::allocator<TOKENBOOK_INFO> >::const_iterator
{
};

/* 3991 */
struct __cppobj std::allocator<XiTokenRewardBox>::rebind<XiTokenRewardBox>
{
};

/* 3992 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiTokenRewardBox,int,XiTokenRewardBox const *,XiTokenRewardBox const &>
{
};

/* 3993 */
struct __cppobj std::allocator<TOKENBOOK_INFO>::rebind<TOKENBOOK_INFO>
{
};

/* 3994 */
struct __cppobj std::_Ranit<XiTokenRewardBox,int,XiTokenRewardBox const *,XiTokenRewardBox const &> : std::iterator<std::random_access_iterator_tag,XiTokenRewardBox,int,XiTokenRewardBox const *,XiTokenRewardBox const &>
{
};

/* 3995 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >::rebind<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >
{
};

/* 3996 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >::_Node>
{
};

/* 3997 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >,0> >::_Node *>
{
};

/* 3998 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >::rebind<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
{
};

/* 3999 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> >::rebind<char>
{
};

/* 4000 */
struct __cppobj std::allocator<XiStrInstant *>::rebind<XiStrInstant *>
{
};

/* 4001 */
struct __cppobj std::vector<XiStrInstant *,std::allocator<XiStrInstant *> >::const_iterator : std::_Ranit<XiStrInstant *,int,XiStrInstant * const *,XiStrInstant * const &>
{
  XiStrInstant **_Myptr;
};

/* 4002 */
struct __cppobj std::vector<XiStrInstant *,std::allocator<XiStrInstant *> >::iterator : std::vector<XiStrInstant *,std::allocator<XiStrInstant *> >::const_iterator
{
};

/* 4003 */
struct __cppobj std::vector<XiTokenRewardBox,std::allocator<XiTokenRewardBox> >::const_iterator : std::_Ranit<XiTokenRewardBox,int,XiTokenRewardBox const *,XiTokenRewardBox const &>
{
  XiTokenRewardBox *_Myptr;
};

/* 4004 */
struct __cppobj std::vector<XiTokenRewardBox,std::allocator<XiTokenRewardBox> >::iterator : std::vector<XiTokenRewardBox,std::allocator<XiTokenRewardBox> >::const_iterator
{
};

/* 4005 */
struct __cppobj BS_SingletonHeap<BS_ChannelMgr,5>
{
};

/* 4006 */
struct __cppobj BS_ChannelMgr : BS_SingletonHeap<BS_ChannelMgr,5>
{
  BS_CriticalSection m_ChannelLock;
  std::map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_Channel *> > > m_ChannelList;
};

/* 4007 */
struct __cppobj BS_FileOut : BS_Out
{
  void *m_Handle;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > m_Buffer;
  unsigned int m_CodePage;
};

/* 4008 */
struct __cppobj BS_SingletonHeap<BS_FileUtils,5>
{
};

/* 4009 */
struct __cppobj BS_FileUtils : BS_SingletonHeap<BS_FileUtils,5>
{
  wchar_t m_ModuleFileFullName[255];
  wchar_t m_ModuleFileDir[255];
  wchar_t m_ModuleFileName[255];
  wchar_t m_ModuleFileDrive[255];
  wchar_t m_ModulePath[255];
};

/* 4010 */
struct __cppobj BS_SingleStreamBuf : BS_StreamBuf
{
  BS_Out *m_pOut;
};

/* 4011 */
struct BS_Locker<BS_CriticalSection>
{
  BS_CriticalSection *m_lock;
};

/* 4012 */
struct fd_set
{
  unsigned int fd_count;
  unsigned int fd_array[64];
};

/* 4013 */
struct timeval
{
  int tv_sec;
  int tv_usec;
};

/* 4014 */
struct __cppobj std::iterator<std::random_access_iterator_tag,BS_Session *,int,BS_Session * const *,BS_Session * const &>
{
};

/* 4015 */
struct __cppobj std::_Ranit<BS_Session *,int,BS_Session * const *,BS_Session * const &> : std::iterator<std::random_access_iterator_tag,BS_Session *,int,BS_Session * const *,BS_Session * const &>
{
};

/* 4016 */
struct __cppobj std::vector<BS_Session *,std::allocator<BS_Session *> >::const_iterator : std::_Ranit<BS_Session *,int,BS_Session * const *,BS_Session * const &>
{
  BS_Session **_Myptr;
};

/* 4017 */
struct __cppobj std::vector<BS_Session *,std::allocator<BS_Session *> >::iterator : std::vector<BS_Session *,std::allocator<BS_Session *> >::const_iterator
{
};

/* 4018 */
struct __cppobj std::deque<BS_Session *,std::allocator<BS_Session *> >::const_iterator : std::_Ranit<BS_Session *,int,BS_Session * const *,BS_Session * const &>
{
  std::deque<BS_Session *,std::allocator<BS_Session *> > *_Mycont;
  unsigned int _Myoff;
};

/* 4019 */
struct __cppobj std::deque<BS_Session *,std::allocator<BS_Session *> >::iterator : std::deque<BS_Session *,std::allocator<BS_Session *> >::const_iterator
{
};

/* 4020 */
struct __cppobj std::allocator<BS_Session *>::rebind<BS_Session *>
{
};

/* 4021 */
struct __cppobj std::allocator<BS_Session *>::rebind<BS_Session * *>
{
};

/* 4022 */
struct __cppobj BS_SingletonHeap<BS_WinSocket,5>
{
};

/* 4023 */
struct __cppobj BS_WinSocket : BS_SingletonHeap<BS_WinSocket,5>
{
};

/* 4024 */
struct __cppobj BS_SendOverlapped : BS_Overlapped
{
  BS_Session *m_pSession;
  BS_Packet *m_pPacket;
};

/* 4025 */
struct __cppobj BS_Connector : BS_SessionContainer
{
};

/* 4028 */
struct __cppobj AOI::NodeBase<BS_IVehicle *> : AOI::Monitor
{
  AOI::Area<BS_IVehicle *> *locArea;
  unsigned int nLoc;
};

/* 4026 */
struct __cppobj __unaligned __declspec(align(4)) BS_IVehicle : AOI::NodeBase<BS_IVehicle *>
{
  BS_IVehicleVtbl *vfptr;
  int m_MovedServerTime;
  BS_AreaDispatch *m_pADispatch;
  XiVec4 m_pos;
  XiVec4 m_vel;
  unsigned int m_Time;
  XiCarAttr m_CarAttr;
  unsigned __int16 m_carSort;
  char m_data[64];
};

/* 4082 */
union $B7A7F0EE07D2EED7DC25690EDCC59EC8
{
  void (__thiscall *~BS_IVehicle)(BS_IVehicle *this);
  void *(__thiscall *__vecDelDtor)(BS_IVehicle *this, unsigned int);
};

/* 4083 */
struct BS_IVehicleVtbl
{
  bool (__thiscall *MakeMoveMsg)(BS_IVehicle *this, BS_AreaDispatch *);
  bool (__thiscall *MakeMoveSimplMsg)(BS_IVehicle *this, BS_AreaDispatch *);
  void (__thiscall *FillState)(BS_IVehicle *this, XiCarState *);
  void (__thiscall *FillMove)(BS_IVehicle *this, XiCarMove *);
  void (__thiscall *SendMoveNow)(BS_IVehicle *this, BS_IVehicle *);
  void (__thiscall *OnLeaveArea)(BS_IVehicle *this, BS_Area<BS_IVehicle> *);
  $B7A7F0EE07D2EED7DC25690EDCC59EC8 ___u6;
};

/* 4027 */
struct AOI::Area<BS_IVehicle *>
{
  int m_cur;
  int m_size;
  BS_IVehicle **m_elem;
};

/* 4084 */
struct std::bitset<256>
{
  unsigned int _Array[8];
};

/* 4085 */
struct BS_AreaDispatch::ObjCounter
{
  std::bitset<256> bset;
  int Count;
};

/* 4086 */
struct BS_AreaDispatch::Adjuster
{
  BS_AreaDispatch::ObjCounter m_counter;
  float m_range;
  float m_highRange;
  float m_lowRange;
  float m_step;
  int m_highCount;
  int m_lowCount;
  int m_beforeTick;
};

/* 4087 */
struct BS_AreaDispatch::Send
{
  int Time;
  int Count;
};

/* 4075 */
struct __cppobj std::_Allocator_base<BS_AreaDispatch *>
{
};

/* 4076 */
struct __cppobj std::allocator<BS_AreaDispatch *> : std::_Allocator_base<BS_AreaDispatch *>
{
};

/* 4077 */
struct std::_Vector_val<BS_AreaDispatch *,std::allocator<BS_AreaDispatch *> >
{
  std::allocator<BS_AreaDispatch *> _Alval;
};

/* 4078 */
struct __cppobj std::vector<BS_AreaDispatch *,std::allocator<BS_AreaDispatch *> > : std::_Vector_val<BS_AreaDispatch *,std::allocator<BS_AreaDispatch *> >
{
  BS_AreaDispatch **_Myfirst;
  BS_AreaDispatch **_Mylast;
  BS_AreaDispatch **_Myend;
};

/* 4079 */
struct HashedVector<BS_AreaDispatch *,4,16>::Monitor
{
  _RTL_CRITICAL_SECTION m_cs;
};

/* 4080 */
struct __cppobj HashedVector<BS_AreaDispatch *,4,16>::Vector : std::vector<BS_AreaDispatch *,std::allocator<BS_AreaDispatch *> >
{
  HashedVector<BS_AreaDispatch *,4,16>::Monitor m_monitor;
};

/* 4081 */
struct HashedVector<BS_AreaDispatch *,4,16>
{
  HashedVector<BS_AreaDispatch *,4,16>::Vector m_vector[4];
  int m_nCount;
};

/* 4090 */
struct __cppobj BS_AreaDispatch::Obs : TickHandler
{
  BS_AreaDispatch *self;
  BS_Buffer *m_pBuffer;
  HashedVector<BS_AreaDispatch *,4,16> observers;
  bool enabled;
  BS_AreaDispatch *target;
  BS_ProtocolPacket *m_pObserverPacket;
  int m_observeMsgTime;
  BS_CriticalSection m_csLock;
};

/* 4091 */
struct BS_AreaDispatch::Latency
{
  unsigned int LastValue;
  int ResetTime;
};

/* 4029 */
struct __cppobj BS_AreaDispatch : BS_MultiDispatch, BS_IVehicle
{
  BS_AreaDispatch::Adjuster m_fastRange;
  BS_AreaDispatch::Adjuster m_viewRange;
  BS_AreaDispatch::ObjCounter m_moveSet;
  int m_GroupId;
  int m_SessionId;
  unsigned __int16 m_Progress;
  unsigned __int16 m_Age;
  unsigned int m_Ip;
  unsigned int m_Port;
  XiPlayerInfo m_PlayerInfo;
  int m_ObserveAreaId;
  int m_AreaId;
  BS_AreaDispatch::Send m_send;
  XiBlockInfo m_blockList[64];
  int m_blockListSize;
  BS_AreaDispatch::FlushCastHandler *m_pFlushCastHandler;
  BS_AreaDispatch::Obs m_obs;
  BS_AreaDispatch::Latency m_Latency;
};

/* 4031 */
struct __cppobj std::_Allocator_base<BS_IVehicle *>
{
};

/* 4032 */
struct __cppobj std::allocator<BS_IVehicle *> : std::_Allocator_base<BS_IVehicle *>
{
};

/* 4033 */
struct std::_Vector_val<BS_IVehicle *,std::allocator<BS_IVehicle *> >
{
  std::allocator<BS_IVehicle *> _Alval;
};

/* 4034 */
struct __cppobj std::vector<BS_IVehicle *,std::allocator<BS_IVehicle *> > : std::_Vector_val<BS_IVehicle *,std::allocator<BS_IVehicle *> >
{
  BS_IVehicle **_Myfirst;
  BS_IVehicle **_Mylast;
  BS_IVehicle **_Myend;
};

/* 4035 */
struct HashedVector<BS_IVehicle *,4,16>::Monitor
{
  _RTL_CRITICAL_SECTION m_cs;
};

/* 4036 */
struct __cppobj HashedVector<BS_IVehicle *,4,16>::Vector : std::vector<BS_IVehicle *,std::allocator<BS_IVehicle *> >
{
  HashedVector<BS_IVehicle *,4,16>::Monitor m_monitor;
};

/* 4037 */
struct HashedVector<BS_IVehicle *,4,16>
{
  HashedVector<BS_IVehicle *,4,16>::Vector m_vector[4];
  int m_nCount;
};

/* 4039 */
struct XiTrafficControl::TrafficCarMgr
{
  XiTrafficControl::TrafficCarMgrVtbl *vfptr;
};

/* 4042 */
struct __cppobj std::_Allocator_base<BS_TrafficCar>
{
};

/* 4043 */
struct __cppobj std::allocator<BS_TrafficCar> : std::_Allocator_base<BS_TrafficCar>
{
};

/* 4044 */
struct std::_Vector_val<BS_TrafficCar,std::allocator<BS_TrafficCar> >
{
  std::allocator<BS_TrafficCar> _Alval;
};

/* 4058 */
struct __cppobj std::vector<BS_TrafficCar,std::allocator<BS_TrafficCar> > : std::_Vector_val<BS_TrafficCar,std::allocator<BS_TrafficCar> >
{
  BS_TrafficCar *_Myfirst;
  BS_TrafficCar *_Mylast;
  BS_TrafficCar *_Myend;
};

/* 4070 */
struct $59E6F3666E85864F043A81CCCD920DBB
{
  float m_fRedSignalPeriod;
  float m_fYellowSignalPeriod;
  float m_fGreenSignalPeriod;
};

/* 4071 */
union $652672F76351B57ACE7B5AF7C7B0D6FA
{
  float m_fSignalPeriod[3];
  $59E6F3666E85864F043A81CCCD920DBB __s1;
};

/* 4046 */
struct __cppobj std::_Allocator_base<XiTrafficCarInfo *>
{
};

/* 4047 */
struct __cppobj std::allocator<XiTrafficCarInfo *> : std::_Allocator_base<XiTrafficCarInfo *>
{
};

/* 4048 */
struct std::_Vector_val<XiTrafficCarInfo *,std::allocator<XiTrafficCarInfo *> >
{
  std::allocator<XiTrafficCarInfo *> _Alval;
};

/* 4049 */
struct __cppobj std::vector<XiTrafficCarInfo *,std::allocator<XiTrafficCarInfo *> > : std::_Vector_val<XiTrafficCarInfo *,std::allocator<XiTrafficCarInfo *> >
{
  XiTrafficCarInfo **_Myfirst;
  XiTrafficCarInfo **_Mylast;
  XiTrafficCarInfo **_Myend;
};

/* 4061 */
union $916A7BCF4795033F0F53CCF03657EED7
{
  XiTrafficCarInfo **mpElement;
  XiTrafficCarInfo **pE;
};

/* 4062 */
union $D42BC336137A0C376F07430FF89A2908
{
  int mNum;
  int mCurrentSize;
};

/* 4059 */
struct XiTArray<XiTrafficCarInfo *>
{
  XiTArray<XiTrafficCarInfo *>Vtbl *vfptr;
  $916A7BCF4795033F0F53CCF03657EED7 ___u1;
  $D42BC336137A0C376F07430FF89A2908 ___u2;
  int m_iArraySize;
  AGbool m_bStatic;
  int m_iMemIncSize;
  int m_nRealloc;
  int m_nMaxRealloc;
};

/* 4065 */
union $6C7E1711318E5721973BBC3C2EA5044C
{
  XiTrafficCarInfo *mpElement;
  XiTrafficCarInfo *pE;
};

/* 4063 */
struct XiTArray<XiTrafficCarInfo>
{
  XiTArray<XiTrafficCarInfo>Vtbl *vfptr;
  $6C7E1711318E5721973BBC3C2EA5044C ___u1;
  $D42BC336137A0C376F07430FF89A2908 ___u2;
  int m_iArraySize;
  AGbool m_bStatic;
  int m_iMemIncSize;
  int m_nRealloc;
  int m_nMaxRealloc;
};

/* 4066 */
struct XiTPool<XiTrafficCarInfo>
{
  XiTArray<XiTrafficCarInfo *> m_vecAvailable;
  XiTArray<XiTrafficCarInfo *> m_vecUsed;
  XiTArray<XiTrafficCarInfo> m_vecData;
};

/* 4069 */
union $929580DB17668C661DEEDB22398B622E
{
  XiTrafficPathInfo *mpElement;
  XiTrafficPathInfo *pE;
};

/* 4067 */
struct XiTArray<XiTrafficPathInfo>
{
  XiTArray<XiTrafficPathInfo>Vtbl *vfptr;
  $929580DB17668C661DEEDB22398B622E ___u1;
  $D42BC336137A0C376F07430FF89A2908 ___u2;
  int m_iArraySize;
  AGbool m_bStatic;
  int m_iMemIncSize;
  int m_nRealloc;
  int m_nMaxRealloc;
};

/* 4072 */
struct XiTrafficControl
{
  $652672F76351B57ACE7B5AF7C7B0D6FA ___u0;
  std::vector<XiTrafficCarInfo *,std::allocator<XiTrafficCarInfo *> > m_vecStoppingVehicle;
  unsigned int m_lTime;
  unsigned int m_lDeltaTime;
  unsigned int m_lLastTime;
  XiTrafficCarInfo *m_pFrontControl;
  XiTrafficCarInfo *m_pRearControl;
  XiTPool<XiTrafficCarInfo> m_poolTrafficCarInfo;
  XiTArray<XiTrafficPathInfo> m_vecPathInfo;
  int m_nTrafficNumber;
  int m_nTrafficLimit;
  float m_fSize;
  float m_fTWidth;
  float m_fTHeight;
};

/* 4041 */
struct __cppobj TrafficSystem : XiTrafficControl::TrafficCarMgr
{
  TrafficSystem *pNext;
  int m_CityId;
  int m_MapId;
  int m_ResetTime;
  std::vector<BS_TrafficCar,std::allocator<BS_TrafficCar> > m_tcarVector;
  int m_tcarNum;
  XiTrafficControl m_trafficControl;
};

/* 4074 */
struct AOI::SpaceGrid<BS_IVehicle *>
{
  float baseX;
  float baseY;
  float w;
  float h;
  float unit;
  int nw;
  int nh;
  int nElement;
  AOI::SpaceGrid<BS_IVehicle *>::AreaPtr *grid;
};

/* 4030 */
struct BS_Area<BS_IVehicle>
{
  BS_Buffer *m_pBuffer;
  int m_AreaId;
  BS_Area<BS_IVehicle> *pNext;
  HashedVector<BS_IVehicle *,4,16> m_member;
  HashedVector<BS_IVehicle *,4,16> m_flushQueue;
  TrafficSystem *m_pTrafficSystem;
  TrafficSystem m_trafficSystem;
  BS_AreaDispatch *m_pAgent;
  AOI::SpaceGrid<BS_IVehicle *> m_spaceGrid;
  BS_CriticalSection m_csLock;
  BS_CriticalSection m_trafficLock;
  BS_AreaType m_eAreaType;
  bool m_bFastMode;
  int m_nSize;
  unsigned int m_AllObserverCount;
  char m_BattleString[16];
  BS_ProtocolPacket *m_pObserverPacket;
  HashedVector<BS_AreaDispatch *,4,16> m_observers;
  int m_observeMsgTime;
};

/* 4088 */
struct BS_AreaDispatch::FlushCastHandler
{
  BS_AreaDispatch::FlushCastHandlerVtbl *vfptr;
};

/* 4040 */
struct XiTrafficControl::TrafficCarMgrVtbl
{
  void (__thiscall *AddTrafficCar)(XiTrafficControl::TrafficCarMgr *this, XiTrafficBodyInfo *);
  void (__thiscall *ClearTrafficCar)(XiTrafficControl::TrafficCarMgr *this);
};

/* 4038 */
struct XiTrafficBodyInfo
{
  float m_fLength;
  float m_fRatio;
  int m_iType;
  float m_fFrontLength;
  float m_fRearLength;
  int m_iPathID;
  float m_fTimeOffset;
};

/* 4057 */
struct BS_TrafficCar
{
  int m_id;
  int m_nTick;
  int m_nCastedTime;
  XiTrafficBodyInfo m_vehicleInfo;
  XiTrafficCarInfo *m_trafficCarInfo;
  XiVec4 m_pos;
  XiVec4 m_vel;
  XiVec4 m_svel;
  float m_lastCollPos[3];
};

/* 4045 */
struct XiTrafficCarInfo
{
  XiTrafficCarInfo *m_pFront;
  XiTrafficCarInfo *m_pRear;
  float m_fFrontDist;
  float m_fSpeed;
  XiTrafficBodyInfo *m_pVehicleInfo;
  XiTrafficPathInfo *m_pPathInfo;
  float m_fReduceDist;
  float m_fReduceTime;
  float m_fSpeedRate;
  int m_SignalIdx;
  struct XiVehicle *m_pCrashVehicle;
  float m_fCurPos;
  float m_fPos4Render;
  struct XiVehicle *m_pVehicle;
  int m_eState;
  int m_nFreedTime;
  unsigned int m_Owner;
  int m_OwnTime;
};

/* 4060 */
struct XiTArray<XiTrafficCarInfo *>Vtbl
{
  void *(__thiscall *__vecDelDtor)(XiTArray<XiTrafficCarInfo *> *this, unsigned int);
};

/* 4064 */
struct XiTArray<XiTrafficCarInfo>Vtbl
{
  void *(__thiscall *__vecDelDtor)(XiTArray<XiTrafficCarInfo> *this, unsigned int);
};

/* 4068 */
struct XiTArray<XiTrafficPathInfo>Vtbl
{
  void *(__thiscall *__vecDelDtor)(XiTArray<XiTrafficPathInfo> *this, unsigned int);
};

/* 4050 */
struct LingList<XiTrafficCarInfo>
{
  XiTrafficCarInfo *head;
  int m_nSize;
};

/* 4051 */
struct __cppobj std::_Allocator_base<XiTrafficPathInfo::SIGNAL_INFO>
{
};

/* 4052 */
struct __cppobj std::allocator<XiTrafficPathInfo::SIGNAL_INFO> : std::_Allocator_base<XiTrafficPathInfo::SIGNAL_INFO>
{
};

/* 4053 */
struct std::_Vector_val<XiTrafficPathInfo::SIGNAL_INFO,std::allocator<XiTrafficPathInfo::SIGNAL_INFO> >
{
  std::allocator<XiTrafficPathInfo::SIGNAL_INFO> _Alval;
};

/* 4055 */
struct __cppobj std::vector<XiTrafficPathInfo::SIGNAL_INFO,std::allocator<XiTrafficPathInfo::SIGNAL_INFO> > : std::_Vector_val<XiTrafficPathInfo::SIGNAL_INFO,std::allocator<XiTrafficPathInfo::SIGNAL_INFO> >
{
  XiTrafficPathInfo::SIGNAL_INFO *_Myfirst;
  XiTrafficPathInfo::SIGNAL_INFO *_Mylast;
  XiTrafficPathInfo::SIGNAL_INFO *_Myend;
};

/* 4056 */
struct XiTrafficPathInfo
{
  std::vector<XiTrafficCarInfo *,std::allocator<XiTrafficCarInfo *> > m_vecCarInfo;
  LingList<XiTrafficCarInfo> m_routineList;
  LingList<XiTrafficCarInfo> m_waitList;
  float m_fMaxSpeed;
  float m_fStopRDist;
  float m_fCruiseDist;
  std::vector<XiTrafficPathInfo::SIGNAL_INFO,std::allocator<XiTrafficPathInfo::SIGNAL_INFO> > m_vecTrafficSignal;
  float m_fStartPosTime;
  float m_fEndPosTime;
  float m_fTotalDist;
};

/* 4073 */
struct AOI::SpaceGrid<BS_IVehicle *>::AreaPtr
{
  AOI::Area<BS_IVehicle *> *area;
};

/* 4089 */
struct BS_AreaDispatch::FlushCastHandlerVtbl
{
  void (__thiscall *Release)(BS_AreaDispatch::FlushCastHandler *this);
};

/* 4054 */
struct XiTrafficPathInfo::SIGNAL_INFO
{
  float m_fPosTime;
  float m_fDist;
  XiTrafficPathInfo::SIGNAL_INFO::STATE m_eState;
  XiTrafficPathInfo::SIGNAL_INFO::STATE m_eDefaultState;
  AGbool m_bChangedSignal;
  float m_fOffsetPos;
  int m_iTrafficSignal;
  float m_fSignalTime;
  XiTrafficCarInfo *m_pCarInfo;
};

/* 4092 */
struct __cppobj BS_SendToOverlappedForIOCP : BS_OverlappedPendding
{
  BS_Session *m_pSession;
  BS_Packet *m_pPacket;
  sockaddr_in m_addr;
};

/* 4093 */
struct auto_release<BS_ProtocolPacket>
{
  BS_ProtocolPacket *Release;
};

/* 4094 */
struct LockMessageBuffer<BS_PktTimeSyncByUDP>
{
  BS_PktTimeSyncByUDP *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4095 */
struct HashedVector<BS_IVehicle *,4,16>::Lock
{
  HashedVector<BS_IVehicle *,4,16>::Monitor *m_pMonitor;
};

/* 4096 */
struct __cppobj BS_Area<BS_IVehicle>::DoFlush
{
};

/* 4097 */
struct __cppobj std::output_iterator_tag
{
};

/* 4098 */
struct std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0>
{
  std::less<int> comp;
};

/* 4099 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >::_Node>
{
};

/* 4100 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >::_Node>
{
};

/* 4101 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> > : std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >::_Node> _Alnod;
};

/* 4102 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >::_Node *_Right;
  std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > _Myval;
  char _Color;
  char _Isnil;
};

/* 4103 */
struct std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
{
  const int first;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > second;
};

/* 4104 */
struct __cppobj std::_Allocator_base<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
{
};

/* 4105 */
struct __cppobj std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > : std::_Allocator_base<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
{
};

/* 4106 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >::_Node *>
{
};

/* 4107 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >::_Node *>
{
};

/* 4108 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> > : std::_Tree_nod<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >::_Node *> _Alptr;
};

/* 4109 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> > : std::_Tree_ptr<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >
{
  std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > _Alval;
};

/* 4110 */
struct __cppobj std::iterator<std::random_access_iterator_tag,BS_TrafficCar,int,BS_TrafficCar const *,BS_TrafficCar const &>
{
};

/* 4111 */
struct __cppobj std::_Allocator_base<float>
{
};

/* 4112 */
struct __cppobj std::allocator<float> : std::_Allocator_base<float>
{
};

/* 4113 */
struct std::_Vector_val<float,std::allocator<float> >
{
  std::allocator<float> _Alval;
};

/* 4114 */
struct __cppobj std::vector<float,std::allocator<float> > : std::_Vector_val<float,std::allocator<float> >
{
  float *_Myfirst;
  float *_Mylast;
  float *_Myend;
};

/* 4115 */
struct XiPathIndex::Path
{
  std::vector<float,std::allocator<float> > m_x;
  std::vector<float,std::allocator<float> > m_y;
  float m_start;
  float m_end;
  float m_speed;
};

/* 4116 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiPathIndex::Path,int,XiPathIndex::Path const *,XiPathIndex::Path const &>
{
};

/* 4117 */
struct __cppobj std::iterator<std::random_access_iterator_tag,BS_IVehicle *,int,BS_IVehicle * const *,BS_IVehicle * const &>
{
};

/* 4118 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,BS_Area<BS_IVehicle> *,int,BS_Area<BS_IVehicle> * const *,BS_Area<BS_IVehicle> * const &>
{
};

/* 4119 */
struct __cppobj std::_Bidit<BS_Area<BS_IVehicle> *,int,BS_Area<BS_IVehicle> * const *,BS_Area<BS_IVehicle> * const &> : std::iterator<std::bidirectional_iterator_tag,BS_Area<BS_IVehicle> *,int,BS_Area<BS_IVehicle> * const *,BS_Area<BS_IVehicle> * const &>
{
};

/* 4120 */
struct std::_List_nod<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::_Node
{
  std::_List_nod<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::_Node *_Next;
  std::_List_nod<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::_Node *_Prev;
  BS_Area<BS_IVehicle> *_Myval;
};

/* 4121 */
struct __cppobj std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::const_iterator : std::_Bidit<BS_Area<BS_IVehicle> *,int,BS_Area<BS_IVehicle> * const *,BS_Area<BS_IVehicle> * const &>
{
  std::_List_nod<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::_Node *_Ptr;
};

/* 4122 */
struct __cppobj std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator : std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::const_iterator
{
};

/* 4123 */
struct __cppobj std::iterator<std::random_access_iterator_tag,std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator,int,std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator const *,std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator const &>
{
};

/* 4124 */
struct __cppobj std::allocator<XiTrafficPathInfo::SIGNAL_INFO>::rebind<XiTrafficPathInfo::SIGNAL_INFO>
{
};

/* 4125 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::_Node>
{
};

/* 4126 */
struct std::bitset<256>::reference
{
  std::bitset<256> *_Pbitset;
  unsigned int _Mypos;
};

/* 4127 */
struct __cppobj std::iterator<std::random_access_iterator_tag,BS_AreaDispatch *,int,BS_AreaDispatch * const *,BS_AreaDispatch * const &>
{
};

/* 4128 */
struct __cppobj std::_Ranit<BS_AreaDispatch *,int,BS_AreaDispatch * const *,BS_AreaDispatch * const &> : std::iterator<std::random_access_iterator_tag,BS_AreaDispatch *,int,BS_AreaDispatch * const *,BS_AreaDispatch * const &>
{
};

/* 4129 */
struct __cppobj std::vector<BS_AreaDispatch *,std::allocator<BS_AreaDispatch *> >::const_iterator : std::_Ranit<BS_AreaDispatch *,int,BS_AreaDispatch * const *,BS_AreaDispatch * const &>
{
  BS_AreaDispatch **_Myptr;
};

/* 4130 */
struct __cppobj std::vector<BS_AreaDispatch *,std::allocator<BS_AreaDispatch *> >::iterator : std::vector<BS_AreaDispatch *,std::allocator<BS_AreaDispatch *> >::const_iterator
{
};

/* 4131 */
struct __cppobj std::_Ranit<BS_IVehicle *,int,BS_IVehicle * const *,BS_IVehicle * const &> : std::iterator<std::random_access_iterator_tag,BS_IVehicle *,int,BS_IVehicle * const *,BS_IVehicle * const &>
{
};

/* 4132 */
struct __cppobj std::vector<BS_IVehicle *,std::allocator<BS_IVehicle *> >::const_iterator : std::_Ranit<BS_IVehicle *,int,BS_IVehicle * const *,BS_IVehicle * const &>
{
  BS_IVehicle **_Myptr;
};

/* 4133 */
struct __cppobj std::vector<BS_IVehicle *,std::allocator<BS_IVehicle *> >::iterator : std::vector<BS_IVehicle *,std::allocator<BS_IVehicle *> >::const_iterator
{
};

/* 4134 */
struct __cppobj std::_Ranit<BS_TrafficCar,int,BS_TrafficCar const *,BS_TrafficCar const &> : std::iterator<std::random_access_iterator_tag,BS_TrafficCar,int,BS_TrafficCar const *,BS_TrafficCar const &>
{
};

/* 4135 */
struct __cppobj std::allocator<std::pair<unsigned long,BS_Overlapped *> >::rebind<std::pair<unsigned long,BS_Overlapped *> >
{
};

/* 4136 */
struct __cppobj std::_Ranit<XiPathIndex::Path,int,XiPathIndex::Path const *,XiPathIndex::Path const &> : std::iterator<std::random_access_iterator_tag,XiPathIndex::Path,int,XiPathIndex::Path const *,XiPathIndex::Path const &>
{
};

/* 4137 */
struct __cppobj std::iterator<std::random_access_iterator_tag,float,int,float const *,float const &>
{
};

/* 4138 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiTrafficPathInfo::SIGNAL_INFO,int,XiTrafficPathInfo::SIGNAL_INFO const *,XiTrafficPathInfo::SIGNAL_INFO const &>
{
};

/* 4139 */
struct __cppobj std::_Ranit<XiTrafficPathInfo::SIGNAL_INFO,int,XiTrafficPathInfo::SIGNAL_INFO const *,XiTrafficPathInfo::SIGNAL_INFO const &> : std::iterator<std::random_access_iterator_tag,XiTrafficPathInfo::SIGNAL_INFO,int,XiTrafficPathInfo::SIGNAL_INFO const *,XiTrafficPathInfo::SIGNAL_INFO const &>
{
};

/* 4140 */
struct __cppobj std::vector<XiTrafficPathInfo::SIGNAL_INFO,std::allocator<XiTrafficPathInfo::SIGNAL_INFO> >::const_iterator : std::_Ranit<XiTrafficPathInfo::SIGNAL_INFO,int,XiTrafficPathInfo::SIGNAL_INFO const *,XiTrafficPathInfo::SIGNAL_INFO const &>
{
  XiTrafficPathInfo::SIGNAL_INFO *_Myptr;
};

/* 4141 */
struct __cppobj std::vector<XiTrafficPathInfo::SIGNAL_INFO,std::allocator<XiTrafficPathInfo::SIGNAL_INFO> >::iterator : std::vector<XiTrafficPathInfo::SIGNAL_INFO,std::allocator<XiTrafficPathInfo::SIGNAL_INFO> >::const_iterator
{
};

/* 4142 */
struct __cppobj std::iterator<std::random_access_iterator_tag,std::pair<unsigned long,BS_Overlapped *>,int,std::pair<unsigned long,BS_Overlapped *> const *,std::pair<unsigned long,BS_Overlapped *> const &>
{
};

/* 4143 */
struct __cppobj std::_Ranit<std::pair<unsigned long,BS_Overlapped *>,int,std::pair<unsigned long,BS_Overlapped *> const *,std::pair<unsigned long,BS_Overlapped *> const &> : std::iterator<std::random_access_iterator_tag,std::pair<unsigned long,BS_Overlapped *>,int,std::pair<unsigned long,BS_Overlapped *> const *,std::pair<unsigned long,BS_Overlapped *> const &>
{
};

/* 4144 */
struct __cppobj std::vector<std::pair<unsigned long,BS_Overlapped *>,std::allocator<std::pair<unsigned long,BS_Overlapped *> > >::const_iterator : std::_Ranit<std::pair<unsigned long,BS_Overlapped *>,int,std::pair<unsigned long,BS_Overlapped *> const *,std::pair<unsigned long,BS_Overlapped *> const &>
{
  std::pair<unsigned long,BS_Overlapped *> *_Myptr;
};

/* 4145 */
struct __cppobj std::vector<std::pair<unsigned long,BS_Overlapped *>,std::allocator<std::pair<unsigned long,BS_Overlapped *> > >::iterator : std::vector<std::pair<unsigned long,BS_Overlapped *>,std::allocator<std::pair<unsigned long,BS_Overlapped *> > >::const_iterator
{
};

/* 4146 */
struct __declspec(align(4)) std::pair<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator,bool>
{
  std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator first;
  bool second;
};

/* 4147 */
struct ServerTable::ServerInfo
{
  XiServerInfo m_info;
  int UpdateTime;
};

/* 4148 */
struct __cppobj std::_Allocator_base<ServerTable::ServerInfo>
{
};

/* 4149 */
struct __cppobj std::_Ranit<float,int,float const *,float const &> : std::iterator<std::random_access_iterator_tag,float,int,float const *,float const &>
{
};

/* 4150 */
struct __cppobj std::vector<float,std::allocator<float> >::const_iterator : std::_Ranit<float,int,float const *,float const &>
{
  float *_Myptr;
};

/* 4151 */
struct __cppobj std::vector<float,std::allocator<float> >::iterator : std::vector<float,std::allocator<float> >::const_iterator
{
};

/* 4152 */
struct __cppobj std::_Allocator_base<XiCharacterTeamParam>
{
};

/* 4153 */
struct __cppobj std::allocator<XiCharacterTeamParam> : std::_Allocator_base<XiCharacterTeamParam>
{
};

/* 4154 */
struct __cppobj std::allocator<XiCharacterTeamParam>::rebind<XiCharacterTeamParam>
{
};

/* 4155 */
struct __cppobj std::numpunct<char> : std::locale::facet
{
  const char *_Grouping;
  char _Dp;
  char _Kseparator;
  const char *_Falsename;
  const char *_Truename;
};

/* 4156 */
struct __cppobj std::_Allocator_base<BS_Area<BS_IVehicle> *>
{
};

/* 4157 */
struct __cppobj std::allocator<BS_Area<BS_IVehicle> *> : std::_Allocator_base<BS_Area<BS_IVehicle> *>
{
};

/* 4158 */
struct __cppobj std::allocator<BS_Area<BS_IVehicle> *>::rebind<BS_Area<BS_IVehicle> *>
{
};

/* 4159 */
struct __cppobj std::allocator<BS_Area<BS_IVehicle> *>::rebind<std::_List_nod<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::_Node>
{
};

/* 4160 */
struct __cppobj std::allocator<BS_Area<BS_IVehicle> *>::rebind<std::_List_nod<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::_Node *>
{
};

/* 4161 */
struct __cppobj std::allocator<BS_Area<BS_IVehicle> *>::rebind<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator>
{
};

/* 4162 */
struct __cppobj std::_Allocator_base<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator>
{
};

/* 4163 */
struct __cppobj std::allocator<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator> : std::_Allocator_base<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator>
{
};

/* 4164 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::_Node *>
{
};

/* 4165 */
struct __cppobj std::allocator<std::_List_nod<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::_Node *> : std::_Allocator_base<std::_List_nod<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::_Node *>
{
};

/* 4166 */
struct __cppobj std::allocator<std::_List_nod<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::_Node> : std::_Allocator_base<std::_List_nod<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::_Node>
{
};

/* 4167 */
struct __cppobj std::_Ranit<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator,int,std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator const *,std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator const &> : std::iterator<std::random_access_iterator_tag,std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator,int,std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator const *,std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator const &>
{
};

/* 4168 */
struct __cppobj std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::rebind<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
{
};

/* 4169 */
struct __cppobj std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::rebind<std::_Tree_nod<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >::_Node>
{
};

/* 4170 */
struct __cppobj std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::rebind<std::_Tree_nod<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >::_Node *>
{
};

/* 4171 */
struct __cppobj std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::rebind<int>
{
};

/* 4172 */
struct __cppobj std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::rebind<char>
{
};

/* 4173 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> > : std::_Tree_val<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4174 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,int,std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > const *,std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > const &>
{
};

/* 4175 */
struct __cppobj std::_Bidit<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,int,std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > const *,std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,int,std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > const *,std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > const &>
{
};

/* 4176 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >::const_iterator : std::_Bidit<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,int,std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > const *,std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > const &>
{
  std::_Tree_nod<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >::_Node *_Ptr;
};

/* 4177 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >::iterator : std::_Tree<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >::const_iterator
{
};

/* 4178 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >::iterator first;
  bool second;
};

/* 4179 */
struct std::_List_nod<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >
{
  std::allocator<std::_List_nod<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::_Node> _Alnod;
};

/* 4180 */
struct __cppobj std::_List_ptr<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> > : std::_List_nod<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >
{
  std::allocator<std::_List_nod<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::_Node *> _Alptr;
};

/* 4181 */
struct __cppobj std::_List_val<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> > : std::_List_ptr<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >
{
  std::allocator<BS_Area<BS_IVehicle> *> _Alval;
};

/* 4182 */
struct __cppobj std::allocator<BS_TrafficCar>::rebind<BS_TrafficCar>
{
};

/* 4183 */
struct std::_Vector_val<XiCharacterTeamParam,std::allocator<XiCharacterTeamParam> >
{
  std::allocator<XiCharacterTeamParam> _Alval;
};

/* 4184 */
struct __cppobj std::iterator<std::random_access_iterator_tag,ServerTable::ServerInfo,int,ServerTable::ServerInfo const *,ServerTable::ServerInfo const &>
{
};

/* 4185 */
struct __cppobj std::_Allocator_base<XiPathIndex::Path>
{
};

/* 4186 */
struct __cppobj std::allocator<XiPathIndex::Path> : std::_Allocator_base<XiPathIndex::Path>
{
};

/* 4187 */
struct std::_Vector_val<XiPathIndex::Path,std::allocator<XiPathIndex::Path> >
{
  std::allocator<XiPathIndex::Path> _Alval;
};

/* 4188 */
struct __cppobj std::allocator<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator>::rebind<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator>
{
};

/* 4189 */
struct __cppobj std::allocator<XiStrCharKey>::rebind<XiStrCharKey>
{
};

/* 4190 */
struct __cppobj std::allocator<float>::rebind<float>
{
};

/* 4191 */
struct __cppobj std::allocator<ServerTable::ServerInfo> : std::_Allocator_base<ServerTable::ServerInfo>
{
};

/* 4192 */
struct std::_Vector_val<ServerTable::ServerInfo,std::allocator<ServerTable::ServerInfo> >
{
  std::allocator<ServerTable::ServerInfo> _Alval;
};

/* 4193 */
struct __cppobj std::vector<ServerTable::ServerInfo,std::allocator<ServerTable::ServerInfo> > : std::_Vector_val<ServerTable::ServerInfo,std::allocator<ServerTable::ServerInfo> >
{
  ServerTable::ServerInfo *_Myfirst;
  ServerTable::ServerInfo *_Mylast;
  ServerTable::ServerInfo *_Myend;
};

/* 4194 */
struct __cppobj std::_Ranit<ServerTable::ServerInfo,int,ServerTable::ServerInfo const *,ServerTable::ServerInfo const &> : std::iterator<std::random_access_iterator_tag,ServerTable::ServerInfo,int,ServerTable::ServerInfo const *,ServerTable::ServerInfo const &>
{
};

/* 4195 */
struct __cppobj std::vector<ServerTable::ServerInfo,std::allocator<ServerTable::ServerInfo> >::const_iterator : std::_Ranit<ServerTable::ServerInfo,int,ServerTable::ServerInfo const *,ServerTable::ServerInfo const &>
{
  ServerTable::ServerInfo *_Myptr;
};

/* 4196 */
struct __cppobj std::vector<ServerTable::ServerInfo,std::allocator<ServerTable::ServerInfo> >::iterator : std::vector<ServerTable::ServerInfo,std::allocator<ServerTable::ServerInfo> >::const_iterator
{
};

/* 4197 */
struct __cppobj std::allocator<ServerTable::ServerInfo>::rebind<ServerTable::ServerInfo>
{
};

/* 4198 */
struct __cppobj std::binary_function<BS_Area<BS_IVehicle> *,BS_Area<BS_IVehicle> *,bool>
{
};

/* 4199 */
struct __cppobj std::allocator<BS_IVehicle *>::rebind<BS_IVehicle *>
{
};

/* 4200 */
struct std::_Vector_val<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator,std::allocator<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator> >
{
  std::allocator<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator> _Alval;
};

/* 4201 */
struct __cppobj std::vector<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator,std::allocator<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator> > : std::_Vector_val<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator,std::allocator<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator> >
{
  std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator *_Myfirst;
  std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator *_Mylast;
  std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator *_Myend;
};

/* 4202 */
struct __cppobj std::vector<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator,std::allocator<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator> >::const_iterator : std::_Ranit<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator,int,std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator const *,std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator const &>
{
  std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator *_Myptr;
};

/* 4203 */
struct __cppobj std::vector<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator,std::allocator<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator> >::iterator : std::vector<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator,std::allocator<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator> >::const_iterator
{
};

/* 4204 */
struct __cppobj std::vector<BS_TrafficCar,std::allocator<BS_TrafficCar> >::const_iterator : std::_Ranit<BS_TrafficCar,int,BS_TrafficCar const *,BS_TrafficCar const &>
{
  BS_TrafficCar *_Myptr;
};

/* 4205 */
struct __cppobj std::vector<BS_TrafficCar,std::allocator<BS_TrafficCar> >::iterator : std::vector<BS_TrafficCar,std::allocator<BS_TrafficCar> >::const_iterator
{
};

/* 4206 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiStrCharKey,int,XiStrCharKey const *,XiStrCharKey const &>
{
};

/* 4207 */
struct __cppobj std::_Ranit<XiStrCharKey,int,XiStrCharKey const *,XiStrCharKey const &> : std::iterator<std::random_access_iterator_tag,XiStrCharKey,int,XiStrCharKey const *,XiStrCharKey const &>
{
};

/* 4208 */
struct __cppobj std::vector<XiStrCharKey,std::allocator<XiStrCharKey> >::const_iterator : std::_Ranit<XiStrCharKey,int,XiStrCharKey const *,XiStrCharKey const &>
{
  XiStrCharKey *_Myptr;
};

/* 4209 */
struct __cppobj std::vector<XiStrCharKey,std::allocator<XiStrCharKey> >::iterator : std::vector<XiStrCharKey,std::allocator<XiStrCharKey> >::const_iterator
{
};

/* 4210 */
struct __cppobj std::allocator<BS_AreaDispatch *>::rebind<BS_AreaDispatch *>
{
};

/* 4211 */
struct __cppobj std::map<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > : std::_Tree<std::_Tmap_traits<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,0> >
{
};

/* 4212 */
struct __cppobj std::allocator<XiPathIndex::Path>::rebind<XiPathIndex::Path>
{
};

/* 4213 */
struct __cppobj std::vector<XiPathIndex::Path,std::allocator<XiPathIndex::Path> > : std::_Vector_val<XiPathIndex::Path,std::allocator<XiPathIndex::Path> >
{
  XiPathIndex::Path *_Myfirst;
  XiPathIndex::Path *_Mylast;
  XiPathIndex::Path *_Myend;
};

/* 4214 */
struct __cppobj std::vector<XiPathIndex::Path,std::allocator<XiPathIndex::Path> >::const_iterator : std::_Ranit<XiPathIndex::Path,int,XiPathIndex::Path const *,XiPathIndex::Path const &>
{
  XiPathIndex::Path *_Myptr;
};

/* 4215 */
struct __cppobj std::vector<XiPathIndex::Path,std::allocator<XiPathIndex::Path> >::iterator : std::vector<XiPathIndex::Path,std::allocator<XiPathIndex::Path> >::const_iterator
{
};

/* 4216 */
struct __cppobj std::vector<XiCharacterTeamParam,std::allocator<XiCharacterTeamParam> > : std::_Vector_val<XiCharacterTeamParam,std::allocator<XiCharacterTeamParam> >
{
  XiCharacterTeamParam *_Myfirst;
  XiCharacterTeamParam *_Mylast;
  XiCharacterTeamParam *_Myend;
};

/* 4217 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiCharacterTeamParam,int,XiCharacterTeamParam const *,XiCharacterTeamParam const &>
{
};

/* 4218 */
struct __cppobj std::_Ranit<XiCharacterTeamParam,int,XiCharacterTeamParam const *,XiCharacterTeamParam const &> : std::iterator<std::random_access_iterator_tag,XiCharacterTeamParam,int,XiCharacterTeamParam const *,XiCharacterTeamParam const &>
{
};

/* 4219 */
struct __cppobj std::vector<XiCharacterTeamParam,std::allocator<XiCharacterTeamParam> >::const_iterator : std::_Ranit<XiCharacterTeamParam,int,XiCharacterTeamParam const *,XiCharacterTeamParam const &>
{
  XiCharacterTeamParam *_Myptr;
};

/* 4220 */
struct __cppobj std::vector<XiCharacterTeamParam,std::allocator<XiCharacterTeamParam> >::iterator : std::vector<XiCharacterTeamParam,std::allocator<XiCharacterTeamParam> >::const_iterator
{
};

/* 4221 */
struct __cppobj std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> > : std::_List_val<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >
{
  std::_List_nod<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4222 */
struct __cppobj std::less<BS_Area<BS_IVehicle> *> : std::binary_function<BS_Area<BS_IVehicle> *,BS_Area<BS_IVehicle> *,bool>
{
};

/* 4223 */
struct __cppobj std::allocator<XiTrafficCarInfo *>::rebind<XiTrafficCarInfo *>
{
};

/* 4224 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiTrafficCarInfo *,int,XiTrafficCarInfo * const *,XiTrafficCarInfo * const &>
{
};

/* 4225 */
struct __cppobj std::_Ranit<XiTrafficCarInfo *,int,XiTrafficCarInfo * const *,XiTrafficCarInfo * const &> : std::iterator<std::random_access_iterator_tag,XiTrafficCarInfo *,int,XiTrafficCarInfo * const *,XiTrafficCarInfo * const &>
{
};

/* 4226 */
struct __cppobj std::vector<XiTrafficCarInfo *,std::allocator<XiTrafficCarInfo *> >::const_iterator : std::_Ranit<XiTrafficCarInfo *,int,XiTrafficCarInfo * const *,XiTrafficCarInfo * const &>
{
  XiTrafficCarInfo **_Myptr;
};

/* 4227 */
struct __cppobj std::vector<XiTrafficCarInfo *,std::allocator<XiTrafficCarInfo *> >::iterator : std::vector<XiTrafficCarInfo *,std::allocator<XiTrafficCarInfo *> >::const_iterator
{
};

/* 4228 */
struct stdext::hash_compare<BS_Area<BS_IVehicle> *,std::less<BS_Area<BS_IVehicle> *> >
{
  std::less<BS_Area<BS_IVehicle> *> comp;
};

/* 4229 */
struct stdext::_Hset_traits<BS_Area<BS_IVehicle> *,stdext::hash_compare<BS_Area<BS_IVehicle> *,std::less<BS_Area<BS_IVehicle> *> >,std::allocator<BS_Area<BS_IVehicle> *>,0>
{
  stdext::hash_compare<BS_Area<BS_IVehicle> *,std::less<BS_Area<BS_IVehicle> *> > comp;
};

/* 4230 */
struct __cppobj stdext::_Hash<stdext::_Hset_traits<BS_Area<BS_IVehicle> *,stdext::hash_compare<BS_Area<BS_IVehicle> *,std::less<BS_Area<BS_IVehicle> *> >,std::allocator<BS_Area<BS_IVehicle> *>,0> > : stdext::_Hset_traits<BS_Area<BS_IVehicle> *,stdext::hash_compare<BS_Area<BS_IVehicle> *,std::less<BS_Area<BS_IVehicle> *> >,std::allocator<BS_Area<BS_IVehicle> *>,0>
{
  std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> > _List;
  std::vector<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator,std::allocator<std::list<BS_Area<BS_IVehicle> *,std::allocator<BS_Area<BS_IVehicle> *> >::iterator> > _Vec;
  unsigned int _Mask;
  unsigned int _Maxidx;
};

/* 4231 */
struct __cppobj stdext::hash_set<BS_Area<BS_IVehicle> *,stdext::hash_compare<BS_Area<BS_IVehicle> *,std::less<BS_Area<BS_IVehicle> *> >,std::allocator<BS_Area<BS_IVehicle> *> > : stdext::_Hash<stdext::_Hset_traits<BS_Area<BS_IVehicle> *,stdext::hash_compare<BS_Area<BS_IVehicle> *,std::less<BS_Area<BS_IVehicle> *> >,std::allocator<BS_Area<BS_IVehicle> *>,0> >
{
};

/* 4232 */
struct BS_Area<BS_IVehicle>::ObserverCounter
{
  unsigned int *nCounter;
};

/* 4234 */
struct AtomicPoolBase<BS_Area<BS_IVehicle>::FinalHandler,32,16>
{
  BS_Area<BS_IVehicle>::FinalHandler *pNext;
};

/* 4233 */
struct __cppobj BS_Area<BS_IVehicle>::FinalHandler : AtomicPoolBase<BS_Area<BS_IVehicle>::FinalHandler,32,16>
{
  int m_nRef;
  HashedVector<BS_IVehicle *,4,16> *m_pFlushQueue;
};

/* 4235 */
struct BS_Area<BS_IVehicle>::FreeTrafficMove
{
  int m_nNow;
  BS_Area<BS_IVehicle>::FinalHandler *m_pFinalHandler;
  BS_TrafficCar *m_pTrafficCar;
};

/* 4236 */
struct BS_Area<BS_IVehicle>::TrafficMove
{
  int m_nNow;
  BS_Area<BS_IVehicle>::FinalHandler *m_pFinalHandler;
  BS_TrafficCar *m_pTrafficCar;
};

/* 4237 */
struct BS_Area<BS_IVehicle>::SendToObserver
{
  BS_Packet *m_pPacket;
};

/* 4238 */
struct __cppobj BS_Vehicle : BS_IVehicle
{
  BS_Vehicle *pNext;
};

/* 4239 */
struct XiOpCounter
{
  int MsgCounter[2048];
  int OperCounter[2048];
  int QryCounter[2048];
  int Counter[6];
};

/* 4240 */
struct XiCounterMgr
{
  XiOpCounter m_cur;
  XiOpCounter m_base;
  XiOpCounter m_timebase;
  int m_baseTick;
};

/* 4241 */
struct __cppobj CastEndHandler : BS_AreaDispatch::FlushCastHandler
{
  int m_nRef;
  stdext::hash_set<BS_Area<BS_IVehicle> *,stdext::hash_compare<BS_Area<BS_IVehicle> *,std::less<BS_Area<BS_IVehicle> *> >,std::allocator<BS_Area<BS_IVehicle> *> > m_areaSet;
};

/* 4242 */
struct __cppobj BS_DelCharMgr : std::vector<XiCharacterTeamParam,std::allocator<XiCharacterTeamParam> >
{
  BS_CriticalSection m_cs;
  int m_LastSendTick;
};

/* 4243 */
struct GatherAllMove
{
  int m_nCount;
  int m_Now;
  BS_AreaDispatch *m_pDispatch;
};

/* 4251 */
union $E174D75DAC99A4BB5B9AA7615C057AE8
{
  XiTrafficControl::VECPATH *mpElement;
  XiTrafficControl::VECPATH *pE;
};

/* 4244 */
struct XiTArray<XiTrafficControl::VECPATH>
{
  XiTArray<XiTrafficControl::VECPATH>Vtbl *vfptr;
  $E174D75DAC99A4BB5B9AA7615C057AE8 ___u1;
  $D42BC336137A0C376F07430FF89A2908 ___u2;
  int m_iArraySize;
  AGbool m_bStatic;
  int m_iMemIncSize;
  int m_nRealloc;
  int m_nMaxRealloc;
};

/* 4245 */
struct XiTArray<XiTrafficControl::VECPATH>Vtbl
{
  void *(__thiscall *__vecDelDtor)(XiTArray<XiTrafficControl::VECPATH> *this, unsigned int);
};

/* 4249 */
union $45ED9CA49B10CAFF8805C0DD64EC87C8
{
  XiTrafficControl::PATH4CULL *mpElement;
  XiTrafficControl::PATH4CULL *pE;
};

/* 4246 */
struct XiTArray<XiTrafficControl::PATH4CULL>
{
  XiTArray<XiTrafficControl::PATH4CULL>Vtbl *vfptr;
  $45ED9CA49B10CAFF8805C0DD64EC87C8 ___u1;
  $D42BC336137A0C376F07430FF89A2908 ___u2;
  int m_iArraySize;
  AGbool m_bStatic;
  int m_iMemIncSize;
  int m_nRealloc;
  int m_nMaxRealloc;
};

/* 4250 */
struct XiTrafficControl::VECPATH
{
  int nPath;
  XiTArray<XiTrafficControl::PATH4CULL> vecPath;
};

/* 4247 */
struct XiTArray<XiTrafficControl::PATH4CULL>Vtbl
{
  void *(__thiscall *__vecDelDtor)(XiTArray<XiTrafficControl::PATH4CULL> *this, unsigned int);
};

/* 4248 */
struct XiTrafficControl::PATH4CULL
{
  float fstartTime;
  float fendTime;
};

/* 4252 */
struct XiPathIndex
{
  std::vector<XiPathIndex::Path,std::allocator<XiPathIndex::Path> > m_pathList;
};

/* 4253 */
struct __cppobj BS_DisconnectingOverlapped : BS_Overlapped
{
  BS_Session *m_pSession;
  unsigned int m_Socket;
};

/* 4254 */
struct XiTrafficControl::FIELD
{
  int x;
  int y;
  XiTArray<XiTrafficControl::VECPATH> vec2Path;
};

/* 4255 */
struct XiOpTimer::Monitor
{
  _RTL_CRITICAL_SECTION m_cs;
};

/* 4256 */
struct XiOpTimer
{
  XiOpTimer::Monitor m_monitor;
  float fMsgMaxTime;
  long double dMsgTime;
};

/* 4257 */
struct XiTimerMgr
{
  XiOpTimer m_timer[4096];
  XiOpTimer m_opertimer[4096];
  XiOpTimer m_qryTimer[4096];
  _LARGE_INTEGER m_fq;
};

/* 4258 */
struct AOI::NodeLock<BS_IVehicle *>
{
  BS_IVehicle *node;
};

/* 4259 */
struct HashedVector<BS_AreaDispatch *,4,16>::Lock
{
  HashedVector<BS_AreaDispatch *,4,16>::Monitor *m_pMonitor;
};

/* 4260 */
struct BS_AreaDispatch::Obs::SendToObserver
{
  BS_Packet *m_pPacket;
};

/* 4261 */
struct __cppobj BS_AreaDispatch::Obs::EndObserve
{
};

/* 4262 */
struct XiOpTimer::Locker
{
  XiOpTimer::Monitor *m_monitor;
};

/* 4263 */
struct ServerTable
{
  BS_CriticalSection m_lock;
  std::vector<ServerTable::ServerInfo,std::allocator<ServerTable::ServerInfo> > m_servers;
  BS_CriticalSection m_msgLock;
  std::map<int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > m_serverMsg;
};

/* 4264 */
struct __cppobj BS_AuthDispatch : BS_MultiDispatch
{
};

/* 4265 */
struct ServerTable::ServerInfo::Is
{
  unsigned int ServerId;
};

/* 4266 */
struct __cppobj DoFlushMoveMessage
{
};

/* 4267 */
struct __declspec(align(8)) XiOpTimeBlock
{
  _LARGE_INTEGER m_start;
  XiOpTimer *m_timer;
};

/* 4268 */
struct __cppobj ToWCoutStreamBuf : std::basic_streambuf<char,std::char_traits<char> >
{
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > m_Buffer;
};

/* 4269 */
struct BS_CoutToWCout
{
  ToWCoutStreamBuf *m_pStreamBuf;
  std::basic_streambuf<char,std::char_traits<char> > *m_pOldStreamBuf;
};

/* 4270 */
struct __cppobj std::basic_ostream<char,std::char_traits<unsigned short> >
{
  _BYTE gap0[56];
};

/* 4271 */
struct __cppobj __declspec(align(4)) std::basic_ios<char,std::char_traits<unsigned short> > : std::ios_base
{
  struct std::basic_streambuf<char,std::char_traits<unsigned short> > *_Mystrbuf;
  std::basic_ostream<char,std::char_traits<unsigned short> > *_Tiestr;
  char _Fillch;
};

/* 4272 */
struct __cppobj BS_UDPBinder : BS_SessionContainer
{
};

/* 4273 */
struct __cppobj BS_SingletonHeap<BS_Script,5>
{
};

/* 4274 */
struct __cppobj BS_Script : BS_SingletonHeap<BS_Script,5>
{
};

/* 4275 */
struct LocalMonitor
{
  _RTL_CRITICAL_SECTION m_cs;
};

/* 4276 */
struct LocalLocker
{
  LocalMonitor *m_monitor;
};

/* 4277 */
struct TRAFFICRATE_INFO
{
  unsigned int dwID;
  int nRate;
};

/* 4278 */
struct XiTrafficCarRateListContainer
{
  XiTrafficCarRateListContainerVtbl *vfptr;
};

/* 4279 */
struct XiTrafficCarRateListContainerVtbl
{
  void (__thiscall *Resize)(XiTrafficCarRateListContainer *this, int);
  void (__thiscall *Add)(XiTrafficCarRateListContainer *this, TRAFFICRATE_INFO *);
};

/* 4280 */
struct std::bitset<32>
{
  unsigned int _Array[1];
};

/* 4281 */
struct __cppobj __declspec(align(4)) std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > : std::basic_streambuf<char,std::char_traits<char> >
{
  char *_Seekhigh;
  int _Mystate;
  std::allocator<char> _Al;
};

/* 4282 */
struct __declspec(align(4)) apDebugSink
{
  apDebugSinkVtbl *vfptr;
  bool enableHeader_;
};

/* 4283 */
union $62A8FD97559F9844D98D1E1360A7A369
{
  void (__thiscall *write)(apDebugSink *this, int);
  void (__thiscall *write)(apDebugSink *this, std::basic_string<char,std::char_traits<char>,std::allocator<char> > *);
};

/* 4284 */
struct apDebugSinkVtbl
{
  _BYTE gap0[4];
  $62A8FD97559F9844D98D1E1360A7A369 ___u0;
  void (__thiscall *flush)(apDebugSink *this);
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > *(__thiscall *header)(apDebugSink *this, std::basic_string<char,std::char_traits<char>,std::allocator<char> > *result);
};

/* 4285 */
struct __cppobj apDebugStringBuf<char,std::char_traits<char>,std::allocator<char> > : std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
{
  apDebugSink *sink_;
};

/* 4286 */
struct __cppobj LgLock
{
};

/* 4287 */
struct apDebug
{
  std::bitset<32> debug_;
};

/* 4288 */
struct __cppobj apDebugSinkNull : apDebugSink
{
};

/* 4289 */
struct BS_RoomLocker
{
  BS_SmartPtr<BS_Room> m_pLockedRoom;
};

/* 4290 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiStrTradeInfo *,int,XiStrTradeInfo * const *,XiStrTradeInfo * const &>
{
};

/* 4291 */
struct __cppobj std::_Ranit<XiStrTradeInfo *,int,XiStrTradeInfo * const *,XiStrTradeInfo * const &> : std::iterator<std::random_access_iterator_tag,XiStrTradeInfo *,int,XiStrTradeInfo * const *,XiStrTradeInfo * const &>
{
};

/* 4292 */
struct __cppobj std::vector<XiStrTradeInfo *,std::allocator<XiStrTradeInfo *> >::const_iterator : std::_Ranit<XiStrTradeInfo *,int,XiStrTradeInfo * const *,XiStrTradeInfo * const &>
{
  XiStrTradeInfo **_Myptr;
};

/* 4293 */
struct __cppobj std::vector<XiStrTradeInfo *,std::allocator<XiStrTradeInfo *> >::iterator : std::vector<XiStrTradeInfo *,std::allocator<XiStrTradeInfo *> >::const_iterator
{
};

/* 4294 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_Room *,std::allocator<BS_Room *> >::_Node>
{
};

/* 4295 */
struct __cppobj std::allocator<std::_List_nod<BS_Room *,std::allocator<BS_Room *> >::_Node> : std::_Allocator_base<std::_List_nod<BS_Room *,std::allocator<BS_Room *> >::_Node>
{
};

/* 4296 */
struct std::_List_nod<BS_Room *,std::allocator<BS_Room *> >
{
  std::allocator<std::_List_nod<BS_Room *,std::allocator<BS_Room *> >::_Node> _Alnod;
};

/* 4297 */
struct std::_List_nod<BS_Room *,std::allocator<BS_Room *> >::_Node
{
  std::_List_nod<BS_Room *,std::allocator<BS_Room *> >::_Node *_Next;
  std::_List_nod<BS_Room *,std::allocator<BS_Room *> >::_Node *_Prev;
  BS_Room *_Myval;
};

/* 4298 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_Room *,std::allocator<BS_Room *> >::_Node *>
{
};

/* 4299 */
struct __cppobj std::allocator<std::_List_nod<BS_Room *,std::allocator<BS_Room *> >::_Node *> : std::_Allocator_base<std::_List_nod<BS_Room *,std::allocator<BS_Room *> >::_Node *>
{
};

/* 4300 */
struct __cppobj std::_List_ptr<BS_Room *,std::allocator<BS_Room *> > : std::_List_nod<BS_Room *,std::allocator<BS_Room *> >
{
  std::allocator<std::_List_nod<BS_Room *,std::allocator<BS_Room *> >::_Node *> _Alptr;
};

/* 4301 */
struct __cppobj std::_Allocator_base<BS_Room *>
{
};

/* 4302 */
struct __cppobj std::allocator<BS_Room *> : std::_Allocator_base<BS_Room *>
{
};

/* 4303 */
struct std::pair<unsigned short,BS_GameDispatch *>
{
  unsigned __int16 first;
  BS_GameDispatch *second;
};

/* 4304 */
struct std::pair<unsigned short const *,BS_ChatRoom *>
{
  const wchar_t *first;
  BS_ChatRoom *second;
};

/* 4305 */
struct std::pair<unsigned short const *,BS_GameDispatch *>
{
  const wchar_t *first;
  BS_GameDispatch *second;
};

/* 4306 */
struct __cppobj std::_List_val<BS_Room *,std::allocator<BS_Room *> > : std::_List_ptr<BS_Room *,std::allocator<BS_Room *> >
{
  std::allocator<BS_Room *> _Alval;
};

/* 4307 */
struct __cppobj std::list<BS_Room *,std::allocator<BS_Room *> > : std::_List_val<BS_Room *,std::allocator<BS_Room *> >
{
  std::_List_nod<BS_Room *,std::allocator<BS_Room *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4308 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,BS_Room *,int,BS_Room * const *,BS_Room * const &>
{
};

/* 4309 */
struct __cppobj std::_Bidit<BS_Room *,int,BS_Room * const *,BS_Room * const &> : std::iterator<std::bidirectional_iterator_tag,BS_Room *,int,BS_Room * const *,BS_Room * const &>
{
};

/* 4310 */
struct __cppobj std::list<BS_Room *,std::allocator<BS_Room *> >::const_iterator : std::_Bidit<BS_Room *,int,BS_Room * const *,BS_Room * const &>
{
  std::_List_nod<BS_Room *,std::allocator<BS_Room *> >::_Node *_Ptr;
};

/* 4311 */
struct __cppobj std::list<BS_Room *,std::allocator<BS_Room *> >::iterator : std::list<BS_Room *,std::allocator<BS_Room *> >::const_iterator
{
};

/* 4312 */
struct __cppobj std::allocator<XiStrTradeInfo *>::rebind<XiStrTradeInfo *>
{
};

/* 4313 */
struct __cppobj std::allocator<BS_Room *>::rebind<std::_List_nod<BS_Room *,std::allocator<BS_Room *> >::_Node>
{
};

/* 4314 */
struct __cppobj std::allocator<BS_Room *>::rebind<std::_List_nod<BS_Room *,std::allocator<BS_Room *> >::_Node *>
{
};

/* 4315 */
struct __cppobj std::allocator<BS_Room *>::rebind<BS_Room *>
{
};

/* 4316 */
struct __cppobj BS_RoomPoolImpl<BS_Room> : BS_RoomPool
{
  int m_size;
  BS_Room *m_room;
  std::list<BS_Room *,std::allocator<BS_Room *> > m_list;
  BS_CriticalSection m_lock;
};

/* 4317 */
struct EqTradeRoom
{
  unsigned int m_Serial;
};

/* 4318 */
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_Channel *>
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > first;
  BS_Channel *second;
};

/* 4319 */
struct BS_StrUtils::BS_FmtStr<64>
{
  wchar_t *m_pBuffer;
  int m_BufferLen;
};

/* 4320 */
struct __cppobj BS_ChannelGroup : BS_LuaBind
{
};

/* 4321 */
struct __cppobj std::numpunct<unsigned short> : std::locale::facet
{
  const char *_Grouping;
  unsigned __int16 _Dp;
  unsigned __int16 _Kseparator;
  const unsigned __int16 *_Falsename;
  const unsigned __int16 *_Truename;
};

/* 4322 */
struct LockMessageBuffer<BS_PktGetDateTimeAck>
{
  BS_PktGetDateTimeAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4323 */
struct __cppobj std::_Allocator_base<std::_List_nod<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> >::_Node>
{
};

/* 4324 */
struct __cppobj std::allocator<std::_List_nod<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> >::_Node> : std::_Allocator_base<std::_List_nod<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> >::_Node>
{
};

/* 4325 */
struct std::_List_nod<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> >
{
  std::allocator<std::_List_nod<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> >::_Node> _Alnod;
};

/* 4326 */
struct __cppobj std::_Allocator_base<std::_List_nod<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> >::_Node *>
{
};

/* 4327 */
struct __cppobj std::allocator<std::_List_nod<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> >::_Node *> : std::_Allocator_base<std::_List_nod<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> >::_Node *>
{
};

/* 4328 */
struct __cppobj std::_List_ptr<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> > : std::_List_nod<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> >
{
  std::allocator<std::_List_nod<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> >::_Node *> _Alptr;
};

/* 4329 */
struct __cppobj std::_Allocator_base<XiRankArbeitPlayer *>
{
};

/* 4330 */
struct __cppobj std::allocator<XiRankArbeitPlayer *> : std::_Allocator_base<XiRankArbeitPlayer *>
{
};

/* 4331 */
struct __cppobj std::_List_val<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> > : std::_List_ptr<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> >
{
  std::allocator<XiRankArbeitPlayer *> _Alval;
};

/* 4332 */
struct std::_List_nod<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> >::_Node
{
  std::_List_nod<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> >::_Node *_Next;
  std::_List_nod<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> >::_Node *_Prev;
  XiRankArbeitPlayer *_Myval;
};

/* 4333 */
struct XiRankPlayer<unsigned long,__int64>
{
  XiRankPlayer<unsigned long,__int64>Vtbl *vfptr;
  __declspec(align(8)) unsigned int m_Point;
  __int64 m_ID;
};

/* 4337 */
struct __cppobj XiRankArbeitPlayer : XiRankPlayer<unsigned long,__int64>
{
  XiStrCharName CharName;
  XiStrTeamName TeamName;
  unsigned int TableIdx;
};

/* 4334 */
union $4476AB4F1DC4D31811435AFA04D6B3EF
{
  bool (__thiscall *IsHigherPoint)(XiRankPlayer<unsigned long,__int64> *this, unsigned int);
  bool (__thiscall *IsHigherPoint)(XiRankPlayer<unsigned long,__int64> *this, XiRankPlayer<unsigned long,__int64> *);
};

/* 4335 */
union $4FF15C279A7E5DD02CE48F88418ADF30
{
  bool (__thiscall *IsSameID)(XiRankPlayer<unsigned long,__int64> *this, __int64);
  bool (__thiscall *IsSameID)(XiRankPlayer<unsigned long,__int64> *this, XiRankPlayer<unsigned long,__int64> *);
};

/* 4336 */
struct XiRankPlayer<unsigned long,__int64>Vtbl
{
  _BYTE gap0[4];
  $4476AB4F1DC4D31811435AFA04D6B3EF ___u0;
  _BYTE gap8[4];
  $4FF15C279A7E5DD02CE48F88418ADF30 ___u1;
};

/* 4338 */
struct __cppobj std::list<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> > : std::_List_val<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> >
{
  std::_List_nod<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4339 */
struct XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64>
{
  std::list<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> > m_RankList;
  unsigned int m_Max;
  unsigned int m_Min;
  unsigned int m_Average;
  int m_Limit;
  BS_CriticalSection m_Lock;
};

/* 4340 */
struct LockedRankCategory<XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> >
{
  XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *m_pCategory;
};

/* 4341 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,XiRankArbeitPlayer *,int,XiRankArbeitPlayer * const *,XiRankArbeitPlayer * const &>
{
};

/* 4342 */
struct __cppobj std::_Bidit<XiRankArbeitPlayer *,int,XiRankArbeitPlayer * const *,XiRankArbeitPlayer * const &> : std::iterator<std::bidirectional_iterator_tag,XiRankArbeitPlayer *,int,XiRankArbeitPlayer * const *,XiRankArbeitPlayer * const &>
{
};

/* 4343 */
struct __cppobj std::list<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> >::const_iterator : std::_Bidit<XiRankArbeitPlayer *,int,XiRankArbeitPlayer * const *,XiRankArbeitPlayer * const &>
{
  std::_List_nod<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> >::_Node *_Ptr;
};

/* 4344 */
struct __cppobj std::list<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> >::iterator : std::list<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> >::const_iterator
{
};

/* 4345 */
struct LockMessageBuffer<BS_PktPlayerInfoRes>
{
  BS_PktPlayerInfoRes *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4346 */
struct LockMessageBuffer<BS_PktStickerInfoRes>
{
  BS_PktStickerInfoRes *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4347 */
struct EventItemSelect
{
  int nIndex;
  XiStrItem *pStrItem;
  float fRate;
};

/* 4348 */
struct __cppobj std::_Allocator_base<EventItemSelect>
{
};

/* 4349 */
struct __cppobj std::allocator<EventItemSelect> : std::_Allocator_base<EventItemSelect>
{
};

/* 4350 */
struct std::_Vector_val<EventItemSelect,std::allocator<EventItemSelect> >
{
  std::allocator<EventItemSelect> _Alval;
};

/* 4351 */
struct __cppobj std::vector<EventItemSelect,std::allocator<EventItemSelect> > : std::_Vector_val<EventItemSelect,std::allocator<EventItemSelect> >
{
  EventItemSelect *_Myfirst;
  EventItemSelect *_Mylast;
  EventItemSelect *_Myend;
};

/* 4352 */
struct __cppobj std::iterator<std::random_access_iterator_tag,EventItemSelect,int,EventItemSelect const *,EventItemSelect const &>
{
};

/* 4353 */
struct __cppobj std::_Ranit<EventItemSelect,int,EventItemSelect const *,EventItemSelect const &> : std::iterator<std::random_access_iterator_tag,EventItemSelect,int,EventItemSelect const *,EventItemSelect const &>
{
};

/* 4354 */
struct __cppobj std::vector<EventItemSelect,std::allocator<EventItemSelect> >::const_iterator : std::_Ranit<EventItemSelect,int,EventItemSelect const *,EventItemSelect const &>
{
  EventItemSelect *_Myptr;
};

/* 4355 */
struct __cppobj std::vector<EventItemSelect,std::allocator<EventItemSelect> >::iterator : std::vector<EventItemSelect,std::allocator<EventItemSelect> >::const_iterator
{
};

/* 4356 */
struct __cppobj std::_Allocator_base<XiCsSTItem const *>
{
};

/* 4357 */
struct __cppobj std::allocator<XiCsSTItem const *> : std::_Allocator_base<XiCsSTItem const *>
{
};

/* 4358 */
struct std::_Vector_val<XiCsSTItem const *,std::allocator<XiCsSTItem const *> >
{
  std::allocator<XiCsSTItem const *> _Alval;
};

/* 4359 */
struct __cppobj std::vector<XiCsSTItem const *,std::allocator<XiCsSTItem const *> > : std::_Vector_val<XiCsSTItem const *,std::allocator<XiCsSTItem const *> >
{
  XiCsSTItem **_Myfirst;
  XiCsSTItem **_Mylast;
  XiCsSTItem **_Myend;
};

/* 4360 */
struct StickerListSender
{
  std::vector<XiCsSTItem const *,std::allocator<XiCsSTItem const *> > vitem;
  int PktIdx;
  BS_GameDispatch *m_pGameDispatch;
};

/* 4361 */
struct LockMessageBuffer<BS_PktMyAuctionCarListAck>
{
  BS_PktMyAuctionCarListAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4362 */
struct LockMessageBuffer<BS_PktMyAuctionListAck>
{
  BS_PktMyAuctionListAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4363 */
struct __cppobj std::_Allocator_base<XiCsItem const *>
{
};

/* 4364 */
struct __cppobj std::allocator<XiCsItem const *> : std::_Allocator_base<XiCsItem const *>
{
};

/* 4365 */
struct std::_Vector_val<XiCsItem const *,std::allocator<XiCsItem const *> >
{
  std::allocator<XiCsItem const *> _Alval;
};

/* 4366 */
struct __cppobj std::vector<XiCsItem const *,std::allocator<XiCsItem const *> > : std::_Vector_val<XiCsItem const *,std::allocator<XiCsItem const *> >
{
  XiCsItem **_Myfirst;
  XiCsItem **_Mylast;
  XiCsItem **_Myend;
};

/* 4367 */
struct ItemListSender
{
  std::vector<XiStrIData,std::allocator<XiStrIData> > vitemdata;
  std::vector<XiCsItem const *,std::allocator<XiCsItem const *> > vitem;
  int PktIdx;
  BS_GameDispatch *m_pGameDispatch;
};

/* 4368 */
struct LockMessageBuffer<BS_PktWhisper>
{
  BS_PktWhisper *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4369 */
struct LockMessageBuffer<BS_PktExitClient>
{
  BS_PktExitClient *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4370 */
struct LockMessageBuffer<BS_PktCheckInGameAck>
{
  BS_PktCheckInGameAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4371 */
struct LockMessageBuffer<BS_PktDetachStickerAck>
{
  BS_PktDetachStickerAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4372 */
struct LockMessageBuffer<BS_PktNotifySelledSticker>
{
  BS_PktNotifySelledSticker *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4373 */
struct LockMessageBuffer<BS_PktAttachStickerAck>
{
  BS_PktAttachStickerAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4374 */
struct LockMessageBuffer<BS_PktNotifyAreaLoc>
{
  BS_PktNotifyAreaLoc *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4375 */
struct LockMessageBuffer<BS_PktRecommendFriendAck>
{
  BS_PktRecommendFriendAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4376 */
struct __cppobj std::_Allocator_base<std::_List_nod<BillingConn *,std::allocator<BillingConn *> >::_Node>
{
};

/* 4377 */
struct __cppobj std::allocator<std::_List_nod<BillingConn *,std::allocator<BillingConn *> >::_Node> : std::_Allocator_base<std::_List_nod<BillingConn *,std::allocator<BillingConn *> >::_Node>
{
};

/* 4378 */
struct std::_List_nod<BillingConn *,std::allocator<BillingConn *> >
{
  std::allocator<std::_List_nod<BillingConn *,std::allocator<BillingConn *> >::_Node> _Alnod;
};

/* 4379 */
struct __cppobj std::_Allocator_base<std::_List_nod<BillingConn *,std::allocator<BillingConn *> >::_Node *>
{
};

/* 4380 */
struct __cppobj std::allocator<std::_List_nod<BillingConn *,std::allocator<BillingConn *> >::_Node *> : std::_Allocator_base<std::_List_nod<BillingConn *,std::allocator<BillingConn *> >::_Node *>
{
};

/* 4381 */
struct __cppobj std::_List_ptr<BillingConn *,std::allocator<BillingConn *> > : std::_List_nod<BillingConn *,std::allocator<BillingConn *> >
{
  std::allocator<std::_List_nod<BillingConn *,std::allocator<BillingConn *> >::_Node *> _Alptr;
};

/* 4382 */
struct __cppobj std::_Allocator_base<BillingConn *>
{
};

/* 4383 */
struct __cppobj std::allocator<BillingConn *> : std::_Allocator_base<BillingConn *>
{
};

/* 4384 */
struct __cppobj std::_List_val<BillingConn *,std::allocator<BillingConn *> > : std::_List_ptr<BillingConn *,std::allocator<BillingConn *> >
{
  std::allocator<BillingConn *> _Alval;
};

/* 4385 */
struct std::_List_nod<BillingConn *,std::allocator<BillingConn *> >::_Node
{
  std::_List_nod<BillingConn *,std::allocator<BillingConn *> >::_Node *_Next;
  std::_List_nod<BillingConn *,std::allocator<BillingConn *> >::_Node *_Prev;
  BillingConn *_Myval;
};

/* 4386 */
struct __declspec(align(4)) BillingConn
{
  char RecvBuffer[1024];
  sockaddr_in Addr;
  unsigned int Socket;
  bool bConn;
};

/* 4387 */
struct __cppobj std::list<BillingConn *,std::allocator<BillingConn *> > : std::_List_val<BillingConn *,std::allocator<BillingConn *> >
{
  std::_List_nod<BillingConn *,std::allocator<BillingConn *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4388 */
struct BillingConnPool
{
  std::list<BillingConn *,std::allocator<BillingConn *> > m_BillingConnList;
};

/* 4389 */
struct BillingConnObj
{
  BillingConnPool *m_Pool;
  BillingConn *m_pConn;
};

/* 4390 */
struct __cppobj std::_Allocator_base<std::_List_nod<BillingConn_USA *,std::allocator<BillingConn_USA *> >::_Node>
{
};

/* 4391 */
struct __cppobj std::allocator<std::_List_nod<BillingConn_USA *,std::allocator<BillingConn_USA *> >::_Node> : std::_Allocator_base<std::_List_nod<BillingConn_USA *,std::allocator<BillingConn_USA *> >::_Node>
{
};

/* 4392 */
struct std::_List_nod<BillingConn_USA *,std::allocator<BillingConn_USA *> >
{
  std::allocator<std::_List_nod<BillingConn_USA *,std::allocator<BillingConn_USA *> >::_Node> _Alnod;
};

/* 4393 */
struct __cppobj std::_Allocator_base<std::_List_nod<BillingConn_USA *,std::allocator<BillingConn_USA *> >::_Node *>
{
};

/* 4394 */
struct __cppobj std::allocator<std::_List_nod<BillingConn_USA *,std::allocator<BillingConn_USA *> >::_Node *> : std::_Allocator_base<std::_List_nod<BillingConn_USA *,std::allocator<BillingConn_USA *> >::_Node *>
{
};

/* 4395 */
struct __cppobj std::_List_ptr<BillingConn_USA *,std::allocator<BillingConn_USA *> > : std::_List_nod<BillingConn_USA *,std::allocator<BillingConn_USA *> >
{
  std::allocator<std::_List_nod<BillingConn_USA *,std::allocator<BillingConn_USA *> >::_Node *> _Alptr;
};

/* 4396 */
struct __cppobj std::_Allocator_base<BillingConn_USA *>
{
};

/* 4397 */
struct __cppobj std::allocator<BillingConn_USA *> : std::_Allocator_base<BillingConn_USA *>
{
};

/* 4398 */
struct __cppobj std::_List_val<BillingConn_USA *,std::allocator<BillingConn_USA *> > : std::_List_ptr<BillingConn_USA *,std::allocator<BillingConn_USA *> >
{
  std::allocator<BillingConn_USA *> _Alval;
};

/* 4399 */
struct std::_List_nod<BillingConn_USA *,std::allocator<BillingConn_USA *> >::_Node
{
  std::_List_nod<BillingConn_USA *,std::allocator<BillingConn_USA *> >::_Node *_Next;
  std::_List_nod<BillingConn_USA *,std::allocator<BillingConn_USA *> >::_Node *_Prev;
  BillingConn_USA *_Myval;
};

/* 4402 */
struct __declspec(align(4)) BillingConn_USA
{
  NHNCoin *NHNCoinPtr;
  bool bConn;
};

/* 4400 */
struct NHNCoin
{
  NHNCoinVtbl *vfptr;
  char _ip[32];
  unsigned __int16 _port;
  unsigned int _timeout;
};

/* 4401 */
struct NHNCoinVtbl
{
  void *(__thiscall *__vecDelDtor)(NHNCoin *this, unsigned int);
  NHNCoin::RET_CODE (__thiscall *queryCoin)(NHNCoin *this, const char *, const char *, int *, char *, int *, int *, int *, int *, int *);
  NHNCoin::RET_CODE (__thiscall *useCoin)(NHNCoin *this, const char *, const char *, const char *, const char *, const char *, int, const char *, const char *, char *, int *, int *, char *);
  NHNCoin::RET_CODE (__thiscall *useCoinGift)(NHNCoin *this, const char *, const char *, const char *, const char *, const char *, int, const char *, const char *, char *, int *, int *, char *);
  NHNCoin::RET_CODE (__thiscall *cancelUse)(NHNCoin *this, const char *, const char *, const char *, const char *, const char *, int, const char *, const char *, char *, int *, int *, char *);
};

/* 4403 */
struct __cppobj std::list<BillingConn_USA *,std::allocator<BillingConn_USA *> > : std::_List_val<BillingConn_USA *,std::allocator<BillingConn_USA *> >
{
  std::_List_nod<BillingConn_USA *,std::allocator<BillingConn_USA *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4404 */
struct BillingConnPool_USA
{
  std::list<BillingConn_USA *,std::allocator<BillingConn_USA *> > m_BillingConnList;
};

/* 4405 */
struct BillingConnObj_USA
{
  BillingConnPool_USA *m_Pool;
  BillingConn_USA *m_pConn;
};

/* 4406 */
struct LockMessageBuffer<BS_PktRecommendEvent>
{
  BS_PktRecommendEvent *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4407 */
struct LockMessageBuffer<BS_PktUpdateFriend>
{
  BS_PktUpdateFriend *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4408 */
struct LockMessageBuffer<BS_PktFriendRequestAck>
{
  BS_PktFriendRequestAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4409 */
struct LockMessageBuffer<BS_PktFriendDelAck>
{
  BS_PktFriendDelAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4410 */
struct LockMessageBuffer<BS_PktFriendRequest>
{
  BS_PktFriendRequest *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4411 */
struct LockMessageBuffer<BS_PktFriendAddAck>
{
  BS_PktFriendAddAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4412 */
struct LockMessageBuffer<BS_PktBlockAddByNameAck>
{
  BS_PktBlockAddByNameAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4413 */
struct LockMessageBuffer<BS_PktFriendListAck>
{
  BS_PktFriendListAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4414 */
struct LockMessageBuffer<BS_PktDormantEvent>
{
  BS_PktDormantEvent *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4415 */
struct LockMessageBuffer<BS_PktServerConfig>
{
  BS_PktServerConfig *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4416 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiStrItemBox,int,XiStrItemBox const *,XiStrItemBox const &>
{
};

/* 4417 */
struct __cppobj std::_Ranit<XiStrItemBox,int,XiStrItemBox const *,XiStrItemBox const &> : std::iterator<std::random_access_iterator_tag,XiStrItemBox,int,XiStrItemBox const *,XiStrItemBox const &>
{
};

/* 4418 */
struct __cppobj std::vector<XiStrItemBox,std::allocator<XiStrItemBox> >::const_iterator : std::_Ranit<XiStrItemBox,int,XiStrItemBox const *,XiStrItemBox const &>
{
  XiStrItemBox *_Myptr;
};

/* 4419 */
struct __cppobj std::vector<XiStrItemBox,std::allocator<XiStrItemBox> >::iterator : std::vector<XiStrItemBox,std::allocator<XiStrItemBox> >::const_iterator
{
};

/* 4420 */
struct LockMessageBuffer<BS_PktDayEventCompleteAck>
{
  BS_PktDayEventCompleteAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4421 */
struct LockMessageBuffer<BS_PktNotifyEvent>
{
  BS_PktNotifyEvent *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4422 */
struct LockMessageBuffer<BS_PktTrafficItemEventAck>
{
  BS_PktTrafficItemEventAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4423 */
struct LockMessageBuffer<BS_PktDayEventGetItemAck>
{
  BS_PktDayEventGetItemAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4424 */
struct LockMessageBuffer<BS_PktDayMileageGetRewardAck>
{
  BS_PktDayMileageGetRewardAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4425 */
struct LockMessageBuffer<BS_PktDayMissionGetRewardAck>
{
  BS_PktDayMissionGetRewardAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4426 */
struct LockMessageBuffer<BS_PktGateListAck>
{
  BS_PktGateListAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4427 */
struct LockMessageBuffer<BS_PktChannelOwnershipListAck>
{
  BS_PktChannelOwnershipListAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4428 */
struct LockMessageBuffer<BS_PktWeather>
{
  BS_PktWeather *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4429 */
struct LockMessageBuffer<BS_PktChatMsgAck>
{
  BS_PktChatMsgAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4430 */
struct LockMessageBuffer<BS_PktLoadCharAck>
{
  BS_PktLoadCharAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4431 */
struct LockMessageBuffer<BS_PktGameSetting>
{
  BS_PktGameSetting *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4432 */
struct LockMessageBuffer<BS_PktResCouponItem>
{
  BS_PktResCouponItem *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4433 */
struct LockMessageBuffer<BS_PktReplenishItemAck>
{
  BS_PktReplenishItemAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4434 */
struct LockMessageBuffer<BS_PktDayMissionCompleteAck>
{
  BS_PktDayMissionCompleteAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4435 */
struct LockMessageBuffer<BS_PktTestPlayerQuestion>
{
  BS_PktTestPlayerQuestion *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4436 */
struct LockMessageBuffer<BS_PktComboExp>
{
  BS_PktComboExp *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4437 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiStrMessage,int,XiStrMessage const *,XiStrMessage const &>
{
};

/* 4438 */
struct __cppobj std::_Ranit<XiStrMessage,int,XiStrMessage const *,XiStrMessage const &> : std::iterator<std::random_access_iterator_tag,XiStrMessage,int,XiStrMessage const *,XiStrMessage const &>
{
};

/* 4439 */
struct __cppobj std::vector<XiStrMessage,std::allocator<XiStrMessage> >::const_iterator : std::_Ranit<XiStrMessage,int,XiStrMessage const *,XiStrMessage const &>
{
  XiStrMessage *_Myptr;
};

/* 4440 */
struct __cppobj std::vector<XiStrMessage,std::allocator<XiStrMessage> >::iterator : std::vector<XiStrMessage,std::allocator<XiStrMessage> >::const_iterator
{
};

/* 4441 */
struct LockMessageBuffer<BS_PktMailContent>
{
  BS_PktMailContent *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4442 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &>
{
};

/* 4443 */
struct __cppobj std::_Bidit<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &> : std::iterator<std::bidirectional_iterator_tag,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &>
{
};

/* 4444 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::_Node
{
  std::_Tree_nod<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::_Node *_Right;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > _Myval;
  char _Color;
  char _Isnil;
};

/* 4445 */
struct __cppobj std::_Tree<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::const_iterator : std::_Bidit<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &>
{
  std::_Tree_nod<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::_Node *_Ptr;
};

/* 4446 */
struct __cppobj std::_Tree<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::iterator : std::_Tree<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::const_iterator
{
};

/* 4447 */
struct std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0>
{
  std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > comp;
};

/* 4448 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::_Node>
{
};

/* 4449 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::_Node>
{
};

/* 4450 */
struct __cppobj std::_Tree_nod<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> > : std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0>
{
  std::allocator<std::_Tree_nod<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::_Node> _Alnod;
};

/* 4451 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::_Node *>
{
};

/* 4452 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::_Node *>
{
};

/* 4453 */
struct __cppobj std::_Tree_ptr<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> > : std::_Tree_nod<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::_Node *> _Alptr;
};

/* 4454 */
struct __cppobj std::_Tree_val<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> > : std::_Tree_ptr<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >
{
  std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > _Alval;
};

/* 4455 */
struct __cppobj std::_Tree<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> > : std::_Tree_val<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >
{
  std::_Tree_nod<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4456 */
struct __cppobj std::set<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > : std::_Tree<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >
{
};

/* 4457 */
struct __declspec(align(4)) SetContentFlag
{
  BS_GameDispatch *pGameDispatch;
  const char *flagname;
  int value;
  bool Processed;
};

/* 4458 */
struct ListContentFlag
{
  BS_GameDispatch *pGameDispatch;
  wchar_t msg[256];
};

/* 4459 */
struct LockMessageBuffer<BS_PktMoneyMessage>
{
  BS_PktMoneyMessage *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4460 */
struct LockMessageBuffer<BS_PktETCInfo>
{
  BS_PktETCInfo *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4461 */
struct LockMessageBuffer<BS_PktInstantEvent>
{
  BS_PktInstantEvent *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4462 */
struct LockMessageBuffer<BS_PktDayEventInfo>
{
  BS_PktDayEventInfo *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 4463 */
struct WebCallReq
{
  WebCallReqVtbl *vfptr;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > url;
};

/* 4464 */
union $5B35BE852499AE1302483BB84EC0745A
{
  void (__thiscall *~WebCallReq)(WebCallReq *this);
  void *(__thiscall *__vecDelDtor)(WebCallReq *this, unsigned int);
};

/* 4465 */
struct WebCallReqVtbl
{
  void (__thiscall *OnResponse)(WebCallReq *this, const char *, int);
  const char *(__thiscall *GetUrl)(WebCallReq *this);
  $5B35BE852499AE1302483BB84EC0745A ___u2;
};

/* 4466 */
struct WebCallMgr
{
  WebCallMgrVtbl *vfptr;
};

/* 4467 */
struct WebCallMgrVtbl
{
  void (__thiscall *EnqueueReq)(WebCallMgr *this, WebCallReq *);
};

/* 4468 */
struct __cppobj std::_Allocator_base<std::_List_nod<RushEvent *,std::allocator<RushEvent *> >::_Node>
{
};

/* 4469 */
struct __cppobj std::allocator<std::_List_nod<RushEvent *,std::allocator<RushEvent *> >::_Node> : std::_Allocator_base<std::_List_nod<RushEvent *,std::allocator<RushEvent *> >::_Node>
{
};

/* 4470 */
struct std::_List_nod<RushEvent *,std::allocator<RushEvent *> >
{
  std::allocator<std::_List_nod<RushEvent *,std::allocator<RushEvent *> >::_Node> _Alnod;
};

/* 4471 */
struct __cppobj std::_Allocator_base<std::_List_nod<RushEvent *,std::allocator<RushEvent *> >::_Node *>
{
};

/* 4472 */
struct __cppobj std::allocator<std::_List_nod<RushEvent *,std::allocator<RushEvent *> >::_Node *> : std::_Allocator_base<std::_List_nod<RushEvent *,std::allocator<RushEvent *> >::_Node *>
{
};

/* 4473 */
struct __cppobj std::_List_ptr<RushEvent *,std::allocator<RushEvent *> > : std::_List_nod<RushEvent *,std::allocator<RushEvent *> >
{
  std::allocator<std::_List_nod<RushEvent *,std::allocator<RushEvent *> >::_Node *> _Alptr;
};

/* 4474 */
struct __cppobj std::_Allocator_base<RushEvent *>
{
};

/* 4475 */
struct __cppobj std::allocator<RushEvent *> : std::_Allocator_base<RushEvent *>
{
};

/* 4476 */
struct __cppobj std::_List_val<RushEvent *,std::allocator<RushEvent *> > : std::_List_ptr<RushEvent *,std::allocator<RushEvent *> >
{
  std::allocator<RushEvent *> _Alval;
};

/* 4477 */
struct std::_List_nod<RushEvent *,std::allocator<RushEvent *> >::_Node
{
  std::_List_nod<RushEvent *,std::allocator<RushEvent *> >::_Node *_Next;
  std::_List_nod<RushEvent *,std::allocator<RushEvent *> >::_Node *_Prev;
  RushEvent *_Myval;
};

/* 4478 */
struct __cppobj std::list<RushEvent *,std::allocator<RushEvent *> > : std::_List_val<RushEvent *,std::allocator<RushEvent *> >
{
  std::_List_nod<RushEvent *,std::allocator<RushEvent *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4479 */
struct std::_Vector_val<RushEvent *,std::allocator<RushEvent *> >
{
  std::allocator<RushEvent *> _Alval;
};

/* 4480 */
struct __cppobj std::vector<RushEvent *,std::allocator<RushEvent *> > : std::_Vector_val<RushEvent *,std::allocator<RushEvent *> >
{
  RushEvent **_Myfirst;
  RushEvent **_Mylast;
  RushEvent **_Myend;
};

/* 4481 */
struct HashedVector<RushEvent *,16,16>::Monitor
{
  _RTL_CRITICAL_SECTION m_cs;
};

/* 4482 */
struct __cppobj HashedVector<RushEvent *,16,16>::Vector : std::vector<RushEvent *,std::allocator<RushEvent *> >
{
  HashedVector<RushEvent *,16,16>::Monitor m_monitor;
};

/* 4483 */
struct HashedVector<RushEvent *,16,16>
{
  HashedVector<RushEvent *,16,16>::Vector m_vector[16];
  int m_nCount;
};

/* 4484 */
struct __cppobj std::_Allocator_base<RushTime::BossOut>
{
};

/* 4485 */
struct __cppobj std::allocator<RushTime::BossOut> : std::_Allocator_base<RushTime::BossOut>
{
};

/* 4486 */
struct std::_Vector_val<RushTime::BossOut,std::allocator<RushTime::BossOut> >
{
  std::allocator<RushTime::BossOut> _Alval;
};

/* 4487 */
struct RushTime::BossOut
{
  int Hour;
  int HuvType;
};

/* 4488 */
struct __cppobj std::vector<RushTime::BossOut,std::allocator<RushTime::BossOut> > : std::_Vector_val<RushTime::BossOut,std::allocator<RushTime::BossOut> >
{
  RushTime::BossOut *_Myfirst;
  RushTime::BossOut *_Mylast;
  RushTime::BossOut *_Myend;
};

/* 4489 */
struct RushTime
{
  BS_Buffer *m_pBuffer;
  RushEvent *m_rushEvent[100];
  std::list<RushEvent *,std::allocator<RushEvent *> > m_pool;
  BS_CriticalSection m_lock;
  HashedVector<RushEvent *,16,16> m_activeEvent;
  int m_nextRushTime;
  int m_lastCheckTime;
  int m_curCourseId;
  int m_curHuvType;
  std::vector<RushTime::BossOut,std::allocator<RushTime::BossOut> > m_bossday[7];
};

/* 4490 */
struct RushTime::CallEndRush
{
  BS_GameDispatch *m_pDispatch;
};

/* 4491 */
struct RushTime::CallOnTick
{
  int nTick;
};

/* 4492 */
struct __cppobj RushTime::CollectIdle
{
};

/* 4493 */
struct BS_SwitchableRef<std::set<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
{
  int m_time;
  std::set<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > m_object[2];
  std::set<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *m_current;
  std::set<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *m_back;
};

/* 4494 */
struct PktOper<BS_PktSendVisualItem>
{
  BS_PacketDispatch *m_pDispatch;
  BS_PktSendVisualItem m_PktData;
  WaitBlock m_block;
};

/* 4495 */
struct PktOper<BS_PktGetMyHancoin>
{
  BS_PacketDispatch *m_pDispatch;
  BS_PktGetMyHancoin m_PktData;
  WaitBlock m_block;
};

/* 4496 */
struct __cppobj std::_Allocator_base<std::_List_nod<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> >::_Node>
{
};

/* 4497 */
struct __cppobj std::allocator<std::_List_nod<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> >::_Node> : std::_Allocator_base<std::_List_nod<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> >::_Node>
{
};

/* 4498 */
struct std::_List_nod<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> >
{
  std::allocator<std::_List_nod<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> >::_Node> _Alnod;
};

/* 4499 */
struct __cppobj std::_Allocator_base<std::_List_nod<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> >::_Node *>
{
};

/* 4500 */
struct __cppobj std::allocator<std::_List_nod<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> >::_Node *> : std::_Allocator_base<std::_List_nod<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> >::_Node *>
{
};

/* 4501 */
struct __cppobj std::_List_ptr<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> > : std::_List_nod<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> >
{
  std::allocator<std::_List_nod<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> >::_Node *> _Alptr;
};

/* 4502 */
struct __cppobj std::_Allocator_base<PktOper<BS_PktGetMyHancoin> *>
{
};

/* 4503 */
struct __cppobj std::allocator<PktOper<BS_PktGetMyHancoin> *> : std::_Allocator_base<PktOper<BS_PktGetMyHancoin> *>
{
};

/* 4504 */
struct __cppobj std::_List_val<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> > : std::_List_ptr<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> >
{
  std::allocator<PktOper<BS_PktGetMyHancoin> *> _Alval;
};

/* 4505 */
struct std::_List_nod<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> >::_Node
{
  std::_List_nod<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> >::_Node *_Next;
  std::_List_nod<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> >::_Node *_Prev;
  PktOper<BS_PktGetMyHancoin> *_Myval;
};

/* 4506 */
struct __cppobj std::list<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> > : std::_List_val<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> >
{
  std::_List_nod<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4507 */
struct PktOperList<BS_PktGetMyHancoin>
{
  BS_CriticalSection m_Operlock;
  std::list<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> > m_OperList;
};

/* 4508 */
struct PktOper<BS_PktBuyVisualItem>
{
  BS_PacketDispatch *m_pDispatch;
  BS_PktBuyVisualItem m_PktData;
  WaitBlock m_block;
};

/* 4509 */
struct XiCouponParamWithID
{
  const wchar_t *m_StrCouponParamID;
  XiCouponParam m_CouponParam;
};

/* 4510 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Node *_Right;
  std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > _Myval;
  char _Color;
  char _Isnil;
};

/* 4511 */
struct std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
{
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > first;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > second;
};

/* 4512 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Node *>
{
};

/* 4513 */
struct __cppobj std::_Allocator_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
{
};

/* 4514 */
struct std::_List_nod<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> >::_Node
{
  std::_List_nod<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> >::_Node *_Next;
  std::_List_nod<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> >::_Node *_Prev;
  PktOper<BS_PktBuyVisualItem> *_Myval;
};

/* 4515 */
struct __cppobj std::_Allocator_base<std::_List_nod<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> >::_Node *>
{
};

/* 4516 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Node>
{
};

/* 4517 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Node>
{
};

/* 4518 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,XiStrUCPatrol> _Myval;
  char _Color;
  char _Isnil;
};

/* 4519 */
struct std::pair<unsigned long const ,XiStrUCPatrol>
{
  const unsigned int first;
  XiStrUCPatrol second;
};

/* 4520 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >::_Node *>
{
};

/* 4521 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,XiCouponParamWithID> _Myval;
  char _Color;
  char _Isnil;
};

/* 4522 */
struct std::pair<unsigned long const ,XiCouponParamWithID>
{
  const unsigned int first;
  XiCouponParamWithID second;
};

/* 4523 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >::_Node>
{
};

/* 4524 */
struct __cppobj std::binary_function<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool>
{
};

/* 4525 */
struct __cppobj std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > : std::binary_function<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool>
{
};

/* 4526 */
struct std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0>
{
  std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > comp;
};

/* 4527 */
struct __cppobj std::_Allocator_base<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
{
};

/* 4528 */
struct __cppobj std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > : std::_Allocator_base<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
{
};

/* 4529 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> > : std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Node> _Alnod;
};

/* 4530 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >::_Node *>
{
};

/* 4531 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Node *>
{
};

/* 4532 */
struct __cppobj std::_Allocator_base<__int64>
{
};

/* 4533 */
struct __cppobj std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > : std::_Allocator_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
{
};

/* 4534 */
struct std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0>
{
  std::less<unsigned long> comp;
};

/* 4535 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >::_Node>
{
};

/* 4536 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >::_Node>
{
};

/* 4537 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> > : std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >::_Node> _Alnod;
};

/* 4538 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,XiStrUCPatrol> >
{
};

/* 4539 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> > : std::_Allocator_base<std::pair<unsigned long const ,XiStrUCPatrol> >
{
};

/* 4540 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >::_Node *> _Alptr;
};

/* 4541 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,XiStrQuest> _Myval;
  char _Color;
  char _Isnil;
};

/* 4542 */
struct std::pair<unsigned long const ,XiStrQuest>
{
  const unsigned int first;
  XiStrQuest second;
};

/* 4543 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >::_Node>
{
};

/* 4544 */
struct std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0>
{
  std::less<unsigned long> comp;
};

/* 4545 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >::_Node>
{
};

/* 4546 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> > : std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >::_Node> _Alnod;
};

/* 4547 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,XiCouponParamWithID> >
{
};

/* 4548 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> > : std::_Allocator_base<std::pair<unsigned long const ,XiCouponParamWithID> >
{
};

/* 4549 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >::_Node *>
{
};

/* 4550 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >::_Node *>
{
};

/* 4551 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >::_Node *> _Alptr;
};

/* 4552 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,XiAuctionCar *> _Myval;
  char _Color;
  char _Isnil;
};

/* 4553 */
struct std::pair<unsigned long const ,XiAuctionCar *>
{
  const unsigned int first;
  XiAuctionCar *second;
};

/* 4554 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >::_Node>
{
};

/* 4555 */
struct __cppobj std::_Allocator_base<std::_List_nod<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> >::_Node>
{
};

/* 4556 */
struct __declspec(align(8)) std::_Tree_nod<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,XiVShop::ITEM_INFO> _Myval;
  char _Color;
  char _Isnil;
};

/* 4557 */
struct std::pair<unsigned long const ,XiVShop::ITEM_INFO>
{
  const unsigned int first;
  __declspec(align(8)) XiVShop::ITEM_INFO second;
};

/* 4558 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >::_Node *>
{
};

/* 4559 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,XiAuctionItem *> _Myval;
  char _Color;
  char _Isnil;
};

/* 4560 */
struct std::pair<unsigned long const ,XiAuctionItem *>
{
  const unsigned int first;
  XiAuctionItem *second;
};

/* 4561 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >::_Node>
{
};

/* 4562 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >::_Node *_Right;
  std::pair<int const ,XiMita500InfoBox> _Myval;
  char _Color;
  char _Isnil;
};

/* 4563 */
struct __cppobj std::_Allocator_base<XiMita500Info>
{
};

/* 4564 */
struct __cppobj std::allocator<XiMita500Info> : std::_Allocator_base<XiMita500Info>
{
};

/* 4565 */
struct std::_Vector_val<XiMita500Info,std::allocator<XiMita500Info> >
{
  std::allocator<XiMita500Info> _Alval;
};

/* 4566 */
struct __cppobj std::vector<XiMita500Info,std::allocator<XiMita500Info> > : std::_Vector_val<XiMita500Info,std::allocator<XiMita500Info> >
{
  XiMita500Info *_Myfirst;
  XiMita500Info *_Mylast;
  XiMita500Info *_Myend;
};

/* 4567 */
struct XiMita500InfoBox
{
  BS_CriticalSection m_cblock;
  std::vector<long,std::allocator<long> > m_ReserveIndexList;
  std::vector<long,std::allocator<long> > m_UsedIndexList;
  std::vector<XiMita500Info,std::allocator<XiMita500Info> > m_Mita500InfoList;
  int m_AreaId;
};

/* 4568 */
struct std::pair<int const ,XiMita500InfoBox>
{
  const int first;
  XiMita500InfoBox second;
};

/* 4569 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >::_Node *>
{
};

/* 4570 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,XIVISUALITEM_INFO> _Myval;
  char _Color;
  char _Isnil;
};

/* 4571 */
struct std::pair<unsigned long const ,XIVISUALITEM_INFO>
{
  const unsigned int first;
  XIVISUALITEM_INFO second;
};

/* 4572 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >::_Node *>
{
};

/* 4573 */
struct std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0>
{
  std::less<unsigned long> comp;
};

/* 4574 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >::_Node>
{
};

/* 4575 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >::_Node>
{
};

/* 4576 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> > : std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >::_Node> _Alnod;
};

/* 4577 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >
{
};

/* 4578 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> > : std::_Allocator_base<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >
{
};

/* 4579 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >::_Node *>
{
};

/* 4580 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >::_Node *> _Alptr;
};

/* 4581 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >::_Node *>
{
};

/* 4582 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >::_Node *>
{
};

/* 4583 */
struct __cppobj std::_Allocator_base<std::_List_nod<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> >::_Node>
{
};

/* 4584 */
struct __cppobj std::allocator<std::_List_nod<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> >::_Node> : std::_Allocator_base<std::_List_nod<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> >::_Node>
{
};

/* 4585 */
struct std::_List_nod<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> >
{
  std::allocator<std::_List_nod<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> >::_Node> _Alnod;
};

/* 4586 */
struct std::_List_nod<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> >::_Node
{
  std::_List_nod<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> >::_Node *_Next;
  std::_List_nod<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> >::_Node *_Prev;
  PktOper<BS_PktLoadChar> *_Myval;
};

/* 4587 */
struct PktOper<BS_PktLoadChar>
{
  BS_PacketDispatch *m_pDispatch;
  BS_PktLoadChar m_PktData;
  WaitBlock m_block;
};

/* 4588 */
struct __cppobj std::_Allocator_base<std::_List_nod<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> >::_Node *>
{
};

/* 4589 */
struct __cppobj std::allocator<std::_List_nod<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> >::_Node *> : std::_Allocator_base<std::_List_nod<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> >::_Node *>
{
};

/* 4590 */
struct __cppobj std::_List_ptr<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> > : std::_List_nod<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> >
{
  std::allocator<std::_List_nod<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> >::_Node *> _Alptr;
};

/* 4591 */
struct __cppobj std::_Allocator_base<PktOper<BS_PktLoadChar> *>
{
};

/* 4592 */
struct __cppobj std::allocator<PktOper<BS_PktLoadChar> *> : std::_Allocator_base<PktOper<BS_PktLoadChar> *>
{
};

/* 4593 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >::_Node *>
{
};

/* 4594 */
struct __cppobj std::allocator<std::_List_nod<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> >::_Node *> : std::_Allocator_base<std::_List_nod<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> >::_Node *>
{
};

/* 4595 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> > : std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Node *> _Alptr;
};

/* 4596 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> > : std::_Tree_ptr<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >
{
  std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > _Alval;
};

/* 4597 */
struct __cppobj std::allocator<__int64> : std::_Allocator_base<__int64>
{
};

/* 4598 */
struct __declspec(align(8)) std::pair<__int64 const ,XiAuctionClient *>
{
  const __int64 first;
  XiAuctionClient *second;
};

/* 4599 */
struct __cppobj std::_Allocator_base<std::pair<__int64 const ,XiAuctionClient *> >
{
};

/* 4600 */
struct std::_List_nod<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> >::_Node
{
  std::_List_nod<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> >::_Node *_Next;
  std::_List_nod<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> >::_Node *_Prev;
  PktOper<BS_PktUpgradeCar> *_Myval;
};

/* 4601 */
struct PktOper<BS_PktUpgradeCar>
{
  BS_PacketDispatch *m_pDispatch;
  BS_PktUpgradeCar m_PktData;
  WaitBlock m_block;
};

/* 4602 */
struct __cppobj std::_Allocator_base<std::_List_nod<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> >::_Node *>
{
};

/* 4603 */
struct __cppobj std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::rebind<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
{
};

/* 4604 */
struct __cppobj std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Node>
{
};

/* 4605 */
struct __cppobj std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::rebind<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Node *>
{
};

/* 4606 */
struct __cppobj std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::rebind<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
{
};

/* 4607 */
struct __cppobj std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::rebind<char>
{
};

/* 4608 */
struct __declspec(align(8)) std::_Tree_nod<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >::_Node *_Right;
  std::pair<__int64 const ,XiAuctionClient *> _Myval;
  char _Color;
  char _Isnil;
};

/* 4609 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >::_Node *>
{
};

/* 4610 */
struct std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0>
{
  std::less<unsigned long> comp;
};

/* 4611 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >::_Node>
{
};

/* 4612 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> > : std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >::_Node> _Alnod;
};

/* 4613 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,XiAuctionItem *> >
{
};

/* 4614 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiAuctionItem *> > : std::_Allocator_base<std::pair<unsigned long const ,XiAuctionItem *> >
{
};

/* 4615 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >::_Node *>
{
};

/* 4616 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >::_Node *>
{
};

/* 4617 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >::_Node *> _Alptr;
};

/* 4618 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> _Myval;
  char _Color;
  char _Isnil;
};

/* 4619 */
struct std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *>
{
  const unsigned int first;
  XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *second;
};

/* 4620 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >::_Node *>
{
};

/* 4621 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiCsItem const *,int,XiCsItem const * const *,XiCsItem const * const &>
{
};

/* 4622 */
struct std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0>
{
  std::less<unsigned long> comp;
};

/* 4623 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >::_Node>
{
};

/* 4624 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >::_Node>
{
};

/* 4625 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> > : std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >::_Node> _Alnod;
};

/* 4626 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,XiStrArbeit> _Myval;
  char _Color;
  char _Isnil;
};

/* 4627 */
struct std::pair<unsigned long const ,XiStrArbeit>
{
  const unsigned int first;
  XiStrArbeit second;
};

/* 4628 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,XiStrArbeit> >
{
};

/* 4629 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrArbeit> > : std::_Allocator_base<std::pair<unsigned long const ,XiStrArbeit> >
{
};

/* 4630 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >::_Node *>
{
};

/* 4631 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >::_Node *>
{
};

/* 4632 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >::_Node *> _Alptr;
};

/* 4633 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >::_Node>
{
};

/* 4634 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >::_Node>
{
};

/* 4635 */
struct std::_List_nod<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> >::_Node
{
  std::_List_nod<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> >::_Node *_Next;
  std::_List_nod<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> >::_Node *_Prev;
  PktOper<BS_PktGetVisualItem> *_Myval;
};

/* 4636 */
struct PktOper<BS_PktGetVisualItem>
{
  BS_PacketDispatch *m_pDispatch;
  BS_PktGetVisualItem m_PktData;
  WaitBlock m_block;
};

/* 4637 */
struct __cppobj std::_Allocator_base<std::_List_nod<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> >::_Node *>
{
};

/* 4638 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiCsSTItem const *,int,XiCsSTItem const * const *,XiCsSTItem const * const &>
{
};

/* 4639 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >::_Node *>
{
};

/* 4640 */
struct __cppobj std::allocator<std::_List_nod<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> >::_Node> : std::_Allocator_base<std::_List_nod<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> >::_Node>
{
};

/* 4641 */
struct std::_List_nod<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> >
{
  std::allocator<std::_List_nod<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> >::_Node> _Alnod;
};

/* 4642 */
struct __cppobj std::_List_ptr<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> > : std::_List_nod<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> >
{
  std::allocator<std::_List_nod<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> >::_Node *> _Alptr;
};

/* 4643 */
struct __cppobj std::_Allocator_base<PktOper<BS_PktBuyVisualItem> *>
{
};

/* 4644 */
struct __cppobj std::allocator<PktOper<BS_PktBuyVisualItem> *> : std::_Allocator_base<PktOper<BS_PktBuyVisualItem> *>
{
};

/* 4645 */
struct std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0>
{
  std::less<int> comp;
};

/* 4646 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >::_Node>
{
};

/* 4647 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >::_Node>
{
};

/* 4648 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> > : std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >::_Node> _Alnod;
};

/* 4649 */
struct __cppobj std::_Allocator_base<std::pair<int const ,XiMita500InfoBox> >
{
};

/* 4650 */
struct __cppobj std::allocator<std::pair<int const ,XiMita500InfoBox> > : std::_Allocator_base<std::pair<int const ,XiMita500InfoBox> >
{
};

/* 4651 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> > : std::_Tree_nod<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >::_Node *> _Alptr;
};

/* 4652 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >
{
  std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> > _Alval;
};

/* 4653 */
struct std::_List_nod<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> >::_Node
{
  std::_List_nod<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> >::_Node *_Next;
  std::_List_nod<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> >::_Node *_Prev;
  PktOper<BS_PktSendVisualItem> *_Myval;
};

/* 4654 */
struct __cppobj std::_Allocator_base<std::_List_nod<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> >::_Node *>
{
};

/* 4655 */
struct __cppobj std::allocator<XiMita500Info>::rebind<XiMita500Info>
{
};

/* 4656 */
struct std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0>
{
  std::less<unsigned long> comp;
};

/* 4657 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> > : std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >::_Node> _Alnod;
};

/* 4658 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,XiStrQuest> >
{
};

/* 4659 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrQuest> > : std::_Allocator_base<std::pair<unsigned long const ,XiStrQuest> >
{
};

/* 4660 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >::_Node *>
{
};

/* 4661 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >::_Node *>
{
};

/* 4662 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >::_Node *> _Alptr;
};

/* 4663 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,XiAuctionCar *> >
{
};

/* 4664 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >::rebind<std::pair<unsigned long const ,XiStrUCPatrol> >
{
};

/* 4665 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >::_Node>
{
};

/* 4666 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >::_Node *>
{
};

/* 4667 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >::rebind<unsigned long>
{
};

/* 4668 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >::rebind<char>
{
};

/* 4669 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >
{
  std::allocator<std::pair<unsigned long const ,XiStrQuest> > _Alval;
};

/* 4670 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >
{
  std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> > _Alval;
};

/* 4671 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >::_Node *>
{
};

/* 4672 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> > : std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4673 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &>
{
};

/* 4674 */
struct __cppobj std::_Bidit<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &>
{
};

/* 4675 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::const_iterator : std::_Bidit<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &>
{
  std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Node *_Ptr;
};

/* 4676 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::iterator : std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::const_iterator
{
};

/* 4677 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XIVISUALITEM_INFO>,int,std::pair<unsigned long const ,XIVISUALITEM_INFO> const *,std::pair<unsigned long const ,XIVISUALITEM_INFO> const &>
{
};

/* 4678 */
struct __cppobj std::_Allocator_base<std::_List_nod<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> >::_Node>
{
};

/* 4679 */
struct __cppobj std::_Allocator_base<std::_List_nod<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> >::_Node>
{
};

/* 4680 */
struct XiVShop::ITEM_CATEGORY
{
  XiVShop::CATEGORY_TOP eCategoryTop;
  XiVShop::CATEGORY eCategory;
  XiVShop::CATEGORY_SUB eCategorySub;
  int bTopMenuEnabled;
  int bEnabled;
  int bMultipleSelection;
  int bStackble;
  unsigned __int16 tszSubCategoryName[32];
};

/* 4681 */
struct __cppobj std::_Allocator_base<XiVShop::ITEM_CATEGORY>
{
};

/* 4682 */
struct __cppobj std::_Allocator_base<std::_List_nod<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> >::_Node>
{
};

/* 4683 */
struct __cppobj std::allocator<std::_List_nod<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> >::_Node> : std::_Allocator_base<std::_List_nod<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> >::_Node>
{
};

/* 4684 */
struct __cppobj std::allocator<std::_List_nod<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> >::_Node *> : std::_Allocator_base<std::_List_nod<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> >::_Node *>
{
};

/* 4685 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *>,int,std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> const *,std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> const &>
{
};

/* 4686 */
struct __cppobj std::allocator<std::_List_nod<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> >::_Node> : std::_Allocator_base<std::_List_nod<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> >::_Node>
{
};

/* 4687 */
struct __cppobj std::allocator<std::_List_nod<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> >::_Node *> : std::_Allocator_base<std::_List_nod<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> >::_Node *>
{
};

/* 4688 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >
{
  std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> > _Alval;
};

/* 4689 */
struct __cppobj std::iterator<std::random_access_iterator_tag,COUPONTYPE_INFO,int,COUPONTYPE_INFO const *,COUPONTYPE_INFO const &>
{
};

/* 4690 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >::_Node *>
{
};

/* 4691 */
struct __cppobj std::allocator<std::_List_nod<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> >::_Node *> : std::_Allocator_base<std::_List_nod<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> >::_Node *>
{
};

/* 4692 */
struct std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0>
{
  std::less<__int64> comp;
};

/* 4693 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >::_Node>
{
};

/* 4694 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >::_Node>
{
};

/* 4695 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> > : std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >::_Node> _Alnod;
};

/* 4696 */
struct __cppobj std::allocator<std::pair<__int64 const ,XiAuctionClient *> > : std::_Allocator_base<std::pair<__int64 const ,XiAuctionClient *> >
{
};

/* 4697 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> > : std::_Tree_nod<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >::_Node *> _Alptr;
};

/* 4698 */
struct __cppobj std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::rebind<std::_Tree_nod<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::_Node>
{
};

/* 4699 */
struct __cppobj std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::rebind<std::_Tree_nod<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::_Node *>
{
};

/* 4700 */
struct __cppobj std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::rebind<char>
{
};

/* 4701 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >::rebind<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >
{
};

/* 4702 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >::_Node>
{
};

/* 4703 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >::_Node *>
{
};

/* 4704 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >::rebind<unsigned long>
{
};

/* 4705 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >::rebind<char>
{
};

/* 4706 */
struct __cppobj std::_List_val<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> > : std::_List_ptr<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> >
{
  std::allocator<PktOper<BS_PktLoadChar> *> _Alval;
};

/* 4707 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >
{
};

/* 4708 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> > : std::_Allocator_base<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >
{
};

/* 4709 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >::rebind<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >
{
};

/* 4710 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >::_Node>
{
};

/* 4711 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >::_Node *>
{
};

/* 4712 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >::rebind<unsigned long>
{
};

/* 4713 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >::rebind<char>
{
};

/* 4714 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >::_Node>
{
};

/* 4715 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >::_Node>
{
};

/* 4716 */
struct std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0>
{
  std::less<unsigned long> comp;
};

/* 4717 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> > : std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >::_Node> _Alnod;
};

/* 4718 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >::_Node *> _Alptr;
};

/* 4719 */
struct __cppobj std::allocator<EventItemSelect>::rebind<EventItemSelect>
{
};

/* 4720 */
struct std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0>
{
  std::less<unsigned long> comp;
};

/* 4721 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >::_Node>
{
};

/* 4722 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >::_Node>
{
};

/* 4723 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> > : std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >::_Node> _Alnod;
};

/* 4724 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,XIVISUALITEM_INFO> >
{
};

/* 4725 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> > : std::_Allocator_base<std::pair<unsigned long const ,XIVISUALITEM_INFO> >
{
};

/* 4726 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >::_Node *> _Alptr;
};

/* 4727 */
struct __cppobj std::iterator<std::random_access_iterator_tag,RushEvent *,int,RushEvent * const *,RushEvent * const &>
{
};

/* 4728 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >::rebind<std::pair<unsigned long const ,XIVISUALITEM_INFO> >
{
};

/* 4729 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >::_Node>
{
};

/* 4730 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >::_Node *>
{
};

/* 4731 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >::rebind<unsigned long>
{
};

/* 4732 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >::rebind<char>
{
};

/* 4733 */
struct __cppobj std::allocator<XiCsItem const *>::rebind<XiCsItem const *>
{
};

/* 4734 */
struct __cppobj std::allocator<XiStrIData>::rebind<XiStrIData>
{
};

/* 4735 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >::rebind<std::pair<unsigned long const ,XiCouponParamWithID> >
{
};

/* 4736 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >::_Node>
{
};

/* 4737 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >::_Node *>
{
};

/* 4738 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >::rebind<unsigned long>
{
};

/* 4739 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >::rebind<char>
{
};

/* 4740 */
struct __cppobj std::iterator<std::random_access_iterator_tag,RushHuv,int,RushHuv const *,RushHuv const &>
{
};

/* 4741 */
struct __cppobj std::_Ranit<RushHuv,int,RushHuv const *,RushHuv const &> : std::iterator<std::random_access_iterator_tag,RushHuv,int,RushHuv const *,RushHuv const &>
{
};

/* 4742 */
struct __cppobj std::vector<RushHuv,std::allocator<RushHuv> >::const_iterator : std::_Ranit<RushHuv,int,RushHuv const *,RushHuv const &>
{
  RushHuv *_Myptr;
};

/* 4743 */
struct __cppobj std::vector<RushHuv,std::allocator<RushHuv> >::iterator : std::vector<RushHuv,std::allocator<RushHuv> >::const_iterator
{
};

/* 4744 */
struct std::pair<unsigned long,XIVISUALITEM_INFO>
{
  unsigned int first;
  XIVISUALITEM_INFO second;
};

/* 4745 */
struct __cppobj std::_Allocator_base<PktOper<BS_PktGetVisualItem> *>
{
};

/* 4746 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >
{
  std::allocator<std::pair<__int64 const ,XiAuctionClient *> > _Alval;
};

/* 4747 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiMita500Info,int,XiMita500Info const *,XiMita500Info const &>
{
};

/* 4748 */
struct __cppobj std::_Ranit<XiMita500Info,int,XiMita500Info const *,XiMita500Info const &> : std::iterator<std::random_access_iterator_tag,XiMita500Info,int,XiMita500Info const *,XiMita500Info const &>
{
};

/* 4749 */
struct __cppobj std::vector<XiMita500Info,std::allocator<XiMita500Info> >::const_iterator : std::_Ranit<XiMita500Info,int,XiMita500Info const *,XiMita500Info const &>
{
  XiMita500Info *_Myptr;
};

/* 4750 */
struct __cppobj std::vector<XiMita500Info,std::allocator<XiMita500Info> >::iterator : std::vector<XiMita500Info,std::allocator<XiMita500Info> >::const_iterator
{
};

/* 4751 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4752 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiStrUCPatrol>,int,std::pair<unsigned long const ,XiStrUCPatrol> const *,std::pair<unsigned long const ,XiStrUCPatrol> const &>
{
};

/* 4753 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,XiStrUCPatrol>,int,std::pair<unsigned long const ,XiStrUCPatrol> const *,std::pair<unsigned long const ,XiStrUCPatrol> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiStrUCPatrol>,int,std::pair<unsigned long const ,XiStrUCPatrol> const *,std::pair<unsigned long const ,XiStrUCPatrol> const &>
{
};

/* 4754 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,XiStrUCPatrol>,int,std::pair<unsigned long const ,XiStrUCPatrol> const *,std::pair<unsigned long const ,XiStrUCPatrol> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >::_Node *_Ptr;
};

/* 4755 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >::const_iterator
{
};

/* 4756 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >::iterator first;
  bool second;
};

/* 4757 */
struct __cppobj std::allocator<RushTime::BossOut>::rebind<RushTime::BossOut>
{
};

/* 4758 */
struct __cppobj std::_Allocator_base<COUPONTYPE_INFO>
{
};

/* 4759 */
struct __cppobj std::allocator<COUPONTYPE_INFO> : std::_Allocator_base<COUPONTYPE_INFO>
{
};

/* 4760 */
struct __cppobj std::allocator<COUPONTYPE_INFO>::rebind<COUPONTYPE_INFO>
{
};

/* 4761 */
struct std::_List_nod<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> >
{
  std::allocator<std::_List_nod<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> >::_Node> _Alnod;
};

/* 4762 */
struct __cppobj std::_List_ptr<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> > : std::_List_nod<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> >
{
  std::allocator<std::_List_nod<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> >::_Node *> _Alptr;
};

/* 4763 */
struct __cppobj std::allocator<PktOper<BS_PktGetVisualItem> *> : std::_Allocator_base<PktOper<BS_PktGetVisualItem> *>
{
};

/* 4764 */
struct __cppobj std::_Ranit<XiCsItem const *,int,XiCsItem const * const *,XiCsItem const * const &> : std::iterator<std::random_access_iterator_tag,XiCsItem const *,int,XiCsItem const * const *,XiCsItem const * const &>
{
};

/* 4765 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiAuctionCar *> > : std::_Allocator_base<std::pair<unsigned long const ,XiAuctionCar *> >
{
};

/* 4766 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >::rebind<std::pair<unsigned long const ,XiAuctionCar *> >
{
};

/* 4767 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >::_Node>
{
};

/* 4768 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >::_Node *>
{
};

/* 4769 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >::rebind<unsigned long>
{
};

/* 4770 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >::rebind<char>
{
};

/* 4771 */
struct std::_Vector_val<COUPONTYPE_INFO,std::allocator<COUPONTYPE_INFO> >
{
  std::allocator<COUPONTYPE_INFO> _Alval;
};

/* 4772 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4773 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiVShop::ITEM_INFO>,int,std::pair<unsigned long const ,XiVShop::ITEM_INFO> const *,std::pair<unsigned long const ,XiVShop::ITEM_INFO> const &>
{
};

/* 4774 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,XiVShop::ITEM_INFO>,int,std::pair<unsigned long const ,XiVShop::ITEM_INFO> const *,std::pair<unsigned long const ,XiVShop::ITEM_INFO> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiVShop::ITEM_INFO>,int,std::pair<unsigned long const ,XiVShop::ITEM_INFO> const *,std::pair<unsigned long const ,XiVShop::ITEM_INFO> const &>
{
};

/* 4775 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,XiVShop::ITEM_INFO>,int,std::pair<unsigned long const ,XiVShop::ITEM_INFO> const *,std::pair<unsigned long const ,XiVShop::ITEM_INFO> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >::_Node *_Ptr;
};

/* 4776 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >::const_iterator
{
};

/* 4777 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >::iterator first;
  bool second;
};

/* 4778 */
struct __cppobj std::allocator<PktOper<BS_PktLoadChar> *>::rebind<std::_List_nod<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> >::_Node>
{
};

/* 4779 */
struct __cppobj std::allocator<PktOper<BS_PktLoadChar> *>::rebind<std::_List_nod<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> >::_Node *>
{
};

/* 4780 */
struct __cppobj std::allocator<PktOper<BS_PktLoadChar> *>::rebind<PktOper<BS_PktLoadChar> *>
{
};

/* 4781 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >
{
  std::allocator<std::pair<unsigned long const ,XiAuctionItem *> > _Alval;
};

/* 4782 */
struct __cppobj std::_Allocator_base<PktOper<BS_PktSendVisualItem> *>
{
};

/* 4783 */
struct __cppobj std::allocator<std::pair<__int64 const ,XiAuctionClient *> >::rebind<std::pair<__int64 const ,XiAuctionClient *> >
{
};

/* 4784 */
struct __cppobj std::allocator<std::pair<__int64 const ,XiAuctionClient *> >::rebind<std::_Tree_nod<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >::_Node>
{
};

/* 4785 */
struct __cppobj std::allocator<std::pair<__int64 const ,XiAuctionClient *> >::rebind<std::_Tree_nod<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >::_Node *>
{
};

/* 4786 */
struct __cppobj std::allocator<std::pair<__int64 const ,XiAuctionClient *> >::rebind<__int64>
{
};

/* 4787 */
struct __cppobj std::allocator<std::pair<__int64 const ,XiAuctionClient *> >::rebind<char>
{
};

/* 4788 */
struct std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0>
{
  std::less<unsigned long> comp;
};

/* 4789 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> > : std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >::_Node> _Alnod;
};

/* 4790 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >::_Node *> _Alptr;
};

/* 4791 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *>,int,std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> const *,std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *>,int,std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> const *,std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> const &>
{
};

/* 4792 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *>,int,std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> const *,std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >::_Node *_Ptr;
};

/* 4793 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >::const_iterator
{
};

/* 4794 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >::iterator first;
  bool second;
};

/* 4795 */
struct __cppobj std::allocator<RushHuv>::rebind<RushHuv>
{
};

/* 4796 */
struct __cppobj std::_List_val<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> > : std::_List_ptr<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> >
{
  std::allocator<PktOper<BS_PktBuyVisualItem> *> _Alval;
};

/* 4797 */
struct __cppobj std::list<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> > : std::_List_val<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> >
{
  std::_List_nod<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4798 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,PktOper<BS_PktBuyVisualItem> *,int,PktOper<BS_PktBuyVisualItem> * const *,PktOper<BS_PktBuyVisualItem> * const &>
{
};

/* 4799 */
struct __cppobj std::_Bidit<PktOper<BS_PktBuyVisualItem> *,int,PktOper<BS_PktBuyVisualItem> * const *,PktOper<BS_PktBuyVisualItem> * const &> : std::iterator<std::bidirectional_iterator_tag,PktOper<BS_PktBuyVisualItem> *,int,PktOper<BS_PktBuyVisualItem> * const *,PktOper<BS_PktBuyVisualItem> * const &>
{
};

/* 4800 */
struct __cppobj std::list<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> >::const_iterator : std::_Bidit<PktOper<BS_PktBuyVisualItem> *,int,PktOper<BS_PktBuyVisualItem> * const *,PktOper<BS_PktBuyVisualItem> * const &>
{
  std::_List_nod<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> >::_Node *_Ptr;
};

/* 4801 */
struct __cppobj std::list<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> >::iterator : std::list<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> >::const_iterator
{
};

/* 4802 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >
{
  std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> > _Alval;
};

/* 4803 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4804 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,XIVISUALITEM_INFO>,int,std::pair<unsigned long const ,XIVISUALITEM_INFO> const *,std::pair<unsigned long const ,XIVISUALITEM_INFO> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XIVISUALITEM_INFO>,int,std::pair<unsigned long const ,XIVISUALITEM_INFO> const *,std::pair<unsigned long const ,XIVISUALITEM_INFO> const &>
{
};

/* 4805 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,XIVISUALITEM_INFO>,int,std::pair<unsigned long const ,XIVISUALITEM_INFO> const *,std::pair<unsigned long const ,XIVISUALITEM_INFO> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >::_Node *_Ptr;
};

/* 4806 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >::const_iterator
{
};

/* 4807 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >::iterator first;
  bool second;
};

/* 4808 */
struct __cppobj std::iterator<std::random_access_iterator_tag,RushTime::BossOut,int,RushTime::BossOut const *,RushTime::BossOut const &>
{
};

/* 4809 */
struct __cppobj std::_Ranit<RushTime::BossOut,int,RushTime::BossOut const *,RushTime::BossOut const &> : std::iterator<std::random_access_iterator_tag,RushTime::BossOut,int,RushTime::BossOut const *,RushTime::BossOut const &>
{
};

/* 4810 */
struct __cppobj std::vector<RushTime::BossOut,std::allocator<RushTime::BossOut> >::const_iterator : std::_Ranit<RushTime::BossOut,int,RushTime::BossOut const *,RushTime::BossOut const &>
{
  RushTime::BossOut *_Myptr;
};

/* 4811 */
struct __cppobj std::vector<RushTime::BossOut,std::allocator<RushTime::BossOut> >::iterator : std::vector<RushTime::BossOut,std::allocator<RushTime::BossOut> >::const_iterator
{
};

/* 4812 */
struct __cppobj std::allocator<XiVShop::ITEM_CATEGORY> : std::_Allocator_base<XiVShop::ITEM_CATEGORY>
{
};

/* 4813 */
struct __cppobj std::allocator<XiVShop::ITEM_CATEGORY>::rebind<XiVShop::ITEM_CATEGORY>
{
};

/* 4814 */
struct __cppobj std::allocator<PktOper<BS_PktBuyVisualItem> *>::rebind<std::_List_nod<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> >::_Node>
{
};

/* 4815 */
struct __cppobj std::allocator<PktOper<BS_PktBuyVisualItem> *>::rebind<std::_List_nod<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> >::_Node *>
{
};

/* 4816 */
struct __cppobj std::allocator<PktOper<BS_PktBuyVisualItem> *>::rebind<PktOper<BS_PktBuyVisualItem> *>
{
};

/* 4817 */
struct __cppobj std::allocator<XiCsSTItem const *>::rebind<XiCsSTItem const *>
{
};

/* 4818 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> > : std::_Tree_ptr<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >
{
  std::allocator<std::pair<int const ,XiMita500InfoBox> > _Alval;
};

/* 4819 */
struct __cppobj std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > : std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >
{
};

/* 4820 */
struct std::_Vector_val<XiVShop::ITEM_CATEGORY,std::allocator<XiVShop::ITEM_CATEGORY> >
{
  std::allocator<XiVShop::ITEM_CATEGORY> _Alval;
};

/* 4821 */
struct __cppobj std::vector<XiVShop::ITEM_CATEGORY,std::allocator<XiVShop::ITEM_CATEGORY> > : std::_Vector_val<XiVShop::ITEM_CATEGORY,std::allocator<XiVShop::ITEM_CATEGORY> >
{
  XiVShop::ITEM_CATEGORY *_Myfirst;
  XiVShop::ITEM_CATEGORY *_Mylast;
  XiVShop::ITEM_CATEGORY *_Myend;
};

/* 4822 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiVShop::ITEM_CATEGORY,int,XiVShop::ITEM_CATEGORY const *,XiVShop::ITEM_CATEGORY const &>
{
};

/* 4823 */
struct __cppobj std::_Ranit<XiVShop::ITEM_CATEGORY,int,XiVShop::ITEM_CATEGORY const *,XiVShop::ITEM_CATEGORY const &> : std::iterator<std::random_access_iterator_tag,XiVShop::ITEM_CATEGORY,int,XiVShop::ITEM_CATEGORY const *,XiVShop::ITEM_CATEGORY const &>
{
};

/* 4824 */
struct __cppobj std::vector<XiVShop::ITEM_CATEGORY,std::allocator<XiVShop::ITEM_CATEGORY> >::const_iterator : std::_Ranit<XiVShop::ITEM_CATEGORY,int,XiVShop::ITEM_CATEGORY const *,XiVShop::ITEM_CATEGORY const &>
{
  XiVShop::ITEM_CATEGORY *_Myptr;
};

/* 4825 */
struct __cppobj std::vector<XiVShop::ITEM_CATEGORY,std::allocator<XiVShop::ITEM_CATEGORY> >::iterator : std::vector<XiVShop::ITEM_CATEGORY,std::allocator<XiVShop::ITEM_CATEGORY> >::const_iterator
{
};

/* 4826 */
struct __cppobj std::allocator<std::_List_nod<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> >::_Node> : std::_Allocator_base<std::_List_nod<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> >::_Node>
{
};

/* 4827 */
struct std::_List_nod<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> >
{
  std::allocator<std::_List_nod<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> >::_Node> _Alnod;
};

/* 4828 */
struct __cppobj std::_List_ptr<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> > : std::_List_nod<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> >
{
  std::allocator<std::_List_nod<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> >::_Node *> _Alptr;
};

/* 4829 */
struct __cppobj std::_Allocator_base<PktOper<BS_PktUpgradeCar> *>
{
};

/* 4830 */
struct __cppobj std::allocator<PktOper<BS_PktUpgradeCar> *> : std::_Allocator_base<PktOper<BS_PktUpgradeCar> *>
{
};

/* 4831 */
struct std::pair<long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *>
{
  int first;
  XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *second;
};

/* 4832 */
struct __cppobj std::vector<XiCsItem const *,std::allocator<XiCsItem const *> >::const_iterator : std::_Ranit<XiCsItem const *,int,XiCsItem const * const *,XiCsItem const * const &>
{
  XiCsItem **_Myptr;
};

/* 4833 */
struct __cppobj std::vector<XiCsItem const *,std::allocator<XiCsItem const *> >::iterator : std::vector<XiCsItem const *,std::allocator<XiCsItem const *> >::const_iterator
{
};

/* 4834 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::iterator,bool>
{
  std::_Tree<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::iterator first;
  bool second;
};

/* 4835 */
struct __cppobj std::allocator<BillingConn_USA *>::rebind<std::_List_nod<BillingConn_USA *,std::allocator<BillingConn_USA *> >::_Node>
{
};

/* 4836 */
struct __cppobj std::allocator<BillingConn_USA *>::rebind<std::_List_nod<BillingConn_USA *,std::allocator<BillingConn_USA *> >::_Node *>
{
};

/* 4837 */
struct __cppobj std::allocator<BillingConn_USA *>::rebind<BillingConn_USA *>
{
};

/* 4838 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4839 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiStrQuest>,int,std::pair<unsigned long const ,XiStrQuest> const *,std::pair<unsigned long const ,XiStrQuest> const &>
{
};

/* 4840 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,XiStrQuest>,int,std::pair<unsigned long const ,XiStrQuest> const *,std::pair<unsigned long const ,XiStrQuest> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiStrQuest>,int,std::pair<unsigned long const ,XiStrQuest> const *,std::pair<unsigned long const ,XiStrQuest> const &>
{
};

/* 4841 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,XiStrQuest>,int,std::pair<unsigned long const ,XiStrQuest> const *,std::pair<unsigned long const ,XiStrQuest> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >::_Node *_Ptr;
};

/* 4842 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >::const_iterator
{
};

/* 4843 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >::iterator first;
  bool second;
};

/* 4844 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiStrIData,int,XiStrIData const *,XiStrIData const &>
{
};

/* 4845 */
struct __cppobj std::_Ranit<XiStrIData,int,XiStrIData const *,XiStrIData const &> : std::iterator<std::random_access_iterator_tag,XiStrIData,int,XiStrIData const *,XiStrIData const &>
{
};

/* 4846 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,RushEvent *,int,RushEvent * const *,RushEvent * const &>
{
};

/* 4847 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4848 */
struct __cppobj std::map<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> > > : std::_Tree<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >
{
};

/* 4849 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiAuctionItem *>,int,std::pair<unsigned long const ,XiAuctionItem *> const *,std::pair<unsigned long const ,XiAuctionItem *> const &>
{
};

/* 4850 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,XiAuctionItem *>,int,std::pair<unsigned long const ,XiAuctionItem *> const *,std::pair<unsigned long const ,XiAuctionItem *> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiAuctionItem *>,int,std::pair<unsigned long const ,XiAuctionItem *> const *,std::pair<unsigned long const ,XiAuctionItem *> const &>
{
};

/* 4851 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,XiAuctionItem *>,int,std::pair<unsigned long const ,XiAuctionItem *> const *,std::pair<unsigned long const ,XiAuctionItem *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >::_Node *_Ptr;
};

/* 4852 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >::const_iterator
{
};

/* 4853 */
struct __cppobj std::allocator<RushEvent *>::rebind<std::_List_nod<RushEvent *,std::allocator<RushEvent *> >::_Node>
{
};

/* 4854 */
struct __cppobj std::allocator<RushEvent *>::rebind<std::_List_nod<RushEvent *,std::allocator<RushEvent *> >::_Node *>
{
};

/* 4855 */
struct __cppobj std::allocator<RushEvent *>::rebind<RushEvent *>
{
};

/* 4856 */
struct __cppobj std::_Ranit<XiCsSTItem const *,int,XiCsSTItem const * const *,XiCsSTItem const * const &> : std::iterator<std::random_access_iterator_tag,XiCsSTItem const *,int,XiCsSTItem const * const *,XiCsSTItem const * const &>
{
};

/* 4857 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4858 */
struct __cppobj std::map<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> > > : std::_Tree<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >
{
};

/* 4859 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiCouponParamWithID>,int,std::pair<unsigned long const ,XiCouponParamWithID> const *,std::pair<unsigned long const ,XiCouponParamWithID> const &>
{
};

/* 4860 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,XiCouponParamWithID>,int,std::pair<unsigned long const ,XiCouponParamWithID> const *,std::pair<unsigned long const ,XiCouponParamWithID> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiCouponParamWithID>,int,std::pair<unsigned long const ,XiCouponParamWithID> const *,std::pair<unsigned long const ,XiCouponParamWithID> const &>
{
};

/* 4861 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,XiCouponParamWithID>,int,std::pair<unsigned long const ,XiCouponParamWithID> const *,std::pair<unsigned long const ,XiCouponParamWithID> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >::_Node *_Ptr;
};

/* 4862 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >::const_iterator
{
};

/* 4863 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >
{
  std::allocator<std::pair<unsigned long const ,XiStrArbeit> > _Alval;
};

/* 4864 */
struct __cppobj std::allocator<BillingConn *>::rebind<std::_List_nod<BillingConn *,std::allocator<BillingConn *> >::_Node>
{
};

/* 4865 */
struct __cppobj std::allocator<BillingConn *>::rebind<std::_List_nod<BillingConn *,std::allocator<BillingConn *> >::_Node *>
{
};

/* 4866 */
struct __cppobj std::allocator<BillingConn *>::rebind<BillingConn *>
{
};

/* 4867 */
struct __cppobj std::allocator<XiRankArbeitPlayer *>::rebind<std::_List_nod<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> >::_Node>
{
};

/* 4868 */
struct __cppobj std::allocator<XiRankArbeitPlayer *>::rebind<std::_List_nod<XiRankArbeitPlayer *,std::allocator<XiRankArbeitPlayer *> >::_Node *>
{
};

/* 4869 */
struct __cppobj std::allocator<XiRankArbeitPlayer *>::rebind<XiRankArbeitPlayer *>
{
};

/* 4870 */
struct __cppobj std::allocator<PktOper<BS_PktGetVisualItem> *>::rebind<std::_List_nod<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> >::_Node>
{
};

/* 4871 */
struct __cppobj std::allocator<PktOper<BS_PktGetVisualItem> *>::rebind<std::_List_nod<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> >::_Node *>
{
};

/* 4872 */
struct __cppobj std::allocator<PktOper<BS_PktGetVisualItem> *>::rebind<PktOper<BS_PktGetVisualItem> *>
{
};

/* 4873 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrQuest> >::rebind<std::pair<unsigned long const ,XiStrQuest> >
{
};

/* 4874 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrQuest> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >::_Node>
{
};

/* 4875 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrQuest> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >::_Node *>
{
};

/* 4876 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrQuest> >::rebind<unsigned long>
{
};

/* 4877 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrQuest> >::rebind<char>
{
};

/* 4878 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >
{
  std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> > _Alval;
};

/* 4879 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4880 */
struct __cppobj std::_Bidit<RushEvent *,int,RushEvent * const *,RushEvent * const &> : std::iterator<std::bidirectional_iterator_tag,RushEvent *,int,RushEvent * const *,RushEvent * const &>
{
};

/* 4881 */
struct __cppobj std::list<RushEvent *,std::allocator<RushEvent *> >::const_iterator : std::_Bidit<RushEvent *,int,RushEvent * const *,RushEvent * const &>
{
  std::_List_nod<RushEvent *,std::allocator<RushEvent *> >::_Node *_Ptr;
};

/* 4882 */
struct __cppobj std::list<RushEvent *,std::allocator<RushEvent *> >::iterator : std::list<RushEvent *,std::allocator<RushEvent *> >::const_iterator
{
};

/* 4883 */
struct __cppobj std::allocator<std::pair<int const ,XiMita500InfoBox> >::rebind<std::pair<int const ,XiMita500InfoBox> >
{
};

/* 4884 */
struct __cppobj std::allocator<std::pair<int const ,XiMita500InfoBox> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >::_Node>
{
};

/* 4885 */
struct __cppobj std::allocator<std::pair<int const ,XiMita500InfoBox> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >::_Node *>
{
};

/* 4886 */
struct __cppobj std::allocator<std::pair<int const ,XiMita500InfoBox> >::rebind<int>
{
};

/* 4887 */
struct __cppobj std::allocator<std::pair<int const ,XiMita500InfoBox> >::rebind<char>
{
};

/* 4888 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> >,0> >::iterator first;
  bool second;
};

/* 4889 */
struct __cppobj std::map<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> > > : std::_Tree<std::_Tmap_traits<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> >,0> >
{
};

/* 4890 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >::rebind<std::pair<unsigned long const ,XiAuctionItem *> >
{
};

/* 4891 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >::_Node>
{
};

/* 4892 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >::_Node *>
{
};

/* 4893 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >::rebind<unsigned long>
{
};

/* 4894 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >::rebind<char>
{
};

/* 4895 */
struct __cppobj std::allocator<PktOper<BS_PktSendVisualItem> *> : std::_Allocator_base<PktOper<BS_PktSendVisualItem> *>
{
};

/* 4896 */
struct __cppobj std::allocator<PktOper<BS_PktSendVisualItem> *>::rebind<std::_List_nod<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> >::_Node>
{
};

/* 4897 */
struct __cppobj std::allocator<PktOper<BS_PktSendVisualItem> *>::rebind<std::_List_nod<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> >::_Node *>
{
};

/* 4898 */
struct __cppobj std::allocator<PktOper<BS_PktSendVisualItem> *>::rebind<PktOper<BS_PktSendVisualItem> *>
{
};

/* 4899 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> > : std::_Tree_val<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4900 */
struct __cppobj std::map<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> > > : std::_Tree<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >
{
};

/* 4901 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,XiMita500InfoBox>,int,std::pair<int const ,XiMita500InfoBox> const *,std::pair<int const ,XiMita500InfoBox> const &>
{
};

/* 4902 */
struct __cppobj std::_Bidit<std::pair<int const ,XiMita500InfoBox>,int,std::pair<int const ,XiMita500InfoBox> const *,std::pair<int const ,XiMita500InfoBox> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,XiMita500InfoBox>,int,std::pair<int const ,XiMita500InfoBox> const *,std::pair<int const ,XiMita500InfoBox> const &>
{
};

/* 4903 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >::const_iterator : std::_Bidit<std::pair<int const ,XiMita500InfoBox>,int,std::pair<int const ,XiMita500InfoBox> const *,std::pair<int const ,XiMita500InfoBox> const &>
{
  std::_Tree_nod<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >::_Node *_Ptr;
};

/* 4904 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >::iterator : std::_Tree<std::_Tmap_traits<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> >,0> >::const_iterator
{
};

/* 4905 */
struct __cppobj std::_Ranit<COUPONTYPE_INFO,int,COUPONTYPE_INFO const *,COUPONTYPE_INFO const &> : std::iterator<std::random_access_iterator_tag,COUPONTYPE_INFO,int,COUPONTYPE_INFO const *,COUPONTYPE_INFO const &>
{
};

/* 4906 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,BillingConn *,int,BillingConn * const *,BillingConn * const &>
{
};

/* 4907 */
struct __cppobj std::_Bidit<BillingConn *,int,BillingConn * const *,BillingConn * const &> : std::iterator<std::bidirectional_iterator_tag,BillingConn *,int,BillingConn * const *,BillingConn * const &>
{
};

/* 4908 */
struct __cppobj std::list<BillingConn *,std::allocator<BillingConn *> >::const_iterator : std::_Bidit<BillingConn *,int,BillingConn * const *,BillingConn * const &>
{
  std::_List_nod<BillingConn *,std::allocator<BillingConn *> >::_Node *_Ptr;
};

/* 4909 */
struct __cppobj std::list<BillingConn *,std::allocator<BillingConn *> >::iterator : std::list<BillingConn *,std::allocator<BillingConn *> >::const_iterator
{
};

/* 4910 */
struct std::_List_nod<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> >
{
  std::allocator<std::_List_nod<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> >::_Node> _Alnod;
};

/* 4911 */
struct __cppobj std::_List_ptr<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> > : std::_List_nod<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> >
{
  std::allocator<std::_List_nod<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> >::_Node *> _Alptr;
};

/* 4912 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >
{
  std::allocator<std::pair<unsigned long const ,XiAuctionCar *> > _Alval;
};

/* 4913 */
struct __cppobj std::map<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> > > : std::_Tree<std::_Tmap_traits<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> >,0> >
{
};

/* 4914 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4915 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiAuctionCar *>,int,std::pair<unsigned long const ,XiAuctionCar *> const *,std::pair<unsigned long const ,XiAuctionCar *> const &>
{
};

/* 4916 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,XiAuctionCar *>,int,std::pair<unsigned long const ,XiAuctionCar *> const *,std::pair<unsigned long const ,XiAuctionCar *> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiAuctionCar *>,int,std::pair<unsigned long const ,XiAuctionCar *> const *,std::pair<unsigned long const ,XiAuctionCar *> const &>
{
};

/* 4917 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,XiAuctionCar *>,int,std::pair<unsigned long const ,XiAuctionCar *> const *,std::pair<unsigned long const ,XiAuctionCar *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >::_Node *_Ptr;
};

/* 4918 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >::const_iterator
{
};

/* 4919 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >::iterator first;
  bool second;
};

/* 4920 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4921 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiStrArbeit>,int,std::pair<unsigned long const ,XiStrArbeit> const *,std::pair<unsigned long const ,XiStrArbeit> const &>
{
};

/* 4922 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,XiStrArbeit>,int,std::pair<unsigned long const ,XiStrArbeit> const *,std::pair<unsigned long const ,XiStrArbeit> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiStrArbeit>,int,std::pair<unsigned long const ,XiStrArbeit> const *,std::pair<unsigned long const ,XiStrArbeit> const &>
{
};

/* 4923 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,XiStrArbeit>,int,std::pair<unsigned long const ,XiStrArbeit> const *,std::pair<unsigned long const ,XiStrArbeit> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >::_Node *_Ptr;
};

/* 4924 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >::const_iterator
{
};

/* 4925 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >::iterator first;
  bool second;
};

/* 4926 */
struct __cppobj std::allocator<XiStrItemBox>::rebind<XiStrItemBox>
{
};

/* 4927 */
struct __cppobj std::allocator<PktOper<BS_PktGetMyHancoin> *>::rebind<std::_List_nod<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> >::_Node>
{
};

/* 4928 */
struct __cppobj std::allocator<PktOper<BS_PktGetMyHancoin> *>::rebind<std::_List_nod<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> >::_Node *>
{
};

/* 4929 */
struct __cppobj std::allocator<PktOper<BS_PktGetMyHancoin> *>::rebind<PktOper<BS_PktGetMyHancoin> *>
{
};

/* 4930 */
struct __cppobj std::_Tree<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> > : std::_Tree_val<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4931 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<__int64 const ,XiAuctionClient *>,int,std::pair<__int64 const ,XiAuctionClient *> const *,std::pair<__int64 const ,XiAuctionClient *> const &>
{
};

/* 4932 */
struct __cppobj std::_Bidit<std::pair<__int64 const ,XiAuctionClient *>,int,std::pair<__int64 const ,XiAuctionClient *> const *,std::pair<__int64 const ,XiAuctionClient *> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<__int64 const ,XiAuctionClient *>,int,std::pair<__int64 const ,XiAuctionClient *> const *,std::pair<__int64 const ,XiAuctionClient *> const &>
{
};

/* 4933 */
struct __cppobj std::_Tree<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >::const_iterator : std::_Bidit<std::pair<__int64 const ,XiAuctionClient *>,int,std::pair<__int64 const ,XiAuctionClient *> const *,std::pair<__int64 const ,XiAuctionClient *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >::_Node *_Ptr;
};

/* 4934 */
struct __cppobj std::_Tree<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >::const_iterator
{
};

/* 4935 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >::iterator first;
  bool second;
};

/* 4936 */
struct __cppobj std::_List_val<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> > : std::_List_ptr<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> >
{
  std::allocator<PktOper<BS_PktGetVisualItem> *> _Alval;
};

/* 4937 */
struct __cppobj std::list<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> > : std::_List_val<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> >
{
  std::_List_nod<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4938 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,PktOper<BS_PktGetVisualItem> *,int,PktOper<BS_PktGetVisualItem> * const *,PktOper<BS_PktGetVisualItem> * const &>
{
};

/* 4939 */
struct __cppobj std::_Bidit<PktOper<BS_PktGetVisualItem> *,int,PktOper<BS_PktGetVisualItem> * const *,PktOper<BS_PktGetVisualItem> * const &> : std::iterator<std::bidirectional_iterator_tag,PktOper<BS_PktGetVisualItem> *,int,PktOper<BS_PktGetVisualItem> * const *,PktOper<BS_PktGetVisualItem> * const &>
{
};

/* 4940 */
struct __cppobj std::list<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> >::const_iterator : std::_Bidit<PktOper<BS_PktGetVisualItem> *,int,PktOper<BS_PktGetVisualItem> * const *,PktOper<BS_PktGetVisualItem> * const &>
{
  std::_List_nod<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> >::_Node *_Ptr;
};

/* 4941 */
struct __cppobj std::list<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> >::iterator : std::list<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> >::const_iterator
{
};

/* 4942 */
struct __cppobj std::vector<COUPONTYPE_INFO,std::allocator<COUPONTYPE_INFO> > : std::_Vector_val<COUPONTYPE_INFO,std::allocator<COUPONTYPE_INFO> >
{
  COUPONTYPE_INFO *_Myfirst;
  COUPONTYPE_INFO *_Mylast;
  COUPONTYPE_INFO *_Myend;
};

/* 4943 */
struct __cppobj std::vector<COUPONTYPE_INFO,std::allocator<COUPONTYPE_INFO> >::const_iterator : std::_Ranit<COUPONTYPE_INFO,int,COUPONTYPE_INFO const *,COUPONTYPE_INFO const &>
{
  COUPONTYPE_INFO *_Myptr;
};

/* 4944 */
struct __cppobj std::vector<COUPONTYPE_INFO,std::allocator<COUPONTYPE_INFO> >::iterator : std::vector<COUPONTYPE_INFO,std::allocator<COUPONTYPE_INFO> >::const_iterator
{
};

/* 4945 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> >,0> >::iterator first;
  bool second;
};

/* 4946 */
struct __cppobj std::map<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> > > : std::_Tree<std::_Tmap_traits<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> >,0> >
{
};

/* 4947 */
struct __cppobj std::allocator<PktOper<BS_PktUpgradeCar> *>::rebind<std::_List_nod<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> >::_Node>
{
};

/* 4948 */
struct __cppobj std::allocator<PktOper<BS_PktUpgradeCar> *>::rebind<std::_List_nod<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> >::_Node *>
{
};

/* 4949 */
struct __cppobj std::allocator<PktOper<BS_PktUpgradeCar> *>::rebind<PktOper<BS_PktUpgradeCar> *>
{
};

/* 4950 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,BillingConn_USA *,int,BillingConn_USA * const *,BillingConn_USA * const &>
{
};

/* 4951 */
struct __cppobj std::_Bidit<BillingConn_USA *,int,BillingConn_USA * const *,BillingConn_USA * const &> : std::iterator<std::bidirectional_iterator_tag,BillingConn_USA *,int,BillingConn_USA * const *,BillingConn_USA * const &>
{
};

/* 4952 */
struct __cppobj std::list<BillingConn_USA *,std::allocator<BillingConn_USA *> >::const_iterator : std::_Bidit<BillingConn_USA *,int,BillingConn_USA * const *,BillingConn_USA * const &>
{
  std::_List_nod<BillingConn_USA *,std::allocator<BillingConn_USA *> >::_Node *_Ptr;
};

/* 4953 */
struct __cppobj std::list<BillingConn_USA *,std::allocator<BillingConn_USA *> >::iterator : std::list<BillingConn_USA *,std::allocator<BillingConn_USA *> >::const_iterator
{
};

/* 4954 */
struct __cppobj std::map<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> > > : std::_Tree<std::_Tmap_traits<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> >,0> >
{
};

/* 4955 */
struct __cppobj std::map<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> > > : std::_Tree<std::_Tmap_traits<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> >,0> >
{
};

/* 4956 */
struct __cppobj std::_List_val<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> > : std::_List_ptr<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> >
{
  std::allocator<PktOper<BS_PktSendVisualItem> *> _Alval;
};

/* 4957 */
struct __cppobj std::_Ranit<RushEvent *,int,RushEvent * const *,RushEvent * const &> : std::iterator<std::random_access_iterator_tag,RushEvent *,int,RushEvent * const *,RushEvent * const &>
{
};

/* 4958 */
struct __cppobj std::vector<RushEvent *,std::allocator<RushEvent *> >::const_iterator : std::_Ranit<RushEvent *,int,RushEvent * const *,RushEvent * const &>
{
  RushEvent **_Myptr;
};

/* 4959 */
struct __cppobj std::vector<RushEvent *,std::allocator<RushEvent *> >::iterator : std::vector<RushEvent *,std::allocator<RushEvent *> >::const_iterator
{
};

/* 4960 */
struct __cppobj std::map<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> > > : std::_Tree<std::_Tmap_traits<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> >,0> >
{
};

/* 4961 */
struct __cppobj std::vector<XiCsSTItem const *,std::allocator<XiCsSTItem const *> >::const_iterator : std::_Ranit<XiCsSTItem const *,int,XiCsSTItem const * const *,XiCsSTItem const * const &>
{
  XiCsSTItem **_Myptr;
};

/* 4962 */
struct __cppobj std::vector<XiCsSTItem const *,std::allocator<XiCsSTItem const *> >::iterator : std::vector<XiCsSTItem const *,std::allocator<XiCsSTItem const *> >::const_iterator
{
};

/* 4963 */
struct __cppobj std::map<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> > > : std::_Tree<std::_Tmap_traits<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> >,0> >
{
};

/* 4964 */
struct std::pair<std::_Tree<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::iterator,std::_Tree<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::iterator>
{
  std::_Tree<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::iterator first;
  std::_Tree<std::_Tset_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,0> >::iterator second;
};

/* 4965 */
struct __cppobj std::_List_val<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> > : std::_List_ptr<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> >
{
  std::allocator<PktOper<BS_PktUpgradeCar> *> _Alval;
};

/* 4966 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrArbeit> >::rebind<std::pair<unsigned long const ,XiStrArbeit> >
{
};

/* 4967 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrArbeit> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >::_Node>
{
};

/* 4968 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrArbeit> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >::_Node *>
{
};

/* 4969 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrArbeit> >::rebind<unsigned long>
{
};

/* 4970 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrArbeit> >::rebind<char>
{
};

/* 4971 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,PktOper<BS_PktGetMyHancoin> *,int,PktOper<BS_PktGetMyHancoin> * const *,PktOper<BS_PktGetMyHancoin> * const &>
{
};

/* 4972 */
struct __cppobj std::_Bidit<PktOper<BS_PktGetMyHancoin> *,int,PktOper<BS_PktGetMyHancoin> * const *,PktOper<BS_PktGetMyHancoin> * const &> : std::iterator<std::bidirectional_iterator_tag,PktOper<BS_PktGetMyHancoin> *,int,PktOper<BS_PktGetMyHancoin> * const *,PktOper<BS_PktGetMyHancoin> * const &>
{
};

/* 4973 */
struct __cppobj std::list<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> >::const_iterator : std::_Bidit<PktOper<BS_PktGetMyHancoin> *,int,PktOper<BS_PktGetMyHancoin> * const *,PktOper<BS_PktGetMyHancoin> * const &>
{
  std::_List_nod<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> >::_Node *_Ptr;
};

/* 4974 */
struct __cppobj std::list<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> >::iterator : std::list<PktOper<BS_PktGetMyHancoin> *,std::allocator<PktOper<BS_PktGetMyHancoin> *> >::const_iterator
{
};

/* 4975 */
struct __cppobj std::list<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> > : std::_List_val<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> >
{
  std::_List_nod<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4976 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,PktOper<BS_PktSendVisualItem> *,int,PktOper<BS_PktSendVisualItem> * const *,PktOper<BS_PktSendVisualItem> * const &>
{
};

/* 4977 */
struct __cppobj std::_Bidit<PktOper<BS_PktSendVisualItem> *,int,PktOper<BS_PktSendVisualItem> * const *,PktOper<BS_PktSendVisualItem> * const &> : std::iterator<std::bidirectional_iterator_tag,PktOper<BS_PktSendVisualItem> *,int,PktOper<BS_PktSendVisualItem> * const *,PktOper<BS_PktSendVisualItem> * const &>
{
};

/* 4978 */
struct __cppobj std::list<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> >::const_iterator : std::_Bidit<PktOper<BS_PktSendVisualItem> *,int,PktOper<BS_PktSendVisualItem> * const *,PktOper<BS_PktSendVisualItem> * const &>
{
  std::_List_nod<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> >::_Node *_Ptr;
};

/* 4979 */
struct __cppobj std::list<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> >::iterator : std::list<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> >::const_iterator
{
};

/* 4980 */
struct __cppobj std::list<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> > : std::_List_val<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> >
{
  std::_List_nod<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4981 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,PktOper<BS_PktUpgradeCar> *,int,PktOper<BS_PktUpgradeCar> * const *,PktOper<BS_PktUpgradeCar> * const &>
{
};

/* 4982 */
struct __cppobj std::_Bidit<PktOper<BS_PktUpgradeCar> *,int,PktOper<BS_PktUpgradeCar> * const *,PktOper<BS_PktUpgradeCar> * const &> : std::iterator<std::bidirectional_iterator_tag,PktOper<BS_PktUpgradeCar> *,int,PktOper<BS_PktUpgradeCar> * const *,PktOper<BS_PktUpgradeCar> * const &>
{
};

/* 4983 */
struct __cppobj std::list<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> >::const_iterator : std::_Bidit<PktOper<BS_PktUpgradeCar> *,int,PktOper<BS_PktUpgradeCar> * const *,PktOper<BS_PktUpgradeCar> * const &>
{
  std::_List_nod<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> >::_Node *_Ptr;
};

/* 4984 */
struct __cppobj std::list<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> >::iterator : std::list<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> >::const_iterator
{
};

/* 4985 */
struct __cppobj std::vector<XiStrIData,std::allocator<XiStrIData> >::const_iterator : std::_Ranit<XiStrIData,int,XiStrIData const *,XiStrIData const &>
{
  XiStrIData *_Myptr;
};

/* 4986 */
struct __cppobj std::vector<XiStrIData,std::allocator<XiStrIData> >::iterator : std::vector<XiStrIData,std::allocator<XiStrIData> >::const_iterator
{
};

/* 4987 */
struct __cppobj std::map<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> > > : std::_Tree<std::_Tmap_traits<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> >,0> >
{
};

/* 4988 */
struct __cppobj std::allocator<XiStrMessage>::rebind<XiStrMessage>
{
};

/* 4989 */
struct __cppobj std::list<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> > : std::_List_val<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> >
{
  std::_List_nod<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 4990 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,PktOper<BS_PktLoadChar> *,int,PktOper<BS_PktLoadChar> * const *,PktOper<BS_PktLoadChar> * const &>
{
};

/* 4991 */
struct __cppobj std::_Bidit<PktOper<BS_PktLoadChar> *,int,PktOper<BS_PktLoadChar> * const *,PktOper<BS_PktLoadChar> * const &> : std::iterator<std::bidirectional_iterator_tag,PktOper<BS_PktLoadChar> *,int,PktOper<BS_PktLoadChar> * const *,PktOper<BS_PktLoadChar> * const &>
{
};

/* 4992 */
struct __cppobj std::list<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> >::const_iterator : std::_Bidit<PktOper<BS_PktLoadChar> *,int,PktOper<BS_PktLoadChar> * const *,PktOper<BS_PktLoadChar> * const &>
{
  std::_List_nod<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> >::_Node *_Ptr;
};

/* 4993 */
struct __cppobj std::list<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> >::iterator : std::list<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> >::const_iterator
{
};

/* 4994 */
struct PktOperList<BS_PktUpgradeCar>
{
  BS_CriticalSection m_Operlock;
  std::list<PktOper<BS_PktUpgradeCar> *,std::allocator<PktOper<BS_PktUpgradeCar> *> > m_OperList;
};

/* 4995 */
struct __cppobj BS_SingletonHeap<XiRankArbeitPlayerMgr,5>
{
};

/* 4996 */
struct XiRankCategoryMgr<XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> >
{
  XiRankCategoryMgr<XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> >Vtbl *vfptr;
  std::map<unsigned long,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> *> > > m_CategoryMap[6];
};

/* 4997 */
struct XiRankCategoryMgr<XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> >Vtbl
{
  bool (__thiscall *UpdateRank)(XiRankCategoryMgr<XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> > *this);
};

/* 4998 */
struct __cppobj XiRankArbeitPlayerMgr : XiRankCategoryMgr<XiRankPlayerCategory<XiRankArbeitPlayer,unsigned long,__int64> >, BS_SingletonHeap<XiRankArbeitPlayerMgr,5>
{
  _BYTE gap4C[1];
  int m_nextWeekResetTime;
  int m_nextMonthResetTime;
  int m_nextYearResetTime;
};

/* 4999 */
struct __cppobj BS_SingletonHeap<XiQuestTable,5>
{
};

/* 5000 */
struct __cppobj XiQuestTable : BS_SingletonHeap<XiQuestTable,5>
{
  std::map<unsigned long,XiStrQuest,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrQuest> > > m_QuestTable;
};

/* 5001 */
struct __cppobj BS_SingletonHeap<XiVisualItemTable,5>
{
};

/* 5002 */
struct __cppobj XiVisualItemMap : XiVisualItemListContainer
{
  std::map<unsigned long,XIVISUALITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XIVISUALITEM_INFO> > > m_Table;
};

/* 5003 */
struct XiVisualShopMgr
{
  std::map<unsigned long,XiVShop::ITEM_INFO,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiVShop::ITEM_INFO> > > m_mapVShopItem;
  std::vector<XiVShop::ITEM_CATEGORY,std::allocator<XiVShop::ITEM_CATEGORY> > m_vecItemCategory;
};

/* 5004 */
struct __cppobj XiVisualItemTable : BS_SingletonHeap<XiVisualItemTable,5>
{
  XiVisualItemMap m_VisualItemMap;
  XiVisualShopMgr m_VisualShopMgr;
};

/* 5005 */
struct __cppobj BS_SingletonHeap<XiMita500,5>
{
};

/* 5006 */
struct __cppobj XiMita500 : BS_SingletonHeap<XiMita500,5>
{
  BS_CriticalSection m_cLuckyTimeBlock;
  std::map<int,XiMita500InfoBox,std::less<int>,std::allocator<std::pair<int const ,XiMita500InfoBox> > > m_Mita500InfoBoxList;
  int m_nextResetTime;
  int m_prevResetTime;
  int m_LuckyTime;
  int m_nextResetLuckyTime;
  int m_prevResetLuckyTime;
  int *m_pResetLuckyTime;
  bool m_bReserve10Buff;
  unsigned int m_MitaBuff10Rate;
  XiMita500InfoBox *m_pMita500InfoBox[100];
  BS_Buffer *m_pBuffer;
};

/* 5007 */
struct __cppobj BS_SingletonHeap<XiCouponParamTable,5>
{
};

/* 5008 */
struct __cppobj XiCouponParamTable : BS_SingletonHeap<XiCouponParamTable,5>
{
  std::map<unsigned long,XiCouponParamWithID,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiCouponParamWithID> > > m_CouponParamTable;
};

/* 5009 */
struct __cppobj BS_SingletonHeap<XiAuctionClientMgr,5>
{
};

/* 5010 */
struct __cppobj XiAuctionClientMgr : BS_SingletonHeap<XiAuctionClientMgr,5>
{
  BS_CriticalSection m_lock;
  std::map<__int64,XiAuctionClient *,std::less<__int64>,std::allocator<std::pair<__int64 const ,XiAuctionClient *> > > m_AuctionClientTable;
};

/* 5011 */
struct XiCouponTypeListContainer
{
  XiCouponTypeListContainerVtbl *vfptr;
};

/* 5012 */
struct XiCouponTypeListContainerVtbl
{
  void (__thiscall *Add)(XiCouponTypeListContainer *this, COUPONTYPE_INFO *);
};

/* 5013 */
struct __cppobj ItemDataSender : std::vector<XiStrIData,std::allocator<XiStrIData> >
{
  BS_GameDispatch *m_pGameDispatch;
};

/* 5014 */
struct PktOperList<BS_PktBuyVisualItem>
{
  BS_CriticalSection m_Operlock;
  std::list<PktOper<BS_PktBuyVisualItem> *,std::allocator<PktOper<BS_PktBuyVisualItem> *> > m_OperList;
};

/* 5015 */
struct __cppobj BS_SingletonHeap<XiAuctionMgr,5>
{
};

/* 5016 */
struct __cppobj XiAuctionMgr : BS_SingletonHeap<XiAuctionMgr,5>
{
  BS_CriticalSection m_lock;
  int m_State;
  int m_SearchCount;
  std::map<unsigned long,XiAuctionItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionItem *> > > m_AuctionItemTable;
  __int64 m_AuctionSerial;
  bool (__cdecl *m_SortFuncs[14])(XiAuctionItem *, XiAuctionItem *);
  std::vector<XiAuctionItem *,std::allocator<XiAuctionItem *> > m_SortList[14];
  bool (__cdecl *m_SearchFuncs[4])(XiAuctionItem *, wchar_t *);
};

/* 5017 */
struct StartPos
{
  XiVec4 start;
  XiVec4 end;
  XiVec4 dir;
};

/* 5018 */
struct __cppobj XiCouponMap : XiCouponTypeListContainer
{
  std::vector<COUPONTYPE_INFO,std::allocator<COUPONTYPE_INFO> > m_Table;
};

/* 5019 */
struct HashedVector<BS_GameDispatch *,16,16>::Lock
{
  HashedVector<BS_GameDispatch *,16,16>::Monitor *m_pMonitor;
};

/* 5020 */
struct __cppobj BS_SingletonHeap<XiArbeitTable,5>
{
};

/* 5021 */
struct __cppobj XiArbeitTable : BS_SingletonHeap<XiArbeitTable,5>
{
  std::map<unsigned long,XiStrArbeit,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrArbeit> > > m_ArbeitTable;
  int m_ArbeitSerial;
};

/* 5022 */
struct PktOperList<BS_PktSendVisualItem>
{
  BS_CriticalSection m_Operlock;
  std::list<PktOper<BS_PktSendVisualItem> *,std::allocator<PktOper<BS_PktSendVisualItem> *> > m_OperList;
};

/* 5023 */
struct PktOperList<BS_PktGetVisualItem>
{
  BS_CriticalSection m_Operlock;
  std::list<PktOper<BS_PktGetVisualItem> *,std::allocator<PktOper<BS_PktGetVisualItem> *> > m_OperList;
};

/* 5024 */
struct HashedVector<RushEvent *,16,16>::Lock
{
  HashedVector<RushEvent *,16,16>::Monitor *m_pMonitor;
};

/* 5025 */
struct __cppobj BS_SingletonHeap<XiUnderCityPatrolTable,5>
{
};

/* 5026 */
struct __cppobj XiUnderCityPatrolTable : BS_SingletonHeap<XiUnderCityPatrolTable,5>
{
  std::map<unsigned long,XiStrUCPatrol,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrUCPatrol> > > m_PatrolTable;
};

/* 5027 */
struct LockMessageBuffer<BS_PktItemDataList>
{
  BS_PktItemDataList *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 5028 */
struct __cppobj BS_SingletonHeap<XiBillingMgr,2>
{
};

/* 5029 */
struct __cppobj XiBillingMgr : BS_SingletonHeap<XiBillingMgr,2>
{
  BillingConnPool m_BillingCoonPool1;
  BillingConnPool m_BillingCoonPool2;
  BillingConnPool m_BillingCoonPool3;
};

/* 5030 */
struct __cppobj WebCallTestReq : WebCallReq
{
  int m_SessionId;
};

/* 5031 */
struct __cppobj WebCallCheckForInvited : WebCallReq
{
  __int64 cid;
};

/* 5032 */
struct __cppobj BS_SingletonHeap<XiCouponTable,5>
{
};

/* 5033 */
struct __cppobj XiCouponTable : BS_SingletonHeap<XiCouponTable,5>
{
  XiCouponMap m_CouponMap;
};

/* 5034 */
struct __cppobj BS_SingletonHeap<XiAuctionCarMgr,5>
{
};

/* 5035 */
struct __cppobj XiAuctionCarMgr : BS_SingletonHeap<XiAuctionCarMgr,5>
{
  BS_CriticalSection m_lock;
  int m_State;
  int m_SearchCount;
  std::map<unsigned long,XiAuctionCar *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiAuctionCar *> > > m_AuctionCarTable;
  __int64 m_AuctionSerial;
  bool (__cdecl *m_SortFuncs[14])(XiAuctionCar *, XiAuctionCar *);
  std::vector<XiAuctionCar *,std::allocator<XiAuctionCar *> > m_SortList[14];
  bool (__cdecl *m_SearchFuncs[4])(XiAuctionCar *, wchar_t *);
};

/* 5036 */
struct PktOperList<BS_PktLoadChar>
{
  BS_CriticalSection m_Operlock;
  std::list<PktOper<BS_PktLoadChar> *,std::allocator<PktOper<BS_PktLoadChar> *> > m_OperList;
};

/* 5037 */
struct __cppobj BS_SingletonHeap<XiPktOperMgr,2>
{
};

/* 5038 */
struct __cppobj XiPktOperMgr : BS_SingletonHeap<XiPktOperMgr,2>
{
  PktOperList<BS_PktGetMyHancoin> m_GetMyHancoinOperList;
  PktOperList<BS_PktBuyVisualItem> m_BuyVisualItemOperList;
  PktOperList<BS_PktSendVisualItem> m_SendVisualItemOperList;
  PktOperList<BS_PktGetVisualItem> m_GetVisualItemOperList;
  PktOperList<BS_PktLoadChar> m_LoadCharOperList;
  PktOperList<BS_PktUpgradeCar> m_UpgradeCarOperList;
};

/* 5039 */
struct __cppobj BS_SingletonHeap<XiBillingMgr_USA,2>
{
};

/* 5040 */
struct __cppobj XiBillingMgr_USA : BS_SingletonHeap<XiBillingMgr_USA,2>
{
  std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > m_Config;
  BillingConnPool_USA m_BillingCoonPool1;
  BillingConnPool_USA m_BillingCoonPool2;
  BillingConnPool_USA m_BillingCoonPool3;
};

/* 5041 */
struct LockMessageBuffer<BS_PktMyStickerListAck>
{
  BS_PktMyStickerListAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 5042 */
struct AdminTable
{
  BS_SwitchableRef<std::set<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > m_adminTable;
};

/* 5043 */
struct __cppobj BS_DevOverlapped : BS_Overlapped
{
  BS_PacketDispatch *m_pDispatch;
  std::basic_ostream<unsigned short,std::char_traits<unsigned short> > *m_pStream;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > m_CmdStr;
};

/* 5044 */
struct LockMessageBuffer<BS_PktItemListAck>
{
  BS_PktItemListAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 5045 */
struct __cppobj BS_RecvOverlappedForIOCP : BS_OverlappedPendding
{
  BS_Session *m_pSession;
};

/* 5046 */
struct __cppobj std::_Allocator_base<std::pair<int,unsigned long> >
{
};

/* 5047 */
struct __cppobj std::allocator<std::pair<int,unsigned long> > : std::_Allocator_base<std::pair<int,unsigned long> >
{
};

/* 5048 */
struct std::_Vector_val<std::pair<int,unsigned long>,std::allocator<std::pair<int,unsigned long> > >
{
  std::allocator<std::pair<int,unsigned long> > _Alval;
};

/* 5049 */
struct std::pair<int,unsigned long>
{
  int first;
  unsigned int second;
};

/* 5050 */
struct __cppobj std::vector<std::pair<int,unsigned long>,std::allocator<std::pair<int,unsigned long> > > : std::_Vector_val<std::pair<int,unsigned long>,std::allocator<std::pair<int,unsigned long> > >
{
  std::pair<int,unsigned long> *_Myfirst;
  std::pair<int,unsigned long> *_Mylast;
  std::pair<int,unsigned long> *_Myend;
};

/* 5051 */
struct __cppobj std::iterator<std::random_access_iterator_tag,std::pair<int,unsigned long>,int,std::pair<int,unsigned long> const *,std::pair<int,unsigned long> const &>
{
};

/* 5052 */
struct __cppobj std::_Ranit<std::pair<int,unsigned long>,int,std::pair<int,unsigned long> const *,std::pair<int,unsigned long> const &> : std::iterator<std::random_access_iterator_tag,std::pair<int,unsigned long>,int,std::pair<int,unsigned long> const *,std::pair<int,unsigned long> const &>
{
};

/* 5053 */
struct __cppobj std::vector<std::pair<int,unsigned long>,std::allocator<std::pair<int,unsigned long> > >::const_iterator : std::_Ranit<std::pair<int,unsigned long>,int,std::pair<int,unsigned long> const *,std::pair<int,unsigned long> const &>
{
  std::pair<int,unsigned long> *_Myptr;
};

/* 5054 */
struct __cppobj std::vector<std::pair<int,unsigned long>,std::allocator<std::pair<int,unsigned long> > >::iterator : std::vector<std::pair<int,unsigned long>,std::allocator<std::pair<int,unsigned long> > >::const_iterator
{
};

/* 5055 */
struct std::pair<int,int>
{
  int first;
  int second;
};

/* 5056 */
struct __cppobj std::allocator<std::pair<int,unsigned long> >::rebind<std::pair<int,unsigned long> >
{
};

/* 5057 */
struct BS_Ticket
{
  unsigned int m_Serial;
  XiStrUserPermission m_Permission;
  wchar_t m_MemberId[40];
};

/* 5058 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_Game *,std::allocator<BS_Game *> >::_Node>
{
};

/* 5059 */
struct __cppobj std::allocator<std::_List_nod<BS_Game *,std::allocator<BS_Game *> >::_Node> : std::_Allocator_base<std::_List_nod<BS_Game *,std::allocator<BS_Game *> >::_Node>
{
};

/* 5060 */
struct std::_List_nod<BS_Game *,std::allocator<BS_Game *> >
{
  std::allocator<std::_List_nod<BS_Game *,std::allocator<BS_Game *> >::_Node> _Alnod;
};

/* 5061 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_Game *,std::allocator<BS_Game *> >::_Node *>
{
};

/* 5062 */
struct __cppobj std::allocator<std::_List_nod<BS_Game *,std::allocator<BS_Game *> >::_Node *> : std::_Allocator_base<std::_List_nod<BS_Game *,std::allocator<BS_Game *> >::_Node *>
{
};

/* 5063 */
struct __cppobj std::_List_ptr<BS_Game *,std::allocator<BS_Game *> > : std::_List_nod<BS_Game *,std::allocator<BS_Game *> >
{
  std::allocator<std::_List_nod<BS_Game *,std::allocator<BS_Game *> >::_Node *> _Alptr;
};

/* 5064 */
struct __cppobj std::_Allocator_base<BS_Game *>
{
};

/* 5065 */
struct __cppobj std::allocator<BS_Game *> : std::_Allocator_base<BS_Game *>
{
};

/* 5066 */
struct __cppobj std::_List_val<BS_Game *,std::allocator<BS_Game *> > : std::_List_ptr<BS_Game *,std::allocator<BS_Game *> >
{
  std::allocator<BS_Game *> _Alval;
};

/* 5067 */
struct std::_List_nod<BS_Game *,std::allocator<BS_Game *> >::_Node
{
  std::_List_nod<BS_Game *,std::allocator<BS_Game *> >::_Node *_Next;
  std::_List_nod<BS_Game *,std::allocator<BS_Game *> >::_Node *_Prev;
  BS_Game *_Myval;
};

/* 5068 */
struct __cppobj std::list<BS_Game *,std::allocator<BS_Game *> > : std::_List_val<BS_Game *,std::allocator<BS_Game *> >
{
  std::_List_nod<BS_Game *,std::allocator<BS_Game *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 5069 */
struct __cppobj BS_GamePool : std::list<BS_Game *,std::allocator<BS_Game *> >
{
  BS_CriticalSection m_lock;
  int m_Size;
};

/* 5070 */
struct std::_List_nod<BS_Ticket *,std::allocator<BS_Ticket *> >::_Node
{
  std::_List_nod<BS_Ticket *,std::allocator<BS_Ticket *> >::_Node *_Next;
  std::_List_nod<BS_Ticket *,std::allocator<BS_Ticket *> >::_Node *_Prev;
  BS_Ticket *_Myval;
};

/* 5071 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_Ticket *,std::allocator<BS_Ticket *> >::_Node>
{
};

/* 5072 */
struct __cppobj std::allocator<std::_List_nod<BS_Ticket *,std::allocator<BS_Ticket *> >::_Node> : std::_Allocator_base<std::_List_nod<BS_Ticket *,std::allocator<BS_Ticket *> >::_Node>
{
};

/* 5073 */
struct std::_List_nod<BS_Ticket *,std::allocator<BS_Ticket *> >
{
  std::allocator<std::_List_nod<BS_Ticket *,std::allocator<BS_Ticket *> >::_Node> _Alnod;
};

/* 5074 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_Ticket *,std::allocator<BS_Ticket *> >::_Node *>
{
};

/* 5075 */
struct __cppobj std::allocator<std::_List_nod<BS_Ticket *,std::allocator<BS_Ticket *> >::_Node *> : std::_Allocator_base<std::_List_nod<BS_Ticket *,std::allocator<BS_Ticket *> >::_Node *>
{
};

/* 5076 */
struct __cppobj std::_List_ptr<BS_Ticket *,std::allocator<BS_Ticket *> > : std::_List_nod<BS_Ticket *,std::allocator<BS_Ticket *> >
{
  std::allocator<std::_List_nod<BS_Ticket *,std::allocator<BS_Ticket *> >::_Node *> _Alptr;
};

/* 5077 */
struct __cppobj std::_Allocator_base<BS_Ticket *>
{
};

/* 5078 */
struct __cppobj std::allocator<BS_Ticket *> : std::_Allocator_base<BS_Ticket *>
{
};

/* 5079 */
struct __cppobj std::_List_val<BS_Ticket *,std::allocator<BS_Ticket *> > : std::_List_ptr<BS_Ticket *,std::allocator<BS_Ticket *> >
{
  std::allocator<BS_Ticket *> _Alval;
};

/* 5080 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,BS_Game *,int,BS_Game * const *,BS_Game * const &>
{
};

/* 5081 */
struct __cppobj std::_Bidit<BS_Game *,int,BS_Game * const *,BS_Game * const &> : std::iterator<std::bidirectional_iterator_tag,BS_Game *,int,BS_Game * const *,BS_Game * const &>
{
};

/* 5082 */
struct __cppobj std::list<BS_Game *,std::allocator<BS_Game *> >::const_iterator : std::_Bidit<BS_Game *,int,BS_Game * const *,BS_Game * const &>
{
  std::_List_nod<BS_Game *,std::allocator<BS_Game *> >::_Node *_Ptr;
};

/* 5083 */
struct __cppobj std::list<BS_Game *,std::allocator<BS_Game *> >::iterator : std::list<BS_Game *,std::allocator<BS_Game *> >::const_iterator
{
};

/* 5084 */
struct __cppobj std::allocator<BS_Ticket *>::rebind<std::_List_nod<BS_Ticket *,std::allocator<BS_Ticket *> >::_Node>
{
};

/* 5085 */
struct __cppobj std::allocator<BS_Ticket *>::rebind<std::_List_nod<BS_Ticket *,std::allocator<BS_Ticket *> >::_Node *>
{
};

/* 5086 */
struct __cppobj std::allocator<BS_Ticket *>::rebind<BS_Ticket *>
{
};

/* 5087 */
struct __cppobj std::list<BS_Ticket *,std::allocator<BS_Ticket *> > : std::_List_val<BS_Ticket *,std::allocator<BS_Ticket *> >
{
  std::_List_nod<BS_Ticket *,std::allocator<BS_Ticket *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 5088 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,BS_Ticket *,int,BS_Ticket * const *,BS_Ticket * const &>
{
};

/* 5089 */
struct __cppobj std::_Bidit<BS_Ticket *,int,BS_Ticket * const *,BS_Ticket * const &> : std::iterator<std::bidirectional_iterator_tag,BS_Ticket *,int,BS_Ticket * const *,BS_Ticket * const &>
{
};

/* 5090 */
struct __cppobj std::list<BS_Ticket *,std::allocator<BS_Ticket *> >::const_iterator : std::_Bidit<BS_Ticket *,int,BS_Ticket * const *,BS_Ticket * const &>
{
  std::_List_nod<BS_Ticket *,std::allocator<BS_Ticket *> >::_Node *_Ptr;
};

/* 5091 */
struct __cppobj std::list<BS_Ticket *,std::allocator<BS_Ticket *> >::iterator : std::list<BS_Ticket *,std::allocator<BS_Ticket *> >::const_iterator
{
};

/* 5092 */
struct __cppobj std::allocator<BS_Game *>::rebind<std::_List_nod<BS_Game *,std::allocator<BS_Game *> >::_Node>
{
};

/* 5093 */
struct __cppobj std::allocator<BS_Game *>::rebind<std::_List_nod<BS_Game *,std::allocator<BS_Game *> >::_Node *>
{
};

/* 5094 */
struct __cppobj std::allocator<BS_Game *>::rebind<BS_Game *>
{
};

/* 5095 */
struct __cppobj BS_SingletonHeap<XiDummyCharInfoBox,2>
{
};

/* 5096 */
struct __cppobj XiDummyCharInfoBox : BS_SingletonHeap<XiDummyCharInfoBox,2>
{
  BS_CriticalSection m_InfoBoxLock;
  stdext::hash_map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,XiCsCharInfo *,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiCsCharInfo *> > > m_CharInfoList;
};

/* 5097 */
struct __cppobj BS_SingletonHeap<BS_TicketMgr,5>
{
};

/* 5098 */
struct __cppobj BS_TicketMgr : BS_SingletonHeap<BS_TicketMgr,5>
{
  std::list<BS_Ticket *,std::allocator<BS_Ticket *> > m_TicketList;
};

/* 5099 */
struct __declspec(align(8)) XiStickerData
{
  int lastTime;
  __int64 stickerId;
  __int64 bigImageId;
  wchar_t SName[32];
  __int64 cid;
  wchar_t CName[32];
  int Category;
  int Rate;
  int DeltaRate;
};

/* 5100 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiStickerData *,int,XiStickerData * const *,XiStickerData * const &>
{
};

/* 5101 */
struct __cppobj std::iterator<std::random_access_iterator_tag,__int64,int,__int64 const *,__int64 const &>
{
};

/* 5102 */
struct __cppobj std::allocator<XiMyStickerData>::rebind<XiMyStickerData>
{
};

/* 5103 */
struct __cppobj std::_Ranit<__int64,int,__int64 const *,__int64 const &> : std::iterator<std::random_access_iterator_tag,__int64,int,__int64 const *,__int64 const &>
{
};

/* 5104 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiMyStickerData,int,XiMyStickerData const *,XiMyStickerData const &>
{
};

/* 5105 */
struct __cppobj std::_Ranit<XiMyStickerData,int,XiMyStickerData const *,XiMyStickerData const &> : std::iterator<std::random_access_iterator_tag,XiMyStickerData,int,XiMyStickerData const *,XiMyStickerData const &>
{
};

/* 5106 */
struct __cppobj std::vector<XiMyStickerData,std::allocator<XiMyStickerData> >::const_iterator : std::_Ranit<XiMyStickerData,int,XiMyStickerData const *,XiMyStickerData const &>
{
  XiMyStickerData *_Myptr;
};

/* 5107 */
struct __cppobj std::vector<XiMyStickerData,std::allocator<XiMyStickerData> >::iterator : std::vector<XiMyStickerData,std::allocator<XiMyStickerData> >::const_iterator
{
};

/* 5108 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiMyStickerData,int,XiMyStickerData *,XiMyStickerData &>
{
};

/* 5109 */
struct __cppobj std::reverse_iterator<std::vector<XiMyStickerData,std::allocator<XiMyStickerData> >::iterator> : std::iterator<std::random_access_iterator_tag,XiMyStickerData,int,XiMyStickerData *,XiMyStickerData &>
{
  std::vector<XiMyStickerData,std::allocator<XiMyStickerData> >::iterator current;
};

/* 5110 */
struct std::_Temp_iterator<XiStickerData *>::_Bufpar
{
  XiStickerData **_Begin;
  XiStickerData **_Current;
  XiStickerData **_Hiwater;
  int _Size;
};

/* 5111 */
struct __cppobj std::_Temp_iterator<XiStickerData *> : std::_Outit
{
  std::_Temp_iterator<XiStickerData *>::_Bufpar _Buf;
  std::_Temp_iterator<XiStickerData *>::_Bufpar *_Pbuf;
};

/* 5112 */
struct std::pair<XiStickerData * *,int>
{
  XiStickerData **first;
  int second;
};

/* 5113 */
struct __cppobj std::allocator<__int64>::rebind<__int64>
{
};

/* 5114 */
struct __cppobj std::_Ranit<XiStickerData *,int,XiStickerData * const *,XiStickerData * const &> : std::iterator<std::random_access_iterator_tag,XiStickerData *,int,XiStickerData * const *,XiStickerData * const &>
{
};

/* 5115 */
struct __cppobj std::_Allocator_base<XiStickerData *>
{
};

/* 5116 */
struct __cppobj std::allocator<XiStickerData *> : std::_Allocator_base<XiStickerData *>
{
};

/* 5117 */
struct std::_Vector_val<XiStickerData *,std::allocator<XiStickerData *> >
{
  std::allocator<XiStickerData *> _Alval;
};

/* 5118 */
struct __cppobj std::vector<XiStickerData *,std::allocator<XiStickerData *> > : std::_Vector_val<XiStickerData *,std::allocator<XiStickerData *> >
{
  XiStickerData **_Myfirst;
  XiStickerData **_Mylast;
  XiStickerData **_Myend;
};

/* 5119 */
struct __cppobj std::vector<XiStickerData *,std::allocator<XiStickerData *> >::const_iterator : std::_Ranit<XiStickerData *,int,XiStickerData * const *,XiStickerData * const &>
{
  XiStickerData **_Myptr;
};

/* 5120 */
struct __cppobj std::vector<XiStickerData *,std::allocator<XiStickerData *> >::iterator : std::vector<XiStickerData *,std::allocator<XiStickerData *> >::const_iterator
{
};

/* 5121 */
struct std::_Vector_val<__int64,std::allocator<__int64> >
{
  std::allocator<__int64> _Alval;
};

/* 5122 */
struct __cppobj std::vector<__int64,std::allocator<__int64> > : std::_Vector_val<__int64,std::allocator<__int64> >
{
  __int64 *_Myfirst;
  __int64 *_Mylast;
  __int64 *_Myend;
};

/* 5123 */
struct __cppobj std::vector<__int64,std::allocator<__int64> >::const_iterator : std::_Ranit<__int64,int,__int64 const *,__int64 const &>
{
  __int64 *_Myptr;
};

/* 5124 */
struct __cppobj std::vector<__int64,std::allocator<__int64> >::iterator : std::vector<__int64,std::allocator<__int64> >::const_iterator
{
};

/* 5125 */
struct __cppobj std::allocator<XiStickerData *>::rebind<XiStickerData *>
{
};

/* 5126 */
struct std::pair<std::vector<XiStickerData *,std::allocator<XiStickerData *> >::iterator,std::vector<XiStickerData *,std::allocator<XiStickerData *> >::iterator>
{
  std::vector<XiStickerData *,std::allocator<XiStickerData *> >::iterator first;
  std::vector<XiStickerData *,std::allocator<XiStickerData *> >::iterator second;
};

/* 5127 */
struct std::pair<__int64 *,int>
{
  __int64 *first;
  int second;
};

/* 5128 */
struct __cppobj std::nothrow_t
{
};

/* 5129 */
struct std::_Temp_iterator<__int64>::_Bufpar
{
  __int64 *_Begin;
  __int64 *_Current;
  __int64 *_Hiwater;
  int _Size;
};

/* 5130 */
struct __cppobj std::_Temp_iterator<__int64> : std::_Outit
{
  std::_Temp_iterator<__int64>::_Bufpar _Buf;
  std::_Temp_iterator<__int64>::_Bufpar *_Pbuf;
};

/* 5131 */
struct __cppobj XiStickerBox::LongLongCmp
{
};

/* 5132 */
struct __cppobj SortedVector<__int64,XiStickerBox::LongLongCmp> : std::vector<__int64,std::allocator<__int64> >
{
  unsigned int m_sorted;
};

/* 5133 */
struct __cppobj XiStickerList::StickerCNameCmp
{
};

/* 5134 */
struct __cppobj SortedVector<XiStickerData *,XiStickerList::StickerCNameCmp> : std::vector<XiStickerData *,std::allocator<XiStickerData *> >
{
  unsigned int m_sorted;
};

/* 5135 */
struct XiStickerList::Monitor
{
  _RTL_CRITICAL_SECTION m_cs;
};

/* 5136 */
struct XiStickerList::Lock
{
  XiStickerList::Monitor *m_pMonitor;
};

/* 5137 */
struct __cppobj XiStickerList::StickerIdCmp
{
};

/* 5138 */
struct __cppobj XiStickerList::StickerNameCmp
{
};

/* 5139 */
struct __cppobj XiStickerList::StickerRateCmp
{
};

/* 5140 */
struct __cppobj SortedVector<XiStickerData *,XiStickerList::StickerIdCmp> : std::vector<XiStickerData *,std::allocator<XiStickerData *> >
{
  unsigned int m_sorted;
};

/* 5141 */
struct __cppobj SortedVector<XiStickerData *,XiStickerList::StickerNameCmp> : std::vector<XiStickerData *,std::allocator<XiStickerData *> >
{
  unsigned int m_sorted;
};

/* 5142 */
struct __cppobj SortedVector<XiStickerData *,XiStickerList::StickerRateCmp> : std::vector<XiStickerData *,std::allocator<XiStickerData *> >
{
  unsigned int m_sorted;
};

/* 5143 */
struct XiStickerList
{
  XiStickerList::Monitor m_monitor;
  int m_UpdateTime;
  SortedVector<XiStickerData *,XiStickerList::StickerIdCmp> m_stIdTable;
  SortedVector<XiStickerData *,XiStickerList::StickerNameCmp> m_stNameTable;
  SortedVector<XiStickerData *,XiStickerList::StickerCNameCmp> m_stCNameTable;
  SortedVector<XiStickerData *,XiStickerList::StickerRateCmp> m_stRateTable;
};

/* 5144 */
struct XiStickerBox::Monitor
{
  _RTL_CRITICAL_SECTION m_cs;
};

/* 5145 */
struct XiStickerBox
{
  XiStickerList m_stickerList[20];
  XiStickerBox::Monitor m_monitor;
  SortedVector<__int64,XiStickerBox::LongLongCmp> m_badSticker;
};

/* 5146 */
struct XiStickerBox::Lock
{
  XiStickerBox::Monitor *m_pMonitor;
};

/* 5147 */
struct XiMyStickerData::Is
{
  __int64 stickerId;
};

/* 5148 */
struct __cppobj XiMyStickerData::StickerIdCmp
{
};

/* 5149 */
struct __cppobj XiMyStickerData::StickerNameCmp
{
};

/* 5150 */
struct __cppobj XiMyStickerData::StickerRateCmp
{
};

/* 5151 */
struct std::pair<unsigned long,DBOperStatic>
{
  unsigned int first;
  DBOperStatic second;
};

/* 5152 */
struct LockMessageBuffer<BS_PktGetRoomInfoAck>
{
  BS_PktGetRoomInfoAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 5153 */
struct LockMessageBuffer<BS_PktCBattleState>
{
  BS_PktCBattleState *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 5154 */
struct LockMessageBuffer<BS_PktCBattleMissedItems>
{
  BS_PktCBattleMissedItems *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 5155 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiCBattleItemInfo *,int,XiCBattleItemInfo * const *,XiCBattleItemInfo * const &>
{
};

/* 5156 */
struct __cppobj std::_Allocator_base<XiCBattleItemInfo *>
{
};

/* 5157 */
struct __cppobj std::allocator<XiCBattleItemInfo *> : std::_Allocator_base<XiCBattleItemInfo *>
{
};

/* 5158 */
struct std::_Vector_val<XiCBattleItemInfo *,std::allocator<XiCBattleItemInfo *> >
{
  std::allocator<XiCBattleItemInfo *> _Alval;
};

/* 5159 */
struct __cppobj std::vector<XiCBattleItemInfo *,std::allocator<XiCBattleItemInfo *> > : std::_Vector_val<XiCBattleItemInfo *,std::allocator<XiCBattleItemInfo *> >
{
  XiCBattleItemInfo **_Myfirst;
  XiCBattleItemInfo **_Mylast;
  XiCBattleItemInfo **_Myend;
};

/* 5160 */
struct __cppobj std::_Ranit<XiCBattleItemInfo *,int,XiCBattleItemInfo * const *,XiCBattleItemInfo * const &> : std::iterator<std::random_access_iterator_tag,XiCBattleItemInfo *,int,XiCBattleItemInfo * const *,XiCBattleItemInfo * const &>
{
};

/* 5161 */
struct __cppobj std::vector<XiCBattleItemInfo *,std::allocator<XiCBattleItemInfo *> >::const_iterator : std::_Ranit<XiCBattleItemInfo *,int,XiCBattleItemInfo * const *,XiCBattleItemInfo * const &>
{
  XiCBattleItemInfo **_Myptr;
};

/* 5162 */
struct __cppobj std::vector<XiCBattleItemInfo *,std::allocator<XiCBattleItemInfo *> >::iterator : std::vector<XiCBattleItemInfo *,std::allocator<XiCBattleItemInfo *> >::const_iterator
{
};

/* 5163 */
struct __cppobj std::allocator<XiCBattleItemInfo *>::rebind<XiCBattleItemInfo *>
{
};

/* 5164 */
struct __cppobj apDebugSinkConsole : apDebugSink
{
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > buffer_;
};

/* 5165 */
struct __cppobj apDebugSinkFile : apDebugSinkConsole
{
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > file_;
};

/* 5166 */
struct __cppobj std::codecvt<char,char,int> : std::codecvt_base
{
};

/* 5167 */
struct __cppobj std::basic_filebuf<char,std::char_traits<char> > : std::basic_streambuf<char,std::char_traits<char> >
{
  std::codecvt<char,char,int> *_Pcvt;
  int _State0;
  char _Mychar;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > *_Mystr;
  bool _Wrotesome;
  int _State;
  bool _Closef;
  _iobuf *_Myfile;
};

/* 5168 */
struct __cppobj __declspec(align(4)) std::basic_ofstream<char,std::char_traits<char> > : std::basic_ostream<char,std::char_traits<char> >
{
  _BYTE _Filebuffer[40];
  _BYTE gap60[52];
};

/* 5169 */
struct CHCrypter
{
  bool m_bIsFileOpen;
  unsigned __int16 m_strFileName[256];
  char *m_ptrFile;
  int m_dwFileLen;
};

/* 5170 */
struct XiTrafficMgr
{
  XiPathIndex m_pathIndex[10][32];
};

/* 5171 */
struct tagEMR
{
  unsigned int iType;
  unsigned int nSize;
};

/* 5172 */
struct _RECTL
{
  int left;
  int top;
  int right;
  int bottom;
};

/* 5173 */
struct tagEMRPOLYLINE
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cptl;
  _POINTL aptl[1];
};

/* 5174 */
struct tagXFORM
{
  float eM11;
  float eM12;
  float eM21;
  float eM22;
  float eDx;
  float eDy;
};

/* 5175 */
struct tagEMRTRANSPARENTBLT
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int cxDest;
  int cyDest;
  unsigned int dwRop;
  int xSrc;
  int ySrc;
  tagXFORM xformSrc;
  unsigned int crBkColorSrc;
  unsigned int iUsageSrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  int cxSrc;
  int cySrc;
};

/* 5176 */
struct _TAPE_SET_DRIVE_PARAMETERS
{
  char ECC;
  char Compression;
  char DataPadding;
  char ReportSetmarks;
  unsigned int EOTWarningZoneSize;
};

/* 5177 */
struct tagCBTACTIVATESTRUCT
{
  int fMouse;
  HWND__ *hWndActive;
};

/* 5178 */
struct _NETRESOURCEW
{
  unsigned int dwScope;
  unsigned int dwType;
  unsigned int dwDisplayType;
  unsigned int dwUsage;
  unsigned __int16 *lpLocalName;
  unsigned __int16 *lpRemoteName;
  unsigned __int16 *lpComment;
  unsigned __int16 *lpProvider;
};

/* 5179 */
struct _QUERY_SERVICE_CONFIGA
{
  unsigned int dwServiceType;
  unsigned int dwStartType;
  unsigned int dwErrorControl;
  char *lpBinaryPathName;
  char *lpLoadOrderGroup;
  unsigned int dwTagId;
  char *lpDependencies;
  char *lpServiceStartName;
  char *lpDisplayName;
};

/* 5180 */
struct _TOKEN_PRIMARY_GROUP
{
  void *PrimaryGroup;
};

/* 5181 */
struct $2ACC251678A70CC660B42C50BE23747A
{
  void *hMem;
  unsigned int dwReserved[3];
};

/* 5182 */
struct $03A236B16FC15461493BD6ADF5082600
{
  unsigned int dwCommittedSize;
  unsigned int dwUnCommittedSize;
  void *lpFirstBlock;
  void *lpLastBlock;
};

/* 5183 */
union $4950DD8828540479B32A16D58353715B
{
  $2ACC251678A70CC660B42C50BE23747A Block;
  $03A236B16FC15461493BD6ADF5082600 Region;
};

/* 5184 */
struct _PROCESS_HEAP_ENTRY
{
  void *lpData;
  unsigned int cbData;
  char cbOverhead;
  char iRegionIndex;
  unsigned __int16 wFlags;
  $4950DD8828540479B32A16D58353715B ___u5;
};

/* 5185 */
struct tagEMREOF
{
  tagEMR emr;
  unsigned int nPalEntries;
  unsigned int offPalEntries;
  unsigned int nSizeLast;
};

/* 5186 */
struct _SID_AND_ATTRIBUTES
{
  void *Sid;
  unsigned int Attributes;
};

/* 5187 */
struct _MEMORY_BASIC_INFORMATION64
{
  unsigned __int64 BaseAddress;
  unsigned __int64 AllocationBase;
  unsigned int AllocationProtect;
  unsigned int __alignment1;
  unsigned __int64 RegionSize;
  unsigned int State;
  unsigned int Protect;
  unsigned int Type;
  unsigned int __alignment2;
};

/* 5188 */
struct _PROCESSOR_POWER_POLICY_INFO
{
  unsigned int TimeCheck;
  unsigned int DemoteLimit;
  unsigned int PromoteLimit;
  char DemotePercent;
  char PromotePercent;
  char Spare[2];
  unsigned __int32 AllowDemotion : 1;
  unsigned __int32 AllowPromotion : 1;
  unsigned __int32 Reserved : 30;
};

/* 5189 */
struct _PROCESSOR_POWER_POLICY
{
  unsigned int Revision;
  char DynamicThrottle;
  char Spare[3];
  unsigned __int32 DisableCStates : 1;
  unsigned __int32 Reserved : 31;
  unsigned int PolicyCount;
  _PROCESSOR_POWER_POLICY_INFO Policy[3];
};

/* 5190 */
struct tagTOGGLEKEYS
{
  unsigned int cbSize;
  unsigned int dwFlags;
};

/* 5191 */
struct __unaligned __declspec(align(2)) tagBITMAPFILEHEADER
{
  unsigned __int16 bfType;
  unsigned int bfSize;
  unsigned __int16 bfReserved1;
  unsigned __int16 bfReserved2;
  unsigned int bfOffBits;
};

/* 5192 */
struct tagEMRARC
{
  tagEMR emr;
  _RECTL rclBox;
  _POINTL ptlStart;
  _POINTL ptlEnd;
};

/* 5193 */
struct tagNMHDR
{
  HWND__ *hwndFrom;
  unsigned int idFrom;
  unsigned int code;
};

/* 5194 */
struct tagLOGFONTW
{
  int lfHeight;
  int lfWidth;
  int lfEscapement;
  int lfOrientation;
  int lfWeight;
  char lfItalic;
  char lfUnderline;
  char lfStrikeOut;
  char lfCharSet;
  char lfOutPrecision;
  char lfClipPrecision;
  char lfQuality;
  char lfPitchAndFamily;
  unsigned __int16 lfFaceName[32];
};

/* 5195 */
struct tagICONMETRICSW
{
  unsigned int cbSize;
  int iHorzSpacing;
  int iVertSpacing;
  int iTitleWrap;
  tagLOGFONTW lfFont;
};

/* 5196 */
struct _currencyfmtA
{
  unsigned int NumDigits;
  unsigned int LeadingZero;
  unsigned int Grouping;
  char *lpDecimalSep;
  char *lpThousandSep;
  unsigned int NegativeOrder;
  unsigned int PositiveOrder;
  char *lpCurrencySymbol;
};

/* 5197 */
struct val_context
{
  int valuelen;
  void *value_context;
  void *val_buff_ptr;
};

/* 5198 */
struct _ACTIVATION_CONTEXT_QUERY_INDEX
{
  unsigned int ulAssemblyIndex;
  unsigned int ulFileIndexInAssembly;
};

/* 5199 */
struct _OSVERSIONINFOEXW
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  unsigned __int16 szCSDVersion[128];
  unsigned __int16 wServicePackMajor;
  unsigned __int16 wServicePackMinor;
  unsigned __int16 wSuiteMask;
  char wProductType;
  char wReserved;
};

/* 5200 */
struct _DCB
{
  unsigned int DCBlength;
  unsigned int BaudRate;
  unsigned __int32 fBinary : 1;
  unsigned __int32 fParity : 1;
  unsigned __int32 fOutxCtsFlow : 1;
  unsigned __int32 fOutxDsrFlow : 1;
  unsigned __int32 fDtrControl : 2;
  unsigned __int32 fDsrSensitivity : 1;
  unsigned __int32 fTXContinueOnXoff : 1;
  unsigned __int32 fOutX : 1;
  unsigned __int32 fInX : 1;
  unsigned __int32 fErrorChar : 1;
  unsigned __int32 fNull : 1;
  unsigned __int32 fRtsControl : 2;
  unsigned __int32 fAbortOnError : 1;
  unsigned __int32 fDummy2 : 17;
  unsigned __int16 wReserved;
  unsigned __int16 XonLim;
  unsigned __int16 XoffLim;
  char ByteSize;
  char Parity;
  char StopBits;
  char XonChar;
  char XoffChar;
  char ErrorChar;
  char EofChar;
  char EvtChar;
  unsigned __int16 wReserved1;
};

/* 5201 */
struct __declspec(align(4)) _COMMCONFIG
{
  unsigned int dwSize;
  unsigned __int16 wVersion;
  unsigned __int16 wReserved;
  _DCB dcb;
  unsigned int dwProviderSubType;
  unsigned int dwProviderOffset;
  unsigned int dwProviderSize;
  unsigned __int16 wcProviderData[1];
};

/* 5202 */
struct tagPALETTEENTRY
{
  char peRed;
  char peGreen;
  char peBlue;
  char peFlags;
};

/* 5203 */
struct tagPANOSE
{
  char bFamilyType;
  char bSerifStyle;
  char bWeight;
  char bProportion;
  char bContrast;
  char bStrokeVariation;
  char bArmStyle;
  char bLetterform;
  char bMidline;
  char bXHeight;
};

/* 5204 */
struct __declspec(align(4)) tagEXTLOGFONTW
{
  tagLOGFONTW elfLogFont;
  unsigned __int16 elfFullName[64];
  unsigned __int16 elfStyle[32];
  unsigned int elfVersion;
  unsigned int elfStyleSize;
  unsigned int elfMatch;
  unsigned int elfReserved;
  char elfVendorId[4];
  unsigned int elfCulture;
  tagPANOSE elfPanose;
};

/* 5205 */
struct tagEMREXTCREATEFONTINDIRECTW
{
  tagEMR emr;
  unsigned int ihFont;
  tagEXTLOGFONTW elfw;
};

/* 5206 */
struct _SID_IDENTIFIER_AUTHORITY
{
  char Value[6];
};

/* 5207 */
struct _IMAGE_BOUND_IMPORT_DESCRIPTOR
{
  unsigned int TimeDateStamp;
  unsigned __int16 OffsetModuleName;
  unsigned __int16 NumberOfModuleForwarderRefs;
};

/* 5208 */
struct tagEMROFFSETCLIPRGN
{
  tagEMR emr;
  _POINTL ptlOffset;
};

/* 5209 */
struct tagSCROLLINFO
{
  unsigned int cbSize;
  unsigned int fMask;
  int nMin;
  int nMax;
  unsigned int nPage;
  int nPos;
  int nTrackPos;
};

/* 5210 */
struct tagREGISTERWORDW
{
  unsigned __int16 *lpReading;
  unsigned __int16 *lpWord;
};

/* 5211 */
struct _LUID
{
  unsigned int LowPart;
  int HighPart;
};

/* 5212 */
struct _LUID_AND_ATTRIBUTES
{
  _LUID Luid;
  unsigned int Attributes;
};

/* 5213 */
struct tagRECT
{
  int left;
  int top;
  int right;
  int bottom;
};

/* 5214 */
struct tagPOLYTEXTA
{
  int x;
  int y;
  unsigned int n;
  const char *lpstr;
  unsigned int uiFlags;
  tagRECT rcl;
  int *pdx;
};

/* 5215 */
struct tagEMRSELECTOBJECT
{
  tagEMR emr;
  unsigned int ihObject;
};

/* 5216 */
struct __declspec(align(4)) tagEMRPOLYDRAW
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cptl;
  _POINTL aptl[1];
  char abTypes[1];
};

/* 5217 */
struct tagCOPYDATASTRUCT
{
  unsigned int dwData;
  unsigned int cbData;
  void *lpData;
};

/* 5218 */
struct tagREGISTERWORDA
{
  char *lpReading;
  char *lpWord;
};

/* 5219 */
struct _IMAGE_BOUND_FORWARDER_REF
{
  unsigned int TimeDateStamp;
  unsigned __int16 OffsetModuleName;
  unsigned __int16 Reserved;
};

/* 5220 */
struct tagMINMAXINFO
{
  tagPOINT ptReserved;
  tagPOINT ptMaxSize;
  tagPOINT ptMaxPosition;
  tagPOINT ptMinTrackSize;
  tagPOINT ptMaxTrackSize;
};

/* 5221 */
struct _SERVICE_TABLE_ENTRYW
{
  unsigned __int16 *lpServiceName;
  void (__stdcall *lpServiceProc)(unsigned int, unsigned __int16 **);
};

/* 5222 */
struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION
{
  unsigned int EndOfJobTimeAction;
};

/* 5223 */
struct tagDEBUGHOOKINFO
{
  unsigned int idThread;
  unsigned int idThreadInstaller;
  int lParam;
  unsigned int wParam;
  int code;
};

/* 5224 */
struct tagWINDOWINFO
{
  unsigned int cbSize;
  tagRECT rcWindow;
  tagRECT rcClient;
  unsigned int dwStyle;
  unsigned int dwExStyle;
  unsigned int dwWindowStatus;
  unsigned int cxWindowBorders;
  unsigned int cyWindowBorders;
  unsigned __int16 atomWindowType;
  unsigned __int16 wCreatorVersion;
};

/* 5225 */
struct tagRGBTRIPLE
{
  char rgbtBlue;
  char rgbtGreen;
  char rgbtRed;
};

/* 5226 */
struct tagEMRSELECTCLIPPATH
{
  tagEMR emr;
  unsigned int iMode;
};

/* 5227 */
struct _COMSTAT
{
  unsigned __int32 fCtsHold : 1;
  unsigned __int32 fDsrHold : 1;
  unsigned __int32 fRlsdHold : 1;
  unsigned __int32 fXoffHold : 1;
  unsigned __int32 fXoffSent : 1;
  unsigned __int32 fEof : 1;
  unsigned __int32 fTxim : 1;
  unsigned __int32 fReserved : 25;
  unsigned int cbInQue;
  unsigned int cbOutQue;
};

/* 5228 */
struct __unaligned __declspec(align(2)) DLGITEMTEMPLATE
{
  unsigned int style;
  unsigned int dwExtendedStyle;
  __int16 x;
  __int16 y;
  __int16 cx;
  __int16 cy;
  unsigned __int16 id;
};

/* 5229 */
struct _TOKEN_SOURCE
{
  char SourceName[8];
  _LUID SourceIdentifier;
};

/* 5230 */
struct _TOKEN_CONTROL
{
  _LUID TokenId;
  _LUID AuthenticationId;
  _LUID ModifiedId;
  _TOKEN_SOURCE TokenSource;
};

/* 5231 */
struct _DISPLAY_DEVICEW
{
  unsigned int cb;
  unsigned __int16 DeviceName[32];
  unsigned __int16 DeviceString[128];
  unsigned int StateFlags;
  unsigned __int16 DeviceID[128];
  unsigned __int16 DeviceKey[128];
};

/* 5232 */
struct tagABORTPATH
{
  tagEMR emr;
};

/* 5233 */
struct _COORD
{
  __int16 X;
  __int16 Y;
};

/* 5234 */
struct _SMALL_RECT
{
  __int16 Left;
  __int16 Top;
  __int16 Right;
  __int16 Bottom;
};

/* 5235 */
struct _CONSOLE_SCREEN_BUFFER_INFO
{
  _COORD dwSize;
  _COORD dwCursorPosition;
  unsigned __int16 wAttributes;
  _SMALL_RECT srWindow;
  _COORD dwMaximumWindowSize;
};

/* 5236 */
struct tagCOLORCORRECTPALETTE
{
  tagEMR emr;
  unsigned int ihPalette;
  unsigned int nFirstEntry;
  unsigned int nPalEntries;
  unsigned int nReserved;
};

/* 5237 */
struct HMENU__
{
  int unused;
};

/* 5238 */
struct tagCREATESTRUCTA
{
  void *lpCreateParams;
  HINSTANCE__ *hInstance;
  HMENU__ *hMenu;
  HWND__ *hwndParent;
  int cy;
  int cx;
  int y;
  int x;
  int style;
  const char *lpszName;
  const char *lpszClass;
  unsigned int dwExStyle;
};

/* 5239 */
struct tagMINIMIZEDMETRICS
{
  unsigned int cbSize;
  int iWidth;
  int iHorzGap;
  int iVertGap;
  int iArrange;
};

/* 5240 */
struct _TypeDescriptor
{
  const void *pVFTable;
  void *spare;
  char name[];
};

/* 5241 */
struct _PMD
{
  int mdisp;
  int pdisp;
  int vdisp;
};

/* 5242 */
struct _s__CatchableType
{
  unsigned int properties;
  _TypeDescriptor *pType;
  _PMD thisDisplacement;
  int sizeOrOffset;
  void (__cdecl *copyFunction)();
};

/* 5243 */
struct _s__CatchableTypeArray
{
  int nCatchableTypes;
  _s__CatchableType *arrayOfCatchableTypes[];
};

/* 5244 */
struct tagCIEXYZ
{
  int ciexyzX;
  int ciexyzY;
  int ciexyzZ;
};

/* 5245 */
struct tagICEXYZTRIPLE
{
  tagCIEXYZ ciexyzRed;
  tagCIEXYZ ciexyzGreen;
  tagCIEXYZ ciexyzBlue;
};

/* 5246 */
struct tagLOGCOLORSPACEW
{
  unsigned int lcsSignature;
  unsigned int lcsVersion;
  unsigned int lcsSize;
  int lcsCSType;
  int lcsIntent;
  tagICEXYZTRIPLE lcsEndpoints;
  unsigned int lcsGammaRed;
  unsigned int lcsGammaGreen;
  unsigned int lcsGammaBlue;
  unsigned __int16 lcsFilename[260];
};

/* 5247 */
struct __declspec(align(4)) tagEMRCREATECOLORSPACEW
{
  tagEMR emr;
  unsigned int ihCS;
  tagLOGCOLORSPACEW lcs;
  unsigned int dwFlags;
  unsigned int cbData;
  char Data[1];
};

/* 5248 */
struct __declspec(align(4)) tagEMRFILLRGN
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cbRgnData;
  unsigned int ihBrush;
  char RgnData[1];
};

/* 5249 */
struct tagMULTIKEYHELPW
{
  unsigned int mkSize;
  unsigned __int16 mkKeylist;
  unsigned __int16 szKeyphrase[1];
};

/* 5250 */
struct __declspec(align(4)) tagHELPWININFOA
{
  int wStructSize;
  int x;
  int y;
  int dx;
  int dy;
  int wMax;
  char rgchMember[2];
};

/* 5251 */
struct tagSIZE
{
  int cx;
  int cy;
};

/* 5252 */
struct __declspec(align(4)) tagEMRFRAMERGN
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cbRgnData;
  unsigned int ihBrush;
  tagSIZE szlStroke;
  char RgnData[1];
};

/* 5253 */
struct tagMEASUREITEMSTRUCT
{
  unsigned int CtlType;
  unsigned int CtlID;
  unsigned int itemID;
  unsigned int itemWidth;
  unsigned int itemHeight;
  unsigned int itemData;
};

/* 5254 */
struct __declspec(align(4)) _CREATE_PROCESS_DEBUG_INFO
{
  void *hFile;
  void *hProcess;
  void *hThread;
  void *lpBaseOfImage;
  unsigned int dwDebugInfoFileOffset;
  unsigned int nDebugInfoSize;
  void *lpThreadLocalBase;
  unsigned int (__stdcall *lpStartAddress)(void *);
  void *lpImageName;
  unsigned __int16 fUnicode;
};

/* 5255 */
struct _ACE_HEADER
{
  char AceType;
  char AceFlags;
  unsigned __int16 AceSize;
};

/* 5256 */
struct HGLRC__
{
  int unused;
};

/* 5257 */
struct tagEMREXCLUDECLIPRECT
{
  tagEMR emr;
  _RECTL rclClip;
};

/* 5258 */
struct tagEMRPOLYPOLYLINE
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int nPolys;
  unsigned int cptl;
  unsigned int aPolyCounts[1];
  _POINTL aptl[1];
};

/* 5259 */
struct tagUSEROBJECTFLAGS
{
  int fInherit;
  int fReserved;
  unsigned int dwFlags;
};

/* 5260 */
struct _NON_PAGED_DEBUG_INFO
{
  unsigned __int16 Signature;
  unsigned __int16 Flags;
  unsigned int Size;
  unsigned __int16 Machine;
  unsigned __int16 Characteristics;
  unsigned int TimeDateStamp;
  unsigned int CheckSum;
  unsigned int SizeOfImage;
  unsigned __int64 ImageBase;
};

/* 5261 */
struct HRGN__
{
  int unused;
};

/* 5262 */
struct _JOBOBJECT_JOBSET_INFORMATION
{
  unsigned int MemberLevel;
};

/* 5263 */
struct CM_Power_Data_s
{
  unsigned int PD_Size;
  _DEVICE_POWER_STATE PD_MostRecentPowerState;
  unsigned int PD_Capabilities;
  unsigned int PD_D1Latency;
  unsigned int PD_D2Latency;
  unsigned int PD_D3Latency;
  _DEVICE_POWER_STATE PD_PowerStateMapping[7];
  _SYSTEM_POWER_STATE PD_DeepestSystemWake;
};

/* 5264 */
struct BITMAPV5HEADER
{
  unsigned int bV5Size;
  int bV5Width;
  int bV5Height;
  unsigned __int16 bV5Planes;
  unsigned __int16 bV5BitCount;
  unsigned int bV5Compression;
  unsigned int bV5SizeImage;
  int bV5XPelsPerMeter;
  int bV5YPelsPerMeter;
  unsigned int bV5ClrUsed;
  unsigned int bV5ClrImportant;
  unsigned int bV5RedMask;
  unsigned int bV5GreenMask;
  unsigned int bV5BlueMask;
  unsigned int bV5AlphaMask;
  unsigned int bV5CSType;
  tagICEXYZTRIPLE bV5Endpoints;
  unsigned int bV5GammaRed;
  unsigned int bV5GammaGreen;
  unsigned int bV5GammaBlue;
  unsigned int bV5Intent;
  unsigned int bV5ProfileData;
  unsigned int bV5ProfileSize;
  unsigned int bV5Reserved;
};

/* 5265 */
struct tagANIMATIONINFO
{
  unsigned int cbSize;
  int iMinAnimate;
};

/* 5266 */
struct _VIDEOPARAMETERS
{
  _GUID Guid;
  unsigned int dwOffset;
  unsigned int dwCommand;
  unsigned int dwFlags;
  unsigned int dwMode;
  unsigned int dwTVStandard;
  unsigned int dwAvailableModes;
  unsigned int dwAvailableTVStandard;
  unsigned int dwFlickerFilter;
  unsigned int dwOverScanX;
  unsigned int dwOverScanY;
  unsigned int dwMaxUnscaledX;
  unsigned int dwMaxUnscaledY;
  unsigned int dwPositionX;
  unsigned int dwPositionY;
  unsigned int dwBrightness;
  unsigned int dwContrast;
  unsigned int dwCPType;
  unsigned int dwCPCommand;
  unsigned int dwCPStandard;
  unsigned int dwCPKey;
  unsigned int bCP_APSTriggerBits;
  char bOEMCopyProtection[256];
};

/* 5267 */
struct tagBITMAPCOREHEADER
{
  unsigned int bcSize;
  unsigned __int16 bcWidth;
  unsigned __int16 bcHeight;
  unsigned __int16 bcPlanes;
  unsigned __int16 bcBitCount;
};

/* 5268 */
struct __declspec(align(2)) tagBITMAPCOREINFO
{
  tagBITMAPCOREHEADER bmciHeader;
  tagRGBTRIPLE bmciColors[1];
};

/* 5269 */
struct tagPIXELFORMATDESCRIPTOR
{
  unsigned __int16 nSize;
  unsigned __int16 nVersion;
  unsigned int dwFlags;
  char iPixelType;
  char cColorBits;
  char cRedBits;
  char cRedShift;
  char cGreenBits;
  char cGreenShift;
  char cBlueBits;
  char cBlueShift;
  char cAlphaBits;
  char cAlphaShift;
  char cAccumBits;
  char cAccumRedBits;
  char cAccumGreenBits;
  char cAccumBlueBits;
  char cAccumAlphaBits;
  char cDepthBits;
  char cStencilBits;
  char cAuxBuffers;
  char iLayerType;
  char bReserved;
  unsigned int dwLayerMask;
  unsigned int dwVisibleMask;
  unsigned int dwDamageMask;
};

/* 5270 */
struct tagEMRFILLPATH
{
  tagEMR emr;
  _RECTL rclBounds;
};

/* 5271 */
struct _FLOAT128
{
  __int64 LowPart;
  __int64 HighPart;
};

/* 5272 */
struct $5D1C4EAAE7086A2FC0593357DF78FB95
{
  char BaseMid;
  char Flags1;
  char Flags2;
  char BaseHi;
};

/* 5273 */
struct $A3BAC9569453E46653D4C53B8339026E
{
  unsigned __int32 BaseMid : 8;
  unsigned __int32 Type : 5;
  unsigned __int32 Dpl : 2;
  unsigned __int32 Pres : 1;
  unsigned __int32 LimitHi : 4;
  unsigned __int32 Sys : 1;
  unsigned __int32 Reserved_0 : 1;
  unsigned __int32 Default_Big : 1;
  unsigned __int32 Granularity : 1;
  unsigned __int32 BaseHi : 8;
};

/* 5274 */
union $B1CB259832314B76008B38425FEA91EA
{
  $5D1C4EAAE7086A2FC0593357DF78FB95 Bytes;
  $A3BAC9569453E46653D4C53B8339026E Bits;
};

/* 5275 */
struct _LDT_ENTRY
{
  unsigned __int16 LimitLow;
  unsigned __int16 BaseLow;
  $B1CB259832314B76008B38425FEA91EA HighWord;
};

/* 5276 */
struct __declspec(align(8)) _JOBOBJECT_BASIC_LIMIT_INFORMATION
{
  _LARGE_INTEGER PerProcessUserTimeLimit;
  _LARGE_INTEGER PerJobUserTimeLimit;
  unsigned int LimitFlags;
  unsigned int MinimumWorkingSetSize;
  unsigned int MaximumWorkingSetSize;
  unsigned int ActiveProcessLimit;
  unsigned int Affinity;
  unsigned int PriorityClass;
  unsigned int SchedulingClass;
};

/* 5277 */
struct __unaligned __declspec(align(2)) tagMETAHEADER
{
  unsigned __int16 mtType;
  unsigned __int16 mtHeaderSize;
  unsigned __int16 mtVersion;
  unsigned int mtSize;
  unsigned __int16 mtNoObjects;
  unsigned int mtMaxRecord;
  unsigned __int16 mtNoParameters;
};

/* 5278 */
struct HICON__
{
  int unused;
};

/* 5279 */
struct HBRUSH__
{
  int unused;
};

/* 5280 */
struct tagWNDCLASSEXA
{
  unsigned int cbSize;
  unsigned int style;
  int (__stdcall *lpfnWndProc)(HWND__ *, unsigned int, unsigned int, int);
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE__ *hInstance;
  HICON__ *hIcon;
  HICON__ *hCursor;
  HBRUSH__ *hbrBackground;
  const char *lpszMenuName;
  const char *lpszClassName;
  HICON__ *hIconSm;
};

/* 5281 */
struct HKL__
{
  int unused;
};

/* 5282 */
struct tagLOGFONTA
{
  int lfHeight;
  int lfWidth;
  int lfEscapement;
  int lfOrientation;
  int lfWeight;
  char lfItalic;
  char lfUnderline;
  char lfStrikeOut;
  char lfCharSet;
  char lfOutPrecision;
  char lfClipPrecision;
  char lfQuality;
  char lfPitchAndFamily;
  char lfFaceName[32];
};

/* 5283 */
struct tagCWPRETSTRUCT
{
  int lResult;
  int lParam;
  unsigned int wParam;
  unsigned int message;
  HWND__ *hwnd;
};

/* 5284 */
struct HIMCC__
{
  int unused;
};

/* 5285 */
struct _MEMORY_BASIC_INFORMATION32
{
  unsigned int BaseAddress;
  unsigned int AllocationBase;
  unsigned int AllocationProtect;
  unsigned int RegionSize;
  unsigned int State;
  unsigned int Protect;
  unsigned int Type;
};

/* 5286 */
struct tagENHMETARECORD
{
  unsigned int iType;
  unsigned int nSize;
  unsigned int dParm[1];
};

/* 5287 */
struct HWINSTA__
{
  int unused;
};

/* 5288 */
struct _OFSTRUCT
{
  char cBytes;
  char fFixedDisk;
  unsigned __int16 nErrCode;
  unsigned __int16 Reserved1;
  unsigned __int16 Reserved2;
  char szPathName[128];
};

/* 5289 */
struct _FIXED
{
  unsigned __int16 fract;
  __int16 value;
};

/* 5290 */
struct _MAT2
{
  _FIXED eM11;
  _FIXED eM12;
  _FIXED eM21;
  _FIXED eM22;
};

/* 5291 */
struct __declspec(align(4)) tagEMRNAMEDESCAPE
{
  tagEMR emr;
  int iEscape;
  int cbDriver;
  int cbEscData;
  char EscData[1];
};

/* 5292 */
struct tagHELPINFO
{
  unsigned int cbSize;
  int iContextType;
  int iCtrlId;
  void *hItemHandle;
  unsigned int dwContextId;
  tagPOINT MousePos;
};

/* 5293 */
struct tagMSGBOXPARAMSA
{
  unsigned int cbSize;
  HWND__ *hwndOwner;
  HINSTANCE__ *hInstance;
  const char *lpszText;
  const char *lpszCaption;
  unsigned int dwStyle;
  const char *lpszIcon;
  unsigned int dwContextHelpId;
  void (__stdcall *lpfnMsgBoxCallback)(tagHELPINFO *);
  unsigned int dwLanguageId;
};

/* 5294 */
struct tagCLIENTCREATESTRUCT
{
  void *hWindowMenu;
  unsigned int idFirstChild;
};

/* 5295 */
struct _OUTPUT_DEBUG_STRING_INFO
{
  char *lpDebugStringData;
  unsigned __int16 fUnicode;
  unsigned __int16 nDebugStringLength;
};

/* 5296 */
struct tagEVENTMSG
{
  unsigned int message;
  unsigned int paramL;
  unsigned int paramH;
  unsigned int time;
  HWND__ *hwnd;
};

/* 5297 */
struct _UNIVERSAL_NAME_INFOA
{
  char *lpUniversalName;
};

/* 5298 */
struct _IMAGE_DATA_DIRECTORY
{
  unsigned int VirtualAddress;
  unsigned int Size;
};

/* 5299 */
struct _IMAGE_OPTIONAL_HEADER64
{
  unsigned __int16 Magic;
  char MajorLinkerVersion;
  char MinorLinkerVersion;
  unsigned int SizeOfCode;
  unsigned int SizeOfInitializedData;
  unsigned int SizeOfUninitializedData;
  unsigned int AddressOfEntryPoint;
  unsigned int BaseOfCode;
  unsigned __int64 ImageBase;
  unsigned int SectionAlignment;
  unsigned int FileAlignment;
  unsigned __int16 MajorOperatingSystemVersion;
  unsigned __int16 MinorOperatingSystemVersion;
  unsigned __int16 MajorImageVersion;
  unsigned __int16 MinorImageVersion;
  unsigned __int16 MajorSubsystemVersion;
  unsigned __int16 MinorSubsystemVersion;
  unsigned int Win32VersionValue;
  unsigned int SizeOfImage;
  unsigned int SizeOfHeaders;
  unsigned int CheckSum;
  unsigned __int16 Subsystem;
  unsigned __int16 DllCharacteristics;
  unsigned __int64 SizeOfStackReserve;
  unsigned __int64 SizeOfStackCommit;
  unsigned __int64 SizeOfHeapReserve;
  unsigned __int64 SizeOfHeapCommit;
  unsigned int LoaderFlags;
  unsigned int NumberOfRvaAndSizes;
  _IMAGE_DATA_DIRECTORY DataDirectory[16];
};

/* 5300 */
struct tagEMRSETVIEWPORTEXTEX
{
  tagEMR emr;
  tagSIZE szlExtent;
};

/* 5301 */
struct tagCOMBOBOXINFO
{
  unsigned int cbSize;
  tagRECT rcItem;
  tagRECT rcButton;
  unsigned int stateButton;
  HWND__ *hwndCombo;
  HWND__ *hwndItem;
  HWND__ *hwndList;
};

/* 5302 */
const struct _s__RTTIBaseClassDescriptor
{
  _TypeDescriptor *pTypeDescriptor;
  unsigned int numContainedBases;
  _PMD where;
  unsigned int attributes;
};

/* 5303 */
const struct __unaligned __declspec(align(1)) _s__RTTIBaseClassArray
{
  _s__RTTIBaseClassDescriptor *arrayOfBaseClassDescriptors[];
};

/* 5304 */
struct _s__RTTIClassHierarchyDescriptor
{
  unsigned int signature;
  unsigned int attributes;
  unsigned int numBaseClasses;
  _s__RTTIBaseClassArray *pBaseClassArray;
};

/* 5305 */
struct _s__RTTICompleteObjectLocator
{
  unsigned int signature;
  unsigned int offset;
  unsigned int cdOffset;
  _TypeDescriptor *pTypeDescriptor;
  _s__RTTIClassHierarchyDescriptor *pClassDescriptor;
};

/* 5306 */
struct $9F5F1B3B62BF9BBBAE65D06E22EF4EC0
{
  unsigned __int16 Linenumber;
  unsigned __int16 Size;
};

/* 5307 */
union $9F740F456280BD6D6BF3A760921E1BAE
{
  $9F5F1B3B62BF9BBBAE65D06E22EF4EC0 LnSz;
  unsigned int TotalSize;
};

/* 5308 */
struct $0267EABC91DDCC621C08D74192F36445
{
  unsigned int PointerToLinenumber;
  unsigned int PointerToNextFunction;
};

/* 5309 */
struct $72A87AE534D1DC1A4B7CCA877B33F564
{
  unsigned __int16 Dimension[4];
};

/* 5310 */
union $CE509A8985E601CD8EA80C1F9686DFC6
{
  $0267EABC91DDCC621C08D74192F36445 Function;
  $72A87AE534D1DC1A4B7CCA877B33F564 Array;
};

/* 5311 */
struct __unaligned __declspec(align(2)) $392349BE8BF4D46208888DB98091A028
{
  unsigned int TagIndex;
  $9F740F456280BD6D6BF3A760921E1BAE Misc;
  $CE509A8985E601CD8EA80C1F9686DFC6 FcnAry;
  unsigned __int16 TvIndex;
};

/* 5312 */
struct $66EA94121FC5BA9E8F572A953AB6FE87
{
  char Name[18];
};

/* 5313 */
struct __declspec(align(2)) $B25D19047E6B4EFA2CA7947450284408
{
  unsigned int Length;
  unsigned __int16 NumberOfRelocations;
  unsigned __int16 NumberOfLinenumbers;
  unsigned int CheckSum;
  __int16 Number;
  char Selection;
};

/* 5314 */
union _IMAGE_AUX_SYMBOL
{
  $392349BE8BF4D46208888DB98091A028 Sym;
  $66EA94121FC5BA9E8F572A953AB6FE87 File;
  $B25D19047E6B4EFA2CA7947450284408 Section;
};

/* 5315 */
struct _BY_HANDLE_FILE_INFORMATION
{
  unsigned int dwFileAttributes;
  _FILETIME ftCreationTime;
  _FILETIME ftLastAccessTime;
  _FILETIME ftLastWriteTime;
  unsigned int dwVolumeSerialNumber;
  unsigned int nFileSizeHigh;
  unsigned int nFileSizeLow;
  unsigned int nNumberOfLinks;
  unsigned int nFileIndexHigh;
  unsigned int nFileIndexLow;
};

/* 5316 */
struct _STARTUPINFOA
{
  unsigned int cb;
  char *lpReserved;
  char *lpDesktop;
  char *lpTitle;
  unsigned int dwX;
  unsigned int dwY;
  unsigned int dwXSize;
  unsigned int dwYSize;
  unsigned int dwXCountChars;
  unsigned int dwYCountChars;
  unsigned int dwFillAttribute;
  unsigned int dwFlags;
  unsigned __int16 wShowWindow;
  unsigned __int16 cbReserved2;
  char *lpReserved2;
  void *hStdInput;
  void *hStdOutput;
  void *hStdError;
};

/* 5317 */
struct _EVENTLOGRECORD
{
  unsigned int Length;
  unsigned int Reserved;
  unsigned int RecordNumber;
  unsigned int TimeGenerated;
  unsigned int TimeWritten;
  unsigned int EventID;
  unsigned __int16 EventType;
  unsigned __int16 NumStrings;
  unsigned __int16 EventCategory;
  unsigned __int16 ReservedFlags;
  unsigned int ClosingRecordNumber;
  unsigned int StringOffset;
  unsigned int UserSidLength;
  unsigned int UserSidOffset;
  unsigned int DataLength;
  unsigned int DataOffset;
};

/* 5318 */
struct tagSTYLESTRUCT
{
  unsigned int styleOld;
  unsigned int styleNew;
};

/* 5319 */
struct _cpinfoexA
{
  unsigned int MaxCharSize;
  char DefaultChar[2];
  char LeadByte[12];
  unsigned __int16 UnicodeDefaultChar;
  unsigned int CodePage;
  char CodePageName[260];
};

/* 5320 */
struct HMONITOR__
{
  int unused;
};

/* 5321 */
struct tagEMRMODIFYWORLDTRANSFORM
{
  tagEMR emr;
  tagXFORM xform;
  unsigned int iMode;
};

/* 5322 */
struct __declspec(align(4)) tagEXTLOGFONTA
{
  tagLOGFONTA elfLogFont;
  char elfFullName[64];
  char elfStyle[32];
  unsigned int elfVersion;
  unsigned int elfStyleSize;
  unsigned int elfMatch;
  unsigned int elfReserved;
  char elfVendorId[4];
  unsigned int elfCulture;
  tagPANOSE elfPanose;
};

/* 5323 */
struct HBITMAP__
{
  int unused;
};

/* 5324 */
struct tagMENUITEMINFOA
{
  unsigned int cbSize;
  unsigned int fMask;
  unsigned int fType;
  unsigned int fState;
  unsigned int wID;
  HMENU__ *hSubMenu;
  HBITMAP__ *hbmpChecked;
  HBITMAP__ *hbmpUnchecked;
  unsigned int dwItemData;
  char *dwTypeData;
  unsigned int cch;
  HBITMAP__ *hbmpItem;
};

/* 5325 */
struct _currencyfmtW
{
  unsigned int NumDigits;
  unsigned int LeadingZero;
  unsigned int Grouping;
  unsigned __int16 *lpDecimalSep;
  unsigned __int16 *lpThousandSep;
  unsigned int NegativeOrder;
  unsigned int PositiveOrder;
  unsigned __int16 *lpCurrencySymbol;
};

/* 5326 */
struct _ACL
{
  char AclRevision;
  char Sbz1;
  unsigned __int16 AclSize;
  unsigned __int16 AceCount;
  unsigned __int16 Sbz2;
};

/* 5327 */
struct _TOKEN_DEFAULT_DACL
{
  _ACL *DefaultDacl;
};

/* 5328 */
struct tagEMRLINETO
{
  tagEMR emr;
  _POINTL ptl;
};

/* 5329 */
struct $6E35CCFC02D81E31BD4C6BEDD77CB20A
{
  unsigned __int32 NameOffset : 31;
  unsigned __int32 NameIsString : 1;
};

/* 5330 */
union $8942279AD2D4DC29F8871344CB82C9A8
{
  $6E35CCFC02D81E31BD4C6BEDD77CB20A __s0;
  unsigned int Name;
  unsigned __int16 Id;
};

/* 5331 */
struct $B2E03ED94C06E2E681F8D03FF7FF5CB3
{
  unsigned __int32 OffsetToDirectory : 31;
  unsigned __int32 DataIsDirectory : 1;
};

/* 5332 */
union $6D43E80A3A27DF1CD095D3DCC700D5EB
{
  unsigned int OffsetToData;
  $B2E03ED94C06E2E681F8D03FF7FF5CB3 __s1;
};

/* 5333 */
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY
{
  $8942279AD2D4DC29F8871344CB82C9A8 ___u0;
  $6D43E80A3A27DF1CD095D3DCC700D5EB ___u1;
};

/* 5334 */
struct _GRADIENT_TRIANGLE
{
  unsigned int Vertex1;
  unsigned int Vertex2;
  unsigned int Vertex3;
};

/* 5335 */
struct tagEMRROUNDRECT
{
  tagEMR emr;
  _RECTL rclBox;
  tagSIZE szlCorner;
};

/* 5336 */
struct _ADMINISTRATOR_POWER_POLICY
{
  _SYSTEM_POWER_STATE MinSleep;
  _SYSTEM_POWER_STATE MaxSleep;
  unsigned int MinVideoTimeout;
  unsigned int MaxVideoTimeout;
  unsigned int MinSpindownTimeout;
  unsigned int MaxSpindownTimeout;
};

/* 5337 */
struct _IMAGE_FILE_HEADER
{
  unsigned __int16 Machine;
  unsigned __int16 NumberOfSections;
  unsigned int TimeDateStamp;
  unsigned int PointerToSymbolTable;
  unsigned int NumberOfSymbols;
  unsigned __int16 SizeOfOptionalHeader;
  unsigned __int16 Characteristics;
};

/* 5338 */
struct _IMAGE_OPTIONAL_HEADER
{
  unsigned __int16 Magic;
  char MajorLinkerVersion;
  char MinorLinkerVersion;
  unsigned int SizeOfCode;
  unsigned int SizeOfInitializedData;
  unsigned int SizeOfUninitializedData;
  unsigned int AddressOfEntryPoint;
  unsigned int BaseOfCode;
  unsigned int BaseOfData;
  unsigned int ImageBase;
  unsigned int SectionAlignment;
  unsigned int FileAlignment;
  unsigned __int16 MajorOperatingSystemVersion;
  unsigned __int16 MinorOperatingSystemVersion;
  unsigned __int16 MajorImageVersion;
  unsigned __int16 MinorImageVersion;
  unsigned __int16 MajorSubsystemVersion;
  unsigned __int16 MinorSubsystemVersion;
  unsigned int Win32VersionValue;
  unsigned int SizeOfImage;
  unsigned int SizeOfHeaders;
  unsigned int CheckSum;
  unsigned __int16 Subsystem;
  unsigned __int16 DllCharacteristics;
  unsigned int SizeOfStackReserve;
  unsigned int SizeOfStackCommit;
  unsigned int SizeOfHeapReserve;
  unsigned int SizeOfHeapCommit;
  unsigned int LoaderFlags;
  unsigned int NumberOfRvaAndSizes;
  _IMAGE_DATA_DIRECTORY DataDirectory[16];
};

/* 5339 */
struct _IMAGE_NT_HEADERS
{
  unsigned int Signature;
  _IMAGE_FILE_HEADER FileHeader;
  _IMAGE_OPTIONAL_HEADER OptionalHeader;
};

/* 5340 */
struct _ASSEMBLY_FILE_DETAILED_INFORMATION
{
  unsigned int ulFlags;
  unsigned int ulFilenameLength;
  unsigned int ulPathLength;
  const unsigned __int16 *lpFileName;
  const unsigned __int16 *lpFilePath;
};

/* 5341 */
struct _UNLOAD_DLL_DEBUG_INFO
{
  void *lpBaseOfDll;
};

/* 5342 */
struct tagLOGPEN
{
  unsigned int lopnStyle;
  tagPOINT lopnWidth;
  unsigned int lopnColor;
};

/* 5343 */
struct _REMOTE_NAME_INFOW
{
  unsigned __int16 *lpUniversalName;
  unsigned __int16 *lpConnectionName;
  unsigned __int16 *lpRemainingPath;
};

/* 5344 */
struct _RIP_INFO
{
  unsigned int dwError;
  unsigned int dwType;
};

/* 5345 */
struct tagLOGBRUSH32
{
  unsigned int lbStyle;
  unsigned int lbColor;
  unsigned int lbHatch;
};

/* 5346 */
struct tagLOGBRUSH
{
  unsigned int lbStyle;
  unsigned int lbColor;
  unsigned int lbHatch;
};

/* 5347 */
struct __declspec(align(4)) tagCOLORMATCHTOTARGET
{
  tagEMR emr;
  unsigned int dwAction;
  unsigned int dwFlags;
  unsigned int cbName;
  unsigned int cbData;
  char Data[1];
};

/* 5348 */
struct _ABC
{
  int abcA;
  unsigned int abcB;
  int abcC;
};

/* 5349 */
struct _NETINFOSTRUCT
{
  unsigned int cbStructure;
  unsigned int dwProviderVersion;
  unsigned int dwStatus;
  unsigned int dwCharacteristics;
  unsigned int dwHandle;
  unsigned __int16 wNetType;
  unsigned int dwPrinters;
  unsigned int dwDrives;
};

/* 5350 */
struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 5351 */
struct tagEMRSELECTPALETTE
{
  tagEMR emr;
  unsigned int ihPal;
};

/* 5352 */
struct tagDRAWTEXTPARAMS
{
  unsigned int cbSize;
  int iTabLength;
  int iLeftMargin;
  int iRightMargin;
  unsigned int uiLengthDrawn;
};

/* 5353 */
struct __declspec(align(4)) tagPELARRAY
{
  int paXCount;
  int paYCount;
  int paXExt;
  int paYExt;
  char paRGBs;
};

/* 5354 */
struct tagMDICREATESTRUCTA
{
  const char *szClass;
  const char *szTitle;
  void *hOwner;
  int x;
  int y;
  int cx;
  int cy;
  unsigned int style;
  int lParam;
};

/* 5355 */
struct tagSTYLEBUFW
{
  unsigned int dwStyle;
  unsigned __int16 szDescription[32];
};

/* 5356 */
struct _POINTFLOAT
{
  float x;
  float y;
};

/* 5357 */
struct _GLYPHMETRICSFLOAT
{
  float gmfBlackBoxX;
  float gmfBlackBoxY;
  _POINTFLOAT gmfptGlyphOrigin;
  float gmfCellIncX;
  float gmfCellIncY;
};

/* 5358 */
struct _SYSTEM_ALARM_CALLBACK_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 5359 */
struct _IMAGE_FUNCTION_ENTRY
{
  unsigned int StartingAddress;
  unsigned int EndingAddress;
  unsigned int EndOfPrologue;
};

/* 5360 */
struct tagFONTSIGNATURE
{
  unsigned int fsUsb[4];
  unsigned int fsCsb[2];
};

/* 5361 */
struct POWER_ACTION_POLICY
{
  POWER_ACTION Action;
  unsigned int Flags;
  unsigned int EventCode;
};

/* 5362 */
struct SYSTEM_POWER_LEVEL
{
  char Enable;
  char Spare[3];
  unsigned int BatteryLevel;
  POWER_ACTION_POLICY PowerPolicy;
  _SYSTEM_POWER_STATE MinSystemState;
};

/* 5363 */
struct _IMAGE_OS2_HEADER
{
  unsigned __int16 ne_magic;
  char ne_ver;
  char ne_rev;
  unsigned __int16 ne_enttab;
  unsigned __int16 ne_cbenttab;
  int ne_crc;
  unsigned __int16 ne_flags;
  unsigned __int16 ne_autodata;
  unsigned __int16 ne_heap;
  unsigned __int16 ne_stack;
  int ne_csip;
  int ne_sssp;
  unsigned __int16 ne_cseg;
  unsigned __int16 ne_cmod;
  unsigned __int16 ne_cbnrestab;
  unsigned __int16 ne_segtab;
  unsigned __int16 ne_rsrctab;
  unsigned __int16 ne_restab;
  unsigned __int16 ne_modtab;
  unsigned __int16 ne_imptab;
  int ne_nrestab;
  unsigned __int16 ne_cmovent;
  unsigned __int16 ne_align;
  unsigned __int16 ne_cres;
  char ne_exetyp;
  char ne_flagsothers;
  unsigned __int16 ne_pretthunks;
  unsigned __int16 ne_psegrefbytes;
  unsigned __int16 ne_swaparea;
  unsigned __int16 ne_expver;
};

/* 5364 */
struct _MESSAGE_RESOURCE_BLOCK
{
  unsigned int LowId;
  unsigned int HighId;
  unsigned int OffsetToEntries;
};

/* 5365 */
struct tagEMRSETDIBITSTODEVICE
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int xSrc;
  int ySrc;
  int cxSrc;
  int cySrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  unsigned int iUsageSrc;
  unsigned int iStartScan;
  unsigned int cScans;
};

/* 5366 */
struct $409DFF2A380C4FFE2B587D0390AC124E
{
  unsigned __int16 wProcessorArchitecture;
  unsigned __int16 wReserved;
};

/* 5367 */
union $BC634EC87424996E6FC8CCA2216C7E2C
{
  unsigned int dwOemId;
  $409DFF2A380C4FFE2B587D0390AC124E __s1;
};

/* 5368 */
struct _SYSTEM_INFO
{
  $BC634EC87424996E6FC8CCA2216C7E2C ___u0;
  unsigned int dwPageSize;
  void *lpMinimumApplicationAddress;
  void *lpMaximumApplicationAddress;
  unsigned int dwActiveProcessorMask;
  unsigned int dwNumberOfProcessors;
  unsigned int dwProcessorType;
  unsigned int dwAllocationGranularity;
  unsigned __int16 wProcessorLevel;
  unsigned __int16 wProcessorRevision;
};

/* 5369 */
struct _ACCESS_ALLOWED_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 5370 */
struct __cppobj std::_Init_locks
{
};

/* 5371 */
struct __cppobj std::_Int_iterator_tag
{
};

/* 5372 */
struct __cppobj std::iterator_traits<unsigned short>
{
};

/* 5373 */
struct __cppobj std::iterator_traits<unsigned long>
{
};

/* 5374 */
struct __cppobj std::_Allocator_base<XiPathIndex::Path const >
{
};

/* 5375 */
struct __cppobj std::allocator<XiPathIndex::Path const > : std::_Allocator_base<XiPathIndex::Path const >
{
};

/* 5376 */
struct __cppobj std::iterator_traits<short>
{
};

/* 5377 */
struct __cppobj std::iterator_traits<unsigned __int64>
{
};

/* 5378 */
struct __cppobj std::iterator_traits<signed char>
{
};

/* 5379 */
struct __cppobj std::_Facetptr<std::ctype<char> >
{
};

/* 5380 */
struct __cppobj std::iterator_traits<__int64>
{
};

/* 5381 */
struct __cppobj std::iterator_traits<unsigned int>
{
};

/* 5382 */
struct __cppobj std::_Allocator_base<float const >
{
};

/* 5383 */
struct __cppobj std::allocator<float const > : std::_Allocator_base<float const >
{
};

/* 5384 */
struct __cppobj std::iterator_traits<char>
{
};

/* 5385 */
struct __cppobj std::iterator_traits<unsigned char>
{
};

/* 5386 */
struct __cppobj std::iterator_traits<int>
{
};

/* 5387 */
struct __cppobj std::basic_filebuf<unsigned short,std::char_traits<unsigned short> > : std::basic_streambuf<unsigned short,std::char_traits<unsigned short> >
{
  std::codecvt<unsigned short,char,int> *_Pcvt;
  int _State0;
  unsigned __int16 _Mychar;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > *_Mystr;
  bool _Wrotesome;
  int _State;
  bool _Closef;
  _iobuf *_Myfile;
};

/* 5388 */
struct __cppobj std::iterator_traits<bool>
{
};

/* 5389 */
struct __cppobj std::iterator_traits<long>
{
};

/* 5390 */
struct __cppobj std::_Facetptr<std::ctype<unsigned short> >
{
};

/* 5391 */
struct LIST_ENTRY32
{
  unsigned int Flink;
  unsigned int Blink;
};

/* 5392 */
union $E0927F6BE2F1645595F211B37EFD8766
{
  unsigned __int64 EndOfPrologue;
  unsigned __int64 UnwindInfoAddress;
};

/* 5393 */
struct _IMAGE_FUNCTION_ENTRY64
{
  unsigned __int64 StartingAddress;
  unsigned __int64 EndingAddress;
  $E0927F6BE2F1645595F211B37EFD8766 ___u2;
};

/* 5394 */
struct _EXIT_THREAD_DEBUG_INFO
{
  unsigned int dwExitCode;
};

/* 5395 */
struct _SERVICE_STATUS_PROCESS
{
  unsigned int dwServiceType;
  unsigned int dwCurrentState;
  unsigned int dwControlsAccepted;
  unsigned int dwWin32ExitCode;
  unsigned int dwServiceSpecificExitCode;
  unsigned int dwCheckPoint;
  unsigned int dwWaitHint;
  unsigned int dwProcessId;
  unsigned int dwServiceFlags;
};

/* 5396 */
struct _ENUM_SERVICE_STATUS_PROCESSA
{
  char *lpServiceName;
  char *lpDisplayName;
  _SERVICE_STATUS_PROCESS ServiceStatusProcess;
};

/* 5397 */
struct tagACCEL
{
  char fVirt;
  unsigned __int16 key;
  unsigned __int16 cmd;
};

/* 5398 */
struct _QUOTA_LIMITS
{
  unsigned int PagedPoolLimit;
  unsigned int NonPagedPoolLimit;
  unsigned int MinimumWorkingSetSize;
  unsigned int MaximumWorkingSetSize;
  unsigned int PagefileLimit;
  _LARGE_INTEGER TimeLimit;
};

/* 5399 */
struct tagSERIALKEYSW
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned __int16 *lpszActivePort;
  unsigned __int16 *lpszPort;
  unsigned int iBaudRate;
  unsigned int iPortState;
  unsigned int iActive;
};

/* 5400 */
struct _NETCONNECTINFOSTRUCT
{
  unsigned int cbStructure;
  unsigned int dwFlags;
  unsigned int dwSpeed;
  unsigned int dwDelay;
  unsigned int dwOptDataSize;
};

/* 5401 */
struct $507ECED6EFA5CFD5AC2C04C0BCDE222D
{
  unsigned int Short;
  unsigned int Long;
};

/* 5402 */
union $85A7FD15FA7D3B577EC2C2648A17FE8A
{
  char ShortName[8];
  $507ECED6EFA5CFD5AC2C04C0BCDE222D Name;
  unsigned int LongName[2];
};

/* 5403 */
struct __unaligned __declspec(align(2)) _IMAGE_SYMBOL
{
  $85A7FD15FA7D3B577EC2C2648A17FE8A N;
  unsigned int Value;
  __int16 SectionNumber;
  unsigned __int16 Type;
  char StorageClass;
  char NumberOfAuxSymbols;
};

/* 5404 */
struct __declspec(align(8)) _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION
{
  unsigned int ulFlags;
  unsigned int ulEncodedAssemblyIdentityLength;
  unsigned int ulManifestPathType;
  unsigned int ulManifestPathLength;
  _LARGE_INTEGER liManifestLastWriteTime;
  unsigned int ulPolicyPathType;
  unsigned int ulPolicyPathLength;
  _LARGE_INTEGER liPolicyLastWriteTime;
  unsigned int ulMetadataSatelliteRosterIndex;
  unsigned int ulManifestVersionMajor;
  unsigned int ulManifestVersionMinor;
  unsigned int ulPolicyVersionMajor;
  unsigned int ulPolicyVersionMinor;
  unsigned int ulAssemblyDirectoryNameLength;
  const unsigned __int16 *lpAssemblyEncodedAssemblyIdentity;
  const unsigned __int16 *lpAssemblyManifestPath;
  const unsigned __int16 *lpAssemblyPolicyPath;
  const unsigned __int16 *lpAssemblyDirectoryName;
  unsigned int ulFileCount;
};

/* 5405 */
struct tagDROPSTRUCT
{
  HWND__ *hwndSource;
  HWND__ *hwndSink;
  unsigned int wFmt;
  unsigned int dwData;
  tagPOINT ptDrop;
  unsigned int dwControlData;
};

/* 5406 */
struct _TOKEN_GROUPS_AND_PRIVILEGES
{
  unsigned int SidCount;
  unsigned int SidLength;
  _SID_AND_ATTRIBUTES *Sids;
  unsigned int RestrictedSidCount;
  unsigned int RestrictedSidLength;
  _SID_AND_ATTRIBUTES *RestrictedSids;
  unsigned int PrivilegeCount;
  unsigned int PrivilegeLength;
  _LUID_AND_ATTRIBUTES *Privileges;
  _LUID AuthenticationId;
};

/* 5407 */
struct tagIMEMENUITEMINFOA
{
  unsigned int cbSize;
  unsigned int fType;
  unsigned int fState;
  unsigned int wID;
  HBITMAP__ *hbmpChecked;
  HBITMAP__ *hbmpUnchecked;
  unsigned int dwItemData;
  char szString[80];
  HBITMAP__ *hbmpItem;
};

/* 5408 */
struct tagEXTLOGPEN
{
  unsigned int elpPenStyle;
  unsigned int elpWidth;
  unsigned int elpBrushStyle;
  unsigned int elpColor;
  unsigned int elpHatch;
  unsigned int elpNumEntries;
  unsigned int elpStyleEntry[1];
};

/* 5409 */
struct _OUTLINETEXTMETRICA
{
  unsigned int otmSize;
  tagTEXTMETRICA otmTextMetrics;
  char otmFiller;
  tagPANOSE otmPanoseNumber;
  unsigned int otmfsSelection;
  unsigned int otmfsType;
  int otmsCharSlopeRise;
  int otmsCharSlopeRun;
  int otmItalicAngle;
  unsigned int otmEMSquare;
  int otmAscent;
  int otmDescent;
  unsigned int otmLineGap;
  unsigned int otmsCapEmHeight;
  unsigned int otmsXHeight;
  tagRECT otmrcFontBox;
  int otmMacAscent;
  int otmMacDescent;
  unsigned int otmMacLineGap;
  unsigned int otmusMinimumPPEM;
  tagPOINT otmptSubscriptSize;
  tagPOINT otmptSubscriptOffset;
  tagPOINT otmptSuperscriptSize;
  tagPOINT otmptSuperscriptOffset;
  unsigned int otmsStrikeoutSize;
  int otmsStrikeoutPosition;
  int otmsUnderscoreSize;
  int otmsUnderscorePosition;
  char *otmpFamilyName;
  char *otmpFaceName;
  char *otmpStyleName;
  char *otmpFullName;
};

/* 5410 */
struct _RASTERIZER_STATUS
{
  __int16 nSize;
  __int16 wFlags;
  __int16 nLanguageID;
};

/* 5411 */
struct _WIN32_FIND_DATAW
{
  unsigned int dwFileAttributes;
  _FILETIME ftCreationTime;
  _FILETIME ftLastAccessTime;
  _FILETIME ftLastWriteTime;
  unsigned int nFileSizeHigh;
  unsigned int nFileSizeLow;
  unsigned int dwReserved0;
  unsigned int dwReserved1;
  unsigned __int16 cFileName[260];
  unsigned __int16 cAlternateFileName[14];
};

/* 5412 */
struct _TOKEN_AUDIT_POLICY_ELEMENT
{
  unsigned int Category;
  unsigned int PolicyMask;
};

/* 5413 */
struct tagEMRTEXT
{
  _POINTL ptlReference;
  unsigned int nChars;
  unsigned int offString;
  unsigned int fOptions;
  _RECTL rcl;
  unsigned int offDx;
};

/* 5414 */
struct tagEMRPOLYTEXTOUTA
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int iGraphicsMode;
  float exScale;
  float eyScale;
  int cStrings;
  tagEMRTEXT aemrtext[1];
};

/* 5415 */
struct __declspec(align(4)) _WIN32_FIND_DATAA
{
  unsigned int dwFileAttributes;
  _FILETIME ftCreationTime;
  _FILETIME ftLastAccessTime;
  _FILETIME ftLastWriteTime;
  unsigned int nFileSizeHigh;
  unsigned int nFileSizeLow;
  unsigned int dwReserved0;
  unsigned int dwReserved1;
  char cFileName[260];
  char cAlternateFileName[14];
};

/* 5416 */
struct tagBITMAPINFOHEADER
{
  unsigned int biSize;
  int biWidth;
  int biHeight;
  unsigned __int16 biPlanes;
  unsigned __int16 biBitCount;
  unsigned int biCompression;
  unsigned int biSizeImage;
  int biXPelsPerMeter;
  int biYPelsPerMeter;
  unsigned int biClrUsed;
  unsigned int biClrImportant;
};

/* 5417 */
struct tagEMRSTRETCHDIBITS
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int xSrc;
  int ySrc;
  int cxSrc;
  int cySrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  unsigned int iUsageSrc;
  unsigned int dwRop;
  int cxDest;
  int cyDest;
};

/* 5418 */
struct IMAGE_LOAD_CONFIG_DIRECTORY32
{
  unsigned int Size;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int GlobalFlagsClear;
  unsigned int GlobalFlagsSet;
  unsigned int CriticalSectionDefaultTimeout;
  unsigned int DeCommitFreeBlockThreshold;
  unsigned int DeCommitTotalFreeThreshold;
  unsigned int LockPrefixTable;
  unsigned int MaximumAllocationSize;
  unsigned int VirtualMemoryThreshold;
  unsigned int ProcessHeapFlags;
  unsigned int ProcessAffinityMask;
  unsigned __int16 CSDVersion;
  unsigned __int16 Reserved1;
  unsigned int EditList;
  unsigned int SecurityCookie;
  unsigned int SEHandlerTable;
  unsigned int SEHandlerCount;
};

/* 5419 */
struct _TRIVERTEX
{
  int x;
  int y;
  unsigned __int16 Red;
  unsigned __int16 Green;
  unsigned __int16 Blue;
  unsigned __int16 Alpha;
};

/* 5420 */
struct _ACCESS_DENIED_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 5421 */
struct _MEMORY_BASIC_INFORMATION
{
  void *BaseAddress;
  void *AllocationBase;
  unsigned int AllocationProtect;
  unsigned int RegionSize;
  unsigned int State;
  unsigned int Protect;
  unsigned int Type;
};

/* 5422 */
struct _OUTLINETEXTMETRICW
{
  unsigned int otmSize;
  tagTEXTMETRICW otmTextMetrics;
  char otmFiller;
  tagPANOSE otmPanoseNumber;
  unsigned int otmfsSelection;
  unsigned int otmfsType;
  int otmsCharSlopeRise;
  int otmsCharSlopeRun;
  int otmItalicAngle;
  unsigned int otmEMSquare;
  int otmAscent;
  int otmDescent;
  unsigned int otmLineGap;
  unsigned int otmsCapEmHeight;
  unsigned int otmsXHeight;
  tagRECT otmrcFontBox;
  int otmMacAscent;
  int otmMacDescent;
  unsigned int otmMacLineGap;
  unsigned int otmusMinimumPPEM;
  tagPOINT otmptSubscriptSize;
  tagPOINT otmptSubscriptOffset;
  tagPOINT otmptSuperscriptSize;
  tagPOINT otmptSuperscriptOffset;
  unsigned int otmsStrikeoutSize;
  int otmsStrikeoutPosition;
  int otmsUnderscoreSize;
  int otmsUnderscorePosition;
  char *otmpFamilyName;
  char *otmpFaceName;
  char *otmpStyleName;
  char *otmpFullName;
};

/* 5423 */
struct _DOCINFOA
{
  int cbSize;
  const char *lpszDocName;
  const char *lpszOutput;
  const char *lpszDatatype;
  unsigned int fwType;
};

/* 5424 */
struct MENUITEMTEMPLATEHEADER
{
  unsigned __int16 versionNumber;
  unsigned __int16 offset;
};

/* 5425 */
struct _SYSTEM_AUDIT_CALLBACK_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 5426 */
struct tagWNDCLASSA
{
  unsigned int style;
  int (__stdcall *lpfnWndProc)(HWND__ *, unsigned int, unsigned int, int);
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE__ *hInstance;
  HICON__ *hIcon;
  HICON__ *hCursor;
  HBRUSH__ *hbrBackground;
  const char *lpszMenuName;
  const char *lpszClassName;
};

/* 5427 */
struct BITMAPV4HEADER
{
  unsigned int bV4Size;
  int bV4Width;
  int bV4Height;
  unsigned __int16 bV4Planes;
  unsigned __int16 bV4BitCount;
  unsigned int bV4V4Compression;
  unsigned int bV4SizeImage;
  int bV4XPelsPerMeter;
  int bV4YPelsPerMeter;
  unsigned int bV4ClrUsed;
  unsigned int bV4ClrImportant;
  unsigned int bV4RedMask;
  unsigned int bV4GreenMask;
  unsigned int bV4BlueMask;
  unsigned int bV4AlphaMask;
  unsigned int bV4CSType;
  tagICEXYZTRIPLE bV4Endpoints;
  unsigned int bV4GammaRed;
  unsigned int bV4GammaGreen;
  unsigned int bV4GammaBlue;
};

/* 5428 */
struct _BLENDFUNCTION
{
  char BlendOp;
  char BlendFlags;
  char SourceConstantAlpha;
  char AlphaFormat;
};

/* 5429 */
struct HUMPD__
{
  int unused;
};

/* 5430 */
struct _NETRESOURCEA
{
  unsigned int dwScope;
  unsigned int dwType;
  unsigned int dwDisplayType;
  unsigned int dwUsage;
  char *lpLocalName;
  char *lpRemoteName;
  char *lpComment;
  char *lpProvider;
};

/* 5431 */
struct tagEMRCREATEDIBPATTERNBRUSHPT
{
  tagEMR emr;
  unsigned int ihBrush;
  unsigned int iUsage;
  unsigned int offBmi;
  unsigned int cbBmi;
  unsigned int offBits;
  unsigned int cbBits;
};

/* 5432 */
struct SC_HANDLE__
{
  int unused;
};

/* 5433 */
struct tagPOINTS
{
  __int16 x;
  __int16 y;
};

/* 5434 */
struct tagPOINTFX
{
  _FIXED x;
  _FIXED y;
};

/* 5435 */
struct __declspec(align(4)) _COMMPROP
{
  unsigned __int16 wPacketLength;
  unsigned __int16 wPacketVersion;
  unsigned int dwServiceMask;
  unsigned int dwReserved1;
  unsigned int dwMaxTxQueue;
  unsigned int dwMaxRxQueue;
  unsigned int dwMaxBaud;
  unsigned int dwProvSubType;
  unsigned int dwProvCapabilities;
  unsigned int dwSettableParams;
  unsigned int dwSettableBaud;
  unsigned __int16 wSettableData;
  unsigned __int16 wSettableStopParity;
  unsigned int dwCurrentTxQueue;
  unsigned int dwCurrentRxQueue;
  unsigned int dwProvSpec1;
  unsigned int dwProvSpec2;
  unsigned __int16 wcProvChar[1];
};

/* 5436 */
struct tagGUITHREADINFO
{
  unsigned int cbSize;
  unsigned int flags;
  HWND__ *hwndActive;
  HWND__ *hwndFocus;
  HWND__ *hwndCapture;
  HWND__ *hwndMenuOwner;
  HWND__ *hwndMoveSize;
  HWND__ *hwndCaret;
  tagRECT rcCaret;
};

/* 5437 */
struct HDC__
{
  int unused;
};

/* 5438 */
struct tagPAINTSTRUCT
{
  HDC__ *hdc;
  int fErase;
  tagRECT rcPaint;
  int fRestore;
  int fIncUpdate;
  char rgbReserved[32];
};

/* 5439 */
struct _DISCDLGSTRUCTA
{
  unsigned int cbStructure;
  HWND__ *hwndOwner;
  char *lpLocalName;
  char *lpRemoteName;
  unsigned int dwFlags;
};

/* 5440 */
struct _QUERY_SERVICE_CONFIGW
{
  unsigned int dwServiceType;
  unsigned int dwStartType;
  unsigned int dwErrorControl;
  unsigned __int16 *lpBinaryPathName;
  unsigned __int16 *lpLoadOrderGroup;
  unsigned int dwTagId;
  unsigned __int16 *lpDependencies;
  unsigned __int16 *lpServiceStartName;
  unsigned __int16 *lpDisplayName;
};

/* 5441 */
struct HPALETTE__
{
  int unused;
};

/* 5442 */
struct _SINGLE_LIST_ENTRY
{
  _SINGLE_LIST_ENTRY *Next;
};

/* 5443 */
struct _SYSTEM_ALARM_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 5444 */
struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 5445 */
struct tagWNDCLASSEXW
{
  unsigned int cbSize;
  unsigned int style;
  int (__stdcall *lpfnWndProc)(HWND__ *, unsigned int, unsigned int, int);
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE__ *hInstance;
  HICON__ *hIcon;
  HICON__ *hCursor;
  HBRUSH__ *hbrBackground;
  const unsigned __int16 *lpszMenuName;
  const unsigned __int16 *lpszClassName;
  HICON__ *hIconSm;
};

/* 5446 */
struct tagMONITORINFO
{
  unsigned int cbSize;
  tagRECT rcMonitor;
  tagRECT rcWork;
  unsigned int dwFlags;
};

/* 5447 */
struct __cppobj tagMONITORINFOEXA : tagMONITORINFO
{
  char szDevice[32];
};

/* 5448 */
struct __declspec(align(4)) tagEMRINVERTRGN
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cbRgnData;
  char RgnData[1];
};

/* 5449 */
struct _RTL_VERIFIER_THUNK_DESCRIPTOR
{
  char *ThunkName;
  void *ThunkOldAddress;
  void *ThunkNewAddress;
};

/* 5450 */
struct _RTL_VERIFIER_DLL_DESCRIPTOR
{
  unsigned __int16 *DllName;
  unsigned int DllFlags;
  void *DllAddress;
  _RTL_VERIFIER_THUNK_DESCRIPTOR *DllThunks;
};

/* 5451 */
struct __declspec(align(4)) _MODEMSETTINGS
{
  unsigned int dwActualSize;
  unsigned int dwRequiredSize;
  unsigned int dwDevSpecificOffset;
  unsigned int dwDevSpecificSize;
  unsigned int dwCallSetupFailTimer;
  unsigned int dwInactivityTimeout;
  unsigned int dwSpeakerVolume;
  unsigned int dwSpeakerMode;
  unsigned int dwPreferredModemOptions;
  unsigned int dwNegotiatedModemOptions;
  unsigned int dwNegotiatedDCERate;
  char abVariablePortion[1];
};

/* 5452 */
struct tagRGBQUAD
{
  char rgbBlue;
  char rgbGreen;
  char rgbRed;
  char rgbReserved;
};

/* 5453 */
struct tagBITMAPINFO
{
  tagBITMAPINFOHEADER bmiHeader;
  tagRGBQUAD bmiColors[1];
};

/* 5454 */
struct _IMAGE_ROM_OPTIONAL_HEADER
{
  unsigned __int16 Magic;
  char MajorLinkerVersion;
  char MinorLinkerVersion;
  unsigned int SizeOfCode;
  unsigned int SizeOfInitializedData;
  unsigned int SizeOfUninitializedData;
  unsigned int AddressOfEntryPoint;
  unsigned int BaseOfCode;
  unsigned int BaseOfData;
  unsigned int BaseOfBss;
  unsigned int GprMask;
  unsigned int CprMask[4];
  unsigned int GpValue;
};

/* 5455 */
struct _IMAGE_ROM_HEADERS
{
  _IMAGE_FILE_HEADER FileHeader;
  _IMAGE_ROM_OPTIONAL_HEADER OptionalHeader;
};

/* 5456 */
struct tagSCROLLBARINFO
{
  unsigned int cbSize;
  tagRECT rcScrollBar;
  int dxyLineButton;
  int xyThumbTop;
  int xyThumbBottom;
  int reserved;
  unsigned int rgstate[6];
};

/* 5457 */
struct _IMAGE_DEBUG_DIRECTORY
{
  unsigned int Characteristics;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int Type;
  unsigned int SizeOfData;
  unsigned int AddressOfRawData;
  unsigned int PointerToRawData;
};

/* 5458 */
struct pvalueA
{
  char *pv_valuename;
  int pv_valuelen;
  void *pv_value_context;
  unsigned int pv_type;
};

/* 5459 */
struct _TOKEN_USER
{
  _SID_AND_ATTRIBUTES User;
};

/* 5460 */
struct tagEMREXTTEXTOUTA
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int iGraphicsMode;
  float exScale;
  float eyScale;
  tagEMRTEXT emrtext;
};

/* 5461 */
struct tagEMRANGLEARC
{
  tagEMR emr;
  _POINTL ptlCenter;
  unsigned int nRadius;
  float eStartAngle;
  float eSweepAngle;
};

/* 5462 */
struct tagCANDIDATEFORM
{
  unsigned int dwIndex;
  unsigned int dwStyle;
  tagPOINT ptCurrentPos;
  tagRECT rcArea;
};

/* 5463 */
struct tagEMRSETARCDIRECTION
{
  tagEMR emr;
  unsigned int iArcDirection;
};

/* 5464 */
struct __unaligned __declspec(align(2)) IMAGE_AUX_SYMBOL_TOKEN_DEF
{
  char bAuxType;
  char bReserved;
  unsigned int SymbolTableIndex;
  char rgbReserved[12];
};

/* 5465 */
struct tagLAYERPLANEDESCRIPTOR
{
  unsigned __int16 nSize;
  unsigned __int16 nVersion;
  unsigned int dwFlags;
  char iPixelType;
  char cColorBits;
  char cRedBits;
  char cRedShift;
  char cGreenBits;
  char cGreenShift;
  char cBlueBits;
  char cBlueShift;
  char cAlphaBits;
  char cAlphaShift;
  char cAccumBits;
  char cAccumRedBits;
  char cAccumGreenBits;
  char cAccumBlueBits;
  char cAccumAlphaBits;
  char cDepthBits;
  char cStencilBits;
  char cAuxBuffers;
  char iLayerPlane;
  char bReserved;
  unsigned int crTransparent;
};

/* 5466 */
struct __declspec(align(8)) _TAPE_SET_POSITION
{
  unsigned int Method;
  unsigned int Partition;
  _LARGE_INTEGER Offset;
  char Immediate;
};

/* 5467 */
struct _numberfmtW
{
  unsigned int NumDigits;
  unsigned int LeadingZero;
  unsigned int Grouping;
  unsigned __int16 *lpDecimalSep;
  unsigned __int16 *lpThousandSep;
  unsigned int NegativeOrder;
};

/* 5468 */
struct _CONNECTDLGSTRUCTA
{
  unsigned int cbStructure;
  HWND__ *hwndOwner;
  _NETRESOURCEA *lpConnRes;
  unsigned int dwFlags;
  unsigned int dwDevNum;
};

/* 5469 */
union $024A9AD87DA22F97CCD4130050D7BF17
{
  unsigned int SymbolTableIndex;
  unsigned int VirtualAddress;
};

/* 5470 */
struct __unaligned __declspec(align(2)) _IMAGE_LINENUMBER
{
  $024A9AD87DA22F97CCD4130050D7BF17 Type;
  unsigned __int16 Linenumber;
};

/* 5471 */
struct _EXCEPTION_DEBUG_INFO
{
  _EXCEPTION_RECORD ExceptionRecord;
  unsigned int dwFirstChance;
};

/* 5472 */
struct tagNEWTEXTMETRICA
{
  int tmHeight;
  int tmAscent;
  int tmDescent;
  int tmInternalLeading;
  int tmExternalLeading;
  int tmAveCharWidth;
  int tmMaxCharWidth;
  int tmWeight;
  int tmOverhang;
  int tmDigitizedAspectX;
  int tmDigitizedAspectY;
  char tmFirstChar;
  char tmLastChar;
  char tmDefaultChar;
  char tmBreakChar;
  char tmItalic;
  char tmUnderlined;
  char tmStruckOut;
  char tmPitchAndFamily;
  char tmCharSet;
  unsigned int ntmFlags;
  unsigned int ntmSizeEM;
  unsigned int ntmCellHeight;
  unsigned int ntmAvgWidth;
};

/* 5473 */
struct tagNEWTEXTMETRICEXA
{
  tagNEWTEXTMETRICA ntmTm;
  tagFONTSIGNATURE ntmFontSig;
};

/* 5474 */
struct _DISPLAY_DEVICEA
{
  unsigned int cb;
  char DeviceName[32];
  char DeviceString[128];
  unsigned int StateFlags;
  char DeviceID[128];
  char DeviceKey[128];
};

/* 5475 */
struct __declspec(align(4)) _IMAGE_DEBUG_MISC
{
  unsigned int DataType;
  unsigned int Length;
  char Unicode;
  char Reserved[3];
  char Data[1];
};

/* 5476 */
struct HENHMETAFILE__
{
  int unused;
};

/* 5477 */
struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY
{
  unsigned int BeginAddress;
  unsigned int EndAddress;
  unsigned int ExceptionHandler;
  unsigned int HandlerData;
  unsigned int PrologEndAddress;
};

/* 5478 */
struct tagRECONVERTSTRING
{
  unsigned int dwSize;
  unsigned int dwVersion;
  unsigned int dwStrLen;
  unsigned int dwStrOffset;
  unsigned int dwCompStrLen;
  unsigned int dwCompStrOffset;
  unsigned int dwTargetStrLen;
  unsigned int dwTargetStrOffset;
};

/* 5479 */
struct _EXCEPTION_RECORD32
{
  unsigned int ExceptionCode;
  unsigned int ExceptionFlags;
  unsigned int ExceptionRecord;
  unsigned int ExceptionAddress;
  unsigned int NumberParameters;
  unsigned int ExceptionInformation[15];
};

/* 5480 */
struct __declspec(align(4)) tagEMREXTSELECTCLIPRGN
{
  tagEMR emr;
  unsigned int cbRgnData;
  unsigned int iMode;
  char RgnData[1];
};

/* 5481 */
struct _STARTUPINFOW
{
  unsigned int cb;
  unsigned __int16 *lpReserved;
  unsigned __int16 *lpDesktop;
  unsigned __int16 *lpTitle;
  unsigned int dwX;
  unsigned int dwY;
  unsigned int dwXSize;
  unsigned int dwYSize;
  unsigned int dwXCountChars;
  unsigned int dwYCountChars;
  unsigned int dwFillAttribute;
  unsigned int dwFlags;
  unsigned __int16 wShowWindow;
  unsigned __int16 cbReserved2;
  char *lpReserved2;
  void *hStdInput;
  void *hStdOutput;
  void *hStdError;
};

/* 5482 */
struct tagSTICKYKEYS
{
  unsigned int cbSize;
  unsigned int dwFlags;
};

/* 5483 */
struct tagTITLEBARINFO
{
  unsigned int cbSize;
  tagRECT rcTitleBar;
  unsigned int rgstate[6];
};

/* 5484 */
struct tagENUMLOGFONTA
{
  tagLOGFONTA elfLogFont;
  char elfFullName[64];
  char elfStyle[32];
};

/* 5485 */
struct tagEMRALPHABLEND
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int cxDest;
  int cyDest;
  unsigned int dwRop;
  int xSrc;
  int ySrc;
  tagXFORM xformSrc;
  unsigned int crBkColorSrc;
  unsigned int iUsageSrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  int cxSrc;
  int cySrc;
};

/* 5486 */
struct tagMOUSEHOOKSTRUCT
{
  tagPOINT pt;
  HWND__ *hwnd;
  unsigned int wHitTestCode;
  unsigned int dwExtraInfo;
};

/* 5487 */
struct __declspec(align(4)) tagEMRGLSRECORD
{
  tagEMR emr;
  unsigned int cbData;
  char Data[1];
};

/* 5488 */
struct tagMOUSEKEYS
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned int iMaxSpeed;
  unsigned int iTimeToMaxSpeed;
  unsigned int iCtrlSpeed;
  unsigned int dwReserved1;
  unsigned int dwReserved2;
};

/* 5489 */
struct HACCEL__
{
  int unused;
};

/* 5490 */
struct tagEMRSTRETCHBLT
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int cxDest;
  int cyDest;
  unsigned int dwRop;
  int xSrc;
  int ySrc;
  tagXFORM xformSrc;
  unsigned int crBkColorSrc;
  unsigned int iUsageSrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  int cxSrc;
  int cySrc;
};

/* 5491 */
struct _ACCESS_DENIED_CALLBACK_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 5492 */
struct _TOKEN_GROUPS
{
  unsigned int GroupCount;
  _SID_AND_ATTRIBUTES Groups[1];
};

/* 5493 */
struct _TOKEN_PRIVILEGES
{
  unsigned int PrivilegeCount;
  _LUID_AND_ATTRIBUTES Privileges[1];
};

/* 5494 */
struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION
{
  unsigned int SecurityLimitFlags;
  void *JobToken;
  _TOKEN_GROUPS *SidsToDisable;
  _TOKEN_PRIVILEGES *PrivilegesToDelete;
  _TOKEN_GROUPS *RestrictedSids;
};

/* 5495 */
union $E6E24A7F5B6F8B597C18331DB62781EC
{
  unsigned int ForwarderString;
  unsigned int Function;
  unsigned int Ordinal;
  unsigned int AddressOfData;
};

/* 5496 */
struct _IMAGE_THUNK_DATA32
{
  $E6E24A7F5B6F8B597C18331DB62781EC u1;
};

/* 5497 */
struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY
{
  unsigned int FuncStart;
  unsigned __int32 PrologLen : 8;
  unsigned __int32 FuncLen : 22;
  unsigned __int32 ThirtyTwoBit : 1;
  unsigned __int32 ExceptionFlag : 1;
};

/* 5498 */
struct tagSERIALKEYSA
{
  unsigned int cbSize;
  unsigned int dwFlags;
  char *lpszActivePort;
  char *lpszPort;
  unsigned int iBaudRate;
  unsigned int iPortState;
  unsigned int iActive;
};

/* 5499 */
struct ANON_OBJECT_HEADER
{
  unsigned __int16 Sig1;
  unsigned __int16 Sig2;
  unsigned __int16 Version;
  unsigned __int16 Machine;
  unsigned int TimeDateStamp;
  _GUID ClassID;
  unsigned int SizeOfData;
};

/* 5500 */
struct __declspec(align(4)) tagEMREXTESCAPE
{
  tagEMR emr;
  int iEscape;
  int cbEscData;
  char EscData[1];
};

/* 5501 */
struct tagLOGCOLORSPACEA
{
  unsigned int lcsSignature;
  unsigned int lcsVersion;
  unsigned int lcsSize;
  int lcsCSType;
  int lcsIntent;
  tagICEXYZTRIPLE lcsEndpoints;
  unsigned int lcsGammaRed;
  unsigned int lcsGammaGreen;
  unsigned int lcsGammaBlue;
  char lcsFilename[260];
};

/* 5502 */
struct tagEMRCREATECOLORSPACE
{
  tagEMR emr;
  unsigned int ihCS;
  tagLOGCOLORSPACEA lcs;
};

/* 5503 */
struct _IMAGE_VXD_HEADER
{
  unsigned __int16 e32_magic;
  char e32_border;
  char e32_worder;
  unsigned int e32_level;
  unsigned __int16 e32_cpu;
  unsigned __int16 e32_os;
  unsigned int e32_ver;
  unsigned int e32_mflags;
  unsigned int e32_mpages;
  unsigned int e32_startobj;
  unsigned int e32_eip;
  unsigned int e32_stackobj;
  unsigned int e32_esp;
  unsigned int e32_pagesize;
  unsigned int e32_lastpagesize;
  unsigned int e32_fixupsize;
  unsigned int e32_fixupsum;
  unsigned int e32_ldrsize;
  unsigned int e32_ldrsum;
  unsigned int e32_objtab;
  unsigned int e32_objcnt;
  unsigned int e32_objmap;
  unsigned int e32_itermap;
  unsigned int e32_rsrctab;
  unsigned int e32_rsrccnt;
  unsigned int e32_restab;
  unsigned int e32_enttab;
  unsigned int e32_dirtab;
  unsigned int e32_dircnt;
  unsigned int e32_fpagetab;
  unsigned int e32_frectab;
  unsigned int e32_impmod;
  unsigned int e32_impmodcnt;
  unsigned int e32_impproc;
  unsigned int e32_pagesum;
  unsigned int e32_datapage;
  unsigned int e32_preload;
  unsigned int e32_nrestab;
  unsigned int e32_cbnrestab;
  unsigned int e32_nressum;
  unsigned int e32_autodata;
  unsigned int e32_debuginfo;
  unsigned int e32_debuglen;
  unsigned int e32_instpreload;
  unsigned int e32_instdemand;
  unsigned int e32_heapsize;
  char e32_res3[12];
  unsigned int e32_winresoff;
  unsigned int e32_winreslen;
  unsigned __int16 e32_devid;
  unsigned __int16 e32_ddkver;
};

/* 5504 */
struct tagEMRSETWORLDTRANSFORM
{
  tagEMR emr;
  tagXFORM xform;
};

/* 5505 */
struct __declspec(align(4)) tagMULTIKEYHELPA
{
  unsigned int mkSize;
  char mkKeylist;
  char szKeyphrase[1];
};

/* 5506 */
struct _WIN32_FILE_ATTRIBUTE_DATA
{
  unsigned int dwFileAttributes;
  _FILETIME ftCreationTime;
  _FILETIME ftLastAccessTime;
  _FILETIME ftLastWriteTime;
  unsigned int nFileSizeHigh;
  unsigned int nFileSizeLow;
};

/* 5507 */
struct _OSVERSIONINFOEXA
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  char szCSDVersion[128];
  unsigned __int16 wServicePackMajor;
  unsigned __int16 wServicePackMinor;
  unsigned __int16 wSuiteMask;
  char wProductType;
  char wReserved;
};

/* 5508 */
struct _IMAGE_COFF_SYMBOLS_HEADER
{
  unsigned int NumberOfSymbols;
  unsigned int LvaToFirstSymbol;
  unsigned int NumberOfLinenumbers;
  unsigned int LvaToFirstLinenumber;
  unsigned int RvaToFirstByteOfCode;
  unsigned int RvaToLastByteOfCode;
  unsigned int RvaToFirstByteOfData;
  unsigned int RvaToLastByteOfData;
};

/* 5509 */
struct _ImageArchitectureHeader
{
  unsigned __int32 AmaskValue : 1;
  unsigned __int32 : 7;
  unsigned __int32 AmaskShift : 8;
  unsigned int FirstEntryRVA;
};

/* 5510 */
struct _SYSTEM_POWER_STATUS
{
  char ACLineStatus;
  char BatteryFlag;
  char BatteryLifePercent;
  char Reserved1;
  unsigned int BatteryLifeTime;
  unsigned int BatteryFullLifeTime;
};

/* 5511 */
struct tagEMRPOLYLINE16
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cpts;
  tagPOINTS apts[1];
};

/* 5512 */
struct tagMENUBARINFO
{
  unsigned int cbSize;
  tagRECT rcBar;
  HMENU__ *hMenu;
  HWND__ *hwndMenu;
  __int32 fBarFocused : 1;
  __int32 fFocused : 1;
};

/* 5513 */
struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 5514 */
struct tagEMRSCALEVIEWPORTEXTEX
{
  tagEMR emr;
  int xNum;
  int xDenom;
  int yNum;
  int yDenom;
};

/* 5515 */
struct __unaligned __declspec(align(2)) DLGTEMPLATE
{
  unsigned int style;
  unsigned int dwExtendedStyle;
  unsigned __int16 cdit;
  __int16 x;
  __int16 y;
  __int16 cx;
  __int16 cy;
};

/* 5516 */
struct tagEMRELLIPSE
{
  tagEMR emr;
  _RECTL rclBox;
};

/* 5517 */
struct _ACCESS_ALLOWED_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 5518 */
struct $70D636CC6D3E102A1CB1CECA38555A4E
{
  char Flags;
};

/* 5519 */
struct $E7FD15DFD778E8FFF937F659685E7981
{
  unsigned int NodeNumber;
};

/* 5520 */
union $44CCEEF12E0CEDAC72C2CC12CCF4690B
{
  $70D636CC6D3E102A1CB1CECA38555A4E ProcessorCore;
  $E7FD15DFD778E8FFF937F659685E7981 NumaNode;
  unsigned __int64 Reserved[2];
};

/* 5521 */
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION
{
  unsigned int ProcessorMask;
  _LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
  $44CCEEF12E0CEDAC72C2CC12CCF4690B ___u2;
};

/* 5522 */
struct tagENHMETAHEADER
{
  unsigned int iType;
  unsigned int nSize;
  _RECTL rclBounds;
  _RECTL rclFrame;
  unsigned int dSignature;
  unsigned int nVersion;
  unsigned int nBytes;
  unsigned int nRecords;
  unsigned __int16 nHandles;
  unsigned __int16 sReserved;
  unsigned int nDescription;
  unsigned int offDescription;
  unsigned int nPalEntries;
  tagSIZE szlDevice;
  tagSIZE szlMillimeters;
  unsigned int cbPixelFormat;
  unsigned int offPixelFormat;
  unsigned int bOpenGL;
  tagSIZE szlMicrometers;
};

/* 5523 */
struct _TAPE_WMI_OPERATIONS
{
  unsigned int Method;
  unsigned int DataBufferSize;
  void *DataBuffer;
};

/* 5524 */
struct HFONT__
{
  int unused;
};

/* 5525 */
struct tagMOUSEMOVEPOINT
{
  int x;
  int y;
  unsigned int time;
  unsigned int dwExtraInfo;
};

/* 5526 */
struct tagHIGHCONTRASTA
{
  unsigned int cbSize;
  unsigned int dwFlags;
  char *lpszDefaultScheme;
};

/* 5527 */
struct _OSVERSIONINFOA
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  char szCSDVersion[128];
};

/* 5528 */
struct __declspec(align(4)) tagEMRSETICMPROFILE
{
  tagEMR emr;
  unsigned int dwFlags;
  unsigned int cbName;
  unsigned int cbData;
  char Data[1];
};

/* 5529 */
struct _IMAGE_BASE_RELOCATION
{
  unsigned int VirtualAddress;
  unsigned int SizeOfBlock;
};

/* 5530 */
struct tagCANDIDATELIST
{
  unsigned int dwSize;
  unsigned int dwStyle;
  unsigned int dwCount;
  unsigned int dwSelection;
  unsigned int dwPageStart;
  unsigned int dwPageSize;
  unsigned int dwOffset[1];
};

/* 5531 */
struct tagACCESSTIMEOUT
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned int iTimeOutMSec;
};

/* 5532 */
struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT
{
  void *CompletionKey;
  void *CompletionPort;
};

/* 5533 */
struct HWINEVENTHOOK__
{
  int unused;
};

/* 5534 */
struct tagMENUGETOBJECTINFO
{
  unsigned int dwFlags;
  unsigned int uPos;
  HMENU__ *hmenu;
  void *riid;
  void *pvObj;
};

/* 5535 */
struct __declspec(align(2)) _MESSAGE_RESOURCE_ENTRY
{
  unsigned __int16 Length;
  unsigned __int16 Flags;
  char Text[1];
};

/* 5536 */
struct tagHIGHCONTRASTW
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned __int16 *lpszDefaultScheme;
};

/* 5537 */
union $22971E98F1DCAE471B592EC18ECB1551
{
  unsigned int PhysicalAddress;
  unsigned int VirtualSize;
};

/* 5538 */
struct _IMAGE_SECTION_HEADER
{
  char Name[8];
  $22971E98F1DCAE471B592EC18ECB1551 Misc;
  unsigned int VirtualAddress;
  unsigned int SizeOfRawData;
  unsigned int PointerToRawData;
  unsigned int PointerToRelocations;
  unsigned int PointerToLinenumbers;
  unsigned __int16 NumberOfRelocations;
  unsigned __int16 NumberOfLinenumbers;
  unsigned int Characteristics;
};

/* 5539 */
struct tagPOLYTEXTW
{
  int x;
  int y;
  unsigned int n;
  const unsigned __int16 *lpstr;
  unsigned int uiFlags;
  tagRECT rcl;
  int *pdx;
};

/* 5540 */
struct SYSTEM_BATTERY_STATE
{
  char AcOnLine;
  char BatteryPresent;
  char Charging;
  char Discharging;
  char Spare1[4];
  unsigned int MaxCapacity;
  unsigned int RemainingCapacity;
  unsigned int Rate;
  unsigned int EstimatedTime;
  unsigned int DefaultAlert1;
  unsigned int DefaultAlert2;
};

/* 5541 */
struct tagICONMETRICSA
{
  unsigned int cbSize;
  int iHorzSpacing;
  int iVertSpacing;
  int iTitleWrap;
  tagLOGFONTA lfFont;
};

/* 5542 */
struct _nlsversioninfo
{
  unsigned int dwNLSVersionInfoSize;
  unsigned int dwNLSVersion;
  unsigned int dwDefinedVersion;
};

/* 5543 */
struct HMETAFILE__
{
  int unused;
};

/* 5544 */
struct tagMETAFILEPICT
{
  int mm;
  int xExt;
  int yExt;
  HMETAFILE__ *hMF;
};

/* 5545 */
struct _FOCUS_EVENT_RECORD
{
  int bSetFocus;
};

/* 5546 */
struct tagHELPWININFOW
{
  int wStructSize;
  int x;
  int y;
  int dx;
  int dy;
  int wMax;
  unsigned __int16 rgchMember[2];
};

/* 5547 */
struct _numberfmtA
{
  unsigned int NumDigits;
  unsigned int LeadingZero;
  unsigned int Grouping;
  char *lpDecimalSep;
  char *lpThousandSep;
  unsigned int NegativeOrder;
};

/* 5548 */
struct tagHANDLETABLE
{
  void *objectHandle[1];
};

/* 5549 */
struct tagSOUNDSENTRYA
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned int iFSTextEffect;
  unsigned int iFSTextEffectMSec;
  unsigned int iFSTextEffectColorBits;
  unsigned int iFSGrafEffect;
  unsigned int iFSGrafEffectMSec;
  unsigned int iFSGrafEffectColor;
  unsigned int iWindowsEffect;
  unsigned int iWindowsEffectMSec;
  char *lpszWindowsEffectDLL;
  unsigned int iWindowsEffectOrdinal;
};

/* 5550 */
struct _IMAGE_RESOURCE_DATA_ENTRY
{
  unsigned int OffsetToData;
  unsigned int Size;
  unsigned int CodePage;
  unsigned int Reserved;
};

/* 5551 */
struct _COMMTIMEOUTS
{
  unsigned int ReadIntervalTimeout;
  unsigned int ReadTotalTimeoutMultiplier;
  unsigned int ReadTotalTimeoutConstant;
  unsigned int WriteTotalTimeoutMultiplier;
  unsigned int WriteTotalTimeoutConstant;
};

/* 5552 */
struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 5553 */
struct _EXIT_PROCESS_DEBUG_INFO
{
  unsigned int dwExitCode;
};

/* 5554 */
struct _ImageArchitectureEntry
{
  unsigned int FixupInstRVA;
  unsigned int NewInst;
};

/* 5555 */
union $4CFA15F5CE489CDF0BD78DFB308FEF36
{
  unsigned __int16 Ordinal;
  unsigned __int16 Hint;
};

/* 5556 */
struct IMPORT_OBJECT_HEADER
{
  unsigned __int16 Sig1;
  unsigned __int16 Sig2;
  unsigned __int16 Version;
  unsigned __int16 Machine;
  unsigned int TimeDateStamp;
  unsigned int SizeOfData;
  $4CFA15F5CE489CDF0BD78DFB308FEF36 ___u6;
  unsigned __int16 Type : 2;
  unsigned __int16 NameType : 3;
  unsigned __int16 Reserved : 11;
};

/* 5557 */
struct tagMSGBOXPARAMSW
{
  unsigned int cbSize;
  HWND__ *hwndOwner;
  HINSTANCE__ *hInstance;
  const unsigned __int16 *lpszText;
  const unsigned __int16 *lpszCaption;
  unsigned int dwStyle;
  const unsigned __int16 *lpszIcon;
  unsigned int dwContextHelpId;
  void (__stdcall *lpfnMsgBoxCallback)(tagHELPINFO *);
  unsigned int dwLanguageId;
};

/* 5558 */
struct tagLOGPALETTE
{
  unsigned __int16 palVersion;
  unsigned __int16 palNumEntries;
  tagPALETTEENTRY palPalEntry[1];
};

/* 5559 */
struct tagNONCLIENTMETRICSA
{
  unsigned int cbSize;
  int iBorderWidth;
  int iScrollWidth;
  int iScrollHeight;
  int iCaptionWidth;
  int iCaptionHeight;
  tagLOGFONTA lfCaptionFont;
  int iSmCaptionWidth;
  int iSmCaptionHeight;
  tagLOGFONTA lfSmCaptionFont;
  int iMenuWidth;
  int iMenuHeight;
  tagLOGFONTA lfMenuFont;
  tagLOGFONTA lfStatusFont;
  tagLOGFONTA lfMessageFont;
};

/* 5560 */
struct tagCREATESTRUCTW
{
  void *lpCreateParams;
  HINSTANCE__ *hInstance;
  HMENU__ *hMenu;
  HWND__ *hwndParent;
  int cy;
  int cx;
  int y;
  int x;
  int style;
  const unsigned __int16 *lpszName;
  const unsigned __int16 *lpszClass;
  unsigned int dwExStyle;
};

/* 5561 */
struct tagCBT_CREATEWNDW
{
  tagCREATESTRUCTW *lpcs;
  HWND__ *hwndInsertAfter;
};

/* 5562 */
struct _stat
{
  unsigned int st_dev;
  unsigned __int16 st_ino;
  unsigned __int16 st_mode;
  __int16 st_nlink;
  __int16 st_uid;
  __int16 st_gid;
  unsigned int st_rdev;
  int st_size;
  int st_atime;
  int st_mtime;
  int st_ctime;
};

/* 5563 */
struct FLASHWINFO
{
  unsigned int cbSize;
  HWND__ *hwnd;
  unsigned int dwFlags;
  unsigned int uCount;
  unsigned int dwTimeout;
};

/* 5564 */
struct __declspec(align(4)) _MODEMDEVCAPS
{
  unsigned int dwActualSize;
  unsigned int dwRequiredSize;
  unsigned int dwDevSpecificOffset;
  unsigned int dwDevSpecificSize;
  unsigned int dwModemProviderVersion;
  unsigned int dwModemManufacturerOffset;
  unsigned int dwModemManufacturerSize;
  unsigned int dwModemModelOffset;
  unsigned int dwModemModelSize;
  unsigned int dwModemVersionOffset;
  unsigned int dwModemVersionSize;
  unsigned int dwDialOptions;
  unsigned int dwCallSetupFailTimer;
  unsigned int dwInactivityTimeout;
  unsigned int dwSpeakerVolume;
  unsigned int dwSpeakerMode;
  unsigned int dwModemOptions;
  unsigned int dwMaxDTERate;
  unsigned int dwMaxDCERate;
  char abVariablePortion[1];
};

/* 5566 */
union $7A727655067EA29DD1B3C3F7D79CBFD1
{
  void *FiberData;
  unsigned int Version;
};

/* 5565 */
struct _NT_TIB
{
  struct _EXCEPTION_REGISTRATION_RECORD *ExceptionList;
  void *StackBase;
  void *StackLimit;
  void *SubSystemTib;
  $7A727655067EA29DD1B3C3F7D79CBFD1 ___u4;
  void *ArbitraryUserPointer;
  _NT_TIB *Self;
};

/* 5567 */
struct tagWINDOWPLACEMENT
{
  unsigned int length;
  unsigned int flags;
  unsigned int showCmd;
  tagPOINT ptMinPosition;
  tagPOINT ptMaxPosition;
  tagRECT rcNormalPosition;
};

/* 5568 */
struct _SERVICE_STATUS
{
  unsigned int dwServiceType;
  unsigned int dwCurrentState;
  unsigned int dwControlsAccepted;
  unsigned int dwWin32ExitCode;
  unsigned int dwServiceSpecificExitCode;
  unsigned int dwCheckPoint;
  unsigned int dwWaitHint;
};

/* 5569 */
struct _ENUM_SERVICE_STATUSW
{
  unsigned __int16 *lpServiceName;
  unsigned __int16 *lpDisplayName;
  _SERVICE_STATUS ServiceStatus;
};

/* 5570 */
struct value_entW
{
  unsigned __int16 *ve_valuename;
  unsigned int ve_valuelen;
  unsigned int ve_valueptr;
  unsigned int ve_type;
};

/* 5571 */
struct _PACKEDEVENTINFO
{
  unsigned int ulSize;
  unsigned int ulNumEventsForLogFile;
  unsigned int ulOffsets[];
};

/* 5572 */
struct _MEMORYSTATUSEX
{
  unsigned int dwLength;
  unsigned int dwMemoryLoad;
  unsigned __int64 ullTotalPhys;
  unsigned __int64 ullAvailPhys;
  unsigned __int64 ullTotalPageFile;
  unsigned __int64 ullAvailPageFile;
  unsigned __int64 ullTotalVirtual;
  unsigned __int64 ullAvailVirtual;
  unsigned __int64 ullAvailExtendedVirtual;
};

/* 5573 */
struct _PSINJECTDATA
{
  unsigned int DataBytes;
  unsigned __int16 InjectionPoint;
  unsigned __int16 PageNumber;
};

/* 5574 */
struct tagMENUITEMINFOW
{
  unsigned int cbSize;
  unsigned int fMask;
  unsigned int fType;
  unsigned int fState;
  unsigned int wID;
  HMENU__ *hSubMenu;
  HBITMAP__ *hbmpChecked;
  HBITMAP__ *hbmpUnchecked;
  unsigned int dwItemData;
  unsigned __int16 *dwTypeData;
  unsigned int cch;
  HBITMAP__ *hbmpItem;
};

/* 5575 */
struct tagGCP_RESULTSA
{
  unsigned int lStructSize;
  char *lpOutString;
  unsigned int *lpOrder;
  int *lpDx;
  int *lpCaretPos;
  char *lpClass;
  unsigned __int16 *lpGlyphs;
  unsigned int nGlyphs;
  int nMaxFit;
};

/* 5576 */
struct HTASK__
{
  int unused;
};

/* 5577 */
struct tagEMRFORMAT
{
  unsigned int dSignature;
  unsigned int nVersion;
  unsigned int cbData;
  unsigned int offData;
};

/* 5578 */
struct tagMETARECORD
{
  unsigned int rdSize;
  unsigned __int16 rdFunction;
  unsigned __int16 rdParm[1];
};

/* 5579 */
struct _GENERIC_MAPPING
{
  unsigned int GenericRead;
  unsigned int GenericWrite;
  unsigned int GenericExecute;
  unsigned int GenericAll;
};

/* 5580 */
struct tagVS_FIXEDFILEINFO
{
  unsigned int dwSignature;
  unsigned int dwStrucVersion;
  unsigned int dwFileVersionMS;
  unsigned int dwFileVersionLS;
  unsigned int dwProductVersionMS;
  unsigned int dwProductVersionLS;
  unsigned int dwFileFlagsMask;
  unsigned int dwFileFlags;
  unsigned int dwFileOS;
  unsigned int dwFileType;
  unsigned int dwFileSubtype;
  unsigned int dwFileDateMS;
  unsigned int dwFileDateLS;
};

/* 5581 */
struct _SC_ACTION
{
  _SC_ACTION_TYPE Type;
  unsigned int Delay;
};

/* 5582 */
struct _SERVICE_FAILURE_ACTIONSA
{
  unsigned int dwResetPeriod;
  char *lpRebootMsg;
  char *lpCommand;
  unsigned int cActions;
  _SC_ACTION *lpsaActions;
};

/* 5583 */
struct HIMC__
{
  int unused;
};

/* 5584 */
struct tagEMREXTCREATEPEN
{
  tagEMR emr;
  unsigned int ihPen;
  unsigned int offBmi;
  unsigned int cbBmi;
  unsigned int offBits;
  unsigned int cbBits;
  tagEXTLOGPEN elp;
};

/* 5585 */
union $66A2FC5ED47CB5912809650DAB14E256
{
  unsigned int VirtualAddress;
  unsigned int RelocCount;
};

/* 5586 */
struct __unaligned __declspec(align(2)) _IMAGE_RELOCATION
{
  $66A2FC5ED47CB5912809650DAB14E256 ___u0;
  unsigned int SymbolTableIndex;
  unsigned __int16 Type;
};

/* 5587 */
struct tagWNDCLASSW
{
  unsigned int style;
  int (__stdcall *lpfnWndProc)(HWND__ *, unsigned int, unsigned int, int);
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE__ *hInstance;
  HICON__ *hIcon;
  HICON__ *hCursor;
  HBRUSH__ *hbrBackground;
  const unsigned __int16 *lpszMenuName;
  const unsigned __int16 *lpszClassName;
};

/* 5588 */
struct _QUERY_SERVICE_LOCK_STATUSW
{
  unsigned int fIsLocked;
  unsigned __int16 *lpLockOwner;
  unsigned int dwLockDuration;
};

/* 5589 */
struct _MOUSE_EVENT_RECORD
{
  _COORD dwMousePosition;
  unsigned int dwButtonState;
  unsigned int dwControlKeyState;
  unsigned int dwEventFlags;
};

/* 5590 */
struct tagLOCALESIGNATURE
{
  unsigned int lsUsb[4];
  unsigned int lsCsbDefault[2];
  unsigned int lsCsbSupported[2];
};

/* 5591 */
struct _CONNECTDLGSTRUCTW
{
  unsigned int cbStructure;
  HWND__ *hwndOwner;
  _NETRESOURCEW *lpConnRes;
  unsigned int dwFlags;
  unsigned int dwDevNum;
};

/* 5592 */
struct tagWINDOWPOS
{
  HWND__ *hwnd;
  HWND__ *hwndInsertAfter;
  int x;
  int y;
  int cx;
  int cy;
  unsigned int flags;
};

/* 5593 */
struct tagNCCALCSIZE_PARAMS
{
  tagRECT rgrc[3];
  tagWINDOWPOS *lppos;
};

/* 5594 */
struct _IMAGE_SEPARATE_DEBUG_HEADER
{
  unsigned __int16 Signature;
  unsigned __int16 Flags;
  unsigned __int16 Machine;
  unsigned __int16 Characteristics;
  unsigned int TimeDateStamp;
  unsigned int CheckSum;
  unsigned int ImageBase;
  unsigned int SizeOfImage;
  unsigned int NumberOfSections;
  unsigned int ExportedNamesSize;
  unsigned int DebugDirectorySize;
  unsigned int SectionAlignment;
  unsigned int Reserved[2];
};

/* 5595 */
struct tagCOMPAREITEMSTRUCT
{
  unsigned int CtlType;
  unsigned int CtlID;
  HWND__ *hwndItem;
  unsigned int itemID1;
  unsigned int itemData1;
  unsigned int itemID2;
  unsigned int itemData2;
  unsigned int dwLocaleId;
};

/* 5596 */
struct _ENUM_SERVICE_STATUSA
{
  char *lpServiceName;
  char *lpDisplayName;
  _SERVICE_STATUS ServiceStatus;
};

/* 5597 */
struct tagEMRRESTOREDC
{
  tagEMR emr;
  int iRelative;
};

/* 5598 */
struct _MESSAGE_RESOURCE_DATA
{
  unsigned int NumberOfBlocks;
  _MESSAGE_RESOURCE_BLOCK Blocks[1];
};

/* 5599 */
struct _cpinfoexW
{
  unsigned int MaxCharSize;
  char DefaultChar[2];
  char LeadByte[12];
  unsigned __int16 UnicodeDefaultChar;
  unsigned int CodePage;
  unsigned __int16 CodePageName[260];
};

/* 5600 */
struct tagIMECHARPOSITION
{
  unsigned int dwSize;
  unsigned int dwCharPos;
  tagPOINT pt;
  unsigned int cLineHeight;
  tagRECT rcDocument;
};

/* 5601 */
struct __wfinddata64_t
{
  unsigned int attrib;
  __int64 time_create;
  __int64 time_access;
  __int64 time_write;
  __int64 size;
  wchar_t name[260];
};

/* 5602 */
struct $891B81F3AF8BB5AA64D94FEC4D361AA7
{
  _SINGLE_LIST_ENTRY Next;
  unsigned __int16 Depth;
  unsigned __int16 Sequence;
};

/* 5603 */
union _SLIST_HEADER
{
  unsigned __int64 Alignment;
  $891B81F3AF8BB5AA64D94FEC4D361AA7 __s1;
};

/* 5604 */
struct _UNIVERSAL_NAME_INFOW
{
  unsigned __int16 *lpUniversalName;
};

/* 5605 */
struct __declspec(align(4)) _TAPE_WRITE_MARKS
{
  unsigned int Type;
  unsigned int Count;
  char Immediate;
};

/* 5606 */
struct tagSTYLEBUFA
{
  unsigned int dwStyle;
  char szDescription[32];
};

/* 5607 */
struct tagCURSORINFO
{
  unsigned int cbSize;
  unsigned int flags;
  HICON__ *hCursor;
  tagPOINT ptScreenPos;
};

/* 5608 */
struct value_entA
{
  char *ve_valuename;
  unsigned int ve_valuelen;
  unsigned int ve_valueptr;
  unsigned int ve_type;
};

/* 5609 */
struct _IO_COUNTERS
{
  unsigned __int64 ReadOperationCount;
  unsigned __int64 WriteOperationCount;
  unsigned __int64 OtherOperationCount;
  unsigned __int64 ReadTransferCount;
  unsigned __int64 WriteTransferCount;
  unsigned __int64 OtherTransferCount;
};

/* 5610 */
struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION
{
  _JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation;
  _IO_COUNTERS IoInfo;
  unsigned int ProcessMemoryLimit;
  unsigned int JobMemoryLimit;
  unsigned int PeakProcessMemoryUsed;
  unsigned int PeakJobMemoryUsed;
};

/* 5611 */
struct _MEMORYSTATUS
{
  unsigned int dwLength;
  unsigned int dwMemoryLoad;
  unsigned int dwTotalPhys;
  unsigned int dwAvailPhys;
  unsigned int dwTotalPageFile;
  unsigned int dwAvailPageFile;
  unsigned int dwTotalVirtual;
  unsigned int dwAvailVirtual;
};

/* 5612 */
struct _WGLSWAP
{
  HDC__ *hdc;
  unsigned int uiFlags;
};

/* 5613 */
struct tagCHARSETINFO
{
  unsigned int ciCharset;
  unsigned int ciACP;
  tagFONTSIGNATURE fs;
};

/* 5614 */
struct tagTTPOLYGONHEADER
{
  unsigned int cb;
  unsigned int dwType;
  tagPOINTFX pfxStart;
};

/* 5615 */
struct _IMAGE_ARCHIVE_MEMBER_HEADER
{
  char Name[16];
  char Date[12];
  char UserID[6];
  char GroupID[6];
  char Mode[8];
  char Size[10];
  char EndHeader[2];
};

/* 5616 */
struct IMAGE_COR20_HEADER
{
  unsigned int cb;
  unsigned __int16 MajorRuntimeVersion;
  unsigned __int16 MinorRuntimeVersion;
  _IMAGE_DATA_DIRECTORY MetaData;
  unsigned int Flags;
  unsigned int EntryPointToken;
  _IMAGE_DATA_DIRECTORY Resources;
  _IMAGE_DATA_DIRECTORY StrongNameSignature;
  _IMAGE_DATA_DIRECTORY CodeManagerTable;
  _IMAGE_DATA_DIRECTORY VTableFixups;
  _IMAGE_DATA_DIRECTORY ExportAddressTableJumps;
  _IMAGE_DATA_DIRECTORY ManagedNativeHeader;
};

/* 5617 */
struct _IMAGE_EXPORT_DIRECTORY
{
  unsigned int Characteristics;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int Name;
  unsigned int Base;
  unsigned int NumberOfFunctions;
  unsigned int NumberOfNames;
  unsigned int AddressOfFunctions;
  unsigned int AddressOfNames;
  unsigned int AddressOfNameOrdinals;
};

/* 5618 */
struct tagEMRPLGBLT
{
  tagEMR emr;
  _RECTL rclBounds;
  _POINTL aptlDest[3];
  int xSrc;
  int ySrc;
  int cxSrc;
  int cySrc;
  tagXFORM xformSrc;
  unsigned int crBkColorSrc;
  unsigned int iUsageSrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  int xMask;
  int yMask;
  unsigned int iUsageMask;
  unsigned int offBmiMask;
  unsigned int cbBmiMask;
  unsigned int offBitsMask;
  unsigned int cbBitsMask;
};

/* 5619 */
struct __declspec(align(4)) _LOAD_DLL_DEBUG_INFO
{
  void *hFile;
  void *lpBaseOfDll;
  unsigned int dwDebugInfoFileOffset;
  unsigned int nDebugInfoSize;
  void *lpImageName;
  unsigned __int16 fUnicode;
};

/* 5620 */
struct _IMAGE_RUNTIME_FUNCTION_ENTRY
{
  unsigned int BeginAddress;
  unsigned int EndAddress;
  unsigned int UnwindInfoAddress;
};

/* 5621 */
struct tagEMRCREATEMONOBRUSH
{
  tagEMR emr;
  unsigned int ihBrush;
  unsigned int iUsage;
  unsigned int offBmi;
  unsigned int cbBmi;
  unsigned int offBits;
  unsigned int cbBits;
};

/* 5622 */
union _FILE_SEGMENT_ELEMENT
{
  void *Buffer;
  unsigned __int64 Alignment;
};

/* 5623 */
struct tagENUMLOGFONTEXA
{
  tagLOGFONTA elfLogFont;
  char elfFullName[64];
  char elfStyle[32];
  char elfScript[32];
};

/* 5624 */
struct _div_t
{
  int quot;
  int rem;
};

/* 5625 */
struct _GLYPHMETRICS
{
  unsigned int gmBlackBoxX;
  unsigned int gmBlackBoxY;
  tagPOINT gmptGlyphOrigin;
  __int16 gmCellIncX;
  __int16 gmCellIncY;
};

/* 5626 */
struct _JOB_SET_ARRAY
{
  void *JobHandle;
  unsigned int MemberLevel;
  unsigned int Flags;
};

/* 5627 */
struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION
{
  _LARGE_INTEGER TotalUserTime;
  _LARGE_INTEGER TotalKernelTime;
  _LARGE_INTEGER ThisPeriodTotalUserTime;
  _LARGE_INTEGER ThisPeriodTotalKernelTime;
  unsigned int TotalPageFaultCount;
  unsigned int TotalProcesses;
  unsigned int ActiveProcesses;
  unsigned int TotalTerminatedProcesses;
};

/* 5628 */
struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION
{
  _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo;
  _IO_COUNTERS IoInfo;
};

/* 5629 */
struct tagEMRSETMITERLIMIT
{
  tagEMR emr;
  float eMiterLimit;
};

/* 5630 */
struct tagEMRCREATEBRUSHINDIRECT
{
  tagEMR emr;
  unsigned int ihBrush;
  tagLOGBRUSH32 lb;
};

/* 5631 */
struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION
{
  unsigned int dwFlags;
  unsigned int ulFormatVersion;
  unsigned int ulAssemblyCount;
  unsigned int ulRootManifestPathType;
  unsigned int ulRootManifestPathChars;
  unsigned int ulRootConfigurationPathType;
  unsigned int ulRootConfigurationPathChars;
  unsigned int ulAppDirPathType;
  unsigned int ulAppDirPathChars;
  const unsigned __int16 *lpRootManifestPath;
  const unsigned __int16 *lpRootConfigurationPath;
  const unsigned __int16 *lpAppDirPath;
};

/* 5632 */
struct _CREATE_THREAD_DEBUG_INFO
{
  void *hThread;
  void *lpThreadLocalBase;
  unsigned int (__stdcall *lpStartAddress)(void *);
};

/* 5633 */
union $FCA73D34B14C213967916E32F2381AA0
{
  _EXCEPTION_DEBUG_INFO Exception;
  _CREATE_THREAD_DEBUG_INFO CreateThread;
  _CREATE_PROCESS_DEBUG_INFO CreateProcessInfo;
  _EXIT_THREAD_DEBUG_INFO ExitThread;
  _EXIT_PROCESS_DEBUG_INFO ExitProcess;
  _LOAD_DLL_DEBUG_INFO LoadDll;
  _UNLOAD_DLL_DEBUG_INFO UnloadDll;
  _OUTPUT_DEBUG_STRING_INFO DebugString;
  _RIP_INFO RipInfo;
};

/* 5634 */
struct _DEBUG_EVENT
{
  unsigned int dwDebugEventCode;
  unsigned int dwProcessId;
  unsigned int dwThreadId;
  $FCA73D34B14C213967916E32F2381AA0 u;
};

/* 5635 */
struct _SECURITY_DESCRIPTOR_RELATIVE
{
  char Revision;
  char Sbz1;
  unsigned __int16 Control;
  unsigned int Owner;
  unsigned int Group;
  unsigned int Sacl;
  unsigned int Dacl;
};

/* 5636 */
struct _TOKEN_STATISTICS
{
  _LUID TokenId;
  _LUID AuthenticationId;
  _LARGE_INTEGER ExpirationTime;
  _TOKEN_TYPE TokenType;
  _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  unsigned int DynamicCharged;
  unsigned int DynamicAvailable;
  unsigned int GroupCount;
  unsigned int PrivilegeCount;
  _LUID ModifiedId;
};

/* 5637 */
struct _PRIVILEGE_SET
{
  unsigned int PrivilegeCount;
  unsigned int Control;
  _LUID_AND_ATTRIBUTES Privilege[1];
};

/* 5638 */
struct _TAPE_GET_POSITION
{
  unsigned int Type;
  unsigned int Partition;
  _LARGE_INTEGER Offset;
};

/* 5639 */
struct tagCWPSTRUCT
{
  int lParam;
  unsigned int wParam;
  unsigned int message;
  HWND__ *hwnd;
};

/* 5640 */
struct tagALTTABINFO
{
  unsigned int cbSize;
  int cItems;
  int cColumns;
  int cRows;
  int iColFocus;
  int iRowFocus;
  int cxItem;
  int cyItem;
  tagPOINT ptStart;
};

/* 5641 */
struct _IMAGE_TLS_DIRECTORY32
{
  unsigned int StartAddressOfRawData;
  unsigned int EndAddressOfRawData;
  unsigned int AddressOfIndex;
  unsigned int AddressOfCallBacks;
  unsigned int SizeOfZeroFill;
  unsigned int Characteristics;
};

/* 5642 */
struct __declspec(align(4)) tagEMRPOLYDRAW16
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cpts;
  tagPOINTS apts[1];
  char abTypes[1];
};

/* 5643 */
struct _GRADIENT_RECT
{
  unsigned int UpperLeft;
  unsigned int LowerRight;
};

/* 5644 */
struct __declspec(align(4)) _TAPE_ERASE
{
  unsigned int Type;
  char Immediate;
};

/* 5645 */
struct _ACL_SIZE_INFORMATION
{
  unsigned int AceCount;
  unsigned int AclBytesInUse;
  unsigned int AclBytesFree;
};

/* 5646 */
struct tagEMRPOLYPOLYLINE16
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int nPolys;
  unsigned int cpts;
  unsigned int aPolyCounts[1];
  tagPOINTS apts[1];
};

/* 5647 */
struct _ENUM_SERVICE_STATUS_PROCESSW
{
  unsigned __int16 *lpServiceName;
  unsigned __int16 *lpDisplayName;
  _SERVICE_STATUS_PROCESS ServiceStatusProcess;
};

/* 5648 */
struct tagKERNINGPAIR
{
  unsigned __int16 wFirst;
  unsigned __int16 wSecond;
  int iKernAmount;
};

/* 5649 */
struct tagEMRCREATEPEN
{
  tagEMR emr;
  unsigned int ihPen;
  tagLOGPEN lopn;
};

/* 5650 */
union $B34434447B6B77C7D7B1493D8CD04E6E
{
  unsigned __int16 UnicodeChar;
  char AsciiChar;
};

/* 5651 */
struct _KEY_EVENT_RECORD
{
  int bKeyDown;
  unsigned __int16 wRepeatCount;
  unsigned __int16 wVirtualKeyCode;
  unsigned __int16 wVirtualScanCode;
  $B34434447B6B77C7D7B1493D8CD04E6E uChar;
  unsigned int dwControlKeyState;
};

/* 5652 */
struct _QUERY_SERVICE_LOCK_STATUSA
{
  unsigned int fIsLocked;
  char *lpLockOwner;
  unsigned int dwLockDuration;
};

/* 5653 */
struct _OBJECTID
{
  _GUID Lineage;
  unsigned int Uniquifier;
};

/* 5654 */
struct _SYSTEM_ALARM_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 5655 */
struct IMAGE_LOAD_CONFIG_DIRECTORY64
{
  unsigned int Size;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int GlobalFlagsClear;
  unsigned int GlobalFlagsSet;
  unsigned int CriticalSectionDefaultTimeout;
  unsigned __int64 DeCommitFreeBlockThreshold;
  unsigned __int64 DeCommitTotalFreeThreshold;
  unsigned __int64 LockPrefixTable;
  unsigned __int64 MaximumAllocationSize;
  unsigned __int64 VirtualMemoryThreshold;
  unsigned __int64 ProcessAffinityMask;
  unsigned int ProcessHeapFlags;
  unsigned __int16 CSDVersion;
  unsigned __int16 Reserved1;
  unsigned __int64 EditList;
  unsigned __int64 SecurityCookie;
  unsigned __int64 SEHandlerTable;
  unsigned __int64 SEHandlerCount;
};

/* 5656 */
struct tagEMRSETPIXELV
{
  tagEMR emr;
  _POINTL ptlPixel;
  unsigned int crColor;
};

/* 5657 */
union $8662F439D215AAEDBB1F787C8B649648
{
  unsigned __int64 FiberData;
  unsigned int Version;
};

/* 5658 */
struct _NT_TIB64
{
  unsigned __int64 ExceptionList;
  unsigned __int64 StackBase;
  unsigned __int64 StackLimit;
  unsigned __int64 SubSystemTib;
  $8662F439D215AAEDBB1F787C8B649648 ___u4;
  unsigned __int64 ArbitraryUserPointer;
  unsigned __int64 Self;
};

/* 5659 */
struct _ABCFLOAT
{
  float abcfA;
  float abcfB;
  float abcfC;
};

/* 5660 */
struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY
{
  unsigned __int64 BeginAddress;
  unsigned __int64 EndAddress;
  unsigned __int64 ExceptionHandler;
  unsigned __int64 HandlerData;
  unsigned __int64 PrologEndAddress;
};

/* 5661 */
struct _CONSOLE_CURSOR_INFO
{
  unsigned int dwSize;
  int bVisible;
};

/* 5662 */
struct __declspec(align(8)) _TAPE_GET_MEDIA_PARAMETERS
{
  _LARGE_INTEGER Capacity;
  _LARGE_INTEGER Remaining;
  unsigned int BlockSize;
  unsigned int PartitionCount;
  char WriteProtected;
};

/* 5663 */
struct _wfinddatai64_t
{
  unsigned int attrib;
  int time_create;
  int time_access;
  int time_write;
  __int64 size;
  wchar_t name[260];
};

/* 5664 */
struct _SERVICE_DESCRIPTIONA
{
  char *lpDescription;
};

/* 5665 */
struct tagBITMAP
{
  int bmType;
  int bmWidth;
  int bmHeight;
  int bmWidthBytes;
  unsigned __int16 bmPlanes;
  unsigned __int16 bmBitsPixel;
  void *bmBits;
};

/* 5666 */
struct tagDIBSECTION
{
  tagBITMAP dsBm;
  tagBITMAPINFOHEADER dsBmih;
  unsigned int dsBitfields[3];
  void *dshSection;
  unsigned int dsOffset;
};

/* 5667 */
struct __declspec(align(4)) _WIN32_STREAM_ID
{
  unsigned int dwStreamId;
  unsigned int dwStreamAttributes;
  _LARGE_INTEGER Size;
  unsigned int dwStreamNameSize;
  unsigned __int16 cStreamName[1];
};

/* 5668 */
struct tagENUMLOGFONTEXW
{
  tagLOGFONTW elfLogFont;
  unsigned __int16 elfFullName[64];
  unsigned __int16 elfStyle[32];
  unsigned __int16 elfScript[32];
};

/* 5669 */
struct _TOKEN_OWNER
{
  void *Owner;
};

/* 5670 */
struct _EVENTSFORLOGFILE
{
  unsigned int ulSize;
  unsigned __int16 szLogicalLogFile[256];
  unsigned int ulNumRecords;
  _EVENTLOGRECORD pEventLogRecords[];
};

/* 5671 */
struct __declspec(align(2)) _IMAGE_RESOURCE_DIRECTORY_STRING
{
  unsigned __int16 Length;
  char NameString[1];
};

/* 5672 */
struct _ACCESS_DENIED_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 5673 */
struct tagIMEMENUITEMINFOW
{
  unsigned int cbSize;
  unsigned int fType;
  unsigned int fState;
  unsigned int wID;
  HBITMAP__ *hbmpChecked;
  HBITMAP__ *hbmpUnchecked;
  unsigned int dwItemData;
  unsigned __int16 szString[80];
  HBITMAP__ *hbmpItem;
};

/* 5674 */
struct tagCOLORADJUSTMENT
{
  unsigned __int16 caSize;
  unsigned __int16 caFlags;
  unsigned __int16 caIlluminantIndex;
  unsigned __int16 caRedGamma;
  unsigned __int16 caGreenGamma;
  unsigned __int16 caBlueGamma;
  unsigned __int16 caReferenceBlack;
  unsigned __int16 caReferenceWhite;
  __int16 caContrast;
  __int16 caBrightness;
  __int16 caColorfulness;
  __int16 caRedGreenTint;
};

/* 5675 */
struct tagEMRSETCOLORADJUSTMENT
{
  tagEMR emr;
  tagCOLORADJUSTMENT ColorAdjustment;
};

/* 5676 */
struct _FPO_DATA
{
  unsigned int ulOffStart;
  unsigned int cbProcSize;
  unsigned int cdwLocals;
  unsigned __int16 cdwParams;
  unsigned __int16 cbProlog : 8;
  unsigned __int16 cbRegs : 3;
  unsigned __int16 fHasSEH : 1;
  unsigned __int16 fUseBP : 1;
  unsigned __int16 reserved : 1;
  unsigned __int16 cbFrame : 2;
};

/* 5677 */
struct tagNONCLIENTMETRICSW
{
  unsigned int cbSize;
  int iBorderWidth;
  int iScrollWidth;
  int iScrollHeight;
  int iCaptionWidth;
  int iCaptionHeight;
  tagLOGFONTW lfCaptionFont;
  int iSmCaptionWidth;
  int iSmCaptionHeight;
  tagLOGFONTW lfSmCaptionFont;
  int iMenuWidth;
  int iMenuHeight;
  tagLOGFONTW lfMenuFont;
  tagLOGFONTW lfStatusFont;
  tagLOGFONTW lfMessageFont;
};

/* 5678 */
struct tagEMRSETVIEWPORTORGEX
{
  tagEMR emr;
  _POINTL ptlOrigin;
};

/* 5679 */
struct _SERVICE_TABLE_ENTRYA
{
  char *lpServiceName;
  void (__stdcall *lpServiceProc)(unsigned int, char **);
};

/* 5680 */
struct _MENU_EVENT_RECORD
{
  unsigned int dwCommandId;
};

/* 5681 */
struct _RGNDATAHEADER
{
  unsigned int dwSize;
  unsigned int iType;
  unsigned int nCount;
  unsigned int nRgnSize;
  tagRECT rcBound;
};

/* 5682 */
struct __declspec(align(4)) _RGNDATA
{
  _RGNDATAHEADER rdh;
  char Buffer[1];
};

/* 5683 */
struct _REMOTE_NAME_INFOA
{
  char *lpUniversalName;
  char *lpConnectionName;
  char *lpRemainingPath;
};

/* 5684 */
struct tagFILTERKEYS
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned int iWaitMSec;
  unsigned int iDelayMSec;
  unsigned int iRepeatMSec;
  unsigned int iBounceMSec;
};

/* 5685 */
struct tagEMRSETTEXTCOLOR
{
  tagEMR emr;
  unsigned int crColor;
};

/* 5686 */
struct _DOCINFOW
{
  int cbSize;
  const unsigned __int16 *lpszDocName;
  const unsigned __int16 *lpszOutput;
  const unsigned __int16 *lpszDatatype;
  unsigned int fwType;
};

/* 5687 */
struct tagDELETEITEMSTRUCT
{
  unsigned int CtlType;
  unsigned int CtlID;
  unsigned int itemID;
  HWND__ *hwndItem;
  unsigned int itemData;
};

/* 5688 */
struct _s__ThrowInfo
{
  unsigned int attributes;
  void (__cdecl *pmfnUnwind)();
  int (*pForwardCompat)(...);
  _s__CatchableTypeArray *pCatchableTypeArray;
};

/* 5689 */
struct __cppobj tagMONITORINFOEXW : tagMONITORINFO
{
  unsigned __int16 szDevice[32];
};

/* 5690 */
struct _SYSTEM_POWER_POLICY
{
  unsigned int Revision;
  POWER_ACTION_POLICY PowerButton;
  POWER_ACTION_POLICY SleepButton;
  POWER_ACTION_POLICY LidClose;
  _SYSTEM_POWER_STATE LidOpenWake;
  unsigned int Reserved;
  POWER_ACTION_POLICY Idle;
  unsigned int IdleTimeout;
  char IdleSensitivity;
  char DynamicThrottle;
  char Spare2[2];
  _SYSTEM_POWER_STATE MinSleep;
  _SYSTEM_POWER_STATE MaxSleep;
  _SYSTEM_POWER_STATE ReducedLatencySleep;
  unsigned int WinLogonFlags;
  unsigned int Spare3;
  unsigned int DozeS4Timeout;
  unsigned int BroadcastCapacityResolution;
  SYSTEM_POWER_LEVEL DischargePolicy[4];
  unsigned int VideoTimeout;
  char VideoDimDisplay;
  unsigned int VideoReserved[3];
  unsigned int SpindownTimeout;
  char OptimizeForPower;
  char FanThrottleTolerance;
  char ForcedThrottle;
  char MinThrottle;
  POWER_ACTION_POLICY OverThrottled;
};

/* 5691 */
struct tagNEWTEXTMETRICW
{
  int tmHeight;
  int tmAscent;
  int tmDescent;
  int tmInternalLeading;
  int tmExternalLeading;
  int tmAveCharWidth;
  int tmMaxCharWidth;
  int tmWeight;
  int tmOverhang;
  int tmDigitizedAspectX;
  int tmDigitizedAspectY;
  unsigned __int16 tmFirstChar;
  unsigned __int16 tmLastChar;
  unsigned __int16 tmDefaultChar;
  unsigned __int16 tmBreakChar;
  char tmItalic;
  char tmUnderlined;
  char tmStruckOut;
  char tmPitchAndFamily;
  char tmCharSet;
  unsigned int ntmFlags;
  unsigned int ntmSizeEM;
  unsigned int ntmCellHeight;
  unsigned int ntmAvgWidth;
};

/* 5692 */
struct _IMAGE_RESOURCE_DIR_STRING_U
{
  unsigned __int16 Length;
  unsigned __int16 NameString[1];
};

/* 5693 */
struct tagEMRMASKBLT
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int cxDest;
  int cyDest;
  unsigned int dwRop;
  int xSrc;
  int ySrc;
  tagXFORM xformSrc;
  unsigned int crBkColorSrc;
  unsigned int iUsageSrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  int xMask;
  int yMask;
  unsigned int iUsageMask;
  unsigned int offBmiMask;
  unsigned int cbBmiMask;
  unsigned int offBitsMask;
  unsigned int cbBitsMask;
};

/* 5694 */
struct BATTERY_REPORTING_SCALE
{
  unsigned int Granularity;
  unsigned int Capacity;
};

/* 5695 */
struct tagEMRPIXELFORMAT
{
  tagEMR emr;
  tagPIXELFORMATDESCRIPTOR pfd;
};

/* 5696 */
struct _complex
{
  long double x;
  long double y;
};

/* 5697 */
struct _SYSTEM_AUDIT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 5698 */
struct SERVICE_STATUS_HANDLE__
{
  int unused;
};

/* 5699 */
struct tagMENUINFO
{
  unsigned int cbSize;
  unsigned int fMask;
  unsigned int dwStyle;
  unsigned int cyMax;
  HBRUSH__ *hbrBack;
  unsigned int dwContextHelpID;
  unsigned int dwMenuData;
};

/* 5700 */
struct _ICONINFO
{
  int fIcon;
  unsigned int xHotspot;
  unsigned int yHotspot;
  HBITMAP__ *hbmMask;
  HBITMAP__ *hbmColor;
};

/* 5701 */
struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR
{
  unsigned int Length;
  _RTL_VERIFIER_DLL_DESCRIPTOR *ProviderDlls;
  void (__stdcall *ProviderDllLoadCallback)(unsigned __int16 *, void *, unsigned int, void *);
  void (__stdcall *ProviderDllUnloadCallback)(unsigned __int16 *, void *, unsigned int, void *);
  unsigned __int16 *VerifierImage;
  unsigned int VerifierFlags;
  unsigned int VerifierDebug;
  void *RtlpGetStackTraceAddress;
  void *RtlpDebugPageHeapCreate;
  void *RtlpDebugPageHeapDestroy;
};

/* 5702 */
struct _PROCESS_INFORMATION
{
  void *hProcess;
  void *hThread;
  unsigned int dwProcessId;
  unsigned int dwThreadId;
};

/* 5703 */
struct _exception
{
  int type;
  char *name;
  long double arg1;
  long double arg2;
  long double retval;
};

/* 5704 */
struct __declspec(align(4)) _cpinfo
{
  unsigned int MaxCharSize;
  char DefaultChar[2];
  char LeadByte[12];
};

/* 5705 */
struct SHELLHOOKINFO
{
  HWND__ *hwnd;
  tagRECT rc;
};

/* 5706 */
struct _PSFEATURE_OUTPUT
{
  int bPageIndependent;
  int bSetPageDevice;
};

/* 5707 */
struct _wfinddata_t
{
  unsigned int attrib;
  int time_create;
  int time_access;
  int time_write;
  unsigned int size;
  wchar_t name[260];
};

/* 5708 */
struct _SYSTEM_AUDIT_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 5709 */
struct __declspec(align(4)) tagEMRGDICOMMENT
{
  tagEMR emr;
  unsigned int cbData;
  char Data[1];
};

/* 5710 */
struct __declspec(align(4)) tagCURSORSHAPE
{
  int xHotSpot;
  int yHotSpot;
  int cx;
  int cy;
  int cbWidth;
  char Planes;
  char BitsPixel;
};

/* 5711 */
struct provider_info
{
  unsigned int (__cdecl *pi_R0_1val)(void *, val_context *, unsigned int, void *, unsigned int *, unsigned int);
  unsigned int (__cdecl *pi_R0_allvals)(void *, val_context *, unsigned int, void *, unsigned int *, unsigned int);
  unsigned int (__cdecl *pi_R3_1val)(void *, val_context *, unsigned int, void *, unsigned int *, unsigned int);
  unsigned int (__cdecl *pi_R3_allvals)(void *, val_context *, unsigned int, void *, unsigned int *, unsigned int);
  unsigned int pi_flags;
  void *pi_key_context;
};

/* 5712 */
struct HCOLORSPACE__
{
  int unused;
};

/* 5713 */
struct _TAPE_CREATE_PARTITION
{
  unsigned int Method;
  unsigned int Count;
  unsigned int Size;
};

/* 5714 */
struct tagEMRSETCOLORSPACE
{
  tagEMR emr;
  unsigned int ihCS;
};

/* 5715 */
struct tagSOUNDSENTRYW
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned int iFSTextEffect;
  unsigned int iFSTextEffectMSec;
  unsigned int iFSTextEffectColorBits;
  unsigned int iFSGrafEffect;
  unsigned int iFSGrafEffectMSec;
  unsigned int iFSGrafEffectColor;
  unsigned int iWindowsEffect;
  unsigned int iWindowsEffectMSec;
  unsigned __int16 *lpszWindowsEffectDLL;
  unsigned int iWindowsEffectOrdinal;
};

/* 5716 */
struct tagENUMLOGFONTW
{
  tagLOGFONTW elfLogFont;
  unsigned __int16 elfFullName[64];
  unsigned __int16 elfStyle[32];
};

/* 5717 */
struct _TOKEN_AUDIT_POLICY
{
  unsigned int PolicyCount;
  _TOKEN_AUDIT_POLICY_ELEMENT Policy[1];
};

/* 5718 */
struct _CONSOLE_FONT_INFO
{
  unsigned int nFont;
  _COORD dwFontSize;
};

/* 5719 */
struct _DISCDLGSTRUCTW
{
  unsigned int cbStructure;
  HWND__ *hwndOwner;
  unsigned __int16 *lpLocalName;
  unsigned __int16 *lpRemoteName;
  unsigned int dwFlags;
};

/* 5720 */
struct _JOBOBJECT_BASIC_PROCESS_ID_LIST
{
  unsigned int NumberOfAssignedProcesses;
  unsigned int NumberOfProcessIdsInList;
  unsigned int ProcessIdList[1];
};

/* 5721 */
struct __declspec(align(4)) _FILE_NOTIFY_INFORMATION
{
  unsigned int NextEntryOffset;
  unsigned int Action;
  unsigned int FileNameLength;
  unsigned __int16 FileName[1];
};

/* 5722 */
struct _IMAGE_RESOURCE_DIRECTORY
{
  unsigned int Characteristics;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned __int16 NumberOfNamedEntries;
  unsigned __int16 NumberOfIdEntries;
};

/* 5723 */
struct tagCOMPOSITIONFORM
{
  unsigned int dwStyle;
  tagPOINT ptCurrentPos;
  tagRECT rcArea;
};

/* 5724 */
struct _SERVICE_DESCRIPTIONW
{
  unsigned __int16 *lpDescription;
};

/* 5725 */
struct _ldiv_t
{
  int quot;
  int rem;
};

/* 5726 */
union $E38888FFFF2E8047BDBD55C921E86469
{
  unsigned int FiberData;
  unsigned int Version;
};

/* 5727 */
struct _NT_TIB32
{
  unsigned int ExceptionList;
  unsigned int StackBase;
  unsigned int StackLimit;
  unsigned int SubSystemTib;
  $E38888FFFF2E8047BDBD55C921E86469 ___u4;
  unsigned int ArbitraryUserPointer;
  unsigned int Self;
};

/* 5728 */
struct _IMAGE_NT_HEADERS64
{
  unsigned int Signature;
  _IMAGE_FILE_HEADER FileHeader;
  _IMAGE_OPTIONAL_HEADER64 OptionalHeader;
};

/* 5729 */
struct _IMAGE_TLS_DIRECTORY64
{
  unsigned __int64 StartAddressOfRawData;
  unsigned __int64 EndAddressOfRawData;
  unsigned __int64 AddressOfIndex;
  unsigned __int64 AddressOfCallBacks;
  unsigned int SizeOfZeroFill;
  unsigned int Characteristics;
};

/* 5730 */
struct stat
{
  unsigned int st_dev;
  unsigned __int16 st_ino;
  unsigned __int16 st_mode;
  __int16 st_nlink;
  __int16 st_uid;
  __int16 st_gid;
  unsigned int st_rdev;
  int st_size;
  int st_atime;
  int st_mtime;
  int st_ctime;
};

/* 5731 */
struct tagEMRGRADIENTFILL
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int nVer;
  unsigned int nTri;
  unsigned int ulMode;
  _TRIVERTEX Ver[1];
};

/* 5732 */
struct _SE_IMPERSONATION_STATE
{
  void *Token;
  char CopyOnOpen;
  char EffectiveOnly;
  _SECURITY_IMPERSONATION_LEVEL Level;
};

/* 5733 */
struct tagEMREXTFLOODFILL
{
  tagEMR emr;
  _POINTL ptlStart;
  unsigned int crColor;
  unsigned int iMode;
};

/* 5734 */
struct _ACCESS_ALLOWED_CALLBACK_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 5735 */
struct _EVENTLOG_FULL_INFORMATION
{
  unsigned int dwFull;
};

/* 5736 */
struct tagCBT_CREATEWNDA
{
  tagCREATESTRUCTA *lpcs;
  HWND__ *hwndInsertAfter;
};

/* 5737 */
struct HHOOK__
{
  int unused;
};

/* 5738 */
struct $6177A0AD8E9F0D390D62242D769E2CDF
{
  char DataBuffer[1];
};

/* 5739 */
struct __declspec(align(4)) _REPARSE_GUID_DATA_BUFFER
{
  unsigned int ReparseTag;
  unsigned __int16 ReparseDataLength;
  unsigned __int16 Reserved;
  _GUID ReparseGuid;
  $6177A0AD8E9F0D390D62242D769E2CDF GenericReparseBuffer;
};

/* 5740 */
struct _SECURITY_DESCRIPTOR
{
  char Revision;
  char Sbz1;
  unsigned __int16 Control;
  void *Owner;
  void *Group;
  _ACL *Sacl;
  _ACL *Dacl;
};

/* 5741 */
struct __stat64
{
  unsigned int st_dev;
  unsigned __int16 st_ino;
  unsigned __int16 st_mode;
  __int16 st_nlink;
  __int16 st_uid;
  __int16 st_gid;
  unsigned int st_rdev;
  __int64 st_size;
  __int64 st_atime;
  __int64 st_mtime;
  __int64 st_ctime;
};

/* 5742 */
struct tagTTPOLYCURVE
{
  unsigned __int16 wType;
  unsigned __int16 cpfx;
  tagPOINTFX apfx[1];
};

/* 5743 */
struct __declspec(align(4)) _TAPE_PREPARE
{
  unsigned int Operation;
  char Immediate;
};

/* 5744 */
struct _CHAR_INFO
{
  $B34434447B6B77C7D7B1493D8CD04E6E Char;
  unsigned __int16 Attributes;
};

/* 5745 */
struct tagEMRCREATEPALETTE
{
  tagEMR emr;
  unsigned int ihPal;
  tagLOGPALETTE lgpl;
};

/* 5746 */
struct _JOBOBJECT_BASIC_UI_RESTRICTIONS
{
  unsigned int UIRestrictionsClass;
};

/* 5747 */
struct LIST_ENTRY64
{
  unsigned __int64 Flink;
  unsigned __int64 Blink;
};

/* 5748 */
struct HPEN__
{
  int unused;
};

/* 5749 */
struct __declspec(align(4)) _SECURITY_QUALITY_OF_SERVICE
{
  unsigned int Length;
  _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  char ContextTrackingMode;
  char EffectiveOnly;
};

/* 5750 */
struct tagDRAWITEMSTRUCT
{
  unsigned int CtlType;
  unsigned int CtlID;
  unsigned int itemID;
  unsigned int itemAction;
  unsigned int itemState;
  HWND__ *hwndItem;
  HDC__ *hDC;
  tagRECT rcItem;
  unsigned int itemData;
};

/* 5751 */
struct __declspec(align(8)) _stati64
{
  unsigned int st_dev;
  unsigned __int16 st_ino;
  unsigned __int16 st_mode;
  __int16 st_nlink;
  __int16 st_uid;
  __int16 st_gid;
  unsigned int st_rdev;
  __int64 st_size;
  int st_atime;
  int st_mtime;
  int st_ctime;
};

/* 5752 */
struct _TAPE_GET_DRIVE_PARAMETERS
{
  char ECC;
  char Compression;
  char DataPadding;
  char ReportSetmarks;
  unsigned int DefaultBlockSize;
  unsigned int MaximumBlockSize;
  unsigned int MinimumBlockSize;
  unsigned int MaximumPartitionCount;
  unsigned int FeaturesLow;
  unsigned int FeaturesHigh;
  unsigned int EOTWarningZoneSize;
};

/* 5753 */
struct _CrtMemState
{
  _CrtMemBlockHeader *pBlockHeader;
  unsigned int lCounts[5];
  unsigned int lSizes[5];
  unsigned int lHighWaterCount;
  unsigned int lTotalCount;
};

/* 5754 */
struct _TAPE_SET_MEDIA_PARAMETERS
{
  unsigned int BlockSize;
};

/* 5755 */
struct tagMDICREATESTRUCTW
{
  const unsigned __int16 *szClass;
  const unsigned __int16 *szTitle;
  void *hOwner;
  int x;
  int y;
  int cx;
  int cy;
  unsigned int style;
  int lParam;
};

/* 5756 */
struct SYSTEM_POWER_CAPABILITIES
{
  char PowerButtonPresent;
  char SleepButtonPresent;
  char LidPresent;
  char SystemS1;
  char SystemS2;
  char SystemS3;
  char SystemS4;
  char SystemS5;
  char HiberFilePresent;
  char FullWake;
  char VideoDimPresent;
  char ApmPresent;
  char UpsPresent;
  char ThermalControl;
  char ProcessorThrottle;
  char ProcessorMinThrottle;
  char ProcessorMaxThrottle;
  char spare2[4];
  char DiskSpinDown;
  char spare3[8];
  char SystemBatteriesPresent;
  char BatteriesAreShortTerm;
  BATTERY_REPORTING_SCALE BatteryScale[3];
  _SYSTEM_POWER_STATE AcOnLineWake;
  _SYSTEM_POWER_STATE SoftLidWake;
  _SYSTEM_POWER_STATE RtcWake;
  _SYSTEM_POWER_STATE MinDeviceWakeState;
  _SYSTEM_POWER_STATE DefaultLowLatencyWake;
};

/* 5757 */
struct __declspec(align(4)) tagEMRGLSBOUNDEDRECORD
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cbData;
  char Data[1];
};

/* 5758 */
union $980F6A28C67C8F3640106D01D4C85A6A
{
  unsigned int Characteristics;
  unsigned int OriginalFirstThunk;
};

/* 5759 */
struct _IMAGE_IMPORT_DESCRIPTOR
{
  $980F6A28C67C8F3640106D01D4C85A6A ___u0;
  unsigned int TimeDateStamp;
  unsigned int ForwarderChain;
  unsigned int Name;
  unsigned int FirstThunk;
};

/* 5760 */
struct _DRAWPATRECT
{
  tagPOINT ptPosition;
  tagPOINT ptSize;
  unsigned __int16 wStyle;
  unsigned __int16 wPattern;
};

/* 5761 */
struct tagEMRBITBLT
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int cxDest;
  int cyDest;
  unsigned int dwRop;
  int xSrc;
  int ySrc;
  tagXFORM xformSrc;
  unsigned int crBkColorSrc;
  unsigned int iUsageSrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
};

/* 5762 */
struct _SERVICE_FAILURE_ACTIONSW
{
  unsigned int dwResetPeriod;
  unsigned __int16 *lpRebootMsg;
  unsigned __int16 *lpCommand;
  unsigned int cActions;
  _SC_ACTION *lpsaActions;
};

/* 5763 */
struct _SID
{
  char Revision;
  char SubAuthorityCount;
  _SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
  unsigned int SubAuthority[1];
};

/* 5764 */
struct tagEMRSETMAPPERFLAGS
{
  tagEMR emr;
  unsigned int dwFlags;
};

/* 5765 */
struct tagMDINEXTMENU
{
  HMENU__ *hmenuIn;
  HMENU__ *hmenuNext;
  HWND__ *hwndNext;
};

/* 5766 */
struct __cppobj bad_typeid : exception
{
};

/* 5767 */
struct __cppobj __non_rtti_object : bad_typeid
{
};

/* 5768 */
struct tagEMRSETPALETTEENTRIES
{
  tagEMR emr;
  unsigned int ihPal;
  unsigned int iStart;
  unsigned int cEntries;
  tagPALETTEENTRY aPalEntries[1];
};

/* 5769 */
struct _EXCEPTION_RECORD64
{
  unsigned int ExceptionCode;
  unsigned int ExceptionFlags;
  unsigned __int64 ExceptionRecord;
  unsigned __int64 ExceptionAddress;
  unsigned int NumberParameters;
  unsigned int __unusedAlignment;
  unsigned __int64 ExceptionInformation[15];
};

/* 5770 */
struct tagEMRRESIZEPALETTE
{
  tagEMR emr;
  unsigned int ihPal;
  unsigned int cEntries;
};

/* 5771 */
struct _OBJECT_TYPE_LIST
{
  unsigned __int16 Level;
  unsigned __int16 Sbz;
  _GUID *ObjectType;
};

/* 5772 */
struct _TIME_ZONE_INFORMATION
{
  int Bias;
  unsigned __int16 StandardName[32];
  _SYSTEMTIME StandardDate;
  int StandardBias;
  unsigned __int16 DaylightName[32];
  _SYSTEMTIME DaylightDate;
  int DaylightBias;
};

/* 5773 */
struct tagTPMPARAMS
{
  unsigned int cbSize;
  tagRECT rcExclude;
};

/* 5774 */
struct pvalueW
{
  unsigned __int16 *pv_valuename;
  int pv_valuelen;
  void *pv_value_context;
  unsigned int pv_type;
};

/* 5775 */
struct _WINDOW_BUFFER_SIZE_RECORD
{
  _COORD dwSize;
};

/* 5776 */
union $EFC14B0CBCF6491532C06E968571070A
{
  _KEY_EVENT_RECORD KeyEvent;
  _MOUSE_EVENT_RECORD MouseEvent;
  _WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;
  _MENU_EVENT_RECORD MenuEvent;
  _FOCUS_EVENT_RECORD FocusEvent;
};

/* 5777 */
struct _INPUT_RECORD
{
  unsigned __int16 EventType;
  $EFC14B0CBCF6491532C06E968571070A Event;
};

/* 5778 */
struct _PSFEATURE_CUSTPAPER
{
  int lOrientation;
  int lWidth;
  int lHeight;
  int lWidthOffset;
  int lHeightOffset;
};

/* 5779 */
union $0055FF1BE34206123B9C488F0A43FAA0
{
  unsigned __int64 ForwarderString;
  unsigned __int64 Function;
  unsigned __int64 Ordinal;
  unsigned __int64 AddressOfData;
};

/* 5780 */
struct _IMAGE_THUNK_DATA64
{
  $0055FF1BE34206123B9C488F0A43FAA0 u1;
};

/* 5781 */
struct HDESK__
{
  int unused;
};

/* 5782 */
struct MENUITEMTEMPLATE
{
  unsigned __int16 mtOption;
  unsigned __int16 mtID;
  unsigned __int16 mtString[1];
};

/* 5783 */
struct tagNEWTEXTMETRICEXW
{
  tagNEWTEXTMETRICW ntmTm;
  tagFONTSIGNATURE ntmFontSig;
};

/* 5784 */
struct tagGCP_RESULTSW
{
  unsigned int lStructSize;
  unsigned __int16 *lpOutString;
  unsigned int *lpOrder;
  int *lpDx;
  int *lpCaretPos;
  char *lpClass;
  unsigned __int16 *lpGlyphs;
  unsigned int nGlyphs;
  int nMaxFit;
};

/* 5785 */
struct tagHARDWAREHOOKSTRUCT
{
  HWND__ *hwnd;
  unsigned int message;
  unsigned int wParam;
  int lParam;
};

/* 5786 */
struct _QUOTA_LIMITS_EX
{
  unsigned int PagedPoolLimit;
  unsigned int NonPagedPoolLimit;
  unsigned int MinimumWorkingSetSize;
  unsigned int MaximumWorkingSetSize;
  unsigned int PagefileLimit;
  _LARGE_INTEGER TimeLimit;
  unsigned int Reserved1;
  unsigned int Reserved2;
  unsigned int Reserved3;
  unsigned int Reserved4;
  unsigned int Flags;
  unsigned int Reserved5;
};

/* 5787 */
struct __declspec(align(2)) _IMAGE_IMPORT_BY_NAME
{
  unsigned __int16 Hint;
  char Name[1];
};

/* 5788 */
struct __s_GUID
{
  unsigned int Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  char Data4[8];
};

/* 5789 */
struct HSTR__
{
  int unused;
};

/* 5790 */
struct _ACL_REVISION_INFORMATION
{
  unsigned int AclRevision;
};

/* 5793 */
struct BS_Service::Arg
{
  unsigned int m_Argc;
  wchar_t *m_Argv;
};

/* 5791 */
struct BS_Service
{
  BS_ServiceVtbl *vfptr;
  wchar_t m_ServiceName[256];
  SERVICE_STATUS_HANDLE__ *m_hService;
  BS_Service::Arg m_Arg;
};

/* 5792 */
struct BS_ServiceVtbl
{
  void *(__thiscall *__vecDelDtor)(BS_Service *this, unsigned int);
  _BYTE gap4[4];
  bool (__thiscall *OnRun)(BS_Service *this);
  bool (__thiscall *OnStop)(BS_Service *this);
  bool (__thiscall *OnPause)(BS_Service *this);
  bool (__thiscall *OnContinue)(BS_Service *this);
  bool (__thiscall *OnShutdown)(BS_Service *this);
  bool (__thiscall *PreRun)(BS_Service *this, unsigned int, wchar_t *);
  void (__thiscall *Handler)(BS_Service *this, unsigned int);
};

/* 5794 */
struct std::pair<unsigned long,XiStrAssist>
{
  unsigned int first;
  XiStrAssist second;
};

/* 5795 */
struct __cppobj std::_Allocator_base<ABUSECHECK_INFO>
{
};

/* 5796 */
struct __cppobj std::allocator<ABUSECHECK_INFO> : std::_Allocator_base<ABUSECHECK_INFO>
{
};

/* 5797 */
struct std::_Vector_val<ABUSECHECK_INFO,std::allocator<ABUSECHECK_INFO> >
{
  std::allocator<ABUSECHECK_INFO> _Alval;
};

/* 5798 */
struct ABUSECHECK_INFO
{
  char szText[260];
  unsigned __int16 wszText[260];
};

/* 5799 */
struct __cppobj std::vector<ABUSECHECK_INFO,std::allocator<ABUSECHECK_INFO> > : std::_Vector_val<ABUSECHECK_INFO,std::allocator<ABUSECHECK_INFO> >
{
  ABUSECHECK_INFO *_Myfirst;
  ABUSECHECK_INFO *_Mylast;
  ABUSECHECK_INFO *_Myend;
};

/* 5800 */
struct XiAbuseCheckMgr
{
  std::vector<ABUSECHECK_INFO,std::allocator<ABUSECHECK_INFO> > m_vecSlang;
  std::vector<ABUSECHECK_INFO,std::allocator<ABUSECHECK_INFO> > m_vecMisrepresent;
};

/* 5801 */
struct __cppobj std::iterator<std::random_access_iterator_tag,ABUSECHECK_INFO,int,ABUSECHECK_INFO const *,ABUSECHECK_INFO const &>
{
};

/* 5802 */
struct __cppobj std::_Ranit<ABUSECHECK_INFO,int,ABUSECHECK_INFO const *,ABUSECHECK_INFO const &> : std::iterator<std::random_access_iterator_tag,ABUSECHECK_INFO,int,ABUSECHECK_INFO const *,ABUSECHECK_INFO const &>
{
};

/* 5803 */
struct __cppobj std::vector<ABUSECHECK_INFO,std::allocator<ABUSECHECK_INFO> >::const_iterator : std::_Ranit<ABUSECHECK_INFO,int,ABUSECHECK_INFO const *,ABUSECHECK_INFO const &>
{
  ABUSECHECK_INFO *_Myptr;
};

/* 5804 */
struct __cppobj std::vector<ABUSECHECK_INFO,std::allocator<ABUSECHECK_INFO> >::iterator : std::vector<ABUSECHECK_INFO,std::allocator<ABUSECHECK_INFO> >::const_iterator
{
};

/* 5805 */
struct __cppobj std::allocator<ABUSECHECK_INFO>::rebind<ABUSECHECK_INFO>
{
};

/* 5806 */
struct std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0>
{
  std::less<unsigned long> comp;
};

/* 5807 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >::_Node>
{
};

/* 5808 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >::_Node>
{
};

/* 5809 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> > : std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >::_Node> _Alnod;
};

/* 5810 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >::_Node *>
{
};

/* 5811 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >::_Node *>
{
};

/* 5812 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >::_Node *> _Alptr;
};

/* 5813 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >
{
};

/* 5814 */
struct __cppobj std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > > : std::_Allocator_base<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >
{
};

/* 5815 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >
{
  std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > > _Alval;
};

/* 5816 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >::_Node *_Right;
  std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > _Myval;
  char _Color;
  char _Isnil;
};

/* 5817 */
struct __cppobj std::binary_function<XiStrItem *,XiStrItem *,bool>
{
};

/* 5818 */
struct __cppobj std::less<XiStrItem *> : std::binary_function<XiStrItem *,XiStrItem *,bool>
{
};

/* 5819 */
struct std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0>
{
  std::less<XiStrItem *> comp;
};

/* 5820 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >::_Node>
{
};

/* 5821 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >::_Node>
{
};

/* 5822 */
struct __cppobj std::_Tree_nod<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> > : std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0>
{
  std::allocator<std::_Tree_nod<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >::_Node> _Alnod;
};

/* 5823 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >::_Node *>
{
};

/* 5824 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >::_Node *>
{
};

/* 5825 */
struct __cppobj std::_Tree_ptr<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> > : std::_Tree_nod<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >
{
  std::allocator<std::_Tree_nod<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >::_Node *> _Alptr;
};

/* 5826 */
struct __cppobj std::_Tree_val<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> > : std::_Tree_ptr<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >
{
  std::allocator<XiStrItem *> _Alval;
};

/* 5828 */
struct __cppobj std::_Tree<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> > : std::_Tree_val<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >
{
  std::_Tree_nod<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 5829 */
struct __cppobj std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > : std::_Tree<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >
{
};

/* 5830 */
struct std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > >
{
  const unsigned int first;
  std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > second;
};

/* 5827 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >::_Node
{
  std::_Tree_nod<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >::_Node *_Right;
  XiStrItem *_Myval;
  char _Color;
  char _Isnil;
};

/* 5831 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 5832 */
struct __cppobj std::map<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > > > : std::_Tree<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >
{
};

/* 5833 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > >,int,std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > const *,std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > const &>
{
};

/* 5834 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > >,int,std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > const *,std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > >,int,std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > const *,std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > const &>
{
};

/* 5835 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > >,int,std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > const *,std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >::_Node *_Ptr;
};

/* 5836 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >::const_iterator
{
};

/* 5837 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,XiStrItem *,int,XiStrItem * const *,XiStrItem * const &>
{
};

/* 5838 */
struct __cppobj std::_Bidit<XiStrItem *,int,XiStrItem * const *,XiStrItem * const &> : std::iterator<std::bidirectional_iterator_tag,XiStrItem *,int,XiStrItem * const *,XiStrItem * const &>
{
};

/* 5839 */
struct __cppobj std::_Tree<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >::const_iterator : std::_Bidit<XiStrItem *,int,XiStrItem * const *,XiStrItem * const &>
{
  std::_Tree_nod<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >::_Node *_Ptr;
};

/* 5840 */
struct __cppobj std::_Tree<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >::iterator : std::_Tree<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >::const_iterator
{
};

/* 5841 */
struct XiStrItemModify::Assists
{
  XiStrAssist *A;
  XiStrAssist *B;
};

/* 5842 */
struct XiStrItemModify
{
  int Rank;
  XiStrItemModify::Assists TypeA;
  XiStrItemModify::Assists TypeB;
  XiStrItemModify::Assists TypeC;
  float Rate;
};

/* 5843 */
struct XiBaseItemUpgrade
{
  XiBaseItemUpgradeVtbl *vfptr;
  unsigned int Level;
  float Success;
  float Fail;
  unsigned int PointUp;
};

/* 5844 */
struct XiBaseItemUpgradeVtbl
{
  int (__thiscall *GetCost)(XiBaseItemUpgrade *this, unsigned int);
};

/* 5845 */
struct __cppobj std::binary_function<XiCsItem *,XiCsItem *,bool>
{
};

/* 5846 */
struct __cppobj std::less<XiCsItem *> : std::binary_function<XiCsItem *,XiCsItem *,bool>
{
};

/* 5847 */
struct std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1>
{
  std::less<XiCsItem *> comp;
};

/* 5848 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >::_Node>
{
};

/* 5849 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >::_Node>
{
};

/* 5850 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> > : std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >::_Node> _Alnod;
};

/* 5851 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >::_Node *>
{
};

/* 5852 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >::_Node *>
{
};

/* 5853 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> > : std::_Tree_nod<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >::_Node *> _Alptr;
};

/* 5854 */
struct __cppobj std::_Allocator_base<std::pair<XiCsItem * const,unsigned long> >
{
};

/* 5855 */
struct __cppobj std::allocator<std::pair<XiCsItem * const,unsigned long> > : std::_Allocator_base<std::pair<XiCsItem * const,unsigned long> >
{
};

/* 5856 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> > : std::_Tree_ptr<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >
{
  std::allocator<std::pair<XiCsItem * const,unsigned long> > _Alval;
};

/* 5857 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >::_Node *_Right;
  std::pair<XiCsItem * const,unsigned long> _Myval;
  char _Color;
  char _Isnil;
};

/* 5858 */
struct std::pair<XiCsItem * const,unsigned long>
{
  XiCsItem *const first;
  unsigned int second;
};

/* 5859 */
struct __cppobj std::_Tree<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> > : std::_Tree_val<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >
{
  std::_Tree_nod<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 5860 */
struct __cppobj std::multimap<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> > > : std::_Tree<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >
{
};

/* 5861 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<XiCsItem * const,unsigned long>,int,std::pair<XiCsItem * const,unsigned long> const *,std::pair<XiCsItem * const,unsigned long> const &>
{
};

/* 5862 */
struct __cppobj std::_Bidit<std::pair<XiCsItem * const,unsigned long>,int,std::pair<XiCsItem * const,unsigned long> const *,std::pair<XiCsItem * const,unsigned long> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<XiCsItem * const,unsigned long>,int,std::pair<XiCsItem * const,unsigned long> const *,std::pair<XiCsItem * const,unsigned long> const &>
{
};

/* 5863 */
struct __cppobj std::_Tree<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >::const_iterator : std::_Bidit<std::pair<XiCsItem * const,unsigned long>,int,std::pair<XiCsItem * const,unsigned long> const *,std::pair<XiCsItem * const,unsigned long> const &>
{
  std::_Tree_nod<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >::_Node *_Ptr;
};

/* 5864 */
struct __cppobj std::_Tree<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >::iterator : std::_Tree<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >::const_iterator
{
};

/* 5865 */
struct std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1>
{
  std::less<XiStrItem *> comp;
};

/* 5866 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >::_Node>
{
};

/* 5867 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >::_Node>
{
};

/* 5868 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> > : std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >::_Node> _Alnod;
};

/* 5869 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >::_Node *>
{
};

/* 5870 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >::_Node *>
{
};

/* 5871 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> > : std::_Tree_nod<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >::_Node *> _Alptr;
};

/* 5872 */
struct __cppobj std::_Allocator_base<std::pair<XiStrItem * const,unsigned long> >
{
};

/* 5873 */
struct __cppobj std::allocator<std::pair<XiStrItem * const,unsigned long> > : std::_Allocator_base<std::pair<XiStrItem * const,unsigned long> >
{
};

/* 5874 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> > : std::_Tree_ptr<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >
{
  std::allocator<std::pair<XiStrItem * const,unsigned long> > _Alval;
};

/* 5875 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >::_Node *_Right;
  std::pair<XiStrItem * const,unsigned long> _Myval;
  char _Color;
  char _Isnil;
};

/* 5876 */
struct std::pair<XiStrItem * const,unsigned long>
{
  XiStrItem *const first;
  unsigned int second;
};

/* 5877 */
struct __cppobj std::_Tree<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> > : std::_Tree_val<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >
{
  std::_Tree_nod<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 5878 */
struct __cppobj std::multimap<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> > > : std::_Tree<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >
{
};

/* 5879 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<XiStrItem * const,unsigned long>,int,std::pair<XiStrItem * const,unsigned long> const *,std::pair<XiStrItem * const,unsigned long> const &>
{
};

/* 5880 */
struct __cppobj std::_Bidit<std::pair<XiStrItem * const,unsigned long>,int,std::pair<XiStrItem * const,unsigned long> const *,std::pair<XiStrItem * const,unsigned long> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<XiStrItem * const,unsigned long>,int,std::pair<XiStrItem * const,unsigned long> const *,std::pair<XiStrItem * const,unsigned long> const &>
{
};

/* 5881 */
struct __cppobj std::_Tree<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >::const_iterator : std::_Bidit<std::pair<XiStrItem * const,unsigned long>,int,std::pair<XiStrItem * const,unsigned long> const *,std::pair<XiStrItem * const,unsigned long> const &>
{
  std::_Tree_nod<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >::_Node *_Ptr;
};

/* 5882 */
struct __cppobj std::_Tree<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >::iterator : std::_Tree<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >::const_iterator
{
};

/* 5883 */
struct LockMessageBuffer<BS_PktCheckEventAck>
{
  BS_PktCheckEventAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 5884 */
struct __cppobj XiStrItemUpgrade : XiBaseItemUpgrade
{
  unsigned int NormalCost;
  unsigned int SuperCost;
  unsigned int HiperCost;
};

/* 5885 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,XiStrItemUpgrade> _Myval;
  char _Color;
  char _Isnil;
};

/* 5886 */
struct std::pair<unsigned long const ,XiStrItemUpgrade>
{
  const unsigned int first;
  XiStrItemUpgrade second;
};

/* 5887 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >::_Node *>
{
};

/* 5888 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,XiStrItemUpgrade> >
{
};

/* 5889 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,XiStrItemGradeUpgrade> _Myval;
  char _Color;
  char _Isnil;
};

/* 5890 */
struct __cppobj XiStrItemGradeUpgrade : XiBaseItemUpgrade
{
  unsigned int Cost;
};

/* 5891 */
struct std::pair<unsigned long const ,XiStrItemGradeUpgrade>
{
  const unsigned int first;
  XiStrItemGradeUpgrade second;
};

/* 5892 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >::_Node *>
{
};

/* 5893 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >
{
};

/* 5894 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >::_Node *>
{
};

/* 5895 */
struct std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0>
{
  std::less<unsigned long> comp;
};

/* 5896 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >::_Node>
{
};

/* 5897 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >::_Node>
{
};

/* 5898 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> > : std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >::_Node> _Alnod;
};

/* 5899 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,XiStrProbStatic> _Myval;
  char _Color;
  char _Isnil;
};

/* 5900 */
struct XiStrProbStatic
{
  unsigned int Total;
  unsigned int Success;
  unsigned int Fail;
  unsigned int Destory;
  unsigned int RepairZero;
  unsigned int RepairFull;
};

/* 5901 */
struct std::pair<unsigned long const ,XiStrProbStatic>
{
  const unsigned int first;
  XiStrProbStatic second;
};

/* 5902 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,XiStrProbStatic> >
{
};

/* 5903 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrProbStatic> > : std::_Allocator_base<std::pair<unsigned long const ,XiStrProbStatic> >
{
};

/* 5904 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >::_Node *>
{
};

/* 5905 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >::_Node *>
{
};

/* 5906 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >::_Node *> _Alptr;
};

/* 5907 */
struct std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0>
{
  std::less<unsigned long> comp;
};

/* 5908 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >::_Node>
{
};

/* 5909 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >::_Node>
{
};

/* 5910 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> > : std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >::_Node> _Alnod;
};

/* 5911 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> > : std::_Allocator_base<std::pair<unsigned long const ,XiStrItemUpgrade> >
{
};

/* 5912 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >::_Node *> _Alptr;
};

/* 5913 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >
{
  std::allocator<std::pair<unsigned long const ,XiStrProbStatic> > _Alval;
};

/* 5914 */
struct __cppobj std::_Allocator_base<XiStrItemModify>
{
};

/* 5915 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >::_Node *>
{
};

/* 5916 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >::rebind<std::pair<unsigned long const ,XiStrItemUpgrade> >
{
};

/* 5917 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >::_Node>
{
};

/* 5918 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >::_Node *>
{
};

/* 5919 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >::rebind<unsigned long>
{
};

/* 5920 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >::rebind<char>
{
};

/* 5921 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >::_Node>
{
};

/* 5922 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >
{
  std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> > _Alval;
};

/* 5923 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> > : std::_Allocator_base<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >
{
};

/* 5924 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >::rebind<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >
{
};

/* 5925 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >::_Node>
{
};

/* 5926 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >::_Node *>
{
};

/* 5927 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >::rebind<unsigned long>
{
};

/* 5928 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >::rebind<char>
{
};

/* 5929 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >::_Node>
{
};

/* 5930 */
struct __cppobj std::allocator<XiStrItemModify> : std::_Allocator_base<XiStrItemModify>
{
};

/* 5931 */
struct __cppobj std::allocator<XiStrItemModify>::rebind<XiStrItemModify>
{
};

/* 5932 */
struct std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0>
{
  std::less<unsigned long> comp;
};

/* 5933 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> > : std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >::_Node> _Alnod;
};

/* 5934 */
struct __cppobj std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >::rebind<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >
{
};

/* 5935 */
struct __cppobj std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >::_Node>
{
};

/* 5936 */
struct __cppobj std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >::_Node *>
{
};

/* 5937 */
struct __cppobj std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >::rebind<unsigned long>
{
};

/* 5938 */
struct __cppobj std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >::rebind<char>
{
};

/* 5939 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 5940 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiStrItemUpgrade>,int,std::pair<unsigned long const ,XiStrItemUpgrade> const *,std::pair<unsigned long const ,XiStrItemUpgrade> const &>
{
};

/* 5941 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,XiStrItemUpgrade>,int,std::pair<unsigned long const ,XiStrItemUpgrade> const *,std::pair<unsigned long const ,XiStrItemUpgrade> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiStrItemUpgrade>,int,std::pair<unsigned long const ,XiStrItemUpgrade> const *,std::pair<unsigned long const ,XiStrItemUpgrade> const &>
{
};

/* 5942 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,XiStrItemUpgrade>,int,std::pair<unsigned long const ,XiStrItemUpgrade> const *,std::pair<unsigned long const ,XiStrItemUpgrade> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >::_Node *_Ptr;
};

/* 5943 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >::const_iterator
{
};

/* 5944 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >::iterator first;
  bool second;
};

/* 5945 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >::_Node *> _Alptr;
};

/* 5946 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >
{
  std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> > _Alval;
};

/* 5947 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 5948 */
struct __cppobj std::map<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> > > : std::_Tree<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >
{
};

/* 5949 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiStrItemGradeUpgrade>,int,std::pair<unsigned long const ,XiStrItemGradeUpgrade> const *,std::pair<unsigned long const ,XiStrItemGradeUpgrade> const &>
{
};

/* 5950 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,XiStrItemGradeUpgrade>,int,std::pair<unsigned long const ,XiStrItemGradeUpgrade> const *,std::pair<unsigned long const ,XiStrItemGradeUpgrade> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiStrItemGradeUpgrade>,int,std::pair<unsigned long const ,XiStrItemGradeUpgrade> const *,std::pair<unsigned long const ,XiStrItemGradeUpgrade> const &>
{
};

/* 5951 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,XiStrItemGradeUpgrade>,int,std::pair<unsigned long const ,XiStrItemGradeUpgrade> const *,std::pair<unsigned long const ,XiStrItemGradeUpgrade> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >::_Node *_Ptr;
};

/* 5952 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >::const_iterator
{
};

/* 5953 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 5954 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiStrProbStatic>,int,std::pair<unsigned long const ,XiStrProbStatic> const *,std::pair<unsigned long const ,XiStrProbStatic> const &>
{
};

/* 5955 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,XiStrProbStatic>,int,std::pair<unsigned long const ,XiStrProbStatic> const *,std::pair<unsigned long const ,XiStrProbStatic> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,XiStrProbStatic>,int,std::pair<unsigned long const ,XiStrProbStatic> const *,std::pair<unsigned long const ,XiStrProbStatic> const &>
{
};

/* 5956 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,XiStrProbStatic>,int,std::pair<unsigned long const ,XiStrProbStatic> const *,std::pair<unsigned long const ,XiStrProbStatic> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >::_Node *_Ptr;
};

/* 5957 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >::const_iterator
{
};

/* 5958 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >::iterator first;
  bool second;
};

/* 5959 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::set<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *> > > >,0> >::iterator first;
  bool second;
};

/* 5960 */
struct std::pair<XiStrItem *,unsigned long>
{
  XiStrItem *first;
  unsigned int second;
};

/* 5961 */
struct __cppobj std::allocator<std::pair<XiStrItem * const,unsigned long> >::rebind<std::pair<XiStrItem * const,unsigned long> >
{
};

/* 5962 */
struct __cppobj std::allocator<std::pair<XiStrItem * const,unsigned long> >::rebind<std::_Tree_nod<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >::_Node>
{
};

/* 5963 */
struct __cppobj std::allocator<std::pair<XiStrItem * const,unsigned long> >::rebind<std::_Tree_nod<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >::_Node *>
{
};

/* 5964 */
struct __cppobj std::allocator<std::pair<XiStrItem * const,unsigned long> >::rebind<XiStrItem *>
{
};

/* 5965 */
struct __cppobj std::allocator<std::pair<XiStrItem * const,unsigned long> >::rebind<char>
{
};

/* 5966 */
struct std::pair<unsigned long,XiCsVSItem *>
{
  unsigned int first;
  XiCsVSItem *second;
};

/* 5967 */
struct __cppobj std::allocator<std::pair<XiCsItem * const,unsigned long> >::rebind<std::pair<XiCsItem * const,unsigned long> >
{
};

/* 5968 */
struct __cppobj std::allocator<std::pair<XiCsItem * const,unsigned long> >::rebind<std::_Tree_nod<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >::_Node>
{
};

/* 5969 */
struct __cppobj std::allocator<std::pair<XiCsItem * const,unsigned long> >::rebind<std::_Tree_nod<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >::_Node *>
{
};

/* 5970 */
struct __cppobj std::allocator<std::pair<XiCsItem * const,unsigned long> >::rebind<XiCsItem *>
{
};

/* 5971 */
struct __cppobj std::allocator<std::pair<XiCsItem * const,unsigned long> >::rebind<char>
{
};

/* 5972 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >::iterator,bool>
{
  std::_Tree<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >::iterator first;
  bool second;
};

/* 5973 */
struct std::pair<XiCsItem *,long>
{
  XiCsItem *first;
  int second;
};

/* 5974 */
struct std::pair<XiStrItem *,int>
{
  XiStrItem *first;
  int second;
};

/* 5975 */
struct std::pair<unsigned long,XiCsQuest *>
{
  unsigned int first;
  XiCsQuest *second;
};

/* 5976 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<XiStrItem *,unsigned long,std::less<XiStrItem *>,std::allocator<std::pair<XiStrItem * const,unsigned long> >,1> >::iterator first;
  bool second;
};

/* 5977 */
struct std::_Vector_val<XiStrItemModify,std::allocator<XiStrItemModify> >
{
  std::allocator<XiStrItemModify> _Alval;
};

/* 5978 */
struct __cppobj std::map<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> > > : std::_Tree<std::_Tmap_traits<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> >,0> >
{
};

/* 5979 */
struct __cppobj std::vector<XiStrItemModify,std::allocator<XiStrItemModify> > : std::_Vector_val<XiStrItemModify,std::allocator<XiStrItemModify> >
{
  XiStrItemModify *_Myfirst;
  XiStrItemModify *_Mylast;
  XiStrItemModify *_Myend;
};

/* 5980 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiStrItemModify,int,XiStrItemModify const *,XiStrItemModify const &>
{
};

/* 5981 */
struct __cppobj std::_Ranit<XiStrItemModify,int,XiStrItemModify const *,XiStrItemModify const &> : std::iterator<std::random_access_iterator_tag,XiStrItemModify,int,XiStrItemModify const *,XiStrItemModify const &>
{
};

/* 5982 */
struct __cppobj std::vector<XiStrItemModify,std::allocator<XiStrItemModify> >::const_iterator : std::_Ranit<XiStrItemModify,int,XiStrItemModify const *,XiStrItemModify const &>
{
  XiStrItemModify *_Myptr;
};

/* 5983 */
struct __cppobj std::vector<XiStrItemModify,std::allocator<XiStrItemModify> >::iterator : std::vector<XiStrItemModify,std::allocator<XiStrItemModify> >::const_iterator
{
};

/* 5984 */
struct std::pair<unsigned short *,XiCsCharInfo *>
{
  wchar_t *first;
  XiCsCharInfo *second;
};

/* 5985 */
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,XiCsCharInfo *>
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > first;
  XiCsCharInfo *second;
};

/* 5986 */
struct std::pair<unsigned long,XiCsItem *>
{
  unsigned int first;
  XiCsItem *second;
};

/* 5987 */
struct __cppobj std::allocator<XiStrItem *>::rebind<std::_Tree_nod<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >::_Node>
{
};

/* 5988 */
struct __cppobj std::allocator<XiStrItem *>::rebind<std::_Tree_nod<std::_Tset_traits<XiStrItem *,std::less<XiStrItem *>,std::allocator<XiStrItem *>,0> >::_Node *>
{
};

/* 5989 */
struct __cppobj std::allocator<XiStrItem *>::rebind<char>
{
};

/* 5990 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >::rebind<std::pair<unsigned long const ,XiStrProbStatic> >
{
};

/* 5991 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >::_Node>
{
};

/* 5992 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >::_Node *>
{
};

/* 5993 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >::rebind<unsigned long>
{
};

/* 5994 */
struct __cppobj std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >::rebind<char>
{
};

/* 5995 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<XiCsItem *,unsigned long,std::less<XiCsItem *>,std::allocator<std::pair<XiCsItem * const,unsigned long> >,1> >::iterator first;
  bool second;
};

/* 5996 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> >,0> >::iterator first;
  bool second;
};

/* 5997 */
struct std::pair<XiCsItem *,unsigned long>
{
  XiCsItem *first;
  unsigned int second;
};

/* 5998 */
struct __declspec(align(8)) std::pair<__int64,XiCsCharInfo *>
{
  __int64 first;
  XiCsCharInfo *second;
};

/* 5999 */
struct __cppobj std::map<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> > > : std::_Tree<std::_Tmap_traits<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> >,0> >
{
};

/* 6000 */
struct __cppobj BS_SingletonHeap<XiItemModifyTable,5>
{
};

/* 6001 */
struct __cppobj XiItemModifyTable : BS_SingletonHeap<XiItemModifyTable,5>
{
  std::vector<XiStrItemModify,std::allocator<XiStrItemModify> > m_ItemModifyTable;
};

/* 6002 */
struct __cppobj __declspec(align(8)) WebCallInvitorReward : WebCallReq
{
  bool bRewarded;
  __int64 m_cid;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > m_cname;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > m_memberid;
  int m_cdate;
};

/* 6003 */
struct ChToStr
{
  char Str[2];
};

/* 6004 */
struct __cppobj BS_SingletonHeap<XiItemUpgradeTable,5>
{
};

/* 6005 */
struct __cppobj XiItemUpgradeTable : BS_SingletonHeap<XiItemUpgradeTable,5>
{
  std::map<unsigned long,XiStrItemUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemUpgrade> > > m_UpgradeTable;
  std::map<unsigned long,XiStrProbStatic,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrProbStatic> > > m_StaticTable;
  std::vector<unsigned long,std::allocator<unsigned long> > m_UpgradePointList;
  std::map<unsigned long,XiStrItemGradeUpgrade,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,XiStrItemGradeUpgrade> > > m_GradeUpgradeTable[3];
  std::vector<unsigned long,std::allocator<unsigned long> > m_GradeUpgradePointList[3];
};

/* 6006 */
struct __cppobj WebCallUpdateForInvited : WebCallReq
{
  __int64 cid;
};

/* 6007 */
struct LockMessageBuffer<BS_PktUnderCityLoad>
{
  BS_PktUnderCityLoad *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6008 */
struct LockMessageBuffer<BS_PktPartyPreCheckAck>
{
  BS_PktPartyPreCheckAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6009 */
struct std::pair<long,BS_ChunkList *>
{
  int first;
  BS_ChunkList *second;
};

/* 6010 */
struct std::pair<int,BS_ChunkList *>
{
  int first;
  BS_ChunkList *second;
};

/* 6011 */
struct __cppobj std::allocator<BS_Buffer *>::rebind<std::_List_nod<BS_Buffer *,std::allocator<BS_Buffer *> >::_Node>
{
};

/* 6012 */
struct __cppobj std::allocator<BS_Buffer *>::rebind<std::_List_nod<BS_Buffer *,std::allocator<BS_Buffer *> >::_Node *>
{
};

/* 6013 */
struct __cppobj std::allocator<BS_Buffer *>::rebind<BS_Buffer *>
{
};

/* 6014 */
struct XiTokenBookListContainer
{
  XiTokenBookListContainerVtbl *vfptr;
};

/* 6015 */
struct XiTokenBookListContainerVtbl
{
  void (__thiscall *Add)(XiTokenBookListContainer *this, TOKENBOOK_INFO *);
};

/* 6016 */
struct TRAFFIC_TYPE
{
  float length;
  float ratio;
};

/* 6017 */
struct std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0>
{
  std::less<int> comp;
};

/* 6018 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node>
{
};

/* 6019 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node>
{
};

/* 6020 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> > : std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node> _Alnod;
};

/* 6021 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node *>
{
};

/* 6022 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node *>
{
};

/* 6023 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> > : std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node *> _Alptr;
};

/* 6024 */
struct __cppobj std::_Allocator_base<std::pair<int const ,std::vector<int,std::allocator<int> > > >
{
};

/* 6025 */
struct __cppobj std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > : std::_Allocator_base<std::pair<int const ,std::vector<int,std::allocator<int> > > >
{
};

/* 6026 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> > : std::_Tree_ptr<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >
{
  std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > _Alval;
};

/* 6027 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node *_Right;
  std::pair<int const ,std::vector<int,std::allocator<int> > > _Myval;
  char _Color;
  char _Isnil;
};

/* 6028 */
struct std::pair<int const ,std::vector<int,std::allocator<int> > >
{
  const int first;
  std::vector<int,std::allocator<int> > second;
};

/* 6029 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> > : std::_Tree_val<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 6030 */
struct __cppobj std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > : std::_Tree<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >
{
};

/* 6031 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > >,int,std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > const *,std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > const &>
{
};

/* 6032 */
struct __cppobj std::_Bidit<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > >,int,std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > const *,std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > >,int,std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > const *,std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > const &>
{
};

/* 6033 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >::_Node *_Right;
  std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > _Myval;
  char _Color;
  char _Isnil;
};

/* 6034 */
struct std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > >
{
  const int first;
  std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > second;
};

/* 6035 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >::const_iterator : std::_Bidit<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > >,int,std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > const *,std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > const &>
{
  std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >::_Node *_Ptr;
};

/* 6036 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >::iterator : std::_Tree<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >::const_iterator
{
};

/* 6037 */
struct stdext::hash_compare<int,std::less<int> >
{
  std::less<int> comp;
};

/* 6038 */
struct stdext::_Hmap_traits<int,float,stdext::hash_compare<int,std::less<int> >,std::allocator<std::pair<int const ,float> >,0>
{
  stdext::hash_compare<int,std::less<int> > comp;
};

/* 6039 */
struct __cppobj std::_Allocator_base<std::_List_nod<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::_Node>
{
};

/* 6040 */
struct __cppobj std::allocator<std::_List_nod<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::_Node> : std::_Allocator_base<std::_List_nod<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::_Node>
{
};

/* 6041 */
struct std::_List_nod<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >
{
  std::allocator<std::_List_nod<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::_Node> _Alnod;
};

/* 6042 */
struct __cppobj std::_Allocator_base<std::_List_nod<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::_Node *>
{
};

/* 6043 */
struct __cppobj std::allocator<std::_List_nod<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::_Node *> : std::_Allocator_base<std::_List_nod<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::_Node *>
{
};

/* 6044 */
struct __cppobj std::_List_ptr<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > > : std::_List_nod<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >
{
  std::allocator<std::_List_nod<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::_Node *> _Alptr;
};

/* 6045 */
struct __cppobj std::_Allocator_base<std::pair<int const ,float> >
{
};

/* 6046 */
struct __cppobj std::allocator<std::pair<int const ,float> > : std::_Allocator_base<std::pair<int const ,float> >
{
};

/* 6047 */
struct __cppobj std::_List_val<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > > : std::_List_ptr<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >
{
  std::allocator<std::pair<int const ,float> > _Alval;
};

/* 6048 */
struct std::_List_nod<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::_Node
{
  std::_List_nod<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::_Node *_Next;
  std::_List_nod<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::_Node *_Prev;
  std::pair<int const ,float> _Myval;
};

/* 6049 */
struct std::pair<int const ,float>
{
  const int first;
  float second;
};

/* 6050 */
struct __cppobj std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > > : std::_List_val<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >
{
  std::_List_nod<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 6051 */
struct __cppobj std::_Allocator_base<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator>
{
};

/* 6052 */
struct __cppobj std::allocator<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator> : std::_Allocator_base<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator>
{
};

/* 6053 */
struct std::_Vector_val<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator,std::allocator<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator> >
{
  std::allocator<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator> _Alval;
};

/* 6054 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,float>,int,std::pair<int const ,float> const *,std::pair<int const ,float> const &>
{
};

/* 6055 */
struct __cppobj std::_Bidit<std::pair<int const ,float>,int,std::pair<int const ,float> const *,std::pair<int const ,float> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,float>,int,std::pair<int const ,float> const *,std::pair<int const ,float> const &>
{
};

/* 6056 */
struct __cppobj std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::const_iterator : std::_Bidit<std::pair<int const ,float>,int,std::pair<int const ,float> const *,std::pair<int const ,float> const &>
{
  std::_List_nod<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::_Node *_Ptr;
};

/* 6057 */
struct __cppobj std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator : std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::const_iterator
{
};

/* 6058 */
struct __cppobj std::vector<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator,std::allocator<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator> > : std::_Vector_val<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator,std::allocator<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator> >
{
  std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator *_Myfirst;
  std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator *_Mylast;
  std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator *_Myend;
};

/* 6059 */
struct __cppobj stdext::_Hash<stdext::_Hmap_traits<int,float,stdext::hash_compare<int,std::less<int> >,std::allocator<std::pair<int const ,float> >,0> > : stdext::_Hmap_traits<int,float,stdext::hash_compare<int,std::less<int> >,std::allocator<std::pair<int const ,float> >,0>
{
  std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > > _List;
  std::vector<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator,std::allocator<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator> > _Vec;
  unsigned int _Mask;
  unsigned int _Maxidx;
};

/* 6060 */
struct __cppobj stdext::hash_map<int,float,stdext::hash_compare<int,std::less<int> >,std::allocator<std::pair<int const ,float> > > : stdext::_Hash<stdext::_Hmap_traits<int,float,stdext::hash_compare<int,std::less<int> >,std::allocator<std::pair<int const ,float> >,0> >
{
};

/* 6061 */
struct std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0>
{
  std::less<int> comp;
};

/* 6062 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >::_Node>
{
};

/* 6063 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >::_Node>
{
};

/* 6064 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> > : std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >::_Node> _Alnod;
};

/* 6065 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >::_Node *>
{
};

/* 6066 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >::_Node *>
{
};

/* 6067 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> > : std::_Tree_nod<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >::_Node *> _Alptr;
};

/* 6068 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> > : std::_Tree_ptr<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >
{
  std::allocator<std::pair<int const ,float> > _Alval;
};

/* 6069 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >::_Node *_Right;
  std::pair<int const ,float> _Myval;
  char _Color;
  char _Isnil;
};

/* 6070 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> > : std::_Tree_val<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 6071 */
struct __cppobj std::map<int,float,std::less<int>,std::allocator<std::pair<int const ,float> > > : std::_Tree<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >
{
};

/* 6072 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >::const_iterator : std::_Bidit<std::pair<int const ,float>,int,std::pair<int const ,float> const *,std::pair<int const ,float> const &>
{
  std::_Tree_nod<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >::_Node *_Ptr;
};

/* 6073 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >::iterator : std::_Tree<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >::const_iterator
{
};

/* 6074 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,XiTArray<XiTrafficPathInfo> >,int,std::pair<int const ,XiTArray<XiTrafficPathInfo> > const *,std::pair<int const ,XiTArray<XiTrafficPathInfo> > const &>
{
};

/* 6075 */
struct __cppobj std::_Bidit<std::pair<int const ,XiTArray<XiTrafficPathInfo> >,int,std::pair<int const ,XiTArray<XiTrafficPathInfo> > const *,std::pair<int const ,XiTArray<XiTrafficPathInfo> > const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,XiTArray<XiTrafficPathInfo> >,int,std::pair<int const ,XiTArray<XiTrafficPathInfo> > const *,std::pair<int const ,XiTArray<XiTrafficPathInfo> > const &>
{
};

/* 6076 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::_Node *_Right;
  std::pair<int const ,XiTArray<XiTrafficPathInfo> > _Myval;
  char _Color;
  char _Isnil;
};

/* 6077 */
struct std::pair<int const ,XiTArray<XiTrafficPathInfo> >
{
  const int first;
  XiTArray<XiTrafficPathInfo> second;
};

/* 6078 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::const_iterator : std::_Bidit<std::pair<int const ,XiTArray<XiTrafficPathInfo> >,int,std::pair<int const ,XiTArray<XiTrafficPathInfo> > const *,std::pair<int const ,XiTArray<XiTrafficPathInfo> > const &>
{
  std::_Tree_nod<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::_Node *_Ptr;
};

/* 6079 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::iterator : std::_Tree<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::const_iterator
{
};

/* 6080 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,std::vector<int,std::allocator<int> > >,int,std::pair<int const ,std::vector<int,std::allocator<int> > > const *,std::pair<int const ,std::vector<int,std::allocator<int> > > const &>
{
};

/* 6081 */
struct __cppobj std::_Bidit<std::pair<int const ,std::vector<int,std::allocator<int> > >,int,std::pair<int const ,std::vector<int,std::allocator<int> > > const *,std::pair<int const ,std::vector<int,std::allocator<int> > > const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<int const ,std::vector<int,std::allocator<int> > >,int,std::pair<int const ,std::vector<int,std::allocator<int> > > const *,std::pair<int const ,std::vector<int,std::allocator<int> > > const &>
{
};

/* 6082 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::const_iterator : std::_Bidit<std::pair<int const ,std::vector<int,std::allocator<int> > >,int,std::pair<int const ,std::vector<int,std::allocator<int> > > const *,std::pair<int const ,std::vector<int,std::allocator<int> > > const &>
{
  std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node *_Ptr;
};

/* 6083 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::iterator : std::_Tree<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::const_iterator
{
};

/* 6084 */
struct std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0>
{
  std::less<int> comp;
};

/* 6085 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >::_Node>
{
};

/* 6086 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >::_Node>
{
};

/* 6087 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> > : std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >::_Node> _Alnod;
};

/* 6088 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >::_Node *>
{
};

/* 6089 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >::_Node *>
{
};

/* 6090 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> > : std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >::_Node *> _Alptr;
};

/* 6091 */
struct __cppobj std::_Allocator_base<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >
{
};

/* 6092 */
struct __cppobj std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > > : std::_Allocator_base<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >
{
};

/* 6093 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> > : std::_Tree_ptr<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >
{
  std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > > _Alval;
};

/* 6094 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> > : std::_Tree_val<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 6095 */
struct __cppobj std::map<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > > > : std::_Tree<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >
{
};

/* 6096 */
struct std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0>
{
  std::less<int> comp;
};

/* 6097 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::_Node>
{
};

/* 6098 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::_Node>
{
};

/* 6099 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> > : std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::_Node> _Alnod;
};

/* 6100 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::_Node *>
{
};

/* 6101 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::_Node *>
{
};

/* 6102 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> > : std::_Tree_nod<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::_Node *> _Alptr;
};

/* 6103 */
struct __cppobj std::_Allocator_base<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >
{
};

/* 6104 */
struct __cppobj std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > > : std::_Allocator_base<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >
{
};

/* 6105 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> > : std::_Tree_ptr<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >
{
  std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > > _Alval;
};

/* 6106 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> > : std::_Tree_val<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 6107 */
struct __cppobj std::map<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > > > : std::_Tree<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >
{
};

/* 6108 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::iterator first;
  bool second;
};

/* 6109 */
struct __cppobj std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >::rebind<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >
{
};

/* 6110 */
struct __cppobj std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >::rebind<std::_Tree_nod<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::_Node>
{
};

/* 6111 */
struct __cppobj std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >::rebind<std::_Tree_nod<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::_Node *>
{
};

/* 6112 */
struct __cppobj std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >::rebind<int>
{
};

/* 6113 */
struct __cppobj std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >::rebind<char>
{
};

/* 6114 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >::iterator first;
  bool second;
};

/* 6115 */
struct __cppobj std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >::rebind<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >
{
};

/* 6116 */
struct __cppobj std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >::rebind<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >::_Node>
{
};

/* 6117 */
struct __cppobj std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >::rebind<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >,0> >::_Node *>
{
};

/* 6118 */
struct __cppobj std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >::rebind<int>
{
};

/* 6119 */
struct __cppobj std::allocator<std::pair<int const ,std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > > > >::rebind<char>
{
};

/* 6120 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >::iterator first;
  bool second;
};

/* 6121 */
struct __declspec(align(4)) std::pair<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator,bool>
{
  std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator first;
  bool second;
};

/* 6122 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::iterator first;
  bool second;
};

/* 6123 */
struct __cppobj std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >::rebind<std::pair<int const ,std::vector<int,std::allocator<int> > > >
{
};

/* 6124 */
struct __cppobj std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >::rebind<std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node>
{
};

/* 6125 */
struct __cppobj std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >::rebind<std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node *>
{
};

/* 6126 */
struct __cppobj std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >::rebind<int>
{
};

/* 6127 */
struct __cppobj std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >::rebind<char>
{
};

/* 6128 */
struct __cppobj std::allocator<std::pair<int const ,float> >::rebind<std::pair<int const ,float> >
{
};

/* 6129 */
struct __cppobj std::allocator<std::pair<int const ,float> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >::_Node>
{
};

/* 6130 */
struct __cppobj std::allocator<std::pair<int const ,float> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,float,std::less<int>,std::allocator<std::pair<int const ,float> >,0> >::_Node *>
{
};

/* 6131 */
struct __cppobj std::allocator<std::pair<int const ,float> >::rebind<int>
{
};

/* 6132 */
struct __cppobj std::allocator<std::pair<int const ,float> >::rebind<char>
{
};

/* 6133 */
struct __cppobj std::allocator<std::pair<int const ,float> >::rebind<std::_List_nod<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::_Node>
{
};

/* 6134 */
struct __cppobj std::allocator<std::pair<int const ,float> >::rebind<std::_List_nod<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::_Node *>
{
};

/* 6135 */
struct __cppobj std::allocator<std::pair<int const ,float> >::rebind<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator>
{
};

/* 6136 */
struct __cppobj std::iterator<std::random_access_iterator_tag,std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator,int,std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator const *,std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator const &>
{
};

/* 6137 */
struct __cppobj std::_Ranit<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator,int,std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator const *,std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator const &> : std::iterator<std::random_access_iterator_tag,std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator,int,std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator const *,std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator const &>
{
};

/* 6138 */
struct __cppobj std::vector<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator,std::allocator<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator> >::const_iterator : std::_Ranit<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator,int,std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator const *,std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator const &>
{
  std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator *_Myptr;
};

/* 6139 */
struct __cppobj std::vector<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator,std::allocator<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator> >::iterator : std::vector<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator,std::allocator<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator> >::const_iterator
{
};

/* 6140 */
struct __cppobj std::allocator<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator>::rebind<std::list<std::pair<int const ,float>,std::allocator<std::pair<int const ,float> > >::iterator>
{
};

/* 6141 */
struct __cppobj BS_SingletonHeap<BS_AuthDB,1>
{
};

/* 6142 */
struct __cppobj BS_AuthDB : BS_SingletonHeap<BS_AuthDB,1>
{
  BS_CriticalSection m_lock;
  BS_StrUtils::BS_FmtStr<1024> FMT;
  BS_OleDB *m_pOleDB;
};

/* 6143 */
struct AnswerSKIDPubAuthTW
{
  int nRet;
};

/* 6144 */
struct GDBQuery<AnswerSKIDPubAuthTW>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDPubAuthTW m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6145 */
struct GDBQuery<AnswerSKIDPubAuthTW>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 6146 */
struct GDBQuery<AnswerSKIDPubAuthTW>::ResultInit
{
  GDBSession *m_pSession;
};

/* 6147 */
struct GDBQuery<AnswerSKIDPubAuthTW>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6148 */
struct GDBQuery<AnswerSKIDPubAuthTW>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6149 */
struct GDBQuery<AnswerSKIDPubAuthTW>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6150 */
struct GDBQuery<AnswerSKIDPubAuthTW>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6151 */
struct GDBQuery<AnswerSKIDPubAuthTW>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6152 */
struct GDBQuery<AnswerSKIDPubAuthTW>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6153 */
struct GDBQuery<AnswerSKIDPubAuthTW>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 6154 */
struct AnswerSKIDPubAuth
{
  int nRet;
};

/* 6155 */
struct GDBQuery<AnswerSKIDPubAuth>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDPubAuth m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6156 */
struct GDBQuery<AnswerSKIDPubAuth>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 6157 */
struct GDBQuery<AnswerSKIDPubAuth>::ResultInit
{
  GDBSession *m_pSession;
};

/* 6158 */
struct GDBQuery<AnswerSKIDPubAuth>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6159 */
struct GDBQuery<AnswerSKIDPubAuth>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6160 */
struct GDBQuery<AnswerSKIDPubAuth>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6161 */
struct GDBQuery<AnswerSKIDPubAuth>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6162 */
struct GDBQuery<AnswerSKIDPubAuth>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6163 */
struct GDBQuery<AnswerSKIDPubAuth>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6164 */
struct GDBQuery<AnswerSKIDPubAuth>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 6165 */
struct AnswerSKIDAuth
{
  char szPassword[33];
  char szValid[2];
  char szJoinDate[20];
};

/* 6166 */
struct GDBQuery<AnswerSKIDAuth>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDAuth m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6167 */
struct GDBQuery<AnswerSKIDAuth>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 6168 */
struct GDBQuery<AnswerSKIDAuth>::ResultInit
{
  GDBSession *m_pSession;
};

/* 6169 */
struct GDBQuery<AnswerSKIDAuth>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6170 */
struct GDBQuery<AnswerSKIDAuth>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6171 */
struct GDBQuery<AnswerSKIDAuth>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6172 */
struct GDBQuery<AnswerSKIDAuth>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6173 */
struct GDBQuery<AnswerSKIDAuth>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6174 */
struct GDBQuery<AnswerSKIDAuth>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6175 */
struct GDBQuery<AnswerSKIDAuth>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 6176 */
struct __cppobj IEnumString : IUnknown
{
};

/* 6177 */
struct __cppobj IRunningObjectTable : IUnknown
{
};

/* 6178 */
struct __cppobj IMoniker : IPersistStream
{
};

/* 6179 */
struct __cppobj IEnumMoniker : IUnknown
{
};

/* 6180 */
struct _COAUTHIDENTITY
{
  unsigned __int16 *User;
  unsigned int UserLength;
  unsigned __int16 *Domain;
  unsigned int DomainLength;
  unsigned __int16 *Password;
  unsigned int PasswordLength;
  unsigned int Flags;
};

/* 6181 */
struct _COAUTHINFO
{
  unsigned int dwAuthnSvc;
  unsigned int dwAuthzSvc;
  unsigned __int16 *pwszServerPrincName;
  unsigned int dwAuthnLevel;
  unsigned int dwImpersonationLevel;
  _COAUTHIDENTITY *pAuthIdentityData;
  unsigned int dwCapabilities;
};

/* 6182 */
struct tagBIND_OPTS
{
  unsigned int cbStruct;
  unsigned int grfFlags;
  unsigned int grfMode;
  unsigned int dwTickCountDeadline;
};

/* 6183 */
struct tagDBPARAMS
{
  void *pData;
  unsigned int cParamSets;
  unsigned int hAccessor;
};

/* 6184 */
union $07ACC0E3AC3B62093EF9CE29F4C5C80B
{
  _GUID guid;
  _GUID *pguid;
};

/* 6185 */
union $B1183A3787A92E9C88A6C48CC1C3B1A0
{
  unsigned __int16 *pwszName;
  unsigned int ulPropid;
};

/* 6186 */
struct tagDBID
{
  $07ACC0E3AC3B62093EF9CE29F4C5C80B uGuid;
  unsigned int eKind;
  $B1183A3787A92E9C88A6C48CC1C3B1A0 uName;
};

/* 6187 */
struct __cppobj ITransaction : IUnknown
{
};

/* 6188 */
struct __cppobj ITransactionLocal : ITransaction
{
};

/* 6189 */
struct __cppobj ITransactionOptions : IUnknown
{
};

/* 6190 */
struct __cppobj IColumnsInfo : IUnknown
{
};

/* 6191 */
struct tagDBCOLUMNINFO
{
  unsigned __int16 *pwszName;
  ITypeInfo *pTypeInfo;
  unsigned int iOrdinal;
  unsigned int dwFlags;
  unsigned int ulColumnSize;
  unsigned __int16 wType;
  char bPrecision;
  char bScale;
  tagDBID columnid;
};

/* 6192 */
struct __cppobj ISourcesRowset : IUnknown
{
};

/* 6193 */
struct __unaligned __declspec(align(4)) tagDBPROP
{
  unsigned int dwPropertyID;
  unsigned int dwOptions;
  unsigned int dwStatus;
  tagDBID colid;
  tagVARIANT vValue;
};

/* 6194 */
struct tagDBPROPSET
{
  tagDBPROP *rgProperties;
  unsigned int cProperties;
  _GUID guidPropertySet;
};

/* 6195 */
struct __cppobj IBindCtx : IUnknown
{
};

/* 6196 */
struct tagDBPROPIDSET
{
  unsigned int *rgPropertyIDs;
  unsigned int cPropertyIDs;
  _GUID guidPropertySet;
};

/* 6197 */
struct __cppobj ATL::CDBPropIDSet : tagDBPROPIDSET
{
};

/* 6198 */
struct __declspec(align(4)) ATL::_ATL_ACCESSOR_INFO
{
  unsigned int hAccessor;
  bool bAutoAccessor;
};

/* 6199 */
struct ATL::CAccessorBase
{
  ATL::_ATL_ACCESSOR_INFO *m_pAccessorInfo;
  unsigned int m_nAccessors;
  char *m_pBuffer;
};

/* 6200 */
struct __cppobj ATL::CDynamicAccessor : ATL::CAccessorBase
{
  unsigned int m_nColumns;
  bool *m_pfClientOwnedMemRef;
  tagDBCOLUMNINFO *m_pColumnInfo;
  unsigned __int16 *m_pStringsBuffer;
  bool m_bOverride;
  ATL::DBBLOBHANDLINGENUM m_eBlobHandling;
  unsigned int m_nBlobSize;
};

/* 6201 */
struct tagDBOBJECT
{
  unsigned int dwFlags;
  _GUID iid;
};

/* 6202 */
struct tagDBBINDEXT
{
  char *pExtension;
  unsigned int ulExtension;
};

/* 6203 */
struct tagDBBINDING
{
  unsigned int iOrdinal;
  unsigned int obValue;
  unsigned int obLength;
  unsigned int obStatus;
  ITypeInfo *pTypeInfo;
  tagDBOBJECT *pObject;
  tagDBBINDEXT *pBindExt;
  unsigned int dwPart;
  unsigned int dwMemOwner;
  unsigned int eParamIO;
  unsigned int cbMaxLen;
  unsigned int dwFlags;
  unsigned __int16 wType;
  char bPrecision;
  char bScale;
};

/* 6204 */
struct __cppobj ATL::CDynamicParameterAccessor : ATL::CDynamicAccessor
{
  unsigned int m_nParams;
  tagDBBINDING *m_pParameterEntry;
  unsigned __int16 **m_ppParamName;
  unsigned int m_nParameterBufferSize;
  char *m_pParameterBuffer;
};

/* 6205 */
struct ATL::CSimpleStringT<char,0>
{
  char *m_pszData;
};

/* 6206 */
struct __cppobj ICommand : IUnknown
{
};

/* 6207 */
struct __cppobj ATL::CNoMultipleResults
{
};

/* 6208 */
struct __cppobj IMultipleResults : IUnknown
{
};

/* 6209 */
struct ATL::CSimpleArray<tagDBBINDING,ATL::CSimpleArrayEqualHelperFalse<tagDBBINDING> >
{
  tagDBBINDING *m_aT;
  int m_nSize;
  int m_nAllocSize;
};

/* 6210 */
struct ATL::CSimpleArray<tagDBBINDING,ATL::CSimpleArrayEqualHelperFalse<tagDBBINDING> >::Wrapper
{
  tagDBBINDING t;
};

/* 6211 */
struct ATL::CComPtrBase<IPersist>
{
  IPersist *p;
};

/* 6212 */
struct __cppobj ATL::CComPtr<IPersist> : ATL::CComPtrBase<IPersist>
{
};

/* 6213 */
struct ATL::CComPtrBase<ITransactionLocal>
{
  ITransactionLocal *p;
};

/* 6214 */
struct __cppobj ATL::CComPtr<ITransactionLocal> : ATL::CComPtrBase<ITransactionLocal>
{
};

/* 6215 */
struct __declspec(align(4)) ATL::CConstraintColumnUsageInfo
{
  unsigned __int16 m_szTableCatalog[129];
  unsigned __int16 m_szTableSchema[129];
  unsigned __int16 m_szTableName[129];
  unsigned __int16 m_szColumnName[129];
  _GUID m_guidColumn;
  unsigned int m_nColumnPropID;
  unsigned __int16 m_szConstraintCatalog[129];
  unsigned __int16 m_szConstraintSchema[129];
  unsigned __int16 m_szConstraintName[129];
};

/* 6216 */
struct ATL::CComPtrBase<ISourcesRowset>
{
  ISourcesRowset *p;
};

/* 6217 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<ISourcesRowset> : ISourcesRowset
{
};

/* 6218 */
struct __cppobj IRowset : IUnknown
{
};

/* 6219 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IRowset> : IRowset
{
};

/* 6220 */
struct __cppobj ATL::CDBPropSet : tagDBPROPSET
{
};

/* 6221 */
struct __cppobj IParseDisplayName : IUnknown
{
};

/* 6222 */
struct ATL::CComPtrBase<IParseDisplayName>
{
  IParseDisplayName *p;
};

/* 6223 */
struct __cppobj ATL::CComPtr<IParseDisplayName> : ATL::CComPtrBase<IParseDisplayName>
{
};

/* 6224 */
struct ATL::CViewInfo
{
  unsigned __int16 m_szTableCatalog[129];
  unsigned __int16 m_szTableSchema[129];
  unsigned __int16 m_szTableName[129];
  unsigned __int16 m_szDefinition[129];
  __int16 m_bCheckOption;
  __int16 m_bIsUpdatable;
  unsigned __int16 m_szDescription[129];
};

/* 6225 */
struct __cppobj IDataInitialize : IUnknown
{
};

/* 6226 */
struct ATL::CComPtrBase<IDataInitialize>
{
  IDataInitialize *p;
};

/* 6227 */
struct __cppobj ATL::CComPtr<IDataInitialize> : ATL::CComPtrBase<IDataInitialize>
{
};

/* 6228 */
struct ATL::CDataConnection
{
  ATL::CSession m_session;
  ATL::CDataSource m_source;
};

/* 6229 */
struct ATL::CPrimaryKeyInfo
{
  unsigned __int16 m_szTableCatalog[129];
  unsigned __int16 m_szTableSchema[129];
  unsigned __int16 m_szTableName[129];
  unsigned __int16 m_szColumnName[129];
  _GUID m_guidColumn;
  unsigned int m_nColumnPropID;
  unsigned int m_nOrdinal;
};

/* 6230 */
struct tagDBPARAMINFO
{
  unsigned int dwFlags;
  unsigned int iOrdinal;
  unsigned __int16 *pwszName;
  ITypeInfo *pTypeInfo;
  unsigned int ulParamSize;
  unsigned __int16 wType;
  char bPrecision;
  char bScale;
};

/* 6231 */
struct ATL::CHeapPtrBase<tagDBPARAMINFO,ATL::CComAllocator>
{
  tagDBPARAMINFO *m_pData;
};

/* 6232 */
struct __cppobj ATL::CHeapPtr<tagDBPARAMINFO,ATL::CComAllocator> : ATL::CHeapPtrBase<tagDBPARAMINFO,ATL::CComAllocator>
{
};

/* 6233 */
struct __cppobj ATL::CComHeapPtr<tagDBPARAMINFO> : ATL::CHeapPtr<tagDBPARAMINFO,ATL::CComAllocator>
{
};

/* 6234 */
struct ATL::CSimpleStringT<char,1>
{
  char *m_pszData;
};

/* 6235 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IDataInitialize> : IDataInitialize
{
};

/* 6236 */
struct __cppobj IAccessor : IUnknown
{
};

/* 6237 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IAccessor> : IAccessor
{
};

/* 6238 */
struct __cppobj ISessionProperties : IUnknown
{
};

/* 6239 */
struct ATL::CComPtrBase<ISessionProperties>
{
  ISessionProperties *p;
};

/* 6240 */
struct __cppobj ATL::CComPtr<ISessionProperties> : ATL::CComPtrBase<ISessionProperties>
{
};

/* 6241 */
struct __cppobj IDBCreateSession : IUnknown
{
};

/* 6242 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IDBCreateSession> : IDBCreateSession
{
};

/* 6243 */
struct ATL::CKeyColumnUsageInfo
{
  unsigned __int16 m_szConstraintCatalog[129];
  unsigned __int16 m_szConstraintSchema[129];
  unsigned __int16 m_szConstraintName[129];
  unsigned __int16 m_szTableCatalog[129];
  unsigned __int16 m_szTableSchema[129];
  unsigned __int16 m_szTableName[129];
  unsigned __int16 m_szColumnName[129];
  _GUID m_guidColumn;
  unsigned int m_nColumnPropID;
  unsigned int m_nOrdinalPosition;
};

/* 6244 */
struct ATL::CComPtrBase<IRowset>
{
  IRowset *p;
};

/* 6245 */
struct __cppobj ATL::CComPtr<IRowset> : ATL::CComPtrBase<IRowset>
{
};

/* 6246 */
struct __cppobj IRowsetChange : IUnknown
{
};

/* 6247 */
struct ATL::CComPtrBase<IRowsetChange>
{
  IRowsetChange *p;
};

/* 6248 */
struct __cppobj ATL::CComPtr<IRowsetChange> : ATL::CComPtrBase<IRowsetChange>
{
};

/* 6249 */
struct ATL::CEnumeratorAccessor
{
  unsigned __int16 m_szName[129];
  unsigned __int16 m_szParseName[129];
  unsigned __int16 m_szDescription[129];
  unsigned __int16 m_nType;
  __int16 m_bIsParent;
};

/* 6250 */
struct __cppobj __declspec(align(4)) ATL::CAccessor<ATL::CEnumeratorAccessor> : ATL::CAccessorBase, ATL::CEnumeratorAccessor
{
};

/* 6251 */
struct __cppobj ATL::CDynamicStringAccessorT<unsigned short,130> : ATL::CDynamicAccessor
{
};

/* 6252 */
struct __cppobj ATL::CXMLAccessor : ATL::CDynamicStringAccessorT<unsigned short,130>
{
};

/* 6253 */
struct ATL::CRowset<ATL::CAccessor<ATL::CEnumeratorAccessor> >
{
  ATL::CComPtr<IRowset> m_spRowset;
  ATL::CComPtr<IRowsetChange> m_spRowsetChange;
  ATL::CAccessor<ATL::CEnumeratorAccessor> *m_pAccessor;
  unsigned int m_hRow;
  ATL::CXMLAccessor *m_pXMLAccessor;
};

/* 6254 */
struct ATL::CBookmarkBase
{
  ATL::CBookmarkBaseVtbl *vfptr;
};

/* 6255 */
struct ATL::CBookmarkBaseVtbl
{
  unsigned int (__thiscall *GetSize)(ATL::CBookmarkBase *this);
  char *(__thiscall *GetBuffer)(ATL::CBookmarkBase *this);
};

/* 6256 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<ICommand> : ICommand
{
};

/* 6257 */
struct tagERRORINFO
{
  HRESULT hrError;
  unsigned int dwMinor;
  _GUID clsid;
  _GUID iid;
  int dispid;
};

/* 6258 */
struct __cppobj IDBSchemaRowset : IUnknown
{
};

/* 6259 */
struct ATL::CComPtrBase<IDBSchemaRowset>
{
  IDBSchemaRowset *p;
};

/* 6260 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IDBSchemaRowset> : IDBSchemaRowset
{
};

/* 6261 */
struct ATL::CComPtrBase<ITransaction>
{
  ITransaction *p;
};

/* 6262 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<ITransaction> : ITransaction
{
};

/* 6263 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IErrorInfo> : IErrorInfo
{
};

/* 6264 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<ISessionProperties> : ISessionProperties
{
};

/* 6265 */
struct ATL::CViewTableUsageInfo
{
  unsigned __int16 m_szCatalog[129];
  unsigned __int16 m_szSchema[129];
  unsigned __int16 m_szName[129];
  unsigned __int16 m_szTableCatalog[129];
  unsigned __int16 m_szTableSchema[129];
  unsigned __int16 m_szTableName[129];
};

/* 6266 */
struct __cppobj IChapteredRowset : IUnknown
{
};

/* 6267 */
struct ATL::CComPtrBase<IChapteredRowset>
{
  IChapteredRowset *p;
};

/* 6268 */
struct __cppobj ATL::CComPtr<IChapteredRowset> : ATL::CComPtrBase<IChapteredRowset>
{
};

/* 6269 */
struct __cppobj ATL::CAccessorRowset<ATL::CAccessor<ATL::CEnumeratorAccessor>,ATL::CRowset> : ATL::CAccessor<ATL::CEnumeratorAccessor>, ATL::CRowset<ATL::CAccessor<ATL::CEnumeratorAccessor> >
{
};

/* 6270 */
struct __cppobj ATL::CComPtr<ISourcesRowset> : ATL::CComPtrBase<ISourcesRowset>
{
};

/* 6271 */
struct __cppobj ATL::CEnumerator : ATL::CAccessorRowset<ATL::CAccessor<ATL::CEnumeratorAccessor>,ATL::CRowset>
{
  ATL::CComPtr<ISourcesRowset> m_spSourcesRowset;
};

/* 6272 */
struct ATL::CTranslationInfo
{
  unsigned __int16 m_szCatalog[129];
  unsigned __int16 m_szSchema[129];
  unsigned __int16 m_szName[129];
  unsigned __int16 m_szSourceCatalog[129];
  unsigned __int16 m_szSourceSchema[129];
  unsigned __int16 m_szSourceName[129];
  unsigned __int16 m_szTargetCatalog[129];
  unsigned __int16 m_szTargetSchema[129];
  unsigned __int16 m_szTargetName[129];
};

/* 6273 */
struct __cppobj ISupportErrorInfo : IUnknown
{
};

/* 6274 */
struct ATL::CComPtrBase<ISupportErrorInfo>
{
  ISupportErrorInfo *p;
};

/* 6275 */
struct __cppobj ATL::CComPtr<ISupportErrorInfo> : ATL::CComPtrBase<ISupportErrorInfo>
{
};

/* 6276 */
struct __cppobj ATL::CBookmark<0> : ATL::CBookmarkBase
{
  unsigned int m_nSize;
  char *m_pBuffer;
};

/* 6277 */
struct ATL::CHeapPtrBase<tagDBCOLUMNINFO,ATL::CComAllocator>
{
  tagDBCOLUMNINFO *m_pData;
};

/* 6278 */
struct __cppobj ATL::CHeapPtr<tagDBCOLUMNINFO,ATL::CComAllocator> : ATL::CHeapPtrBase<tagDBCOLUMNINFO,ATL::CComAllocator>
{
};

/* 6279 */
struct __cppobj ATL::CComHeapPtr<tagDBCOLUMNINFO> : ATL::CHeapPtr<tagDBCOLUMNINFO,ATL::CComAllocator>
{
};

/* 6280 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IPersist> : IPersist
{
};

/* 6281 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IChapteredRowset> : IChapteredRowset
{
};

/* 6282 */
struct ATL::CComPtrBase<ICommand>
{
  ICommand *p;
};

/* 6283 */
struct __cppobj ATL::CComPtr<ICommand> : ATL::CComPtrBase<ICommand>
{
};

/* 6284 */
struct ATL::CCommandBase
{
  ATL::CComPtr<ICommand> m_spCommand;
  unsigned int m_hParameterAccessor;
};

/* 6285 */
struct __unaligned __declspec(align(2)) tagDBPARAMBINDINFO
{
  unsigned __int16 *pwszDataSourceType;
  unsigned __int16 *pwszName;
  unsigned int ulParamSize;
  unsigned int dwFlags;
  char bPrecision;
  char bScale;
};

/* 6286 */
struct __cppobj IDBPromptInitialize : IUnknown
{
};

/* 6287 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IDBPromptInitialize> : IDBPromptInitialize
{
};

/* 6288 */
struct __cppobj IDBProperties : IUnknown
{
};

/* 6289 */
struct ATL::CComPtrBase<IDBProperties>
{
  IDBProperties *p;
};

/* 6290 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IDBProperties> : IDBProperties
{
};

/* 6291 */
struct ATL::CHeapPtrBase<tagDBPROPSET,ATL::CComAllocator>
{
  tagDBPROPSET *m_pData;
};

/* 6292 */
struct __cppobj ATL::CHeapPtr<tagDBPROPSET,ATL::CComAllocator> : ATL::CHeapPtrBase<tagDBPROPSET,ATL::CComAllocator>
{
};

/* 6293 */
struct __cppobj ICommandWithParameters : IUnknown
{
};

/* 6294 */
struct ATL::CComPtrBase<ICommandWithParameters>
{
  ICommandWithParameters *p;
};

/* 6295 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<ICommandWithParameters> : ICommandWithParameters
{
};

/* 6296 */
struct ATL::CCheckConstraintInfo
{
  unsigned __int16 m_szCatalog[129];
  unsigned __int16 m_szSchema[129];
  unsigned __int16 m_szName[129];
  unsigned __int16 m_szCheckClause[129];
  unsigned __int16 m_szDescription[129];
};

/* 6297 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<ISupportErrorInfo> : ISupportErrorInfo
{
};

/* 6298 */
struct ATL::CComPtrBase<IMoniker>
{
  IMoniker *p;
};

/* 6299 */
struct __cppobj ATL::CComPtr<IMoniker> : ATL::CComPtrBase<IMoniker>
{
};

/* 6300 */
struct __declspec(align(4)) ATL::CProcedureColumnInfo
{
  unsigned __int16 m_szCatalog[129];
  unsigned __int16 m_szSchema[129];
  unsigned __int16 m_szName[129];
  unsigned __int16 m_szColumnName[129];
  _GUID m_guidColumn;
  unsigned int m_nColumnPropID;
  unsigned int m_nRowsetNumber;
  unsigned int m_nOrdinalPosition;
  __int16 m_bIsNullable;
  unsigned __int16 m_nDataType;
  _GUID m_guidType;
  unsigned int m_nMaxLength;
  unsigned int m_nOctetLength;
  unsigned __int16 m_nPrecision;
  __int16 m_nScale;
  unsigned __int16 m_szDescription[129];
};

/* 6301 */
struct __cppobj IRowsetInfo : IUnknown
{
};

/* 6302 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IRowsetInfo> : IRowsetInfo
{
};

/* 6303 */
struct __cppobj ATL::CManualAccessor : ATL::CAccessorBase
{
  tagDBBINDING *m_pEntry;
  unsigned int m_nColumns;
  unsigned int m_nEntry;
  unsigned int m_nBufferSize;
  unsigned int m_nParameters;
  unsigned int m_nCurrentParameter;
  tagDBBINDING *m_pParameterEntry;
  unsigned int m_nParameterBufferSize;
  char *m_pParameterBuffer;
};

/* 6304 */
struct ATL::CColumnDomainUsageInfo
{
  unsigned __int16 m_szCatalog[129];
  unsigned __int16 m_szSchema[129];
  unsigned __int16 m_szName[129];
  unsigned __int16 m_szTableCatalog[129];
  unsigned __int16 m_szTableSchema[129];
  unsigned __int16 m_szTableName[129];
  unsigned __int16 m_szColumnName[129];
  _GUID m_guidColumn;
  unsigned int m_nColumnPropID;
};

/* 6305 */
struct ATL::CTablePrivilegeInfo
{
  unsigned __int16 m_szGrantor[129];
  unsigned __int16 m_szGrantee[129];
  unsigned __int16 m_szCatalog[129];
  unsigned __int16 m_szSchema[129];
  unsigned __int16 m_szName[129];
  unsigned __int16 m_szType[12];
  __int16 m_bIsGrantable;
};

/* 6306 */
struct __cppobj ATL::CDynamicVariantAccessor : ATL::CDynamicAccessor
{
};

/* 6307 */
struct __cppobj ICommandText : ICommand
{
};

/* 6308 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<ICommandText> : ICommandText
{
};

/* 6309 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IDBInitialize> : IDBInitialize
{
};

/* 6310 */
struct __declspec(align(4)) ATL::CProviderTypeInfo
{
  unsigned __int16 m_szTypeName[129];
  unsigned __int16 m_nDataType;
  unsigned int m_nColumnSize;
  unsigned __int16 m_szLiteralPrefix[129];
  unsigned __int16 m_szLiteralSuffix[129];
  unsigned __int16 m_szCreateParams[129];
  __int16 m_bIsNullable;
  __int16 m_bCaseSensitive;
  unsigned int m_nSearchable;
  __int16 m_bUnsignedAttribute;
  __int16 m_bFixedPrecScale;
  __int16 m_bAutoUniqueValue;
  unsigned __int16 m_szLocalTypeName[129];
  __int16 m_nMinScale;
  __int16 m_nMaxScale;
  _GUID m_guidType;
  unsigned __int16 m_szTypeLib[129];
  unsigned __int16 m_szVersion[129];
  __int16 m_bIsLong;
  __int16 m_bBestMatch;
  __int16 m_bIsFixedLength;
};

/* 6311 */
struct __declspec(align(4)) ATL::CColumnPrivilegeInfo
{
  unsigned __int16 m_szGrantor[129];
  unsigned __int16 m_szGrantee[129];
  unsigned __int16 m_szTableCatalog[129];
  unsigned __int16 m_szTableSchema[129];
  unsigned __int16 m_szTableName[129];
  unsigned __int16 m_szColumnName[129];
  _GUID m_guidColumn;
  unsigned int m_nColumnPropID;
  unsigned __int16 m_szPrivilegeType[20];
  __int16 m_bIsGrantable;
};

/* 6312 */
struct BOID
{
  char rgb[16];
};

/* 6313 */
struct XACTTRANSINFO
{
  BOID uow;
  int isoLevel;
  unsigned int isoFlags;
  unsigned int grfTCSupported;
  unsigned int grfRMSupported;
  unsigned int grfTCSupportedRetaining;
  unsigned int grfRMSupportedRetaining;
};

/* 6314 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<ITransactionLocal> : ITransactionLocal
{
};

/* 6315 */
struct ATL::CHeapPtrBase<unsigned short,ATL::CComAllocator>
{
  unsigned __int16 *m_pData;
};

/* 6316 */
struct __cppobj ATL::CHeapPtr<unsigned short,ATL::CComAllocator> : ATL::CHeapPtrBase<unsigned short,ATL::CComAllocator>
{
};

/* 6317 */
struct __cppobj ATL::CComHeapPtr<unsigned short> : ATL::CHeapPtr<unsigned short,ATL::CComAllocator>
{
};

/* 6318 */
struct __declspec(align(4)) ATL::CCharacterSetInfo
{
  unsigned __int16 m_szCatalog[129];
  unsigned __int16 m_szSchema[129];
  unsigned __int16 m_szName[129];
  unsigned __int16 m_szFormOfUse[129];
  _LARGE_INTEGER m_nNumCharacters;
  unsigned __int16 m_szCollateCatalog[129];
  unsigned __int16 m_szCollateSchema[129];
  unsigned __int16 m_szCollateName[129];
};

/* 6319 */
struct ATL::CComPtrBase<IColumnsInfo>
{
  IColumnsInfo *p;
};

/* 6320 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IColumnsInfo> : IColumnsInfo
{
};

/* 6321 */
struct __cppobj ATL::CComPtr<IDBSchemaRowset> : ATL::CComPtrBase<IDBSchemaRowset>
{
};

/* 6322 */
struct ATL::CComPtrBase<IAccessor>
{
  IAccessor *p;
};

/* 6323 */
struct ATL::CW2WEX<128>
{
  unsigned __int16 *m_psz;
  wchar_t m_szBuffer[128];
};

/* 6324 */
struct ATL::CComPtrBase<IDBPromptInitialize>
{
  IDBPromptInitialize *p;
};

/* 6325 */
struct __cppobj ATL::CComPtr<IDBPromptInitialize> : ATL::CComPtrBase<IDBPromptInitialize>
{
};

/* 6326 */
struct __cppobj ATL::_CStoreRestrictions<0>
{
};

/* 6327 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IParseDisplayName> : IParseDisplayName
{
};

/* 6328 */
struct __cppobj IDBCreateCommand : IUnknown
{
};

/* 6329 */
struct ATL::CComPtrBase<IDBCreateCommand>
{
  IDBCreateCommand *p;
};

/* 6330 */
struct __cppobj ATL::CComPtr<IDBCreateCommand> : ATL::CComPtrBase<IDBCreateCommand>
{
};

/* 6331 */
struct __cppobj ICommandPrepare : IUnknown
{
};

/* 6332 */
struct ATL::CComPtrBase<ICommandPrepare>
{
  ICommandPrepare *p;
};

/* 6333 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<ICommandPrepare> : ICommandPrepare
{
};

/* 6334 */
struct __cppobj ATL::_CNoOutputColumns
{
};

/* 6335 */
struct __declspec(align(4)) ATL::CProcedureParameterInfo
{
  unsigned __int16 m_szCatalog[129];
  unsigned __int16 m_szSchema[129];
  unsigned __int16 m_szName[129];
  unsigned __int16 m_szParameterName[129];
  unsigned __int16 m_nOrdinalPosition;
  unsigned __int16 m_nType;
  __int16 m_bHasDefault;
  unsigned __int16 m_szDefault[129];
  __int16 m_bIsNullable;
  unsigned __int16 m_nDataType;
  unsigned int m_nMaxLength;
  unsigned int m_nOctetLength;
  unsigned __int16 m_nPrecision;
  __int16 m_nScale;
  unsigned __int16 m_szDescription[129];
};

/* 6336 */
struct ATL::_ATL_COLUMN_PARAM_INFO
{
  ATL::CSimpleArray<tagDBBINDING,ATL::CSimpleArrayEqualHelperFalse<tagDBBINDING> > m_rgBinding;
  tagDBPARAMS *m_pParams;
  char *m_pBuffer;
};

/* 6337 */
struct __cppobj ATL::CColumnAccessor : ATL::CAccessorBase
{
  ATL::_ATL_COLUMN_PARAM_INFO *m_pParamInfo;
};

/* 6338 */
struct ATL::CColumnsInfo
{
  unsigned __int16 m_szTableCatalog[129];
  unsigned __int16 m_szTableSchema[129];
  unsigned __int16 m_szTableName[129];
  unsigned __int16 m_szColumnName[129];
  _GUID m_guidColumn;
  unsigned int m_nColumnPropID;
  unsigned int m_nOrdinalPosition;
  __int16 m_bColumnHasDefault;
  unsigned __int16 m_szColumnDefault[129];
  unsigned int m_nColumnFlags;
  __int16 m_bIsNullable;
  unsigned __int16 m_nDataType;
  _GUID m_guidType;
  unsigned int m_nMaxLength;
  unsigned int m_nOctetLength;
  unsigned __int16 m_nNumericPrecision;
  __int16 m_nNumericScale;
  unsigned int m_nDateTimePrecision;
  unsigned __int16 m_szCharSetCatalog[129];
  unsigned __int16 m_szCharSetSchema[129];
  unsigned __int16 m_szCharSetName[129];
  unsigned __int16 m_szCollationCatalog[129];
  unsigned __int16 m_szCollationSchema[129];
  unsigned __int16 m_szCollationName[129];
  unsigned __int16 m_szDomainCatalog[129];
  unsigned __int16 m_szDomainSchema[129];
  unsigned __int16 m_szDomainName[129];
  unsigned __int16 m_szDescription[129];
};

/* 6339 */
struct ATL::CProcedureInfo
{
  unsigned __int16 m_szCatalog[129];
  unsigned __int16 m_szSchema[129];
  unsigned __int16 m_szName[129];
  __int16 m_nType;
  unsigned __int16 m_szDefinition[129];
  unsigned __int16 m_szDescription[129];
};

/* 6340 */
struct __cppobj ATL::CComPtr<ICommandWithParameters> : ATL::CComPtrBase<ICommandWithParameters>
{
};

/* 6341 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IErrorRecords> : IErrorRecords
{
};

/* 6342 */
struct __cppobj ATL::CComPtr<ICommandPrepare> : ATL::CComPtrBase<ICommandPrepare>
{
};

/* 6343 */
struct ATL::CComPtrBase<IMultipleResults>
{
  IMultipleResults *p;
};

/* 6344 */
struct ATL::CTableConstraintInfo
{
  unsigned __int16 m_szCatalog[129];
  unsigned __int16 m_szSchema[129];
  unsigned __int16 m_szName[129];
  unsigned __int16 m_szTableCatalog[129];
  unsigned __int16 m_szTableSchema[129];
  unsigned __int16 m_szTableName[129];
  unsigned __int16 m_szType[12];
  __int16 m_bIsDeferrable;
  __int16 m_bInitiallyDeferred;
  unsigned __int16 m_szDescription[129];
};

/* 6345 */
struct ATL::CAutoVectorPtr<unsigned short *>
{
  unsigned __int16 **m_p;
};

/* 6346 */
struct __cppobj ATL::CComPtr<IDBProperties> : ATL::CComPtrBase<IDBProperties>
{
};

/* 6347 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IDBCreateCommand> : IDBCreateCommand
{
};

/* 6348 */
struct ATL::CComPtrBase<IRowsetInfo>
{
  IRowsetInfo *p;
};

/* 6349 */
struct __cppobj ATL::CComPtr<IRowsetInfo> : ATL::CComPtrBase<IRowsetInfo>
{
};

/* 6350 */
struct __cppobj ATL::CNoAccessor
{
};

/* 6351 */
struct __cppobj ATL::CComQIPtr<IChapteredRowset,&_GUID_0c733a93_2a1c_11ce_ade5_00aa0044773d> : ATL::CComPtr<IChapteredRowset>
{
};

/* 6352 */
struct __cppobj ATL::CComPtr<ITransaction> : ATL::CComPtrBase<ITransaction>
{
};

/* 6353 */
struct __cppobj ATL::_CNoParameters
{
};

/* 6354 */
struct __cppobj ATL::CComHeapPtr<tagDBPROPSET> : ATL::CHeapPtr<tagDBPROPSET,ATL::CComAllocator>
{
};

/* 6355 */
struct ATL::CAssertionInfo
{
  unsigned __int16 m_szCatalog[129];
  unsigned __int16 m_szSchema[129];
  unsigned __int16 m_szName[129];
  __int16 m_bIsDeferrable;
  __int16 m_bInitiallyDeferred;
  unsigned __int16 m_szDescription[129];
};

/* 6356 */
struct ATL::CCatalogInfo
{
  unsigned __int16 m_szName[129];
  unsigned __int16 m_szDescription[129];
};

/* 6357 */
struct ATL::CSQLLanguageInfo
{
  unsigned __int16 m_szSource[10];
  unsigned __int16 m_szYear[5];
  unsigned __int16 m_szConformance[13];
  unsigned __int16 m_szIntegrity[4];
  unsigned __int16 m_szImplementation[24];
  unsigned __int16 m_szBindingStyle[10];
  unsigned __int16 m_szProgrammingLanguage[10];
};

/* 6358 */
struct ATL::CForeignKeysInfo
{
  unsigned __int16 m_szPKTableCatalog[129];
  unsigned __int16 m_szPKTableSchema[129];
  unsigned __int16 m_szPKTableName[129];
  unsigned __int16 m_szPKColumnName[129];
  _GUID m_guidPKColumn;
  unsigned int m_nPKColumnPropID;
  unsigned __int16 m_szFKTableCatalog[129];
  unsigned __int16 m_szFKTableSchema[129];
  unsigned __int16 m_szFKTableName[129];
  unsigned __int16 m_szFKColumnName[129];
  _GUID m_guidFKColumn;
  unsigned int m_nFKColumnPropID;
  unsigned int m_nOrdinal;
  unsigned __int16 m_szUpdateRule[12];
  unsigned __int16 m_szDeleteRule[12];
};

/* 6359 */
struct ATL::CSchemataInfo
{
  unsigned __int16 m_szCatalog[129];
  unsigned __int16 m_szName[129];
  unsigned __int16 m_szOwner[129];
  unsigned __int16 m_szCharCatalog[129];
  unsigned __int16 m_szCharSchema[129];
  unsigned __int16 m_szCharName[129];
};

/* 6360 */
struct ATL::CViewColumnUsageInfo
{
  unsigned __int16 m_szCatalog[129];
  unsigned __int16 m_szSchema[129];
  unsigned __int16 m_szName[129];
  unsigned __int16 m_szTableCatalog[129];
  unsigned __int16 m_szTableSchema[129];
  unsigned __int16 m_szTableName[129];
  unsigned __int16 m_szColumnName[129];
  _GUID m_guidColumn;
  unsigned int m_nColumnPropID;
};

/* 6361 */
struct __declspec(align(4)) ATL::CIndexesInfo
{
  unsigned __int16 m_szTableCatalog[129];
  unsigned __int16 m_szTableSchema[129];
  unsigned __int16 m_szTableName[129];
  unsigned __int16 m_szIndexCatalog[129];
  unsigned __int16 m_szIndexSchema[129];
  unsigned __int16 m_szIndexName[129];
  __int16 m_bPrimaryKey;
  __int16 m_bUnique;
  __int16 m_bClustered;
  unsigned __int16 m_nType;
  int m_nFillFactor;
  int m_nInitialSize;
  int m_nNulls;
  __int16 m_bSortBookmarks;
  __int16 m_bAutoUpdate;
  int m_nNullCollation;
  unsigned int m_nOrdinalPosition;
  unsigned __int16 m_szColumnName[129];
  _GUID m_guidColumn;
  unsigned int m_nColumnPropID;
  __int16 m_nCollation;
  int m_nCardinality;
  int m_nPages;
  unsigned __int16 m_szFilterCondition[129];
};

/* 6362 */
struct __cppobj ATL::CComPtr<IMultipleResults> : ATL::CComPtrBase<IMultipleResults>
{
};

/* 6363 */
struct ATL::CUsagePrivilegeInfo
{
  unsigned __int16 m_szGrantor[129];
  unsigned __int16 m_szGrantee[129];
  unsigned __int16 m_szObjectCatalog[129];
  unsigned __int16 m_szObjectSchema[129];
  unsigned __int16 m_szObjectName[129];
  unsigned __int16 m_szObjectType[12];
  unsigned __int16 m_szPrivilegeType[6];
  __int16 m_bIsGrantable;
};

/* 6364 */
struct ATL::CComPtrBase<ICommandText>
{
  ICommandText *p;
};

/* 6365 */
struct __cppobj ATL::CComPtr<ICommandText> : ATL::CComPtrBase<ICommandText>
{
};

/* 6366 */
struct ATL::CComPtrBase<IDBCreateSession>
{
  IDBCreateSession *p;
};

/* 6367 */
struct __cppobj ATL::CComPtr<IColumnsInfo> : ATL::CComPtrBase<IColumnsInfo>
{
};

/* 6368 */
struct __cppobj ATL::_CNoCommand
{
};

/* 6369 */
struct ATL::CMultipleResults
{
  ATL::CComPtr<IMultipleResults> m_spMultipleResults;
};

/* 6370 */
struct ATL::CConstraintTableUsageInfo
{
  unsigned __int16 m_szTableCatalog[129];
  unsigned __int16 m_szTableSchema[129];
  unsigned __int16 m_szTableName[129];
  unsigned __int16 m_szConstraintCatalog[129];
  unsigned __int16 m_szConstraintSchema[129];
  unsigned __int16 m_szConstraintName[129];
};

/* 6371 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IOpenRowset> : IOpenRowset
{
};

/* 6372 */
struct ATL::CReferentialConstraintInfo
{
  unsigned __int16 m_szCatalog[129];
  unsigned __int16 m_szSchema[129];
  unsigned __int16 m_szName[129];
  unsigned __int16 m_szUniqueCatalog[129];
  unsigned __int16 m_szUniqueSchema[129];
  unsigned __int16 m_szUniqueName[129];
  unsigned __int16 m_szMatchOption[8];
  unsigned __int16 m_szUpdateRule[12];
  unsigned __int16 m_szDeleteRule[12];
  unsigned __int16 m_szDescription[129];
};

/* 6373 */
struct __declspec(align(4)) ATL::CTableInfo
{
  unsigned __int16 m_szCatalog[129];
  unsigned __int16 m_szSchema[129];
  unsigned __int16 m_szName[129];
  unsigned __int16 m_szType[129];
  _GUID m_guidTable;
  unsigned __int16 m_szDescription[129];
};

/* 6374 */
struct ATL::CAutoVectorPtr<tagDBBINDING>
{
  tagDBBINDING *m_p;
};

/* 6375 */
struct ATL::CCollationInfo
{
  unsigned __int16 m_szCatalog[129];
  unsigned __int16 m_szSchema[129];
  unsigned __int16 m_szName[129];
  unsigned __int16 m_szCharSetCatalog[129];
  unsigned __int16 m_szCharSetSchema[129];
  unsigned __int16 m_szCharSetName[129];
  unsigned __int16 m_szPadAttribute[10];
};

/* 6376 */
struct __cppobj ATL::CComPtr<IAccessor> : ATL::CComPtrBase<IAccessor>
{
};

/* 6377 */
struct __cppobj ATL::CComPtr<IDBCreateSession> : ATL::CComPtrBase<IDBCreateSession>
{
};

/* 6378 */
struct ATL::CStatisticInfo
{
  unsigned __int16 m_szTableCatalog[129];
  unsigned __int16 m_szTableSchema[129];
  unsigned __int16 m_szTableName[129];
  int m_nCardinality;
};

/* 6379 */
struct __cppobj IRowsetNotify : IUnknown
{
};

/* 6380 */
struct __cppobj ATL::IRowsetNotifyImpl : IRowsetNotify
{
};

/* 6381 */
struct ATL::CSchemas
{
  unsigned int m_nSchemas;
  _GUID *m_pSchemaGuids;
  unsigned int *m_pulRestrictions;
};

/* 6382 */
struct __unaligned __declspec(align(2)) tagDBPROPINFO
{
  unsigned __int16 *pwszDescription;
  unsigned int dwPropertyID;
  unsigned int dwFlags;
  unsigned __int16 vtType;
  tagVARIANT vValues;
};

/* 6383 */
struct _BLOB
{
  unsigned int cbSize;
  char *pBlobData;
};

/* 6384 */
struct tagDBPROPINFOSET
{
  tagDBPROPINFO *rgPropertyInfos;
  unsigned int cPropertyInfos;
  _GUID guidPropertySet;
};

/* 6385 */
struct tagDBVECTOR
{
  unsigned int size;
  void *ptr;
};

/* 6386 */
struct tagDB_VARNUMERIC
{
  char precision;
  char scale;
  char sign;
  char val[1];
};

/* 6387 */
struct tagMULTI_QI
{
  _GUID *pIID;
  IUnknown *pItf;
  HRESULT hr;
};

/* 6388 */
struct tagDB_NUMERIC
{
  char precision;
  char scale;
  char sign;
  char val[16];
};

/* 6389 */
struct XACTOPT
{
  unsigned int ulTimeout;
  char szDescription[40];
};

/* 6390 */
struct tagDBTIME
{
  unsigned __int16 hour;
  unsigned __int16 minute;
  unsigned __int16 second;
};

/* 6391 */
struct __cppobj BS_SingletonHeap<BS_OleDBStatic,1>
{
};

/* 6392 */
struct __cppobj BS_OleDBStatic : BS_OleDB, BS_SingletonHeap<BS_OleDBStatic,1>
{
};

/* 6393 */
struct tagDBDATE
{
  __int16 year;
  unsigned __int16 month;
  unsigned __int16 day;
};

/* 6394 */
struct _COSERVERINFO
{
  unsigned int dwReserved1;
  unsigned __int16 *pwszName;
  _COAUTHINFO *pAuthInfo;
  unsigned int dwReserved2;
};

/* 6395 */
struct XiTDFConfig
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > m_TDFDir;
};

/* 6396 */
struct __unaligned __declspec(align(2)) sBITMAP
{
  __int16 bfType;
  unsigned int bfSize;
  __int16 bfReserved1;
  __int16 bfReserved2;
  unsigned int bfOffBits;
};

/* 6397 */
struct LockMessageBuffer<BS_PktImageResponse>
{
  BS_PktImageResponse *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6398 */
struct LockMessageBuffer<BS_PktImageSaveResult>
{
  BS_PktImageSaveResult *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6399 */
struct SelectMember
{
  BS_GameDispatch *m_pException;
  BS_GameDispatch *m_pSelected;
};

/* 6400 */
struct UidPool<1,20000>::Monitor
{
  _RTL_CRITICAL_SECTION m_cs;
};

/* 6401 */
struct std::bitset<20000>
{
  unsigned int _Array[625];
};

/* 6402 */
struct UidPool<1,20000>
{
  UidPool<1,20000>::Monitor m_monitor;
  std::bitset<20000> m_set;
  int m_cur;
  int m_freeNum;
};

/* 6403 */
struct UidPoolMgr
{
  UidPool<1,20000> m_huv;
};

/* 6404 */
struct std::bitset<20000>::reference
{
  std::bitset<20000> *_Pbitset;
  unsigned int _Mypos;
};

/* 6405 */
struct UidPool<1,20000>::Lock
{
  UidPool<1,20000>::Monitor *monitor;
};

/* 6406 */
struct SendToMember
{
  BS_Packet *m_pPacket;
};

/* 6407 */
struct __cppobj ClearMember
{
};

/* 6408 */
struct BS_StrUtils::BS_FmtStr<256>
{
  wchar_t *m_pBuffer;
  int m_BufferLen;
};

/* 6409 */
struct __cppobj BS_ZoneConsole : BS_Console
{
  BS_Stream *m_pStream;
};

/* 6410 */
struct __cppobj std::_Allocator_base<BS_Service *>
{
};

/* 6411 */
struct __cppobj std::allocator<BS_Service *> : std::_Allocator_base<BS_Service *>
{
};

/* 6412 */
struct std::_Vector_val<BS_Service *,std::allocator<BS_Service *> >
{
  std::allocator<BS_Service *> _Alval;
};

/* 6413 */
struct __cppobj std::allocator<BS_Service *>::rebind<BS_Service *>
{
};

/* 6414 */
struct __cppobj std::vector<BS_Service *,std::allocator<BS_Service *> > : std::_Vector_val<BS_Service *,std::allocator<BS_Service *> >
{
  BS_Service **_Myfirst;
  BS_Service **_Mylast;
  BS_Service **_Myend;
};

/* 6415 */
struct __cppobj std::iterator<std::random_access_iterator_tag,BS_Service *,int,BS_Service * const *,BS_Service * const &>
{
};

/* 6416 */
struct __cppobj std::_Ranit<BS_Service *,int,BS_Service * const *,BS_Service * const &> : std::iterator<std::random_access_iterator_tag,BS_Service *,int,BS_Service * const *,BS_Service * const &>
{
};

/* 6417 */
struct __cppobj std::vector<BS_Service *,std::allocator<BS_Service *> >::const_iterator : std::_Ranit<BS_Service *,int,BS_Service * const *,BS_Service * const &>
{
  BS_Service **_Myptr;
};

/* 6418 */
struct __cppobj std::vector<BS_Service *,std::allocator<BS_Service *> >::iterator : std::vector<BS_Service *,std::allocator<BS_Service *> >::const_iterator
{
};

/* 6419 */
struct __cppobj BS_SingletonStaticMeyers<BS_ServiceMgr>
{
};

/* 6420 */
struct __cppobj BS_ServiceMgr : BS_SingletonStaticMeyers<BS_ServiceMgr>
{
  std::vector<BS_Service *,std::allocator<BS_Service *> > m_ServiceList;
};

/* 6421 */
struct __cppobj BS_SingletonStaticMonostate<BS_Locale>
{
};

/* 6422 */
struct __cppobj BS_Locale : BS_SingletonStaticMonostate<BS_Locale>
{
};

/* 6423 */
struct __cppobj BS_ZoneService : BS_Service
{
};

/* 6424 */
struct std::pair<unsigned long,XiStrItemGradeUpgrade>
{
  unsigned int first;
  XiStrItemGradeUpgrade second;
};

/* 6425 */
struct std::pair<unsigned long,XiStrItemUpgrade>
{
  unsigned int first;
  XiStrItemUpgrade second;
};

/* 6426 */
struct __declspec(align(8)) std::_Tree_nod<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >::_Node *_Right;
  std::pair<__int64 const ,void *> _Myval;
  char _Color;
  char _Isnil;
};

/* 6427 */
struct __declspec(align(8)) std::pair<__int64 const ,void *>
{
  const __int64 first;
  void *second;
};

/* 6428 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >::_Node *>
{
};

/* 6429 */
struct std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0>
{
  std::less<__int64> comp;
};

/* 6430 */
struct __cppobj std::_Allocator_base<std::pair<__int64 const ,void *> >
{
};

/* 6431 */
struct __cppobj std::allocator<std::pair<__int64 const ,void *> > : std::_Allocator_base<std::pair<__int64 const ,void *> >
{
};

/* 6432 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >::_Node>
{
};

/* 6433 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >::_Node>
{
};

/* 6434 */
struct __cppobj std::_Tree_nod<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> > : std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >::_Node> _Alnod;
};

/* 6435 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<__int64 const ,void *>,int,std::pair<__int64 const ,void *> const *,std::pair<__int64 const ,void *> const &>
{
};

/* 6436 */
struct __cppobj std::_Bidit<std::pair<__int64 const ,void *>,int,std::pair<__int64 const ,void *> const *,std::pair<__int64 const ,void *> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<__int64 const ,void *>,int,std::pair<__int64 const ,void *> const *,std::pair<__int64 const ,void *> const &>
{
};

/* 6437 */
struct __cppobj std::_Tree<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >::const_iterator : std::_Bidit<std::pair<__int64 const ,void *>,int,std::pair<__int64 const ,void *> const *,std::pair<__int64 const ,void *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >::_Node *_Ptr;
};

/* 6438 */
struct __cppobj std::_Tree<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >::const_iterator
{
};

/* 6439 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >::iterator first;
  bool second;
};

/* 6440 */
struct __cppobj std::_Allocator_base<GDBSessionImpl *>
{
};

/* 6441 */
struct __cppobj std::allocator<GDBSessionImpl *> : std::_Allocator_base<GDBSessionImpl *>
{
};

/* 6442 */
struct std::_Vector_val<GDBSessionImpl *,std::allocator<GDBSessionImpl *> >
{
  std::allocator<GDBSessionImpl *> _Alval;
};

/* 6443 */
union $1FF840E501467E9F04627F1507035A38
{
  char Bint[32];
  int nLong;
  float nFloat;
  __int64 nInt64;
};

/* 6444 */
struct GDBSessionImpl::ParamData
{
  $1FF840E501467E9F04627F1507035A38 value;
};

/* 6445 */
struct GDBSessionImpl::ParamDataRef
{
  int ind;
  GDBSessionImpl::ParamData *m_ptr;
};

/* 6446 */
struct tagSQL_NUMERIC_STRUCT
{
  char precision;
  char scale;
  char sign;
  char val[16];
};

/* 6447 */
union GDBSessionImpl::ColData
{
  tagSQL_NUMERIC_STRUCT numeric;
};

/* 6448 */
struct GDBSessionImpl::ColDataRef
{
  int ind;
  GDBSessionImpl::ColData *m_ptr;
};

/* 6449 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >::_Node *>
{
};

/* 6450 */
struct __cppobj std::_Tree_ptr<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> > : std::_Tree_nod<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >::_Node *> _Alptr;
};

/* 6451 */
struct __cppobj std::_Tree_val<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >
{
  std::allocator<std::pair<__int64 const ,void *> > _Alval;
};

/* 6452 */
struct __cppobj std::_Tree<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> > : std::_Tree_val<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 6453 */
struct __cppobj std::map<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> > > : std::_Tree<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >
{
};

/* 6454 */
struct __cppobj GDBSessionImpl : GDBSession
{
  void *hstmt;
  void *hdbc;
  __int16 m_retcode;
  char errorMsg[256];
  int errorCode;
  int m_nDelayExecute;
  int m_nPutDataIndex;
  GDBSessionImpl::ParamDataRef m_param[128];
  GDBSessionImpl::ColDataRef m_Col[128];
  std::map<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> > > m_stmt;
};

/* 6455 */
struct __cppobj std::vector<GDBSessionImpl *,std::allocator<GDBSessionImpl *> > : std::_Vector_val<GDBSessionImpl *,std::allocator<GDBSessionImpl *> >
{
  GDBSessionImpl **_Myfirst;
  GDBSessionImpl **_Mylast;
  GDBSessionImpl **_Myend;
};

/* 6456 */
struct __cppobj std::iterator<std::random_access_iterator_tag,GDBSessionImpl *,int,GDBSessionImpl * const *,GDBSessionImpl * const &>
{
};

/* 6457 */
struct __cppobj std::_Ranit<GDBSessionImpl *,int,GDBSessionImpl * const *,GDBSessionImpl * const &> : std::iterator<std::random_access_iterator_tag,GDBSessionImpl *,int,GDBSessionImpl * const *,GDBSessionImpl * const &>
{
};

/* 6458 */
struct __cppobj std::vector<GDBSessionImpl *,std::allocator<GDBSessionImpl *> >::const_iterator : std::_Ranit<GDBSessionImpl *,int,GDBSessionImpl * const *,GDBSessionImpl * const &>
{
  GDBSessionImpl **_Myptr;
};

/* 6459 */
struct __cppobj std::vector<GDBSessionImpl *,std::allocator<GDBSessionImpl *> >::iterator : std::vector<GDBSessionImpl *,std::allocator<GDBSessionImpl *> >::const_iterator
{
};

/* 6460 */
struct __cppobj std::allocator<GDBSessionImpl *>::rebind<GDBSessionImpl *>
{
};

/* 6461 */
struct __declspec(align(8)) std::pair<__int64,void *>
{
  __int64 first;
  void *second;
};

/* 6462 */
struct __cppobj std::allocator<std::pair<__int64 const ,void *> >::rebind<std::pair<__int64 const ,void *> >
{
};

/* 6463 */
struct __cppobj std::allocator<std::pair<__int64 const ,void *> >::rebind<std::_Tree_nod<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >::_Node>
{
};

/* 6464 */
struct __cppobj std::allocator<std::pair<__int64 const ,void *> >::rebind<std::_Tree_nod<std::_Tmap_traits<__int64,void *,std::less<__int64>,std::allocator<std::pair<__int64 const ,void *> >,0> >::_Node *>
{
};

/* 6465 */
struct __cppobj std::allocator<std::pair<__int64 const ,void *> >::rebind<__int64>
{
};

/* 6466 */
struct __cppobj std::allocator<std::pair<__int64 const ,void *> >::rebind<char>
{
};

/* 6467 */
struct GDBCImpl::Monitor
{
  _RTL_CRITICAL_SECTION m_cs;
};

/* 6468 */
struct GDBCImpl::Lock
{
  GDBCImpl::Monitor *monitor;
};

/* 6469 */
struct __cppobj GDBCImpl : GDBC
{
  void *henv;
  char m_DbName[128];
  char m_DbUser[128];
  char m_DbPass[128];
  void (__cdecl *m_InitSession)(GDBSession *);
  int m_UseCount;
  int m_UseTxnCount;
  GDBCImpl::Monitor m_monitor;
  std::vector<GDBSessionImpl *,std::allocator<GDBSessionImpl *> > m_sessionPool;
  GDBCImpl::Monitor m_txnMonitor;
  std::vector<GDBSessionImpl *,std::allocator<GDBSessionImpl *> > m_txnSessionPool;
};

/* 6470 */
struct LockMessageBuffer<BS_PktClientAuth>
{
  BS_PktClientAuth *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6471 */
struct LockMessageBuffer<BS_PktMyTeamInfoAck>
{
  BS_PktMyTeamInfoAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6472 */
struct __cppobj std::_Allocator_base<MapUnit>
{
};

/* 6473 */
struct __cppobj std::allocator<MapUnit> : std::_Allocator_base<MapUnit>
{
};

/* 6474 */
struct std::_Vector_val<MapUnit,std::allocator<MapUnit> >
{
  std::allocator<MapUnit> _Alval;
};

/* 6475 */
struct MapUnit
{
  BS_AreaDispatch *m_ptr;
};

/* 6476 */
struct __cppobj std::vector<MapUnit,std::allocator<MapUnit> > : std::_Vector_val<MapUnit,std::allocator<MapUnit> >
{
  MapUnit *_Myfirst;
  MapUnit *_Mylast;
  MapUnit *_Myend;
};

/* 6477 */
struct __cppobj std::iterator<std::random_access_iterator_tag,MapUnit,int,MapUnit const *,MapUnit const &>
{
};

/* 6478 */
struct __cppobj std::_Ranit<MapUnit,int,MapUnit const *,MapUnit const &> : std::iterator<std::random_access_iterator_tag,MapUnit,int,MapUnit const *,MapUnit const &>
{
};

/* 6479 */
struct __cppobj std::vector<MapUnit,std::allocator<MapUnit> >::const_iterator : std::_Ranit<MapUnit,int,MapUnit const *,MapUnit const &>
{
  MapUnit *_Myptr;
};

/* 6480 */
struct __cppobj std::vector<MapUnit,std::allocator<MapUnit> >::iterator : std::vector<MapUnit,std::allocator<MapUnit> >::const_iterator
{
};

/* 6481 */
struct __cppobj std::allocator<MapUnit>::rebind<MapUnit>
{
};

/* 6482 */
struct __cppobj BS_GameStreamOut : BS_Out
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > m_Buffer;
  BS_GameDispatch *m_pDispatch;
};

/* 6483 */
struct __cppobj ExtAuth
{
};

/* 6484 */
struct __cppobj __unaligned __declspec(align(2)) tARTP_HEADER : tARTP_PKT_SIZE
{
  char m_hdrProtocolType;
  unsigned __int16 m_hdrProtoSetNo;
  unsigned __int16 m_hdrPacketIndex;
  unsigned __int16 m_hdrPacketSubIndex;
  char m_hdrIsEncoded;
  __int64 m_hdrTime;
};

/* 6485 */
struct __cppobj SimpleParam : Param
{
  int m_code;
  int m_result;
  int m_detailCode;
};

/* 6486 */
struct LockMessageBuffer<BS_PktGetTeamMarkAck>
{
  BS_PktGetTeamMarkAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6487 */
struct LockMessageBuffer<BS_PktTeamMembersAck>
{
  BS_PktTeamMembersAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6488 */
struct LockMessageBuffer<BS_PktCharTeamInfoAck>
{
  BS_PktCharTeamInfoAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6489 */
struct LockMessageBuffer<BS_PktDelegateTeamMasterAck>
{
  BS_PktDelegateTeamMasterAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6490 */
struct LockMessageBuffer<BS_PktGLNotifyChangeMaster>
{
  BS_PktGLNotifyChangeMaster *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6491 */
struct LockMessageBuffer<BS_PktAssignTeamRankAck>
{
  BS_PktAssignTeamRankAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6492 */
struct LockMessageBuffer<BS_PktLeaveTeamAck>
{
  BS_PktLeaveTeamAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6493 */
struct LockMessageBuffer<BS_PktJoinTeamAck>
{
  BS_PktJoinTeamAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6494 */
struct LockMessageBuffer<BS_PktSetTeamUrlAck>
{
  BS_PktSetTeamUrlAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6495 */
struct LockMessageBuffer<BS_PktCheckTeamUrlAck>
{
  BS_PktCheckTeamUrlAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6496 */
struct LockMessageBuffer<BS_PktCheckTeamNameAck>
{
  BS_PktCheckTeamNameAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6497 */
struct LockMessageBuffer<BS_PktCancelCloseTeamAck>
{
  BS_PktCancelCloseTeamAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6498 */
struct LockMessageBuffer<BS_PktCloseTeamAck>
{
  BS_PktCloseTeamAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6499 */
struct LockMessageBuffer<BS_PktCreateTeamAck>
{
  BS_PktCreateTeamAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6500 */
struct std::pair<unsigned long,XiVShop::ITEM_INFO>
{
  unsigned int first;
  __declspec(align(8)) XiVShop::ITEM_INFO second;
};

/* 6501 */
struct __cppobj std::_Allocator_base<std::_List_nod<XiCsItem *,std::allocator<XiCsItem *> >::_Node>
{
};

/* 6502 */
struct __cppobj std::allocator<std::_List_nod<XiCsItem *,std::allocator<XiCsItem *> >::_Node> : std::_Allocator_base<std::_List_nod<XiCsItem *,std::allocator<XiCsItem *> >::_Node>
{
};

/* 6503 */
struct std::_List_nod<XiCsItem *,std::allocator<XiCsItem *> >
{
  std::allocator<std::_List_nod<XiCsItem *,std::allocator<XiCsItem *> >::_Node> _Alnod;
};

/* 6504 */
struct __cppobj std::_Allocator_base<std::_List_nod<XiCsItem *,std::allocator<XiCsItem *> >::_Node *>
{
};

/* 6505 */
struct __cppobj std::allocator<std::_List_nod<XiCsItem *,std::allocator<XiCsItem *> >::_Node *> : std::_Allocator_base<std::_List_nod<XiCsItem *,std::allocator<XiCsItem *> >::_Node *>
{
};

/* 6506 */
struct __cppobj std::_List_ptr<XiCsItem *,std::allocator<XiCsItem *> > : std::_List_nod<XiCsItem *,std::allocator<XiCsItem *> >
{
  std::allocator<std::_List_nod<XiCsItem *,std::allocator<XiCsItem *> >::_Node *> _Alptr;
};

/* 6507 */
struct __cppobj std::_List_val<XiCsItem *,std::allocator<XiCsItem *> > : std::_List_ptr<XiCsItem *,std::allocator<XiCsItem *> >
{
  std::allocator<XiCsItem *> _Alval;
};

/* 6508 */
struct std::_List_nod<XiCsItem *,std::allocator<XiCsItem *> >::_Node
{
  std::_List_nod<XiCsItem *,std::allocator<XiCsItem *> >::_Node *_Next;
  std::_List_nod<XiCsItem *,std::allocator<XiCsItem *> >::_Node *_Prev;
  XiCsItem *_Myval;
};

/* 6509 */
struct __cppobj std::list<XiCsItem *,std::allocator<XiCsItem *> > : std::_List_val<XiCsItem *,std::allocator<XiCsItem *> >
{
  std::_List_nod<XiCsItem *,std::allocator<XiCsItem *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 6510 */
struct __cppobj XiCsItemPool : std::list<XiCsItem *,std::allocator<XiCsItem *> >
{
  BS_CriticalSection m_lock;
  unsigned int m_Size;
};

/* 6511 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,XiCsItem *,int,XiCsItem * const *,XiCsItem * const &>
{
};

/* 6512 */
struct __cppobj std::_Bidit<XiCsItem *,int,XiCsItem * const *,XiCsItem * const &> : std::iterator<std::bidirectional_iterator_tag,XiCsItem *,int,XiCsItem * const *,XiCsItem * const &>
{
};

/* 6513 */
struct __cppobj std::list<XiCsItem *,std::allocator<XiCsItem *> >::const_iterator : std::_Bidit<XiCsItem *,int,XiCsItem * const *,XiCsItem * const &>
{
  std::_List_nod<XiCsItem *,std::allocator<XiCsItem *> >::_Node *_Ptr;
};

/* 6514 */
struct __cppobj std::list<XiCsItem *,std::allocator<XiCsItem *> >::iterator : std::list<XiCsItem *,std::allocator<XiCsItem *> >::const_iterator
{
};

/* 6515 */
struct __cppobj std::allocator<XiCsItem *>::rebind<std::_List_nod<XiCsItem *,std::allocator<XiCsItem *> >::_Node>
{
};

/* 6516 */
struct __cppobj std::allocator<XiCsItem *>::rebind<std::_List_nod<XiCsItem *,std::allocator<XiCsItem *> >::_Node *>
{
};

/* 6517 */
struct __cppobj BS_GMGroup : BS_LuaBind
{
};

/* 6518 */
struct __cppobj BS_GMDispatch : BS_PacketDispatch
{
  BS_Stream *m_pStream;
};

/* 6519 */
struct std::pair<std::vector<XiAuctionCar *,std::allocator<XiAuctionCar *> >::iterator,std::vector<XiAuctionCar *,std::allocator<XiAuctionCar *> >::iterator>
{
  std::vector<XiAuctionCar *,std::allocator<XiAuctionCar *> >::iterator first;
  std::vector<XiAuctionCar *,std::allocator<XiAuctionCar *> >::iterator second;
};

/* 6520 */
struct std::money_base::pattern
{
  char field[4];
};

/* 6521 */
struct __cppobj std::money_base : std::locale::facet
{
};

/* 6522 */
struct std::pair<unsigned long,XiAuctionItem *>
{
  unsigned int first;
  XiAuctionItem *second;
};

/* 6523 */
struct std::pair<unsigned long,XiAuctionCar *>
{
  unsigned int first;
  XiAuctionCar *second;
};

/* 6524 */
struct __cppobj std::messages_base : std::locale::facet
{
};

/* 6525 */
struct __cppobj std::time_base : std::locale::facet
{
};

/* 6526 */
struct std::pair<std::vector<XiAuctionItem *,std::allocator<XiAuctionItem *> >::iterator,std::vector<XiAuctionItem *,std::allocator<XiAuctionItem *> >::iterator>
{
  std::vector<XiAuctionItem *,std::allocator<XiAuctionItem *> >::iterator first;
  std::vector<XiAuctionItem *,std::allocator<XiAuctionItem *> >::iterator second;
};

/* 6527 */
struct __cppobj std::_Allocator_base<XiStrSimpleCharInfo>
{
};

/* 6528 */
struct __cppobj std::allocator<XiStrSimpleCharInfo> : std::_Allocator_base<XiStrSimpleCharInfo>
{
};

/* 6529 */
struct std::_Vector_val<XiStrSimpleCharInfo,std::allocator<XiStrSimpleCharInfo> >
{
  std::allocator<XiStrSimpleCharInfo> _Alval;
};

/* 6530 */
struct __cppobj std::vector<XiStrSimpleCharInfo,std::allocator<XiStrSimpleCharInfo> > : std::_Vector_val<XiStrSimpleCharInfo,std::allocator<XiStrSimpleCharInfo> >
{
  XiStrSimpleCharInfo *_Myfirst;
  XiStrSimpleCharInfo *_Mylast;
  XiStrSimpleCharInfo *_Myend;
};

/* 6531 */
struct __cppobj InviteeIterate : std::vector<XiStrSimpleCharInfo,std::allocator<XiStrSimpleCharInfo> >
{
  int m_Page;
  int m_Cnt;
  BS_GameDispatch *m_pGameDispatch;
};

/* 6532 */
struct auto_lock<BS_Room>
{
  BS_Room *Lock;
};

/* 6533 */
struct BestRoomFinder
{
  int m_RoomId[3];
  int m_RoomFilter;
};

/* 6534 */
struct LapTimeInfo
{
  int nLevelUpperBound;
  int nExp;
  int nMoney;
  int cityMap[4];
};

/* 6535 */
struct __cppobj std::iterator<std::random_access_iterator_tag,LapTimeInfo,int,LapTimeInfo const *,LapTimeInfo const &>
{
};

/* 6536 */
struct __cppobj std::_Allocator_base<LapTimeInfo>
{
};

/* 6537 */
struct __cppobj std::allocator<LapTimeInfo> : std::_Allocator_base<LapTimeInfo>
{
};

/* 6538 */
struct std::_Vector_val<LapTimeInfo,std::allocator<LapTimeInfo> >
{
  std::allocator<LapTimeInfo> _Alval;
};

/* 6539 */
struct __cppobj std::vector<LapTimeInfo,std::allocator<LapTimeInfo> > : std::_Vector_val<LapTimeInfo,std::allocator<LapTimeInfo> >
{
  LapTimeInfo *_Myfirst;
  LapTimeInfo *_Mylast;
  LapTimeInfo *_Myend;
};

/* 6540 */
struct __cppobj std::_Ranit<LapTimeInfo,int,LapTimeInfo const *,LapTimeInfo const &> : std::iterator<std::random_access_iterator_tag,LapTimeInfo,int,LapTimeInfo const *,LapTimeInfo const &>
{
};

/* 6541 */
struct __cppobj std::vector<LapTimeInfo,std::allocator<LapTimeInfo> >::const_iterator : std::_Ranit<LapTimeInfo,int,LapTimeInfo const *,LapTimeInfo const &>
{
  LapTimeInfo *_Myptr;
};

/* 6542 */
struct __cppobj std::vector<LapTimeInfo,std::allocator<LapTimeInfo> >::iterator : std::vector<LapTimeInfo,std::allocator<LapTimeInfo> >::const_iterator
{
};

/* 6543 */
struct __cppobj std::allocator<XiStrSimpleCharInfo>::rebind<XiStrSimpleCharInfo>
{
};

/* 6544 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiStrSimpleCharInfo,int,XiStrSimpleCharInfo const *,XiStrSimpleCharInfo const &>
{
};

/* 6545 */
struct __cppobj std::_Ranit<XiStrSimpleCharInfo,int,XiStrSimpleCharInfo const *,XiStrSimpleCharInfo const &> : std::iterator<std::random_access_iterator_tag,XiStrSimpleCharInfo,int,XiStrSimpleCharInfo const *,XiStrSimpleCharInfo const &>
{
};

/* 6546 */
struct __cppobj std::vector<XiStrSimpleCharInfo,std::allocator<XiStrSimpleCharInfo> >::const_iterator : std::_Ranit<XiStrSimpleCharInfo,int,XiStrSimpleCharInfo const *,XiStrSimpleCharInfo const &>
{
  XiStrSimpleCharInfo *_Myptr;
};

/* 6547 */
struct __cppobj std::vector<XiStrSimpleCharInfo,std::allocator<XiStrSimpleCharInfo> >::iterator : std::vector<XiStrSimpleCharInfo,std::allocator<XiStrSimpleCharInfo> >::const_iterator
{
};

/* 6548 */
struct __cppobj std::allocator<LapTimeInfo>::rebind<LapTimeInfo>
{
};

/* 6549 */
struct LapTimeTable
{
  std::vector<LapTimeInfo,std::allocator<LapTimeInfo> > m_laptime;
};

/* 6550 */
struct LockMessageBuffer<BS_PktInviteeListAck>
{
  BS_PktInviteeListAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6551 */
struct __cppobj BS_CmdOverlapped : BS_Overlapped
{
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > m_CmdStr;
  std::basic_ostream<unsigned short,std::char_traits<unsigned short> > *m_pStream;
};

/* 6552 */
struct __cppobj BS_GMOverlapped : BS_Overlapped
{
  BS_PacketDispatch *m_pDispatch;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > m_CmdStr;
  std::basic_ostream<unsigned short,std::char_traits<unsigned short> > *m_pStream;
};

/* 6553 */
struct LockMessageBuffer<BS_PktMoveVehicleSimpl>
{
  BS_PktMoveVehicleSimpl *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6554 */
struct LockMessageBuffer<BS_PktMoveVehicleExt>
{
  BS_PktMoveVehicleExt *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6555 */
struct AtomicList<BS_Vehicle>
{
  BS_Vehicle *aHead;
};

/* 6556 */
struct __cppobj AtomicLine<BS_Vehicle> : AtomicList<BS_Vehicle>
{
  char buff[1024];
};

/* 6557 */
struct AtomicPool<BS_Vehicle,32,16>
{
  volatile int m_nCount;
  volatile int m_Index;
  AtomicLine<BS_Vehicle> subList[16];
};

/* 6558 */
struct BS_VehicleMgr
{
  BS_Vehicle m_VehiclesBuff[30000];
  AtomicPool<BS_Vehicle,32,16> m_Vehicles;
};

/* 6559 */
struct PcBangItemInfo
{
  wchar_t Name[255];
  wchar_t Param[255];
};

/* 6560 */
struct __cppobj BS_DevGroup : BS_LuaBind
{
};

/* 6561 */
struct MyItemList
{
  BS_Stream *Stream;
  int EndLineCnt;
};

/* 6562 */
struct __cppobj BS_LuaIOGroup : BS_LuaBind
{
};

/* 6563 */
struct XiUserConnTable::Value
{
  XiStrUserInfo *UserInfo;
  BS_LobbyDispatch *LobbyDispatch;
};

/* 6564 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> const &>
{
};

/* 6565 */
struct __cppobj std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> const &>
{
};

/* 6566 */
struct std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::_Node
{
  std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::_Node *_Next;
  std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::_Node *_Prev;
  std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> _Myval;
};

/* 6567 */
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > first;
  XiUserConnTable::Value second;
};

/* 6568 */
struct __cppobj std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::const_iterator : std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> const &>
{
  std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::_Node *_Ptr;
};

/* 6569 */
struct __cppobj std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator : std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::const_iterator
{
};

/* 6570 */
struct __cppobj std::_Allocator_base<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator>
{
};

/* 6571 */
struct __cppobj std::_Allocator_base<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::_Node>
{
};

/* 6572 */
struct __cppobj std::_Allocator_base<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::_Node *>
{
};

/* 6573 */
struct __cppobj std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator> : std::_Allocator_base<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator>
{
};

/* 6574 */
struct __cppobj std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator>::rebind<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator>
{
};

/* 6575 */
struct __cppobj std::allocator<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::_Node> : std::_Allocator_base<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::_Node>
{
};

/* 6576 */
struct std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >
{
  std::allocator<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::_Node> _Alnod;
};

/* 6577 */
struct __cppobj std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> >
{
};

/* 6578 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > : std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> >
{
};

/* 6579 */
struct __cppobj std::allocator<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::_Node *> : std::_Allocator_base<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::_Node *>
{
};

/* 6580 */
struct __cppobj std::_List_ptr<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > > : std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >
{
  std::allocator<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::_Node *> _Alptr;
};

/* 6581 */
struct __cppobj std::_List_val<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > > : std::_List_ptr<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >
{
  std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > _Alval;
};

/* 6582 */
struct std::_Vector_val<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator> >
{
  std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator> _Alval;
};

/* 6583 */
struct __cppobj std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > > : std::_List_val<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >
{
  std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 6584 */
struct __cppobj std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator> > : std::_Vector_val<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator> >
{
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator *_Myfirst;
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator *_Mylast;
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator *_Myend;
};

/* 6585 */
struct __cppobj std::iterator<std::random_access_iterator_tag,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator,int,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator const *,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator const &>
{
};

/* 6586 */
struct __cppobj std::_Ranit<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator,int,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator const *,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator const &> : std::iterator<std::random_access_iterator_tag,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator,int,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator const *,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator const &>
{
};

/* 6587 */
struct __cppobj std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator> >::const_iterator : std::_Ranit<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator,int,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator const *,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator const &>
{
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator *_Myptr;
};

/* 6588 */
struct __cppobj std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator> >::iterator : std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator> >::const_iterator
{
};

/* 6589 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> >::rebind<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> >
{
};

/* 6590 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> >::rebind<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::_Node>
{
};

/* 6591 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> >::rebind<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::_Node *>
{
};

/* 6592 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> >::rebind<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator>
{
};

/* 6593 */
struct stdext::_Hmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,XiUserConnTable::Value,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> >,0>
{
  stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > comp;
};

/* 6594 */
struct __cppobj stdext::_Hash<stdext::_Hmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,XiUserConnTable::Value,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> >,0> > : stdext::_Hmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,XiUserConnTable::Value,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> >,0>
{
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > > _List;
  std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator> > _Vec;
  unsigned int _Mask;
  unsigned int _Maxidx;
};

/* 6595 */
struct __declspec(align(4)) std::pair<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator,bool>
{
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > >::iterator first;
  bool second;
};

/* 6596 */
struct __cppobj stdext::hash_map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,XiUserConnTable::Value,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > > : stdext::_Hash<stdext::_Hmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,XiUserConnTable::Value,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> >,0> >
{
};

/* 6597 */
struct __cppobj BS_SingletonHeap<XiUserConnTable,2>
{
};

/* 6598 */
struct __cppobj XiUserConnTable : BS_SingletonHeap<XiUserConnTable,2>
{
  BS_CriticalSection m_TableLock;
  stdext::hash_map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,XiUserConnTable::Value,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,XiUserConnTable::Value> > > m_UserInfoList;
};

/* 6599 */
struct __cppobj __declspec(align(4)) SelfMonitor : BS_Thread
{
  volatile bool m_bStop;
};

/* 6600 */
struct __cppobj XiPulseThread : BS_Thread
{
  bool m_bEnd;
  int m_PulseTime;
};

/* 6601 */
struct BS_StrUtils::BS_FmtStr<128>
{
  wchar_t *m_pBuffer;
  int m_BufferLen;
};

/* 6602 */
struct __cppobj apDebugSinkDbgout : apDebugSinkConsole
{
};

/* 6603 */
struct __cppobj apDebugSinkWindows : apDebugSinkConsole
{
};

/* 6604 */
struct LockMessageBuffer<BS_PktLapTimeStart>
{
  BS_PktLapTimeStart *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6605 */
struct LockMessageBuffer<BS_PktLapTimeRecord>
{
  BS_PktLapTimeRecord *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6606 */
struct LockMessageBuffer<BS_PktRoomMaster>
{
  BS_PktRoomMaster *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6607 */
struct LockMessageBuffer<BS_PktPvpLoad>
{
  BS_PktPvpLoad *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6608 */
struct LockMessageBuffer<BS_PktLapTimeLoad>
{
  BS_PktLapTimeLoad *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6609 */
struct LockMessageBuffer<BS_PktRoomCreateAck>
{
  BS_PktRoomCreateAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6610 */
struct __cppobj LapTimeOrder
{
};

/* 6611 */
struct __cppobj RankOrder
{
};

/* 6612 */
struct LockMessageBuffer<BS_PktPvpSubResult>
{
  BS_PktPvpSubResult *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6613 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_AreaId *,std::allocator<BS_AreaId *> >::_Node>
{
};

/* 6614 */
struct __cppobj std::allocator<std::_List_nod<BS_AreaId *,std::allocator<BS_AreaId *> >::_Node> : std::_Allocator_base<std::_List_nod<BS_AreaId *,std::allocator<BS_AreaId *> >::_Node>
{
};

/* 6615 */
struct std::_List_nod<BS_AreaId *,std::allocator<BS_AreaId *> >
{
  std::allocator<std::_List_nod<BS_AreaId *,std::allocator<BS_AreaId *> >::_Node> _Alnod;
};

/* 6616 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_AreaId *,std::allocator<BS_AreaId *> >::_Node *>
{
};

/* 6617 */
struct __cppobj std::allocator<std::_List_nod<BS_AreaId *,std::allocator<BS_AreaId *> >::_Node *> : std::_Allocator_base<std::_List_nod<BS_AreaId *,std::allocator<BS_AreaId *> >::_Node *>
{
};

/* 6618 */
struct __cppobj std::_List_ptr<BS_AreaId *,std::allocator<BS_AreaId *> > : std::_List_nod<BS_AreaId *,std::allocator<BS_AreaId *> >
{
  std::allocator<std::_List_nod<BS_AreaId *,std::allocator<BS_AreaId *> >::_Node *> _Alptr;
};

/* 6619 */
struct __cppobj std::_Allocator_base<BS_AreaId *>
{
};

/* 6620 */
struct __cppobj std::allocator<BS_AreaId *> : std::_Allocator_base<BS_AreaId *>
{
};

/* 6621 */
struct __cppobj std::_List_val<BS_AreaId *,std::allocator<BS_AreaId *> > : std::_List_ptr<BS_AreaId *,std::allocator<BS_AreaId *> >
{
  std::allocator<BS_AreaId *> _Alval;
};

/* 6622 */
struct std::_List_nod<BS_AreaId *,std::allocator<BS_AreaId *> >::_Node
{
  std::_List_nod<BS_AreaId *,std::allocator<BS_AreaId *> >::_Node *_Next;
  std::_List_nod<BS_AreaId *,std::allocator<BS_AreaId *> >::_Node *_Prev;
  BS_AreaId *_Myval;
};

/* 6623 */
struct __cppobj std::list<BS_AreaId *,std::allocator<BS_AreaId *> > : std::_List_val<BS_AreaId *,std::allocator<BS_AreaId *> >
{
  std::_List_nod<BS_AreaId *,std::allocator<BS_AreaId *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 6624 */
struct BS_AreaIdPool
{
  int m_size;
  BS_AreaId *m_areaid;
  std::list<BS_AreaId *,std::allocator<BS_AreaId *> > m_list;
  BS_CriticalSection m_lock;
};

/* 6625 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,BS_AreaId *,int,BS_AreaId * const *,BS_AreaId * const &>
{
};

/* 6626 */
struct __cppobj std::_Bidit<BS_AreaId *,int,BS_AreaId * const *,BS_AreaId * const &> : std::iterator<std::bidirectional_iterator_tag,BS_AreaId *,int,BS_AreaId * const *,BS_AreaId * const &>
{
};

/* 6627 */
struct __cppobj std::allocator<BS_AreaId *>::rebind<std::_List_nod<BS_AreaId *,std::allocator<BS_AreaId *> >::_Node>
{
};

/* 6628 */
struct __cppobj std::allocator<BS_AreaId *>::rebind<std::_List_nod<BS_AreaId *,std::allocator<BS_AreaId *> >::_Node *>
{
};

/* 6629 */
struct __cppobj std::allocator<BS_AreaId *>::rebind<BS_AreaId *>
{
};

/* 6630 */
struct __cppobj std::list<BS_AreaId *,std::allocator<BS_AreaId *> >::const_iterator : std::_Bidit<BS_AreaId *,int,BS_AreaId * const *,BS_AreaId * const &>
{
  std::_List_nod<BS_AreaId *,std::allocator<BS_AreaId *> >::_Node *_Ptr;
};

/* 6631 */
struct __cppobj std::list<BS_AreaId *,std::allocator<BS_AreaId *> >::iterator : std::list<BS_AreaId *,std::allocator<BS_AreaId *> >::const_iterator
{
};

/* 6632 */
struct std::pair<std::vector<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator,std::vector<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator>
{
  std::vector<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator first;
  std::vector<BS_GameDispatch *,std::allocator<BS_GameDispatch *> >::iterator second;
};

/* 6633 */
struct __cppobj BS_Functors::fnDelete
{
};

/* 6634 */
struct LockMessageBuffer<BS_PktGMStatusAck>
{
  BS_PktGMStatusAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6635 */
struct LockMessageBuffer<BS_PktGMNoticeAck>
{
  BS_PktGMNoticeAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6636 */
struct LockMessageBuffer<BS_PktGMBlockAck>
{
  BS_PktGMBlockAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6637 */
struct LockMessageBuffer<BS_PktGMKickAck>
{
  BS_PktGMKickAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6638 */
struct LockMessageBuffer<BS_PktGMCmdAck>
{
  BS_PktGMCmdAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6639 */
struct std::pair<unsigned short *,unsigned long>
{
  wchar_t *first;
  unsigned int second;
};

/* 6640 */
struct std::pair<unsigned long,XiStrIcon>
{
  unsigned int first;
  XiStrIcon second;
};

/* 6641 */
struct __cppobj BS_AcceptOverlappedForIOCP : BS_OverlappedPendding
{
  BS_CompletionHandler *const m_pIOCP;
  BS_Session *m_pSession;
  BS_Listener *m_pListener;
};

/* 6642 */
struct __cppobj BS_SingletonHeap<BS_SystemInfo,5>
{
};

/* 6643 */
struct __cppobj BS_SystemInfo : BS_SingletonHeap<BS_SystemInfo,5>
{
  _SYSTEM_INFO m_SystemInfo;
  _OSVERSIONINFOW m_OSVerInfo;
};

/* 6644 */
struct __declspec(align(2)) REQUEST_USECOIN
{
  int nPayment;
  char szUserKey[21];
  char szCPID[11];
  char szItemID[21];
  char szTitle[31];
  char szMemo[31];
  char szManagerID[17];
  char szVIP_FG[17];
  char szSUBS_FG[17];
  char szSettleStartDate[9];
  char szSettleEndDate[9];
  char szRemoteIP[17];
  char szServiceINF[17];
  char szSettlerCountDate[9];
};

/* 6645 */
struct __declspec(align(4)) RESULT_USECOIN
{
  int nRtnCode;
  char szRtnMsg[201];
};

/* 6646 */
struct RESULT_QUERYCOIN
{
  int lCoin;
  int lGiftCoin;
  int lExEvntCoin;
  int lInEvntCoin;
};

/* 6647 */
struct RESULT_MULTI_USECOIN
{
  int nRtnCode;
  char *pRtnMsgBuff;
  int nRtnMsgBuffLen;
};

/* 6648 */
struct __cppobj std::_Allocator_base<BS_Pool *>
{
};

/* 6649 */
struct __cppobj std::allocator<BS_Pool *> : std::_Allocator_base<BS_Pool *>
{
};

/* 6650 */
struct std::_Vector_val<BS_Pool *,std::allocator<BS_Pool *> >
{
  std::allocator<BS_Pool *> _Alval;
};

/* 6651 */
struct __cppobj std::vector<BS_Pool *,std::allocator<BS_Pool *> > : std::_Vector_val<BS_Pool *,std::allocator<BS_Pool *> >
{
  BS_Pool **_Myfirst;
  BS_Pool **_Mylast;
  BS_Pool **_Myend;
};

/* 6652 */
struct __cppobj std::iterator<std::random_access_iterator_tag,BS_Pool *,int,BS_Pool * const *,BS_Pool * const &>
{
};

/* 6653 */
struct __cppobj std::_Ranit<BS_Pool *,int,BS_Pool * const *,BS_Pool * const &> : std::iterator<std::random_access_iterator_tag,BS_Pool *,int,BS_Pool * const *,BS_Pool * const &>
{
};

/* 6654 */
struct __cppobj std::vector<BS_Pool *,std::allocator<BS_Pool *> >::const_iterator : std::_Ranit<BS_Pool *,int,BS_Pool * const *,BS_Pool * const &>
{
  BS_Pool **_Myptr;
};

/* 6655 */
struct __cppobj std::vector<BS_Pool *,std::allocator<BS_Pool *> >::iterator : std::vector<BS_Pool *,std::allocator<BS_Pool *> >::const_iterator
{
};

/* 6656 */
struct __cppobj std::allocator<BS_Pool *>::rebind<BS_Pool *>
{
};

/* 6657 */
struct std::pair<unsigned short const *,BS_Pool *>
{
  const wchar_t *first;
  BS_Pool *second;
};

/* 6658 */
struct std::pair<unsigned long,XiStrArbeit>
{
  unsigned int first;
  XiStrArbeit second;
};

/* 6659 */
struct __cppobj BS_NetOut : BS_Out
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > m_Buffer;
  unsigned int m_hSocket;
  unsigned int m_CodePage;
};

/* 6660 */
struct __cppobj std::_Allocator_base<std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
{
};

/* 6661 */
struct __cppobj std::allocator<std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > : std::_Allocator_base<std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
{
};

/* 6662 */
struct std::_Vector_val<std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
{
  std::allocator<std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > _Alval;
};

/* 6663 */
struct std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
{
  float first;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > second;
};

/* 6664 */
struct __cppobj std::vector<std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > : std::_Vector_val<std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
{
  std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > *_Myfirst;
  std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > *_Mylast;
  std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > *_Myend;
};

/* 6665 */
struct __cppobj std::iterator<std::random_access_iterator_tag,std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,int,std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > const *,std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > const &>
{
};

/* 6666 */
struct __cppobj std::_Ranit<std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,int,std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > const *,std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > const &> : std::iterator<std::random_access_iterator_tag,std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,int,std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > const *,std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > const &>
{
};

/* 6667 */
struct __cppobj std::vector<std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::const_iterator : std::_Ranit<std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,int,std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > const *,std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > const &>
{
  std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > *_Myptr;
};

/* 6668 */
struct __cppobj std::vector<std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::iterator : std::vector<std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >,std::allocator<std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::const_iterator
{
};

/* 6669 */
struct LockMessageBuffer<BS_PktHuvResult>
{
  BS_PktHuvResult *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6670 */
struct LockMessageBuffer<BS_PktHuvHealth>
{
  BS_PktHuvHealth *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6671 */
struct AtomicList<BS_Party>
{
  BS_Party *aHead;
};

/* 6672 */
struct __cppobj AtomicLine<BS_Party> : AtomicList<BS_Party>
{
  char buff[1024];
};

/* 6673 */
struct AtomicPool<BS_Party,32,16>
{
  volatile int m_nCount;
  volatile int m_Index;
  AtomicLine<BS_Party> subList[16];
};

/* 6674 */
struct BS_PartyMgr
{
  BS_Party m_Party[20000];
  AtomicPool<BS_Party,32,16> m_pool;
};

/* 6675 */
struct __cppobj std::allocator<std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::rebind<std::pair<float,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
{
};

/* 6676 */
struct std::pair<BS_PktUnderCityResult::ResultUnit *,BS_PktUnderCityResult::ResultUnit *>
{
  BS_PktUnderCityResult::ResultUnit *first;
  BS_PktUnderCityResult::ResultUnit *second;
};

/* 6677 */
struct UCRank
{
  BS_GameDispatch *Dispatch;
  float fPoint;
};

/* 6678 */
struct __cppobj UnderCityResultCmd
{
};

/* 6679 */
struct LockMessageBuffer<BS_PktUCBossPatrolResult>
{
  BS_PktUCBossPatrolResult *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6680 */
struct LockMessageBuffer<BS_PktUCPatrolResult>
{
  BS_PktUCPatrolResult *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6681 */
struct std::pair<unsigned long,XiStrItem>
{
  unsigned int first;
  XiStrItem second;
};

/* 6682 */
struct __cppobj std::iterator<std::random_access_iterator_tag,BS_Packet *,int,BS_Packet * const *,BS_Packet * const &>
{
};

/* 6683 */
struct __cppobj std::_Ranit<BS_Packet *,int,BS_Packet * const *,BS_Packet * const &> : std::iterator<std::random_access_iterator_tag,BS_Packet *,int,BS_Packet * const *,BS_Packet * const &>
{
};

/* 6684 */
struct __cppobj std::deque<BS_Packet *,std::allocator<BS_Packet *> >::const_iterator : std::_Ranit<BS_Packet *,int,BS_Packet * const *,BS_Packet * const &>
{
  std::deque<BS_Packet *,std::allocator<BS_Packet *> > *_Mycont;
  unsigned int _Myoff;
};

/* 6685 */
struct __cppobj std::deque<BS_Packet *,std::allocator<BS_Packet *> >::iterator : std::deque<BS_Packet *,std::allocator<BS_Packet *> >::const_iterator
{
};

/* 6686 */
struct __cppobj std::allocator<BS_Packet *>::rebind<BS_Packet *>
{
};

/* 6687 */
struct __cppobj std::allocator<BS_Packet *>::rebind<BS_Packet * *>
{
};

/* 6688 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,WebCallReq *,int,WebCallReq * const *,WebCallReq * const &>
{
};

/* 6689 */
struct __cppobj std::_Allocator_base<std::_List_nod<WebCallReq *,std::allocator<WebCallReq *> >::_Node>
{
};

/* 6690 */
struct __cppobj std::allocator<std::_List_nod<WebCallReq *,std::allocator<WebCallReq *> >::_Node> : std::_Allocator_base<std::_List_nod<WebCallReq *,std::allocator<WebCallReq *> >::_Node>
{
};

/* 6691 */
struct std::_List_nod<WebCallReq *,std::allocator<WebCallReq *> >
{
  std::allocator<std::_List_nod<WebCallReq *,std::allocator<WebCallReq *> >::_Node> _Alnod;
};

/* 6692 */
struct std::_List_nod<WebCallReq *,std::allocator<WebCallReq *> >::_Node
{
  std::_List_nod<WebCallReq *,std::allocator<WebCallReq *> >::_Node *_Next;
  std::_List_nod<WebCallReq *,std::allocator<WebCallReq *> >::_Node *_Prev;
  WebCallReq *_Myval;
};

/* 6693 */
struct __cppobj std::_Allocator_base<std::_List_nod<WebCallReq *,std::allocator<WebCallReq *> >::_Node *>
{
};

/* 6694 */
struct __cppobj std::allocator<std::_List_nod<WebCallReq *,std::allocator<WebCallReq *> >::_Node *> : std::_Allocator_base<std::_List_nod<WebCallReq *,std::allocator<WebCallReq *> >::_Node *>
{
};

/* 6695 */
struct __cppobj std::_List_ptr<WebCallReq *,std::allocator<WebCallReq *> > : std::_List_nod<WebCallReq *,std::allocator<WebCallReq *> >
{
  std::allocator<std::_List_nod<WebCallReq *,std::allocator<WebCallReq *> >::_Node *> _Alptr;
};

/* 6696 */
struct __cppobj std::_Allocator_base<WebCallReq *>
{
};

/* 6697 */
struct __cppobj std::allocator<WebCallReq *> : std::_Allocator_base<WebCallReq *>
{
};

/* 6698 */
struct __cppobj std::_Bidit<WebCallReq *,int,WebCallReq * const *,WebCallReq * const &> : std::iterator<std::bidirectional_iterator_tag,WebCallReq *,int,WebCallReq * const *,WebCallReq * const &>
{
};

/* 6699 */
struct __cppobj std::_List_val<WebCallReq *,std::allocator<WebCallReq *> > : std::_List_ptr<WebCallReq *,std::allocator<WebCallReq *> >
{
  std::allocator<WebCallReq *> _Alval;
};

/* 6700 */
struct __cppobj std::list<WebCallReq *,std::allocator<WebCallReq *> > : std::_List_val<WebCallReq *,std::allocator<WebCallReq *> >
{
  std::_List_nod<WebCallReq *,std::allocator<WebCallReq *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 6701 */
struct __cppobj std::list<WebCallReq *,std::allocator<WebCallReq *> >::const_iterator : std::_Bidit<WebCallReq *,int,WebCallReq * const *,WebCallReq * const &>
{
  std::_List_nod<WebCallReq *,std::allocator<WebCallReq *> >::_Node *_Ptr;
};

/* 6702 */
struct __cppobj std::list<WebCallReq *,std::allocator<WebCallReq *> >::iterator : std::list<WebCallReq *,std::allocator<WebCallReq *> >::const_iterator
{
};

/* 6703 */
struct __cppobj std::allocator<WebCallReq *>::rebind<std::_List_nod<WebCallReq *,std::allocator<WebCallReq *> >::_Node>
{
};

/* 6704 */
struct __cppobj std::allocator<WebCallReq *>::rebind<std::_List_nod<WebCallReq *,std::allocator<WebCallReq *> >::_Node *>
{
};

/* 6705 */
struct __cppobj std::allocator<WebCallReq *>::rebind<WebCallReq *>
{
};

/* 6706 */
struct hostent
{
  char *h_name;
  char **h_aliases;
  __int16 h_addrtype;
  __int16 h_length;
  char **h_addr_list;
};

/* 6707 */
struct WebConnHandler
{
  WebConnHandlerVtbl *vfptr;
};

/* 6708 */
struct WebConnHandlerVtbl
{
  const char *(__thiscall *GetHostString)(WebConnHandler *this);
  WebCallReq *(__thiscall *GetReq)(WebConnHandler *this);
  unsigned int (__thiscall *ConnectSock)(WebConnHandler *this);
};

/* 6709 */
struct WebConn::Req
{
  $BFC727FDBE95ECB043E426F4BA646DAE state;
  std::vector<char,std::allocator<char> > req;
  std::vector<char,std::allocator<char> > uri;
  std::vector<char,std::allocator<char> > line;
  int nameLen;
  int content_length;
  std::vector<char,std::allocator<char> > body;
};

/* 6710 */
struct __cppobj WebConn : BS_Thread
{
  char RecvBuffer[1024];
  unsigned int Socket;
  bool bConn;
  WebConnHandler *m_pHandler;
  WebCallReq *m_pReq;
  volatile int m_nStop;
  WebConn::Req req;
};

/* 6711 */
struct __cppobj WebCallMgrImpl : WebCallMgr, WebConnHandler
{
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > m_host;
  int m_port;
  std::vector<char,std::allocator<char> > m_hoststr;
  std::list<WebCallReq *,std::allocator<WebCallReq *> > m_reqQueue;
  BS_CriticalSection m_lock;
  void *m_hEvent;
};

/* 6712 */
struct __cppobj BS_SystemGroup : BS_LuaBind
{
};

/* 6713 */
struct auto_lock<BS_Stream>
{
  BS_Stream *Lock;
};

/* 6714 */
struct __cppobj std::_Allocator_base<MsgStat>
{
};

/* 6715 */
struct __cppobj std::allocator<MsgStat> : std::_Allocator_base<MsgStat>
{
};

/* 6716 */
struct std::_Vector_val<MsgStat,std::allocator<MsgStat> >
{
  std::allocator<MsgStat> _Alval;
};

/* 6717 */
struct MsgStat
{
  int Count;
  unsigned int Cmd;
  float fAvgTime;
  float fMaxTime;
};

/* 6718 */
struct __cppobj std::vector<MsgStat,std::allocator<MsgStat> > : std::_Vector_val<MsgStat,std::allocator<MsgStat> >
{
  MsgStat *_Myfirst;
  MsgStat *_Mylast;
  MsgStat *_Myend;
};

/* 6719 */
struct __cppobj std::iterator<std::random_access_iterator_tag,MsgStat,int,MsgStat const *,MsgStat const &>
{
};

/* 6720 */
struct __cppobj std::_Ranit<MsgStat,int,MsgStat const *,MsgStat const &> : std::iterator<std::random_access_iterator_tag,MsgStat,int,MsgStat const *,MsgStat const &>
{
};

/* 6721 */
struct __cppobj std::vector<MsgStat,std::allocator<MsgStat> >::const_iterator : std::_Ranit<MsgStat,int,MsgStat const *,MsgStat const &>
{
  MsgStat *_Myptr;
};

/* 6722 */
struct __cppobj std::vector<MsgStat,std::allocator<MsgStat> >::iterator : std::vector<MsgStat,std::allocator<MsgStat> >::const_iterator
{
};

/* 6723 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> const &>
{
};

/* 6724 */
struct __cppobj std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> const &> : std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> const &>
{
};

/* 6725 */
struct std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::_Node
{
  std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::_Node *_Next;
  std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::_Node *_Prev;
  std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> _Myval;
};

/* 6727 */
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > first;
  BS_FuncPerformanceMgr::BS_Factor *second;
};

/* 6726 */
struct BS_FuncPerformanceMgr::BS_Factor
{
  unsigned int m_dwCalled;
  float m_fProcessTime;
  float m_fMinTime;
  float m_fMaxTime;
};

/* 6728 */
struct __cppobj std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::const_iterator : std::_Bidit<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,int,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> const *,std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> const &>
{
  std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::_Node *_Ptr;
};

/* 6729 */
struct __cppobj std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator : std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::const_iterator
{
};

/* 6730 */
struct __cppobj std::_Allocator_base<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator>
{
};

/* 6731 */
struct __cppobj std::_Allocator_base<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::_Node *>
{
};

/* 6732 */
struct __cppobj std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> >
{
};

/* 6733 */
struct __cppobj std::_Allocator_base<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::_Node>
{
};

/* 6734 */
struct __cppobj std::allocator<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::_Node> : std::_Allocator_base<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::_Node>
{
};

/* 6735 */
struct __cppobj std::allocator<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::_Node *> : std::_Allocator_base<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::_Node *>
{
};

/* 6736 */
struct __cppobj std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator> : std::_Allocator_base<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator>
{
};

/* 6737 */
struct std::_Vector_val<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator> >
{
  std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator> _Alval;
};

/* 6738 */
struct __cppobj std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator>::rebind<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator>
{
};

/* 6739 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > : std::_Allocator_base<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> >
{
};

/* 6740 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> >::rebind<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> >
{
};

/* 6741 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> >::rebind<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::_Node>
{
};

/* 6742 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> >::rebind<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::_Node *>
{
};

/* 6743 */
struct __cppobj std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> >::rebind<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator>
{
};

/* 6744 */
struct std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >
{
  std::allocator<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::_Node> _Alnod;
};

/* 6745 */
struct __cppobj std::_List_ptr<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > > : std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >
{
  std::allocator<std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::_Node *> _Alptr;
};

/* 6746 */
struct __cppobj std::_List_val<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > > : std::_List_ptr<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >
{
  std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > _Alval;
};

/* 6747 */
struct __cppobj std::allocator<MsgStat>::rebind<MsgStat>
{
};

/* 6748 */
struct __cppobj std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator> > : std::_Vector_val<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator> >
{
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator *_Myfirst;
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator *_Mylast;
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator *_Myend;
};

/* 6749 */
struct __cppobj std::iterator<std::random_access_iterator_tag,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator,int,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator const *,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator const &>
{
};

/* 6750 */
struct __cppobj std::_Ranit<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator,int,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator const *,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator const &> : std::iterator<std::random_access_iterator_tag,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator,int,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator const *,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator const &>
{
};

/* 6751 */
struct __cppobj std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator> >::const_iterator : std::_Ranit<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator,int,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator const *,std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator const &>
{
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator *_Myptr;
};

/* 6752 */
struct __cppobj std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator> >::iterator : std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator> >::const_iterator
{
};

/* 6753 */
struct __cppobj std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > > : std::_List_val<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >
{
  std::_List_nod<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 6754 */
struct std::pair<std::vector<MsgStat,std::allocator<MsgStat> >::iterator,std::vector<MsgStat,std::allocator<MsgStat> >::iterator>
{
  std::vector<MsgStat,std::allocator<MsgStat> >::iterator first;
  std::vector<MsgStat,std::allocator<MsgStat> >::iterator second;
};

/* 6755 */
struct __cppobj BS_SingletonHeap<BS_FuncPerformanceMgr,5>
{
};

/* 6756 */
struct stdext::_Hmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_FuncPerformanceMgr::BS_Factor *,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> >,0>
{
  stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > comp;
};

/* 6757 */
struct __cppobj stdext::_Hash<stdext::_Hmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_FuncPerformanceMgr::BS_Factor *,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> >,0> > : stdext::_Hmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_FuncPerformanceMgr::BS_Factor *,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> >,0>
{
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > > _List;
  std::vector<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator,std::allocator<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator> > _Vec;
  unsigned int _Mask;
  unsigned int _Maxidx;
};

/* 6758 */
struct __cppobj stdext::hash_map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_FuncPerformanceMgr::BS_Factor *,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > > : stdext::_Hash<stdext::_Hmap_traits<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_FuncPerformanceMgr::BS_Factor *,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> >,0> >
{
};

/* 6759 */
struct __cppobj BS_FuncPerformanceMgr : BS_SingletonHeap<BS_FuncPerformanceMgr,5>
{
  BS_CriticalSection m_Lock;
  stdext::hash_map<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,BS_FuncPerformanceMgr::BS_Factor *,stdext::hash_compare<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::less<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > > m_FactorDB;
  float m_fFrequency;
};

/* 6760 */
struct __declspec(align(4)) std::pair<std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator,bool>
{
  std::list<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *>,std::allocator<std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const ,BS_FuncPerformanceMgr::BS_Factor *> > >::iterator first;
  bool second;
};

/* 6761 */
struct std::pair<unsigned long,XiStrUCPatrol>
{
  unsigned int first;
  XiStrUCPatrol second;
};

/* 6762 */
struct __cppobj AnswerSKIDUpdateCharMileage
{
};

/* 6763 */
struct GDBQuery<AnswerSKIDUpdateCharMileage>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateCharMileage m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6764 */
struct GDBQuery<AnswerSKIDUpdateCharMileage>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6765 */
struct GDBQuery<AnswerSKIDUpdateCharMileage>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6766 */
struct GDBQuery<AnswerSKIDUpdateCharMileage>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6767 */
struct GDBQuery<AnswerSKIDUpdateCharMileage>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6768 */
struct __cppobj AnswerSKIDUpdateCouponParam
{
};

/* 6769 */
struct GDBQuery<AnswerSKIDUpdateCouponParam>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateCouponParam m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6770 */
struct GDBQuery<AnswerSKIDUpdateCouponParam>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6771 */
struct GDBQuery<AnswerSKIDUpdateCouponParam>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6772 */
struct GDBQuery<AnswerSKIDUpdateCouponParam>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6773 */
struct GDBQuery<AnswerSKIDUpdateCouponParam>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6774 */
struct __cppobj AnswerSKIDInsertCouponParam
{
};

/* 6775 */
struct GDBQuery<AnswerSKIDInsertCouponParam>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDInsertCouponParam m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6776 */
struct GDBQuery<AnswerSKIDInsertCouponParam>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6777 */
struct GDBQuery<AnswerSKIDInsertCouponParam>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6778 */
struct GDBQuery<AnswerSKIDInsertCouponParam>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6779 */
struct GDBQuery<AnswerSKIDInsertCouponParam>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6780 */
struct __cppobj DefaultAnswer
{
};

/* 6781 */
struct GDBQuery<DefaultAnswer>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  DefaultAnswer m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6782 */
struct GDBQuery<DefaultAnswer>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6783 */
struct GDBQuery<DefaultAnswer>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6784 */
struct GDBQuery<DefaultAnswer>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6785 */
struct GDBQuery<DefaultAnswer>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6786 */
struct __cppobj AnswerSKIDInsertCurrentUserCnt
{
};

/* 6787 */
struct GDBQuery<AnswerSKIDInsertCurrentUserCnt>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDInsertCurrentUserCnt m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6788 */
struct GDBQuery<AnswerSKIDInsertCurrentUserCnt>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6789 */
struct GDBQuery<AnswerSKIDInsertCurrentUserCnt>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6790 */
struct GDBQuery<AnswerSKIDInsertCurrentUserCnt>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6791 */
struct GDBQuery<AnswerSKIDInsertCurrentUserCnt>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6792 */
struct __cppobj AnswerSKIDInsertAccessLog
{
};

/* 6793 */
struct GDBQuery<AnswerSKIDInsertAccessLog>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDInsertAccessLog m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6794 */
struct GDBQuery<AnswerSKIDInsertAccessLog>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6795 */
struct GDBQuery<AnswerSKIDInsertAccessLog>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6796 */
struct GDBQuery<AnswerSKIDInsertAccessLog>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6797 */
struct GDBQuery<AnswerSKIDInsertAccessLog>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6798 */
struct __cppobj AnswerSKIDInsertItemLog
{
};

/* 6799 */
struct GDBQuery<AnswerSKIDInsertItemLog>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDInsertItemLog m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6800 */
struct GDBQuery<AnswerSKIDInsertItemLog>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6801 */
struct GDBQuery<AnswerSKIDInsertItemLog>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6802 */
struct GDBQuery<AnswerSKIDInsertItemLog>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6803 */
struct GDBQuery<AnswerSKIDInsertItemLog>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6804 */
struct __cppobj AnswerSKIDInsertTeamLog
{
};

/* 6805 */
struct GDBQuery<AnswerSKIDInsertTeamLog>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDInsertTeamLog m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6806 */
struct GDBQuery<AnswerSKIDInsertTeamLog>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6807 */
struct GDBQuery<AnswerSKIDInsertTeamLog>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6808 */
struct GDBQuery<AnswerSKIDInsertTeamLog>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6809 */
struct GDBQuery<AnswerSKIDInsertTeamLog>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6810 */
struct __cppobj AnswerSKIDInsertCarLog
{
};

/* 6811 */
struct GDBQuery<AnswerSKIDInsertCarLog>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDInsertCarLog m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6812 */
struct GDBQuery<AnswerSKIDInsertCarLog>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6813 */
struct GDBQuery<AnswerSKIDInsertCarLog>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6814 */
struct GDBQuery<AnswerSKIDInsertCarLog>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6815 */
struct GDBQuery<AnswerSKIDInsertCarLog>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6816 */
struct __cppobj AnswerSKIDInsertPvpLog
{
};

/* 6817 */
struct GDBQuery<AnswerSKIDInsertPvpLog>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDInsertPvpLog m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6818 */
struct GDBQuery<AnswerSKIDInsertPvpLog>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6819 */
struct GDBQuery<AnswerSKIDInsertPvpLog>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6820 */
struct GDBQuery<AnswerSKIDInsertPvpLog>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6821 */
struct GDBQuery<AnswerSKIDInsertPvpLog>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6822 */
struct __cppobj AnswerSKIDInsertPlayLog
{
};

/* 6823 */
struct GDBQuery<AnswerSKIDInsertPlayLog>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDInsertPlayLog m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6824 */
struct GDBQuery<AnswerSKIDInsertPlayLog>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6825 */
struct GDBQuery<AnswerSKIDInsertPlayLog>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6826 */
struct GDBQuery<AnswerSKIDInsertPlayLog>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6827 */
struct GDBQuery<AnswerSKIDInsertPlayLog>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6828 */
struct __cppobj AnswerSKIDInsertCBattleLog
{
};

/* 6829 */
struct GDBQuery<AnswerSKIDInsertCBattleLog>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDInsertCBattleLog m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6830 */
struct GDBQuery<AnswerSKIDInsertCBattleLog>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6831 */
struct GDBQuery<AnswerSKIDInsertCBattleLog>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6832 */
struct GDBQuery<AnswerSKIDInsertCBattleLog>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6833 */
struct GDBQuery<AnswerSKIDInsertCBattleLog>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6834 */
struct __cppobj AnswerSKIDUpdateAuctionMileage
{
};

/* 6835 */
struct GDBQuery<AnswerSKIDUpdateAuctionMileage>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateAuctionMileage m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6836 */
struct GDBQuery<AnswerSKIDUpdateAuctionMileage>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6837 */
struct GDBQuery<AnswerSKIDUpdateAuctionMileage>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6838 */
struct GDBQuery<AnswerSKIDUpdateAuctionMileage>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6839 */
struct GDBQuery<AnswerSKIDUpdateAuctionMileage>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6840 */
struct __cppobj AnswerSKIDInsertAuctionMileage
{
};

/* 6841 */
struct GDBQuery<AnswerSKIDInsertAuctionMileage>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDInsertAuctionMileage m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6842 */
struct GDBQuery<AnswerSKIDInsertAuctionMileage>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6843 */
struct GDBQuery<AnswerSKIDInsertAuctionMileage>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6844 */
struct GDBQuery<AnswerSKIDInsertAuctionMileage>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6845 */
struct GDBQuery<AnswerSKIDInsertAuctionMileage>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6846 */
struct __cppobj AnswerSKIDDeleteAuctionCar
{
};

/* 6847 */
struct GDBQuery<AnswerSKIDDeleteAuctionCar>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDDeleteAuctionCar m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6848 */
struct GDBQuery<AnswerSKIDDeleteAuctionCar>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6849 */
struct GDBQuery<AnswerSKIDDeleteAuctionCar>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6850 */
struct GDBQuery<AnswerSKIDDeleteAuctionCar>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6851 */
struct GDBQuery<AnswerSKIDDeleteAuctionCar>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6852 */
struct __cppobj AnswerSKIDUpdateAuctionCar
{
};

/* 6853 */
struct GDBQuery<AnswerSKIDUpdateAuctionCar>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateAuctionCar m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6854 */
struct GDBQuery<AnswerSKIDUpdateAuctionCar>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6855 */
struct GDBQuery<AnswerSKIDUpdateAuctionCar>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6856 */
struct GDBQuery<AnswerSKIDUpdateAuctionCar>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6857 */
struct GDBQuery<AnswerSKIDUpdateAuctionCar>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6858 */
struct __cppobj AnswerSKIDInsertAuctionCar
{
};

/* 6859 */
struct GDBQuery<AnswerSKIDInsertAuctionCar>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDInsertAuctionCar m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6860 */
struct GDBQuery<AnswerSKIDInsertAuctionCar>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6861 */
struct GDBQuery<AnswerSKIDInsertAuctionCar>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6862 */
struct GDBQuery<AnswerSKIDInsertAuctionCar>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6863 */
struct GDBQuery<AnswerSKIDInsertAuctionCar>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6864 */
struct __cppobj AnswerSKIDDeleteAuction
{
};

/* 6865 */
struct GDBQuery<AnswerSKIDDeleteAuction>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDDeleteAuction m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6866 */
struct GDBQuery<AnswerSKIDDeleteAuction>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6867 */
struct GDBQuery<AnswerSKIDDeleteAuction>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6868 */
struct GDBQuery<AnswerSKIDDeleteAuction>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6869 */
struct GDBQuery<AnswerSKIDDeleteAuction>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6870 */
struct __cppobj AnswerSKIDUpdateAuction
{
};

/* 6871 */
struct GDBQuery<AnswerSKIDUpdateAuction>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateAuction m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6872 */
struct GDBQuery<AnswerSKIDUpdateAuction>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6873 */
struct GDBQuery<AnswerSKIDUpdateAuction>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6874 */
struct GDBQuery<AnswerSKIDUpdateAuction>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6875 */
struct GDBQuery<AnswerSKIDUpdateAuction>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6876 */
struct __cppobj AnswerSKIDInsertAuction
{
};

/* 6877 */
struct GDBQuery<AnswerSKIDInsertAuction>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDInsertAuction m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6878 */
struct GDBQuery<AnswerSKIDInsertAuction>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6879 */
struct GDBQuery<AnswerSKIDInsertAuction>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6880 */
struct GDBQuery<AnswerSKIDInsertAuction>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6881 */
struct GDBQuery<AnswerSKIDInsertAuction>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6882 */
struct __cppobj AnswerSKIDUpdateVSItem
{
};

/* 6883 */
struct GDBQuery<AnswerSKIDUpdateVSItem>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateVSItem m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6884 */
struct GDBQuery<AnswerSKIDUpdateVSItem>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6885 */
struct GDBQuery<AnswerSKIDUpdateVSItem>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6886 */
struct GDBQuery<AnswerSKIDUpdateVSItem>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6887 */
struct GDBQuery<AnswerSKIDUpdateVSItem>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6888 */
struct __cppobj AnswerSKIDDeleteVSItem
{
};

/* 6889 */
struct GDBQuery<AnswerSKIDDeleteVSItem>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDDeleteVSItem m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6890 */
struct GDBQuery<AnswerSKIDDeleteVSItem>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6891 */
struct GDBQuery<AnswerSKIDDeleteVSItem>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6892 */
struct GDBQuery<AnswerSKIDDeleteVSItem>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6893 */
struct GDBQuery<AnswerSKIDDeleteVSItem>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6894 */
struct __cppobj AnswerSKIDUpdateItem
{
};

/* 6895 */
struct GDBQuery<AnswerSKIDUpdateItem>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateItem m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6896 */
struct GDBQuery<AnswerSKIDUpdateItem>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6897 */
struct GDBQuery<AnswerSKIDUpdateItem>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6898 */
struct GDBQuery<AnswerSKIDUpdateItem>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6899 */
struct GDBQuery<AnswerSKIDUpdateItem>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6900 */
struct __cppobj AnswerSKIDUpdateItemExten
{
};

/* 6901 */
struct GDBQuery<AnswerSKIDUpdateItemExten>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateItemExten m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6902 */
struct GDBQuery<AnswerSKIDUpdateItemExten>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6903 */
struct GDBQuery<AnswerSKIDUpdateItemExten>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6904 */
struct GDBQuery<AnswerSKIDUpdateItemExten>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6905 */
struct GDBQuery<AnswerSKIDUpdateItemExten>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6906 */
struct __cppobj AnswerSKIDUpdateItemEx
{
};

/* 6907 */
struct GDBQuery<AnswerSKIDUpdateItemEx>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateItemEx m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6908 */
struct GDBQuery<AnswerSKIDUpdateItemEx>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6909 */
struct GDBQuery<AnswerSKIDUpdateItemEx>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6910 */
struct GDBQuery<AnswerSKIDUpdateItemEx>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6911 */
struct GDBQuery<AnswerSKIDUpdateItemEx>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6912 */
struct __cppobj AnswerSKIDInsertItem
{
};

/* 6913 */
struct GDBQuery<AnswerSKIDInsertItem>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDInsertItem m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6914 */
struct GDBQuery<AnswerSKIDInsertItem>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6915 */
struct GDBQuery<AnswerSKIDInsertItem>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6916 */
struct GDBQuery<AnswerSKIDInsertItem>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6917 */
struct GDBQuery<AnswerSKIDInsertItem>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6918 */
struct __cppobj AnswerSKIDUpdateCoupon
{
};

/* 6919 */
struct GDBQuery<AnswerSKIDUpdateCoupon>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateCoupon m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6920 */
struct GDBQuery<AnswerSKIDUpdateCoupon>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6921 */
struct GDBQuery<AnswerSKIDUpdateCoupon>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6922 */
struct GDBQuery<AnswerSKIDUpdateCoupon>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6923 */
struct GDBQuery<AnswerSKIDUpdateCoupon>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6924 */
struct __cppobj AnswerSKIDInsertCoupon
{
};

/* 6925 */
struct GDBQuery<AnswerSKIDInsertCoupon>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDInsertCoupon m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6926 */
struct GDBQuery<AnswerSKIDInsertCoupon>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6927 */
struct GDBQuery<AnswerSKIDInsertCoupon>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6928 */
struct GDBQuery<AnswerSKIDInsertCoupon>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6929 */
struct GDBQuery<AnswerSKIDInsertCoupon>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6930 */
struct __cppobj AnswerSKIDUpdateQuest
{
};

/* 6931 */
struct GDBQuery<AnswerSKIDUpdateQuest>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateQuest m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6932 */
struct GDBQuery<AnswerSKIDUpdateQuest>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6933 */
struct GDBQuery<AnswerSKIDUpdateQuest>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6934 */
struct GDBQuery<AnswerSKIDUpdateQuest>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6935 */
struct GDBQuery<AnswerSKIDUpdateQuest>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6936 */
struct __cppobj AnswerSKIDInsertQuest
{
};

/* 6937 */
struct GDBQuery<AnswerSKIDInsertQuest>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDInsertQuest m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6938 */
struct GDBQuery<AnswerSKIDInsertQuest>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6939 */
struct GDBQuery<AnswerSKIDInsertQuest>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6940 */
struct GDBQuery<AnswerSKIDInsertQuest>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6941 */
struct GDBQuery<AnswerSKIDInsertQuest>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6942 */
struct __cppobj AnswerSKIDUpdateCarInfo
{
};

/* 6943 */
struct GDBQuery<AnswerSKIDUpdateCarInfo>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateCarInfo m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6944 */
struct GDBQuery<AnswerSKIDUpdateCarInfo>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6945 */
struct GDBQuery<AnswerSKIDUpdateCarInfo>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6946 */
struct GDBQuery<AnswerSKIDUpdateCarInfo>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6947 */
struct GDBQuery<AnswerSKIDUpdateCarInfo>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6948 */
struct __cppobj AnswerSKIDUpdateGuildType
{
};

/* 6949 */
struct GDBQuery<AnswerSKIDUpdateGuildType>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateGuildType m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6950 */
struct GDBQuery<AnswerSKIDUpdateGuildType>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6951 */
struct GDBQuery<AnswerSKIDUpdateGuildType>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6952 */
struct GDBQuery<AnswerSKIDUpdateGuildType>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6953 */
struct GDBQuery<AnswerSKIDUpdateGuildType>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6954 */
struct __cppobj AnswerSKIDUpdateCharacterDate
{
};

/* 6955 */
struct GDBQuery<AnswerSKIDUpdateCharacterDate>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateCharacterDate m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6956 */
struct GDBQuery<AnswerSKIDUpdateCharacterDate>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6957 */
struct GDBQuery<AnswerSKIDUpdateCharacterDate>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6958 */
struct GDBQuery<AnswerSKIDUpdateCharacterDate>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6959 */
struct GDBQuery<AnswerSKIDUpdateCharacterDate>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6960 */
struct __cppobj AnswerSKIDUpdateCharInfo
{
};

/* 6961 */
struct GDBQuery<AnswerSKIDUpdateCharInfo>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateCharInfo m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6962 */
struct GDBQuery<AnswerSKIDUpdateCharInfo>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6963 */
struct GDBQuery<AnswerSKIDUpdateCharInfo>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6964 */
struct GDBQuery<AnswerSKIDUpdateCharInfo>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6965 */
struct GDBQuery<AnswerSKIDUpdateCharInfo>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6966 */
struct AnswerSKIDInsertMsg
{
  __int64 nMsgId;
};

/* 6967 */
struct GDBQuery<AnswerSKIDInsertMsg>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDInsertMsg m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6968 */
struct GDBQuery<AnswerSKIDInsertMsg>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6969 */
struct GDBQuery<AnswerSKIDInsertMsg>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6970 */
struct GDBQuery<AnswerSKIDInsertMsg>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6971 */
struct GDBQuery<AnswerSKIDInsertMsg>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6972 */
struct AnswerSKIDIncPlayMode
{
  int nOutTryCnt;
  int nOutWinCnt;
};

/* 6973 */
struct GDBQuery<AnswerSKIDIncPlayMode>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDIncPlayMode m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 6974 */
struct GDBQuery<AnswerSKIDIncPlayMode>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 6975 */
struct GDBQuery<AnswerSKIDIncPlayMode>::ResultInit
{
  GDBSession *m_pSession;
};

/* 6976 */
struct GDBQuery<AnswerSKIDIncPlayMode>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6977 */
struct GDBQuery<AnswerSKIDIncPlayMode>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6978 */
struct GDBQuery<AnswerSKIDIncPlayMode>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 6979 */
struct GDBQuery<AnswerSKIDIncPlayMode>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 6980 */
struct GDBQuery<AnswerSKIDIncPlayMode>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 6981 */
struct GDBQuery<AnswerSKIDIncPlayMode>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 6982 */
struct GDBQuery<AnswerSKIDIncPlayMode>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 6983 */
struct LogParam<BS_Stream>
{
  BS_Stream *m_log;
};

/* 6984 */
struct std::pair<unsigned short const *,XiUserConnTable::Value>
{
  const wchar_t *first;
  XiUserConnTable::Value second;
};

/* 6985 */
struct LockMessageBuffer<BS_PktGetCBattleTimeAck>
{
  BS_PktGetCBattleTimeAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6986 */
struct __cppobj std::_Allocator_base<BS_CBattleLobby *>
{
};

/* 6987 */
struct __cppobj std::allocator<BS_CBattleLobby *> : std::_Allocator_base<BS_CBattleLobby *>
{
};

/* 6988 */
struct std::_Vector_val<BS_CBattleLobby *,std::allocator<BS_CBattleLobby *> >
{
  std::allocator<BS_CBattleLobby *> _Alval;
};

/* 6989 */
struct __cppobj std::vector<BS_CBattleLobby *,std::allocator<BS_CBattleLobby *> > : std::_Vector_val<BS_CBattleLobby *,std::allocator<BS_CBattleLobby *> >
{
  BS_CBattleLobby **_Myfirst;
  BS_CBattleLobby **_Mylast;
  BS_CBattleLobby **_Myend;
};

/* 6990 */
struct __cppobj std::iterator<std::random_access_iterator_tag,BS_CBattleLobby *,int,BS_CBattleLobby * const *,BS_CBattleLobby * const &>
{
};

/* 6991 */
struct __cppobj std::_Ranit<BS_CBattleLobby *,int,BS_CBattleLobby * const *,BS_CBattleLobby * const &> : std::iterator<std::random_access_iterator_tag,BS_CBattleLobby *,int,BS_CBattleLobby * const *,BS_CBattleLobby * const &>
{
};

/* 6992 */
struct __cppobj std::vector<BS_CBattleLobby *,std::allocator<BS_CBattleLobby *> >::const_iterator : std::_Ranit<BS_CBattleLobby *,int,BS_CBattleLobby * const *,BS_CBattleLobby * const &>
{
  BS_CBattleLobby **_Myptr;
};

/* 6993 */
struct __cppobj std::vector<BS_CBattleLobby *,std::allocator<BS_CBattleLobby *> >::iterator : std::vector<BS_CBattleLobby *,std::allocator<BS_CBattleLobby *> >::const_iterator
{
};

/* 6994 */
struct LockMessageBuffer<BS_PktCBattleInstanceAck>
{
  BS_PktCBattleInstanceAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6995 */
struct LockMessageBuffer<BS_PktCBattleItemsAck>
{
  BS_PktCBattleItemsAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6996 */
struct LockMessageBuffer<BS_PktCBattleGetSettingAck>
{
  BS_PktCBattleGetSettingAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6997 */
struct LockMessageBuffer<BS_PktCBattleInfoAck>
{
  BS_PktCBattleInfoAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 6998 */
struct __cppobj std::allocator<BS_CBattleLobby *>::rebind<BS_CBattleLobby *>
{
};

/* 6999 */
struct linger
{
  unsigned __int16 l_onoff;
  unsigned __int16 l_linger;
};

/* 7000 */
struct WSAData
{
  unsigned __int16 wVersion;
  unsigned __int16 wHighVersion;
  char szDescription[257];
  char szSystemStatus[129];
  unsigned __int16 iMaxSockets;
  unsigned __int16 iMaxUdpDg;
  char *lpVendorInfo;
};

/* 7001 */
struct __cppobj BS_RecvFromOverlappedForIOCP : BS_OverlappedPendding
{
  BS_Session *m_pSession;
};

/* 7002 */
struct __cppobj BS_ThrowinOverlapped : BS_Overlapped
{
  BS_CompletionHandler *const m_pIOCP;
  unsigned int m_ThreadID;
  void *m_CallBackPtr;
  unsigned int m_ThrowCount;
};

/* 7003 */
struct std::pair<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,CProperty *>
{
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > first;
  CProperty *second;
};

/* 7004 */
struct __declspec(align(8)) std::pair<__int64,XiAuctionClient *>
{
  __int64 first;
  XiAuctionClient *second;
};

/* 7005 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_Actor *,std::allocator<BS_Actor *> >::_Node>
{
};

/* 7006 */
struct __cppobj std::allocator<std::_List_nod<BS_Actor *,std::allocator<BS_Actor *> >::_Node> : std::_Allocator_base<std::_List_nod<BS_Actor *,std::allocator<BS_Actor *> >::_Node>
{
};

/* 7007 */
struct std::_List_nod<BS_Actor *,std::allocator<BS_Actor *> >
{
  std::allocator<std::_List_nod<BS_Actor *,std::allocator<BS_Actor *> >::_Node> _Alnod;
};

/* 7008 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_Actor *,std::allocator<BS_Actor *> >::_Node *>
{
};

/* 7009 */
struct __cppobj std::allocator<std::_List_nod<BS_Actor *,std::allocator<BS_Actor *> >::_Node *> : std::_Allocator_base<std::_List_nod<BS_Actor *,std::allocator<BS_Actor *> >::_Node *>
{
};

/* 7010 */
struct __cppobj std::_List_ptr<BS_Actor *,std::allocator<BS_Actor *> > : std::_List_nod<BS_Actor *,std::allocator<BS_Actor *> >
{
  std::allocator<std::_List_nod<BS_Actor *,std::allocator<BS_Actor *> >::_Node *> _Alptr;
};

/* 7011 */
struct __cppobj std::_List_val<BS_Actor *,std::allocator<BS_Actor *> > : std::_List_ptr<BS_Actor *,std::allocator<BS_Actor *> >
{
  std::allocator<BS_Actor *> _Alval;
};

/* 7012 */
struct std::_List_nod<BS_Actor *,std::allocator<BS_Actor *> >::_Node
{
  std::_List_nod<BS_Actor *,std::allocator<BS_Actor *> >::_Node *_Next;
  std::_List_nod<BS_Actor *,std::allocator<BS_Actor *> >::_Node *_Prev;
  BS_Actor *_Myval;
};

/* 7013 */
struct __cppobj std::list<BS_Actor *,std::allocator<BS_Actor *> > : std::_List_val<BS_Actor *,std::allocator<BS_Actor *> >
{
  std::_List_nod<BS_Actor *,std::allocator<BS_Actor *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 7014 */
struct BS_ActorMgr
{
  BS_Actor m_actorsBuff[30000];
  std::list<BS_Actor *,std::allocator<BS_Actor *> > m_actors;
  BS_CriticalSection m_lock;
};

/* 7015 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,BS_Actor *,int,BS_Actor * const *,BS_Actor * const &>
{
};

/* 7016 */
struct __cppobj std::_Bidit<BS_Actor *,int,BS_Actor * const *,BS_Actor * const &> : std::iterator<std::bidirectional_iterator_tag,BS_Actor *,int,BS_Actor * const *,BS_Actor * const &>
{
};

/* 7017 */
struct __cppobj std::list<BS_Actor *,std::allocator<BS_Actor *> >::const_iterator : std::_Bidit<BS_Actor *,int,BS_Actor * const *,BS_Actor * const &>
{
  std::_List_nod<BS_Actor *,std::allocator<BS_Actor *> >::_Node *_Ptr;
};

/* 7018 */
struct __cppobj std::list<BS_Actor *,std::allocator<BS_Actor *> >::iterator : std::list<BS_Actor *,std::allocator<BS_Actor *> >::const_iterator
{
};

/* 7019 */
struct __cppobj std::allocator<BS_Actor *>::rebind<std::_List_nod<BS_Actor *,std::allocator<BS_Actor *> >::_Node>
{
};

/* 7020 */
struct __cppobj std::allocator<BS_Actor *>::rebind<std::_List_nod<BS_Actor *,std::allocator<BS_Actor *> >::_Node *>
{
};

/* 7021 */
struct LockMessageBuffer<BS_PktCarPosAck>
{
  BS_PktCarPosAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7022 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiGMCmdLine,int,XiGMCmdLine const *,XiGMCmdLine const &>
{
};

/* 7023 */
struct __cppobj std::_Ranit<XiGMCmdLine,int,XiGMCmdLine const *,XiGMCmdLine const &> : std::iterator<std::random_access_iterator_tag,XiGMCmdLine,int,XiGMCmdLine const *,XiGMCmdLine const &>
{
};

/* 7024 */
struct __cppobj std::allocator<XiGMCmdLine>::rebind<XiGMCmdLine>
{
};

/* 7025 */
struct __cppobj std::vector<XiGMCmdLine,std::allocator<XiGMCmdLine> >::const_iterator : std::_Ranit<XiGMCmdLine,int,XiGMCmdLine const *,XiGMCmdLine const &>
{
  XiGMCmdLine *_Myptr;
};

/* 7026 */
struct __cppobj std::vector<XiGMCmdLine,std::allocator<XiGMCmdLine> >::iterator : std::vector<XiGMCmdLine,std::allocator<XiGMCmdLine> >::const_iterator
{
};

/* 7027 */
struct __cppobj __declspec(align(4)) GMToolDBThread : BS_Thread
{
  volatile bool m_bStop;
};

/* 7028 */
struct std::pair<std::vector<ChaseTable::HuvAttr,std::allocator<ChaseTable::HuvAttr> >::iterator,std::vector<ChaseTable::HuvAttr,std::allocator<ChaseTable::HuvAttr> >::iterator>
{
  std::vector<ChaseTable::HuvAttr,std::allocator<ChaseTable::HuvAttr> >::iterator first;
  std::vector<ChaseTable::HuvAttr,std::allocator<ChaseTable::HuvAttr> >::iterator second;
};

/* 7029 */
struct __cppobj XiUpgradeCarThread : XiPulseThread
{
};

/* 7030 */
struct __cppobj XiGetVisualItemThread : XiPulseThread
{
};

/* 7031 */
struct __cppobj XiSendVisualItemThread : XiPulseThread
{
};

/* 7032 */
struct __cppobj XiBuyVisualItemThread : XiPulseThread
{
};

/* 7033 */
struct __cppobj XiGetMyHancoinThread : XiPulseThread
{
};

/* 7034 */
struct __cppobj XiLoadCharThread : XiPulseThread
{
};

/* 7035 */
struct LockMessageBuffer<BS_PktReplaceCarAck>
{
  BS_PktReplaceCarAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7036 */
struct LockMessageBuffer<BS_PktResponseCar>
{
  BS_PktResponseCar *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7037 */
struct __cppobj BS_Group : HashedVector<BS_AreaDispatch *,4,16>
{
  BS_Group *pNext;
  unsigned __int16 m_id;
  unsigned int m_ComboCount;
};

/* 7038 */
struct LockMessageBuffer<BS_PktNotifyFreeCar>
{
  BS_PktNotifyFreeCar *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7039 */
struct __declspec(align(4)) ASetContentFlag
{
  BS_AreaDispatch *pAreaDispatch;
  const wchar_t *flagname;
  int value;
  bool Processed;
};

/* 7040 */
struct AListContentFlag
{
  BS_AreaDispatch *pAreaDispatch;
  wchar_t msg[256];
};

/* 7041 */
struct CastTask<BS_PktTCSSignal>
{
  int m_nNow;
  CastEndHandler *m_pEndHandler;
  BS_AreaDispatch *m_pSender;
  BS_PktTCSSignal m_Msg;
  HashedVector<BS_IVehicle *,4,16> *m_pFlushQueue;
};

/* 7042 */
struct CastTask<BS_PktMoveTCSVehicle>
{
  int m_nNow;
  CastEndHandler *m_pEndHandler;
  BS_AreaDispatch *m_pSender;
  BS_PktMoveTCSVehicle m_Msg;
  HashedVector<BS_IVehicle *,4,16> *m_pFlushQueue;
};

/* 7043 */
struct CastTask<BS_PktMoveTrafficVehicle>
{
  int m_nNow;
  CastEndHandler *m_pEndHandler;
  BS_AreaDispatch *m_pSender;
  BS_PktMoveTrafficVehicle m_Msg;
  HashedVector<BS_IVehicle *,4,16> *m_pFlushQueue;
};

/* 7044 */
struct CastPacket
{
  int m_nNow;
  CastEndHandler *m_pEndHandler;
  BS_AreaDispatch *m_pSender;
  BS_Packet *m_Packet;
};

/* 7045 */
struct LockMessageBuffer<BS_PktAreaChat>
{
  BS_PktAreaChat *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7046 */
struct CastTask<BS_PktObjectUpdate>
{
  int m_nNow;
  CastEndHandler *m_pEndHandler;
  BS_AreaDispatch *m_pSender;
  BS_PktObjectUpdate m_Msg;
  HashedVector<BS_IVehicle *,4,16> *m_pFlushQueue;
};

/* 7047 */
struct CastTask<BS_PktJumpVehicle>
{
  int m_nNow;
  CastEndHandler *m_pEndHandler;
  BS_AreaDispatch *m_pSender;
  BS_PktJumpVehicle m_Msg;
  HashedVector<BS_IVehicle *,4,16> *m_pFlushQueue;
};

/* 7048 */
struct MovePlus
{
  BS_AreaDispatch *m_pDispatch;
  int m_nNow;
};

/* 7049 */
struct CastTask<BS_PktJumpFreeTrafficVehicle>
{
  int m_nNow;
  CastEndHandler *m_pEndHandler;
  BS_AreaDispatch *m_pSender;
  BS_PktJumpFreeTrafficVehicle m_Msg;
  HashedVector<BS_IVehicle *,4,16> *m_pFlushQueue;
};

/* 7050 */
struct FreeTrafficVehicleJumpNow
{
  int m_nNow;
  BS_TrafficCar *m_pTrafficCar;
  HashedVector<BS_IVehicle *,4,16> m_flushQueue;
};

/* 7051 */
struct CastTask<BS_PktMoveFreeTrafficVehicle>
{
  int m_nNow;
  CastEndHandler *m_pEndHandler;
  BS_AreaDispatch *m_pSender;
  BS_PktMoveFreeTrafficVehicle m_Msg;
  HashedVector<BS_IVehicle *,4,16> *m_pFlushQueue;
};

/* 7052 */
struct FreeTrafficVehicleMoveNow
{
  int m_nNow;
  BS_TrafficCar *m_pTrafficCar;
  HashedVector<BS_IVehicle *,4,16> m_flushQueue;
};

/* 7053 */
struct PlayerVehicleMove
{
  int m_nCount;
  int m_nNow;
  BS_AreaDispatch *m_pDispatch;
};

/* 7054 */
struct HuvVehicleMove
{
  int m_nNow;
  BS_IVehicle *m_pHuv;
};

/* 7055 */
struct LockMessageBuffer<BS_PktJumpVehicle>
{
  BS_PktJumpVehicle *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7056 */
struct PvpMove
{
  BS_AreaDispatch *m_pObject;
};

/* 7057 */
struct LockMessageBuffer<BS_PktJumpFreeTrafficVehicle>
{
  BS_PktJumpFreeTrafficVehicle *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7058 */
struct LockMessageBuffer<BS_PktMoveFreeTrafficVehicle>
{
  BS_PktMoveFreeTrafficVehicle *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7059 */
struct AtomicList<BS_Group>
{
  BS_Group *aHead;
};

/* 7060 */
struct __cppobj AtomicLine<BS_Group> : AtomicList<BS_Group>
{
  char buff[1024];
};

/* 7061 */
struct LockMessageBuffer<BS_PktObjectUpdate>
{
  BS_PktObjectUpdate *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7062 */
struct AtomicPool<BS_Group,32,16>
{
  volatile int m_nCount;
  volatile int m_Index;
  AtomicLine<BS_Group> subList[16];
};

/* 7063 */
struct LockMessageBuffer<BS_PktMoveTrafficVehicle>
{
  BS_PktMoveTrafficVehicle *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7064 */
struct LockMessageBuffer<BS_PktTCSSignal>
{
  BS_PktTCSSignal *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7065 */
struct __cppobj BS_GroupMgr : AtomicPool<BS_Group,32,16>
{
  BS_Group m_group[30000];
};

/* 7066 */
struct LockMessageBuffer<BS_PktMoveTCSVehicle>
{
  BS_PktMoveTCSVehicle *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7067 */
struct CastToMember
{
  BS_AreaDispatch *m_pDispatch;
  BS_Packet *m_pPacket;
};

/* 7068 */
struct __declspec(align(4)) auto_obj<BS_PacketDispatch *,BS_Functors::fnRelease>
{
  BS_PacketDispatch *m_Object;
  BS_Functors::fnRelease m_fnRun;
};

/* 7069 */
struct SendToGroupAreaCall
{
  BS_Packet *m_pPacket;
  int m_Area;
};

/* 7070 */
struct SendMoveToGroup
{
  BS_IVehicle *m_pObject;
};

/* 7071 */
struct SendToGroupCall
{
  BS_Packet *m_pPacket;
};

/* 7072 */
struct LockMessageBuffer<BS_PktChatBlock>
{
  BS_PktChatBlock *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7073 */
struct LockMessageBuffer<BS_PktMarkCouponAck>
{
  BS_PktMarkCouponAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7074 */
struct LockMessageBuffer<BS_PktUpdateCouponParam>
{
  BS_PktUpdateCouponParam *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7075 */
struct LockMessageBuffer<BS_PktUCChaseMiddleReward>
{
  BS_PktUCChaseMiddleReward *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7076 */
struct LockMessageBuffer<BS_PktExpInfo>
{
  BS_PktExpInfo *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7077 */
struct LockMessageBuffer<BS_PktVisualUpdate>
{
  BS_PktVisualUpdate *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7078 */
struct SendLevelUp
{
  XiCsCharInfo *m_pCharInfo;
};

/* 7079 */
struct LockMessageBuffer<BS_PktRealMatchInfo>
{
  BS_PktRealMatchInfo *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7080 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_Overlapped *,std::allocator<BS_Overlapped *> >::_Node>
{
};

/* 7081 */
struct __cppobj std::allocator<std::_List_nod<BS_Overlapped *,std::allocator<BS_Overlapped *> >::_Node> : std::_Allocator_base<std::_List_nod<BS_Overlapped *,std::allocator<BS_Overlapped *> >::_Node>
{
};

/* 7082 */
struct std::_List_nod<BS_Overlapped *,std::allocator<BS_Overlapped *> >
{
  std::allocator<std::_List_nod<BS_Overlapped *,std::allocator<BS_Overlapped *> >::_Node> _Alnod;
};

/* 7083 */
struct __cppobj std::_Allocator_base<std::_List_nod<BS_Overlapped *,std::allocator<BS_Overlapped *> >::_Node *>
{
};

/* 7084 */
struct __cppobj std::allocator<std::_List_nod<BS_Overlapped *,std::allocator<BS_Overlapped *> >::_Node *> : std::_Allocator_base<std::_List_nod<BS_Overlapped *,std::allocator<BS_Overlapped *> >::_Node *>
{
};

/* 7085 */
struct __cppobj std::_List_ptr<BS_Overlapped *,std::allocator<BS_Overlapped *> > : std::_List_nod<BS_Overlapped *,std::allocator<BS_Overlapped *> >
{
  std::allocator<std::_List_nod<BS_Overlapped *,std::allocator<BS_Overlapped *> >::_Node *> _Alptr;
};

/* 7086 */
struct __cppobj std::_Allocator_base<BS_Overlapped *>
{
};

/* 7087 */
struct __cppobj std::allocator<BS_Overlapped *> : std::_Allocator_base<BS_Overlapped *>
{
};

/* 7088 */
struct __cppobj std::_List_val<BS_Overlapped *,std::allocator<BS_Overlapped *> > : std::_List_ptr<BS_Overlapped *,std::allocator<BS_Overlapped *> >
{
  std::allocator<BS_Overlapped *> _Alval;
};

/* 7089 */
struct std::_List_nod<BS_Overlapped *,std::allocator<BS_Overlapped *> >::_Node
{
  std::_List_nod<BS_Overlapped *,std::allocator<BS_Overlapped *> >::_Node *_Next;
  std::_List_nod<BS_Overlapped *,std::allocator<BS_Overlapped *> >::_Node *_Prev;
  BS_Overlapped *_Myval;
};

/* 7090 */
struct __cppobj std::list<BS_Overlapped *,std::allocator<BS_Overlapped *> > : std::_List_val<BS_Overlapped *,std::allocator<BS_Overlapped *> >
{
  std::_List_nod<BS_Overlapped *,std::allocator<BS_Overlapped *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 7091 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,BS_Overlapped *,int,BS_Overlapped * const *,BS_Overlapped * const &>
{
};

/* 7092 */
struct __cppobj std::_Bidit<BS_Overlapped *,int,BS_Overlapped * const *,BS_Overlapped * const &> : std::iterator<std::bidirectional_iterator_tag,BS_Overlapped *,int,BS_Overlapped * const *,BS_Overlapped * const &>
{
};

/* 7093 */
struct __cppobj std::list<BS_Overlapped *,std::allocator<BS_Overlapped *> >::const_iterator : std::_Bidit<BS_Overlapped *,int,BS_Overlapped * const *,BS_Overlapped * const &>
{
  std::_List_nod<BS_Overlapped *,std::allocator<BS_Overlapped *> >::_Node *_Ptr;
};

/* 7094 */
struct __cppobj std::list<BS_Overlapped *,std::allocator<BS_Overlapped *> >::iterator : std::list<BS_Overlapped *,std::allocator<BS_Overlapped *> >::const_iterator
{
};

/* 7095 */
struct __cppobj std::allocator<BS_Overlapped *>::rebind<std::_List_nod<BS_Overlapped *,std::allocator<BS_Overlapped *> >::_Node>
{
};

/* 7096 */
struct __cppobj std::allocator<BS_Overlapped *>::rebind<std::_List_nod<BS_Overlapped *,std::allocator<BS_Overlapped *> >::_Node *>
{
};

/* 7097 */
struct __cppobj std::allocator<BS_Overlapped *>::rebind<BS_Overlapped *>
{
};

/* 7098 */
struct DaFile
{
  _iobuf *m_pStream;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > m_strFile;
};

/* 7099 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,DA_FILESAVE,int,DA_FILESAVE const *,DA_FILESAVE const &>
{
};

/* 7100 */
struct __cppobj std::_Bidit<DA_FILESAVE,int,DA_FILESAVE const *,DA_FILESAVE const &> : std::iterator<std::bidirectional_iterator_tag,DA_FILESAVE,int,DA_FILESAVE const *,DA_FILESAVE const &>
{
};

/* 7101 */
struct std::_List_nod<DA_FILESAVE,std::allocator<DA_FILESAVE> >::_Node
{
  std::_List_nod<DA_FILESAVE,std::allocator<DA_FILESAVE> >::_Node *_Next;
  std::_List_nod<DA_FILESAVE,std::allocator<DA_FILESAVE> >::_Node *_Prev;
  DA_FILESAVE _Myval;
};

/* 7102 */
struct DA_FILESAVE
{
  int nFileID;
  _iobuf *fp;
};

/* 7103 */
struct __cppobj std::list<DA_FILESAVE,std::allocator<DA_FILESAVE> >::const_iterator : std::_Bidit<DA_FILESAVE,int,DA_FILESAVE const *,DA_FILESAVE const &>
{
  std::_List_nod<DA_FILESAVE,std::allocator<DA_FILESAVE> >::_Node *_Ptr;
};

/* 7104 */
struct __cppobj std::list<DA_FILESAVE,std::allocator<DA_FILESAVE> >::iterator : std::list<DA_FILESAVE,std::allocator<DA_FILESAVE> >::const_iterator
{
};

/* 7105 */
struct __cppobj std::iterator<std::bidirectional_iterator_tag,DA_CHUNK,int,DA_CHUNK const *,DA_CHUNK const &>
{
};

/* 7106 */
struct __cppobj std::_Bidit<DA_CHUNK,int,DA_CHUNK const *,DA_CHUNK const &> : std::iterator<std::bidirectional_iterator_tag,DA_CHUNK,int,DA_CHUNK const *,DA_CHUNK const &>
{
};

/* 7107 */
struct std::_List_nod<DA_CHUNK,std::allocator<DA_CHUNK> >::_Node
{
  std::_List_nod<DA_CHUNK,std::allocator<DA_CHUNK> >::_Node *_Next;
  std::_List_nod<DA_CHUNK,std::allocator<DA_CHUNK> >::_Node *_Prev;
  DA_CHUNK _Myval;
};

/* 7108 */
struct DA_CHUNK
{
  int id;
  int bStoredTextMode;
  int nCntList;
  int nCntOffset;
  std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > strFileName;
  std::vector<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > vecString;
};

/* 7109 */
struct __cppobj std::list<DA_CHUNK,std::allocator<DA_CHUNK> >::const_iterator : std::_Bidit<DA_CHUNK,int,DA_CHUNK const *,DA_CHUNK const &>
{
  std::_List_nod<DA_CHUNK,std::allocator<DA_CHUNK> >::_Node *_Ptr;
};

/* 7110 */
struct __cppobj std::list<DA_CHUNK,std::allocator<DA_CHUNK> >::iterator : std::list<DA_CHUNK,std::allocator<DA_CHUNK> >::const_iterator
{
};

/* 7111 */
struct __cppobj std::_Allocator_base<std::_List_nod<DA_CHUNK,std::allocator<DA_CHUNK> >::_Node>
{
};

/* 7112 */
struct __cppobj std::allocator<std::_List_nod<DA_CHUNK,std::allocator<DA_CHUNK> >::_Node> : std::_Allocator_base<std::_List_nod<DA_CHUNK,std::allocator<DA_CHUNK> >::_Node>
{
};

/* 7113 */
struct std::_List_nod<DA_CHUNK,std::allocator<DA_CHUNK> >
{
  std::allocator<std::_List_nod<DA_CHUNK,std::allocator<DA_CHUNK> >::_Node> _Alnod;
};

/* 7114 */
struct __cppobj std::_Allocator_base<std::_List_nod<DA_CHUNK,std::allocator<DA_CHUNK> >::_Node *>
{
};

/* 7115 */
struct __cppobj std::allocator<std::_List_nod<DA_CHUNK,std::allocator<DA_CHUNK> >::_Node *> : std::_Allocator_base<std::_List_nod<DA_CHUNK,std::allocator<DA_CHUNK> >::_Node *>
{
};

/* 7116 */
struct __cppobj std::_List_ptr<DA_CHUNK,std::allocator<DA_CHUNK> > : std::_List_nod<DA_CHUNK,std::allocator<DA_CHUNK> >
{
  std::allocator<std::_List_nod<DA_CHUNK,std::allocator<DA_CHUNK> >::_Node *> _Alptr;
};

/* 7117 */
struct __cppobj std::_Allocator_base<DA_CHUNK>
{
};

/* 7118 */
struct __cppobj std::allocator<DA_CHUNK> : std::_Allocator_base<DA_CHUNK>
{
};

/* 7119 */
struct __cppobj std::_List_val<DA_CHUNK,std::allocator<DA_CHUNK> > : std::_List_ptr<DA_CHUNK,std::allocator<DA_CHUNK> >
{
  std::allocator<DA_CHUNK> _Alval;
};

/* 7120 */
struct __cppobj std::list<DA_CHUNK,std::allocator<DA_CHUNK> > : std::_List_val<DA_CHUNK,std::allocator<DA_CHUNK> >
{
  std::_List_nod<DA_CHUNK,std::allocator<DA_CHUNK> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 7121 */
struct __cppobj std::_Allocator_base<std::_List_nod<DA_FILESAVE,std::allocator<DA_FILESAVE> >::_Node>
{
};

/* 7122 */
struct __cppobj std::allocator<std::_List_nod<DA_FILESAVE,std::allocator<DA_FILESAVE> >::_Node> : std::_Allocator_base<std::_List_nod<DA_FILESAVE,std::allocator<DA_FILESAVE> >::_Node>
{
};

/* 7123 */
struct std::_List_nod<DA_FILESAVE,std::allocator<DA_FILESAVE> >
{
  std::allocator<std::_List_nod<DA_FILESAVE,std::allocator<DA_FILESAVE> >::_Node> _Alnod;
};

/* 7124 */
struct __cppobj std::_Allocator_base<std::_List_nod<DA_FILESAVE,std::allocator<DA_FILESAVE> >::_Node *>
{
};

/* 7125 */
struct __cppobj std::allocator<std::_List_nod<DA_FILESAVE,std::allocator<DA_FILESAVE> >::_Node *> : std::_Allocator_base<std::_List_nod<DA_FILESAVE,std::allocator<DA_FILESAVE> >::_Node *>
{
};

/* 7126 */
struct __cppobj std::_List_ptr<DA_FILESAVE,std::allocator<DA_FILESAVE> > : std::_List_nod<DA_FILESAVE,std::allocator<DA_FILESAVE> >
{
  std::allocator<std::_List_nod<DA_FILESAVE,std::allocator<DA_FILESAVE> >::_Node *> _Alptr;
};

/* 7127 */
struct __cppobj std::_Allocator_base<DA_FILESAVE>
{
};

/* 7128 */
struct __cppobj std::allocator<DA_FILESAVE> : std::_Allocator_base<DA_FILESAVE>
{
};

/* 7129 */
struct __cppobj std::_List_val<DA_FILESAVE,std::allocator<DA_FILESAVE> > : std::_List_ptr<DA_FILESAVE,std::allocator<DA_FILESAVE> >
{
  std::allocator<DA_FILESAVE> _Alval;
};

/* 7130 */
struct __cppobj std::list<DA_FILESAVE,std::allocator<DA_FILESAVE> > : std::_List_val<DA_FILESAVE,std::allocator<DA_FILESAVE> >
{
  std::_List_nod<DA_FILESAVE,std::allocator<DA_FILESAVE> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 7131 */
struct __cppobj std::allocator<DA_FILESAVE>::rebind<std::_List_nod<DA_FILESAVE,std::allocator<DA_FILESAVE> >::_Node>
{
};

/* 7132 */
struct __cppobj std::allocator<DA_FILESAVE>::rebind<std::_List_nod<DA_FILESAVE,std::allocator<DA_FILESAVE> >::_Node *>
{
};

/* 7133 */
struct __cppobj std::allocator<DA_FILESAVE>::rebind<DA_FILESAVE>
{
};

/* 7134 */
struct __cppobj std::allocator<DA_CHUNK>::rebind<std::_List_nod<DA_CHUNK,std::allocator<DA_CHUNK> >::_Node>
{
};

/* 7135 */
struct __cppobj std::allocator<DA_CHUNK>::rebind<std::_List_nod<DA_CHUNK,std::allocator<DA_CHUNK> >::_Node *>
{
};

/* 7136 */
struct __cppobj std::allocator<DA_CHUNK>::rebind<DA_CHUNK>
{
};

/* 7137 */
struct std::pair<unsigned short *,CPropertySet *>
{
  unsigned __int16 *first;
  CPropertySet *second;
};

/* 7138 */
struct LockMessageBuffer<BS_PktLobbyTimeAck>
{
  BS_PktLobbyTimeAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7139 */
struct __cppobj std::_Allocator_base<XiMyStickerData const *>
{
};

/* 7140 */
struct __cppobj std::allocator<XiMyStickerData const *> : std::_Allocator_base<XiMyStickerData const *>
{
};

/* 7141 */
struct std::_Vector_val<XiMyStickerData const *,std::allocator<XiMyStickerData const *> >
{
  std::allocator<XiMyStickerData const *> _Alval;
};

/* 7142 */
struct __cppobj std::vector<XiMyStickerData const *,std::allocator<XiMyStickerData const *> > : std::_Vector_val<XiMyStickerData const *,std::allocator<XiMyStickerData const *> >
{
  XiMyStickerData **_Myfirst;
  XiMyStickerData **_Mylast;
  XiMyStickerData **_Myend;
};

/* 7143 */
struct MyStickerSearchPageBuilder
{
  wchar_t m_SearchName[32];
  std::vector<XiMyStickerData const *,std::allocator<XiMyStickerData const *> > m_list;
  unsigned int m_offset;
  unsigned int m_limitSize;
  unsigned int m_cur;
};

/* 7144 */
struct StickerSearchPageBuilder
{
  wchar_t m_SearchName[32];
  std::vector<XiStickerData *,std::allocator<XiStickerData *> > m_list;
  unsigned int m_limitSize;
  unsigned int m_offset;
  unsigned int m_cur;
};

/* 7145 */
struct XiStrChannel
{
  XiStrChannelName ChannelName;
  unsigned int UserNum;
};

/* 7146 */
struct LockMessageBuffer<BS_PktUserInfoAck>
{
  BS_PktUserInfoAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7147 */
struct LockMessageBuffer<BS_PktCheckInLobbyAck>
{
  BS_PktCheckInLobbyAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7148 */
struct SetImageType
{
  int imgtype;
};

/* 7149 */
struct ImageCacheEntry
{
  __int64 m_id;
  std::vector<char,std::allocator<char> > m_data;
  int m_atime;
  XiImageParam m_param;
};

/* 7150 */
struct LockMessageBuffer<BS_PktDeleteStickerCatalogAck>
{
  BS_PktDeleteStickerCatalogAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7151 */
struct LockMessageBuffer<BS_PktStickerNameCheckAck>
{
  BS_PktStickerNameCheckAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7152 */
struct LockMessageBuffer<BS_PktStickerReportAttachAck>
{
  BS_PktStickerReportAttachAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7153 */
struct __cppobj std::_Allocator_base<XiMyStickerData *>
{
};

/* 7154 */
struct __cppobj std::allocator<XiMyStickerData *> : std::_Allocator_base<XiMyStickerData *>
{
};

/* 7155 */
struct std::_Vector_val<XiMyStickerData *,std::allocator<XiMyStickerData *> >
{
  std::allocator<XiMyStickerData *> _Alval;
};

/* 7156 */
struct __cppobj std::vector<XiMyStickerData *,std::allocator<XiMyStickerData *> > : std::_Vector_val<XiMyStickerData *,std::allocator<XiMyStickerData *> >
{
  XiMyStickerData **_Myfirst;
  XiMyStickerData **_Mylast;
  XiMyStickerData **_Myend;
};

/* 7157 */
struct MyStickerListPageBuilder
{
  unsigned int m_LimitSize;
  std::vector<XiMyStickerData *,std::allocator<XiMyStickerData *> > m_list;
};

/* 7158 */
struct StickerListPageBuilder
{
  unsigned int m_LimitSize;
  std::vector<XiStickerData *,std::allocator<XiStickerData *> > m_list;
};

/* 7159 */
struct LockMessageBuffer<BS_PktStickerUploadAck>
{
  BS_PktStickerUploadAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7160 */
struct ImageResponse
{
  BS_LobbyDispatch *m_pLobbyDispatch;
  BS_PktGetImage *lpMsg;
  unsigned int m_Size;
};

/* 7161 */
struct LockMessageBuffer<BS_PktGetImageAck>
{
  BS_PktGetImageAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7162 */
struct FixedCache<ImageCacheEntry,__int64,512,16>::Monitor
{
  _RTL_CRITICAL_SECTION m_cs;
};

/* 7163 */
struct FixedCache<ImageCacheEntry,__int64,512,16>::Lock
{
  FixedCache<ImageCacheEntry,__int64,512,16>::Monitor *m_pMonitor;
};

/* 7164 */
struct FixedCache<ImageCacheEntry,__int64,512,16>::Slot
{
  FixedCache<ImageCacheEntry,__int64,512,16>::Monitor m_monitor;
  ImageCacheEntry *v[16];
  unsigned int m_size;
};

/* 7165 */
struct FixedCache<ImageCacheEntry,__int64,512,16>
{
  FixedCache<ImageCacheEntry,__int64,512,16>::Slot m_slot[512];
};

/* 7166 */
struct std::pair<std::vector<XiMyStickerData,std::allocator<XiMyStickerData> >::iterator,std::vector<XiMyStickerData,std::allocator<XiMyStickerData> >::iterator>
{
  std::vector<XiMyStickerData,std::allocator<XiMyStickerData> >::iterator first;
  std::vector<XiMyStickerData,std::allocator<XiMyStickerData> >::iterator second;
};

/* 7167 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiMyStickerData const *,int,XiMyStickerData const * const *,XiMyStickerData const * const &>
{
};

/* 7168 */
struct __cppobj std::_Ranit<XiMyStickerData const *,int,XiMyStickerData const * const *,XiMyStickerData const * const &> : std::iterator<std::random_access_iterator_tag,XiMyStickerData const *,int,XiMyStickerData const * const *,XiMyStickerData const * const &>
{
};

/* 7169 */
struct __cppobj std::vector<XiMyStickerData const *,std::allocator<XiMyStickerData const *> >::const_iterator : std::_Ranit<XiMyStickerData const *,int,XiMyStickerData const * const *,XiMyStickerData const * const &>
{
  XiMyStickerData **_Myptr;
};

/* 7170 */
struct __cppobj std::vector<XiMyStickerData const *,std::allocator<XiMyStickerData const *> >::iterator : std::vector<XiMyStickerData const *,std::allocator<XiMyStickerData const *> >::const_iterator
{
};

/* 7171 */
struct __cppobj std::iterator<std::random_access_iterator_tag,XiMyStickerData *,int,XiMyStickerData * const *,XiMyStickerData * const &>
{
};

/* 7172 */
struct __cppobj std::_Ranit<XiMyStickerData *,int,XiMyStickerData * const *,XiMyStickerData * const &> : std::iterator<std::random_access_iterator_tag,XiMyStickerData *,int,XiMyStickerData * const *,XiMyStickerData * const &>
{
};

/* 7173 */
struct __cppobj std::vector<XiMyStickerData *,std::allocator<XiMyStickerData *> >::const_iterator : std::_Ranit<XiMyStickerData *,int,XiMyStickerData * const *,XiMyStickerData * const &>
{
  XiMyStickerData **_Myptr;
};

/* 7174 */
struct __cppobj std::vector<XiMyStickerData *,std::allocator<XiMyStickerData *> >::iterator : std::vector<XiMyStickerData *,std::allocator<XiMyStickerData *> >::const_iterator
{
};

/* 7175 */
struct __cppobj std::allocator<XiMyStickerData *>::rebind<XiMyStickerData *>
{
};

/* 7176 */
struct __cppobj std::allocator<XiMyStickerData const *>::rebind<XiMyStickerData const *>
{
};

/* 7177 */
struct LockMessageBuffer<BS_PktStickerListAck>
{
  BS_PktStickerListAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7178 */
struct SendLobbyPacket
{
  BS_ProtocolPacket *m_pPacket;
};

/* 7179 */
struct __cppobj BS_Functors::fnServiceClose
{
};

/* 7180 */
struct __declspec(align(4)) auto_obj<SC_HANDLE__ *,BS_Functors::fnServiceClose>
{
  SC_HANDLE__ *m_Object;
  BS_Functors::fnServiceClose m_fnRun;
};

/* 7181 */
struct std::pair<unsigned long,XiStrQuest>
{
  unsigned int first;
  XiStrQuest second;
};

/* 7182 */
struct std::pair<unsigned short const *,BS_PacketAnalyze *>
{
  const wchar_t *first;
  BS_PacketAnalyze *second;
};

/* 7183 */
struct LockMessageBuffer<BS_PktNotifyBadSticker>
{
  BS_PktNotifyBadSticker *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7184 */
struct __cppobj XiDBGameItemThread_03 : XiPulseThread
{
};

/* 7185 */
struct __cppobj XiDBGameItemThread_02 : XiPulseThread
{
};

/* 7186 */
struct __cppobj XiDBGameItemThread_01 : XiPulseThread
{
};

/* 7187 */
struct __cppobj XiDBGameAuctionCarThread : XiPulseThread
{
};

/* 7188 */
struct __cppobj XiDBGameAuctionThread : XiPulseThread
{
};

/* 7189 */
struct __cppobj XiDBGameCarThread : XiPulseThread
{
};

/* 7190 */
struct __cppobj XiDBGameCharThread : XiPulseThread
{
};

/* 7191 */
struct __cppobj XiDBGameLogThread : XiPulseThread
{
};

/* 7192 */
struct __cppobj XiDBThread : XiPulseThread
{
};

/* 7193 */
struct LockMessageBuffer<BS_PktUserAuthAck>
{
  BS_PktUserAuthAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7194 */
struct LockMessageBuffer<BS_PktUserAuthEtc>
{
  BS_PktUserAuthEtc *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7195 */
struct LockMessageBuffer<BS_PktServerMessageAck>
{
  BS_PktServerMessageAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7196 */
struct AtomicList<BS_Area<BS_IVehicle> >
{
  BS_Area<BS_IVehicle> *aHead;
};

/* 7197 */
struct __cppobj AtomicLine<BS_Area<BS_IVehicle> > : AtomicList<BS_Area<BS_IVehicle> >
{
  char buff[1024];
};

/* 7198 */
struct AtomicPool<BS_Area<BS_IVehicle>,32,16>
{
  volatile int m_nCount;
  volatile int m_Index;
  AtomicLine<BS_Area<BS_IVehicle> > subList[16];
};

/* 7199 */
struct BS_AreaMgr
{
  unsigned int m_size;
  BS_Area<BS_IVehicle> *m_Area;
  AtomicPool<BS_Area<BS_IVehicle>,32,16> m_Pool;
};

/* 7200 */
struct AtomicList<BS_Area<BS_IVehicle>::FinalHandler>
{
  BS_Area<BS_IVehicle>::FinalHandler *aHead;
};

/* 7201 */
struct __cppobj AtomicLine<BS_Area<BS_IVehicle>::FinalHandler> : AtomicList<BS_Area<BS_IVehicle>::FinalHandler>
{
  char buff[1024];
};

/* 7202 */
struct AtomicPool<BS_Area<BS_IVehicle>::FinalHandler,32,16>
{
  volatile int m_nCount;
  volatile int m_Index;
  AtomicLine<BS_Area<BS_IVehicle>::FinalHandler> subList[16];
};

/* 7203 */
struct LoadContentFlag
{
  const wchar_t *fname;
};

/* 7204 */
struct FnlApi::CRc4Md5
{
  unsigned int __mCspHnd;
  unsigned int __mHash;
  unsigned int __mSesKey;
};

/* 7205 */
struct FnlApi::CMd5::SContext
{
  unsigned int mBuf[4];
  unsigned int mBits[2];
  char mIn[64];
};

/* 7206 */
struct FnlApi::CMd5
{
  FnlApi::CMd5::SContext __mCtx;
};

/* 7207 */
struct FnlApi::CCrc32
{
  unsigned int __mTbl[256];
};

/* 7208 */
struct FnlApi::CCrc16
{
  unsigned __int16 __mTbl[256];
};

/* 7209 */
struct std::pair<unsigned short const *,BS_FuncPerformanceMgr::BS_Factor *>
{
  const wchar_t *first;
  BS_FuncPerformanceMgr::BS_Factor *second;
};

/* 7210 */
struct LockMessageBuffer<BS_PktServerList>
{
  BS_PktServerList *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7211 */
struct GatherVehicleMove
{
  int m_nNow;
  int m_nCount;
  BS_AreaDispatch *m_pDispatch;
};

/* 7212 */
struct LockMessageBuffer<BS_PktMoveVehiclePlus>
{
  BS_PktMoveVehiclePlus *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7213 */
struct CastTask<BS_PktRemoveVehicle>
{
  int m_nNow;
  CastEndHandler *m_pEndHandler;
  BS_AreaDispatch *m_pSender;
  BS_PktRemoveVehicle m_Msg;
  HashedVector<BS_IVehicle *,4,16> *m_pFlushQueue;
};

/* 7214 */
struct LockMessageBuffer<BS_PktRemoveVehicle>
{
  BS_PktRemoveVehicle *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7215 */
union $22B65FFAC679BFAF0338F8172339BD18
{
  float f;
  unsigned int i;
};

/* 7216 */
struct std::pair<unsigned short const *,BS_CompletionHandlerMgr::BS_CompletionInfo>
{
  const wchar_t *first;
  BS_CompletionHandlerMgr::BS_CompletionInfo second;
};

/* 7217 */
struct LockMessageBuffer<BS_PktSystemMessage>
{
  BS_PktSystemMessage *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7218 */
struct LockMessageBuffer<BS_PktExitRushZoneAck>
{
  BS_PktExitRushZoneAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7219 */
struct LockMessageBuffer<BS_PktEnterRushZoneAck>
{
  BS_PktEnterRushZoneAck *Content;
  auto_lock<BS_CriticalSection> m_sync;
};

/* 7220 */
struct AnswerSKIDSetUnalCoin
{
  int nUnalCoin;
};

/* 7221 */
struct GDBQuery<AnswerSKIDSetUnalCoin>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDSetUnalCoin m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7222 */
struct GDBQuery<AnswerSKIDSetUnalCoin>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7223 */
struct GDBQuery<AnswerSKIDSetUnalCoin>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7224 */
struct GDBQuery<AnswerSKIDSetUnalCoin>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7225 */
struct GDBQuery<AnswerSKIDSetUnalCoin>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7226 */
struct AnswerSKIDGetUnalCoin
{
  int nUnalCoin;
};

/* 7227 */
struct GDBQuery<AnswerSKIDGetUnalCoin>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetUnalCoin m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7228 */
struct GDBQuery<AnswerSKIDGetUnalCoin>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7229 */
struct GDBQuery<AnswerSKIDGetUnalCoin>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7230 */
struct GDBQuery<AnswerSKIDGetUnalCoin>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7231 */
struct GDBQuery<AnswerSKIDGetUnalCoin>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7232 */
struct GDBQuery<AnswerSKIDGetUnalCoin>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7233 */
struct GDBQuery<AnswerSKIDGetUnalCoin>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7234 */
struct GDBQuery<AnswerSKIDGetUnalCoin>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7235 */
struct GDBQuery<AnswerSKIDGetUnalCoin>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7236 */
struct GDBQuery<AnswerSKIDGetUnalCoin>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7237 */
struct AnswerSKIDGetAllHancoinGarage
{
  int nCount;
};

/* 7238 */
struct GDBQuery<AnswerSKIDGetAllHancoinGarage>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetAllHancoinGarage m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7239 */
struct GDBQuery<AnswerSKIDGetAllHancoinGarage>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7240 */
struct GDBQuery<AnswerSKIDGetAllHancoinGarage>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7241 */
struct GDBQuery<AnswerSKIDGetAllHancoinGarage>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7242 */
struct GDBQuery<AnswerSKIDGetAllHancoinGarage>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7243 */
struct GDBQuery<AnswerSKIDGetAllHancoinGarage>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7244 */
struct GDBQuery<AnswerSKIDGetAllHancoinGarage>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7245 */
struct GDBQuery<AnswerSKIDGetAllHancoinGarage>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7246 */
struct GDBQuery<AnswerSKIDGetAllHancoinGarage>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7247 */
struct GDBQuery<AnswerSKIDGetAllHancoinGarage>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7248 */
struct AnswerSKIDGetAllHancoinInvenHistory
{
  int nCount;
};

/* 7249 */
struct GDBQuery<AnswerSKIDGetAllHancoinInvenHistory>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetAllHancoinInvenHistory m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7250 */
struct GDBQuery<AnswerSKIDGetAllHancoinInvenHistory>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7251 */
struct GDBQuery<AnswerSKIDGetAllHancoinInvenHistory>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7252 */
struct GDBQuery<AnswerSKIDGetAllHancoinInvenHistory>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7253 */
struct GDBQuery<AnswerSKIDGetAllHancoinInvenHistory>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7254 */
struct GDBQuery<AnswerSKIDGetAllHancoinInvenHistory>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7255 */
struct GDBQuery<AnswerSKIDGetAllHancoinInvenHistory>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7256 */
struct GDBQuery<AnswerSKIDGetAllHancoinInvenHistory>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7257 */
struct GDBQuery<AnswerSKIDGetAllHancoinInvenHistory>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7258 */
struct GDBQuery<AnswerSKIDGetAllHancoinInvenHistory>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7259 */
struct AnswerSKIDGetAllHancoinInven
{
  int nCount;
};

/* 7260 */
struct GDBQuery<AnswerSKIDGetAllHancoinInven>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetAllHancoinInven m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7261 */
struct GDBQuery<AnswerSKIDGetAllHancoinInven>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7262 */
struct GDBQuery<AnswerSKIDGetAllHancoinInven>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7263 */
struct GDBQuery<AnswerSKIDGetAllHancoinInven>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7264 */
struct GDBQuery<AnswerSKIDGetAllHancoinInven>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7265 */
struct GDBQuery<AnswerSKIDGetAllHancoinInven>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7266 */
struct GDBQuery<AnswerSKIDGetAllHancoinInven>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7267 */
struct GDBQuery<AnswerSKIDGetAllHancoinInven>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7268 */
struct GDBQuery<AnswerSKIDGetAllHancoinInven>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7269 */
struct GDBQuery<AnswerSKIDGetAllHancoinInven>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7270 */
struct __unaligned __declspec(align(4)) AnswerSKIDGetGMCmdLine
{
  __int64 nCmdId;
  __int64 nBCastId;
  char szCDate[21];
  char szBDate[21];
  char szCmd[1024];
  char szReadYN[2];
};

/* 7271 */
struct GDBQuery<AnswerSKIDGetGMCmdLine>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetGMCmdLine m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7272 */
struct GDBQuery<AnswerSKIDGetGMCmdLine>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7273 */
struct GDBQuery<AnswerSKIDGetGMCmdLine>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7274 */
struct GDBQuery<AnswerSKIDGetGMCmdLine>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7275 */
struct GDBQuery<AnswerSKIDGetGMCmdLine>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7276 */
struct GDBQuery<AnswerSKIDGetGMCmdLine>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7277 */
struct GDBQuery<AnswerSKIDGetGMCmdLine>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7278 */
struct GDBQuery<AnswerSKIDGetGMCmdLine>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7279 */
struct GDBQuery<AnswerSKIDGetGMCmdLine>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7280 */
struct GDBQuery<AnswerSKIDGetGMCmdLine>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7281 */
struct __unaligned __declspec(align(1)) AnswerSKIDGetEndingInfo
{
  char szCDate[21];
  int nNextCar;
};

/* 7282 */
struct GDBQuery<AnswerSKIDGetEndingInfo>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetEndingInfo m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7283 */
struct GDBQuery<AnswerSKIDGetEndingInfo>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7284 */
struct GDBQuery<AnswerSKIDGetEndingInfo>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7285 */
struct GDBQuery<AnswerSKIDGetEndingInfo>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7286 */
struct GDBQuery<AnswerSKIDGetEndingInfo>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7287 */
struct GDBQuery<AnswerSKIDGetEndingInfo>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7288 */
struct GDBQuery<AnswerSKIDGetEndingInfo>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7289 */
struct GDBQuery<AnswerSKIDGetEndingInfo>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7290 */
struct GDBQuery<AnswerSKIDGetEndingInfo>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7291 */
struct GDBQuery<AnswerSKIDGetEndingInfo>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7292 */
struct __unaligned __declspec(align(2)) AnswerSKIDLoadOtherSticker
{
  __int64 nStickerId;
  char szCDate[21];
  char szStickerName[33];
};

/* 7293 */
struct GDBQuery<AnswerSKIDLoadOtherSticker>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDLoadOtherSticker m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7294 */
struct GDBQuery<AnswerSKIDLoadOtherSticker>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7295 */
struct GDBQuery<AnswerSKIDLoadOtherSticker>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7296 */
struct GDBQuery<AnswerSKIDLoadOtherSticker>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7297 */
struct GDBQuery<AnswerSKIDLoadOtherSticker>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7298 */
struct GDBQuery<AnswerSKIDLoadOtherSticker>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7299 */
struct GDBQuery<AnswerSKIDLoadOtherSticker>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7300 */
struct GDBQuery<AnswerSKIDLoadOtherSticker>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7301 */
struct GDBQuery<AnswerSKIDLoadOtherSticker>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7302 */
struct GDBQuery<AnswerSKIDLoadOtherSticker>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7303 */
struct __unaligned __declspec(align(1)) AnswerSKIDLoadMyStickerCatalog
{
  __int64 nStickerId;
  __int64 nBigImageId;
  __int64 nCid;
  char szCName[33];
  int nStickerType;
  __int64 nAttachCnt;
  char szCDate[21];
  int nStickerCategory;
  char szStickerName[33];
};

/* 7304 */
struct GDBQuery<AnswerSKIDLoadMyStickerCatalog>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDLoadMyStickerCatalog m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7305 */
struct GDBQuery<AnswerSKIDLoadMyStickerCatalog>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7306 */
struct GDBQuery<AnswerSKIDLoadMyStickerCatalog>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7307 */
struct GDBQuery<AnswerSKIDLoadMyStickerCatalog>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7308 */
struct GDBQuery<AnswerSKIDLoadMyStickerCatalog>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7309 */
struct GDBQuery<AnswerSKIDLoadMyStickerCatalog>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7310 */
struct GDBQuery<AnswerSKIDLoadMyStickerCatalog>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7311 */
struct GDBQuery<AnswerSKIDLoadMyStickerCatalog>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7312 */
struct GDBQuery<AnswerSKIDLoadMyStickerCatalog>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7313 */
struct GDBQuery<AnswerSKIDLoadMyStickerCatalog>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7314 */
struct AnswerSKIDSearchStickerByName
{
  __int64 nStickerId;
};

/* 7315 */
struct GDBQuery<AnswerSKIDSearchStickerByName>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDSearchStickerByName m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7316 */
struct GDBQuery<AnswerSKIDSearchStickerByName>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7317 */
struct GDBQuery<AnswerSKIDSearchStickerByName>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7318 */
struct GDBQuery<AnswerSKIDSearchStickerByName>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7319 */
struct GDBQuery<AnswerSKIDSearchStickerByName>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7320 */
struct GDBQuery<AnswerSKIDSearchStickerByName>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7321 */
struct GDBQuery<AnswerSKIDSearchStickerByName>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7322 */
struct GDBQuery<AnswerSKIDSearchStickerByName>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7323 */
struct GDBQuery<AnswerSKIDSearchStickerByName>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7324 */
struct GDBQuery<AnswerSKIDSearchStickerByName>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7325 */
struct AnswerSKIDGetCBattleWinCount
{
  int nWinCnt;
};

/* 7326 */
struct GDBQuery<AnswerSKIDGetCBattleWinCount>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetCBattleWinCount m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7327 */
struct GDBQuery<AnswerSKIDGetCBattleWinCount>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7328 */
struct GDBQuery<AnswerSKIDGetCBattleWinCount>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7329 */
struct GDBQuery<AnswerSKIDGetCBattleWinCount>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7330 */
struct GDBQuery<AnswerSKIDGetCBattleWinCount>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7331 */
struct GDBQuery<AnswerSKIDGetCBattleWinCount>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7332 */
struct GDBQuery<AnswerSKIDGetCBattleWinCount>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7333 */
struct GDBQuery<AnswerSKIDGetCBattleWinCount>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7334 */
struct GDBQuery<AnswerSKIDGetCBattleWinCount>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7335 */
struct GDBQuery<AnswerSKIDGetCBattleWinCount>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7336 */
struct __unaligned __declspec(align(4)) AnswerSKIDGetCBattleLastOwner
{
  __int64 nMasterTeam;
  int nSuccessiveWin;
};

/* 7337 */
struct GDBQuery<AnswerSKIDGetCBattleLastOwner>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetCBattleLastOwner m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7338 */
struct GDBQuery<AnswerSKIDGetCBattleLastOwner>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7339 */
struct GDBQuery<AnswerSKIDGetCBattleLastOwner>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7340 */
struct GDBQuery<AnswerSKIDGetCBattleLastOwner>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7341 */
struct GDBQuery<AnswerSKIDGetCBattleLastOwner>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7342 */
struct GDBQuery<AnswerSKIDGetCBattleLastOwner>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7343 */
struct GDBQuery<AnswerSKIDGetCBattleLastOwner>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7344 */
struct GDBQuery<AnswerSKIDGetCBattleLastOwner>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7345 */
struct GDBQuery<AnswerSKIDGetCBattleLastOwner>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7346 */
struct GDBQuery<AnswerSKIDGetCBattleLastOwner>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7347 */
struct AnswerSKIDGetCBattleNextMatch
{
  int nMatch;
};

/* 7348 */
struct GDBQuery<AnswerSKIDGetCBattleNextMatch>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetCBattleNextMatch m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7349 */
struct GDBQuery<AnswerSKIDGetCBattleNextMatch>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7350 */
struct GDBQuery<AnswerSKIDGetCBattleNextMatch>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7351 */
struct GDBQuery<AnswerSKIDGetCBattleNextMatch>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7352 */
struct GDBQuery<AnswerSKIDGetCBattleNextMatch>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7353 */
struct GDBQuery<AnswerSKIDGetCBattleNextMatch>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7354 */
struct GDBQuery<AnswerSKIDGetCBattleNextMatch>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7355 */
struct GDBQuery<AnswerSKIDGetCBattleNextMatch>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7356 */
struct GDBQuery<AnswerSKIDGetCBattleNextMatch>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7357 */
struct GDBQuery<AnswerSKIDGetCBattleNextMatch>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7358 */
struct __unaligned __declspec(align(1)) AnswerSKIDGetRecommendFriend
{
  __int64 nFriendCid;
  int nFriendServerId;
  char szFriendCName[33];
};

/* 7359 */
struct GDBQuery<AnswerSKIDGetRecommendFriend>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetRecommendFriend m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7360 */
struct GDBQuery<AnswerSKIDGetRecommendFriend>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7361 */
struct GDBQuery<AnswerSKIDGetRecommendFriend>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7362 */
struct GDBQuery<AnswerSKIDGetRecommendFriend>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7363 */
struct GDBQuery<AnswerSKIDGetRecommendFriend>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7364 */
struct GDBQuery<AnswerSKIDGetRecommendFriend>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7365 */
struct GDBQuery<AnswerSKIDGetRecommendFriend>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7366 */
struct GDBQuery<AnswerSKIDGetRecommendFriend>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7367 */
struct GDBQuery<AnswerSKIDGetRecommendFriend>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7368 */
struct GDBQuery<AnswerSKIDGetRecommendFriend>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7369 */
struct AnswerSKIDGetImage
{
  int nServerId;
  int nImageType;
  int nImageSize;
  int nImageColorKey;
};

/* 7370 */
struct GDBQuery<AnswerSKIDGetImage>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetImage m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7371 */
struct GDBQuery<AnswerSKIDGetImage>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7372 */
struct GDBQuery<AnswerSKIDGetImage>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7373 */
struct GDBQuery<AnswerSKIDGetImage>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7374 */
struct GDBQuery<AnswerSKIDGetImage>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7375 */
struct GDBQuery<AnswerSKIDGetImage>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7376 */
struct GDBQuery<AnswerSKIDGetImage>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7377 */
struct GDBQuery<AnswerSKIDGetImage>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7378 */
struct GDBQuery<AnswerSKIDGetImage>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7379 */
struct GDBQuery<AnswerSKIDGetImage>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7380 */
struct __cppobj AnswerSKIDUpdateServerTick
{
};

/* 7381 */
struct GDBQuery<AnswerSKIDUpdateServerTick>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateServerTick m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7382 */
struct GDBQuery<AnswerSKIDUpdateServerTick>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7383 */
struct GDBQuery<AnswerSKIDUpdateServerTick>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7384 */
struct GDBQuery<AnswerSKIDUpdateServerTick>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7385 */
struct GDBQuery<AnswerSKIDUpdateServerTick>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7386 */
struct __cppobj AnswerSKIDInsertServerTick
{
};

/* 7387 */
struct GDBQuery<AnswerSKIDInsertServerTick>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDInsertServerTick m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7388 */
struct GDBQuery<AnswerSKIDInsertServerTick>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7389 */
struct GDBQuery<AnswerSKIDInsertServerTick>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7390 */
struct GDBQuery<AnswerSKIDInsertServerTick>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7391 */
struct GDBQuery<AnswerSKIDInsertServerTick>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7392 */
struct AnswerSKIDGetServerTick
{
  int nServerTick;
};

/* 7393 */
struct GDBQuery<AnswerSKIDGetServerTick>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetServerTick m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7394 */
struct GDBQuery<AnswerSKIDGetServerTick>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7395 */
struct GDBQuery<AnswerSKIDGetServerTick>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7396 */
struct GDBQuery<AnswerSKIDGetServerTick>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7397 */
struct GDBQuery<AnswerSKIDGetServerTick>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7398 */
struct GDBQuery<AnswerSKIDGetServerTick>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7399 */
struct GDBQuery<AnswerSKIDGetServerTick>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7400 */
struct GDBQuery<AnswerSKIDGetServerTick>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7401 */
struct GDBQuery<AnswerSKIDGetServerTick>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7402 */
struct GDBQuery<AnswerSKIDGetServerTick>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7403 */
struct __cppobj AnswerSKIDInsertPREvent
{
};

/* 7404 */
struct GDBQuery<AnswerSKIDInsertPREvent>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDInsertPREvent m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7405 */
struct GDBQuery<AnswerSKIDInsertPREvent>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7406 */
struct GDBQuery<AnswerSKIDInsertPREvent>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7407 */
struct GDBQuery<AnswerSKIDInsertPREvent>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7408 */
struct GDBQuery<AnswerSKIDInsertPREvent>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7409 */
struct __unaligned __declspec(align(2)) AnswerSKIDGetPREventValue
{
  __int64 nParam;
  char szSParam[33];
  char szEParam[33];
  char szDate[20];
};

/* 7410 */
struct GDBQuery<AnswerSKIDGetPREventValue>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetPREventValue m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7411 */
struct GDBQuery<AnswerSKIDGetPREventValue>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7412 */
struct GDBQuery<AnswerSKIDGetPREventValue>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7413 */
struct GDBQuery<AnswerSKIDGetPREventValue>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7414 */
struct GDBQuery<AnswerSKIDGetPREventValue>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7415 */
struct GDBQuery<AnswerSKIDGetPREventValue>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7416 */
struct GDBQuery<AnswerSKIDGetPREventValue>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7417 */
struct GDBQuery<AnswerSKIDGetPREventValue>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7418 */
struct GDBQuery<AnswerSKIDGetPREventValue>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7419 */
struct GDBQuery<AnswerSKIDGetPREventValue>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7420 */
struct AnswerSKIDCheckPREventCountByDate
{
  int nCount;
};

/* 7421 */
struct GDBQuery<AnswerSKIDCheckPREventCountByDate>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDCheckPREventCountByDate m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7422 */
struct GDBQuery<AnswerSKIDCheckPREventCountByDate>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7423 */
struct GDBQuery<AnswerSKIDCheckPREventCountByDate>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7424 */
struct GDBQuery<AnswerSKIDCheckPREventCountByDate>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7425 */
struct GDBQuery<AnswerSKIDCheckPREventCountByDate>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7426 */
struct GDBQuery<AnswerSKIDCheckPREventCountByDate>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7427 */
struct GDBQuery<AnswerSKIDCheckPREventCountByDate>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7428 */
struct GDBQuery<AnswerSKIDCheckPREventCountByDate>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7429 */
struct GDBQuery<AnswerSKIDCheckPREventCountByDate>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7430 */
struct GDBQuery<AnswerSKIDCheckPREventCountByDate>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7431 */
struct AnswerSKIDCheckPREventCount
{
  int nCount;
};

/* 7432 */
struct GDBQuery<AnswerSKIDCheckPREventCount>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDCheckPREventCount m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7433 */
struct GDBQuery<AnswerSKIDCheckPREventCount>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7434 */
struct GDBQuery<AnswerSKIDCheckPREventCount>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7435 */
struct GDBQuery<AnswerSKIDCheckPREventCount>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7436 */
struct GDBQuery<AnswerSKIDCheckPREventCount>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7437 */
struct GDBQuery<AnswerSKIDCheckPREventCount>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7438 */
struct GDBQuery<AnswerSKIDCheckPREventCount>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7439 */
struct GDBQuery<AnswerSKIDCheckPREventCount>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7440 */
struct GDBQuery<AnswerSKIDCheckPREventCount>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7441 */
struct GDBQuery<AnswerSKIDCheckPREventCount>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7442 */
struct AnswerSKIDCheckPREventById
{
  int nCount;
};

/* 7443 */
struct GDBQuery<AnswerSKIDCheckPREventById>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDCheckPREventById m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7444 */
struct GDBQuery<AnswerSKIDCheckPREventById>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7445 */
struct GDBQuery<AnswerSKIDCheckPREventById>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7446 */
struct GDBQuery<AnswerSKIDCheckPREventById>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7447 */
struct GDBQuery<AnswerSKIDCheckPREventById>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7448 */
struct GDBQuery<AnswerSKIDCheckPREventById>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7449 */
struct GDBQuery<AnswerSKIDCheckPREventById>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7450 */
struct GDBQuery<AnswerSKIDCheckPREventById>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7451 */
struct GDBQuery<AnswerSKIDCheckPREventById>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7452 */
struct GDBQuery<AnswerSKIDCheckPREventById>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7453 */
struct AnswerSKIDCheckReservedMember
{
  char szCName[33];
};

/* 7454 */
struct GDBQuery<AnswerSKIDCheckReservedMember>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDCheckReservedMember m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7455 */
struct GDBQuery<AnswerSKIDCheckReservedMember>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7456 */
struct GDBQuery<AnswerSKIDCheckReservedMember>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7457 */
struct GDBQuery<AnswerSKIDCheckReservedMember>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7458 */
struct GDBQuery<AnswerSKIDCheckReservedMember>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7459 */
struct GDBQuery<AnswerSKIDCheckReservedMember>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7460 */
struct GDBQuery<AnswerSKIDCheckReservedMember>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7461 */
struct GDBQuery<AnswerSKIDCheckReservedMember>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7462 */
struct GDBQuery<AnswerSKIDCheckReservedMember>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7463 */
struct GDBQuery<AnswerSKIDCheckReservedMember>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7464 */
struct AnswerSKIDCheckPCBangIP
{
  char szResult[33];
};

/* 7465 */
struct GDBQuery<AnswerSKIDCheckPCBangIP>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDCheckPCBangIP m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7466 */
struct GDBQuery<AnswerSKIDCheckPCBangIP>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7467 */
struct GDBQuery<AnswerSKIDCheckPCBangIP>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7468 */
struct GDBQuery<AnswerSKIDCheckPCBangIP>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7469 */
struct GDBQuery<AnswerSKIDCheckPCBangIP>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7470 */
struct GDBQuery<AnswerSKIDCheckPCBangIP>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7471 */
struct GDBQuery<AnswerSKIDCheckPCBangIP>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7472 */
struct GDBQuery<AnswerSKIDCheckPCBangIP>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7473 */
struct GDBQuery<AnswerSKIDCheckPCBangIP>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7474 */
struct GDBQuery<AnswerSKIDCheckPCBangIP>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7475 */
struct AnswerSKIDNextItemId
{
  __int64 nItemId;
};

/* 7476 */
struct GDBQuery<AnswerSKIDNextItemId>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDNextItemId m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7477 */
struct GDBQuery<AnswerSKIDNextItemId>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7478 */
struct GDBQuery<AnswerSKIDNextItemId>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7479 */
struct GDBQuery<AnswerSKIDNextItemId>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7480 */
struct GDBQuery<AnswerSKIDNextItemId>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7481 */
struct GDBQuery<AnswerSKIDNextItemId>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7482 */
struct GDBQuery<AnswerSKIDNextItemId>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7483 */
struct GDBQuery<AnswerSKIDNextItemId>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7484 */
struct GDBQuery<AnswerSKIDNextItemId>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7485 */
struct GDBQuery<AnswerSKIDNextItemId>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7486 */
struct AnswerSKIDNextEventId
{
  __int64 nEventId;
};

/* 7487 */
struct GDBQuery<AnswerSKIDNextEventId>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDNextEventId m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7488 */
struct GDBQuery<AnswerSKIDNextEventId>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7489 */
struct GDBQuery<AnswerSKIDNextEventId>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7490 */
struct GDBQuery<AnswerSKIDNextEventId>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7491 */
struct GDBQuery<AnswerSKIDNextEventId>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7492 */
struct GDBQuery<AnswerSKIDNextEventId>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7493 */
struct GDBQuery<AnswerSKIDNextEventId>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7494 */
struct GDBQuery<AnswerSKIDNextEventId>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7495 */
struct GDBQuery<AnswerSKIDNextEventId>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7496 */
struct GDBQuery<AnswerSKIDNextEventId>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7497 */
struct AnswerSKIDNextImageId
{
  __int64 nImageId;
};

/* 7498 */
struct GDBQuery<AnswerSKIDNextImageId>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDNextImageId m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7499 */
struct GDBQuery<AnswerSKIDNextImageId>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7500 */
struct GDBQuery<AnswerSKIDNextImageId>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7501 */
struct GDBQuery<AnswerSKIDNextImageId>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7502 */
struct GDBQuery<AnswerSKIDNextImageId>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7503 */
struct GDBQuery<AnswerSKIDNextImageId>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7504 */
struct GDBQuery<AnswerSKIDNextImageId>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7505 */
struct GDBQuery<AnswerSKIDNextImageId>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7506 */
struct GDBQuery<AnswerSKIDNextImageId>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7507 */
struct GDBQuery<AnswerSKIDNextImageId>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7508 */
struct __unaligned __declspec(align(2)) AnswerSKIDSelectMsg
{
  __int64 nMsgId;
  __int64 nSid;
  char szSName[33];
  int nKind;
  char szState[2];
  char szSubject[21];
  char szContent[201];
  __int64 nGold;
  char szItem[101];
  char szSendDate[20];
};

/* 7509 */
struct GDBQuery<AnswerSKIDSelectMsg>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDSelectMsg m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7510 */
struct GDBQuery<AnswerSKIDSelectMsg>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7511 */
struct GDBQuery<AnswerSKIDSelectMsg>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7512 */
struct GDBQuery<AnswerSKIDSelectMsg>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7513 */
struct GDBQuery<AnswerSKIDSelectMsg>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7514 */
struct GDBQuery<AnswerSKIDSelectMsg>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7515 */
struct GDBQuery<AnswerSKIDSelectMsg>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7516 */
struct GDBQuery<AnswerSKIDSelectMsg>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7517 */
struct GDBQuery<AnswerSKIDSelectMsg>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7518 */
struct GDBQuery<AnswerSKIDSelectMsg>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7519 */
struct __unaligned __declspec(align(4)) AnswerSKIDGetCidEx
{
  __int64 nCid;
  int nServerId;
};

/* 7520 */
struct GDBQuery<AnswerSKIDGetCidEx>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetCidEx m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7521 */
struct GDBQuery<AnswerSKIDGetCidEx>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7522 */
struct GDBQuery<AnswerSKIDGetCidEx>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7523 */
struct GDBQuery<AnswerSKIDGetCidEx>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7524 */
struct GDBQuery<AnswerSKIDGetCidEx>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7525 */
struct GDBQuery<AnswerSKIDGetCidEx>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7526 */
struct GDBQuery<AnswerSKIDGetCidEx>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7527 */
struct GDBQuery<AnswerSKIDGetCidEx>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7528 */
struct GDBQuery<AnswerSKIDGetCidEx>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7529 */
struct GDBQuery<AnswerSKIDGetCidEx>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7530 */
struct __unaligned __declspec(align(4)) AnswerSKIDGetCid
{
  __int64 nCid;
  int nServerId;
};

/* 7531 */
struct GDBQuery<AnswerSKIDGetCid>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetCid m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7532 */
struct GDBQuery<AnswerSKIDGetCid>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7533 */
struct GDBQuery<AnswerSKIDGetCid>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7534 */
struct GDBQuery<AnswerSKIDGetCid>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7535 */
struct GDBQuery<AnswerSKIDGetCid>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7536 */
struct GDBQuery<AnswerSKIDGetCid>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7537 */
struct GDBQuery<AnswerSKIDGetCid>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7538 */
struct GDBQuery<AnswerSKIDGetCid>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7539 */
struct GDBQuery<AnswerSKIDGetCid>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7540 */
struct GDBQuery<AnswerSKIDGetCid>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7541 */
struct AnswerSKIDCountFriend
{
  int nCount;
};

/* 7542 */
struct GDBQuery<AnswerSKIDCountFriend>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDCountFriend m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7543 */
struct GDBQuery<AnswerSKIDCountFriend>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7544 */
struct GDBQuery<AnswerSKIDCountFriend>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7545 */
struct GDBQuery<AnswerSKIDCountFriend>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7546 */
struct GDBQuery<AnswerSKIDCountFriend>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7547 */
struct GDBQuery<AnswerSKIDCountFriend>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7548 */
struct GDBQuery<AnswerSKIDCountFriend>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7549 */
struct GDBQuery<AnswerSKIDCountFriend>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7550 */
struct GDBQuery<AnswerSKIDCountFriend>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7551 */
struct GDBQuery<AnswerSKIDCountFriend>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7552 */
struct __unaligned __declspec(align(1)) AnswerSKIDSelectFriend
{
  __int64 nFCid;
  char szFState[2];
  char szCName[33];
};

/* 7553 */
struct GDBQuery<AnswerSKIDSelectFriend>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDSelectFriend m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7554 */
struct GDBQuery<AnswerSKIDSelectFriend>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7555 */
struct GDBQuery<AnswerSKIDSelectFriend>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7556 */
struct GDBQuery<AnswerSKIDSelectFriend>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7557 */
struct GDBQuery<AnswerSKIDSelectFriend>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7558 */
struct GDBQuery<AnswerSKIDSelectFriend>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7559 */
struct GDBQuery<AnswerSKIDSelectFriend>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7560 */
struct GDBQuery<AnswerSKIDSelectFriend>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7561 */
struct GDBQuery<AnswerSKIDSelectFriend>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7562 */
struct GDBQuery<AnswerSKIDSelectFriend>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7563 */
struct __cppobj AnswerSKIDUpdateFriend
{
};

/* 7564 */
struct GDBQuery<AnswerSKIDUpdateFriend>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateFriend m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7565 */
struct GDBQuery<AnswerSKIDUpdateFriend>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7566 */
struct GDBQuery<AnswerSKIDUpdateFriend>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7567 */
struct GDBQuery<AnswerSKIDUpdateFriend>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7568 */
struct GDBQuery<AnswerSKIDUpdateFriend>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7569 */
struct __cppobj AnswerSKIDDeleteFriend
{
};

/* 7570 */
struct GDBQuery<AnswerSKIDDeleteFriend>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDDeleteFriend m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7571 */
struct GDBQuery<AnswerSKIDDeleteFriend>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7572 */
struct GDBQuery<AnswerSKIDDeleteFriend>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7573 */
struct GDBQuery<AnswerSKIDDeleteFriend>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7574 */
struct GDBQuery<AnswerSKIDDeleteFriend>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7575 */
struct __cppobj AnswerSKIDInsertFriend
{
};

/* 7576 */
struct GDBQuery<AnswerSKIDInsertFriend>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDInsertFriend m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7577 */
struct GDBQuery<AnswerSKIDInsertFriend>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7578 */
struct GDBQuery<AnswerSKIDInsertFriend>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7579 */
struct GDBQuery<AnswerSKIDInsertFriend>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7580 */
struct GDBQuery<AnswerSKIDInsertFriend>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7581 */
struct __unaligned __declspec(align(1)) AnswerSKIDGetTeamMembers
{
  __int64 nCid;
  char szCName[33];
  char szLastDate[33];
  int nAvatar;
  int nLevel;
  int nExp;
  __int64 nGold;
  float fKM;
  __int64 nTeamId;
  int nTeamRank;
  char szPType[2];
  int nLastArea;
  float fLastX;
  float fLastY;
  float fLastZ;
  float fLastW;
  int nCityId;
  int nPosState;
  int nPvpCnt;
  int nPvpWinCnt;
  int nPvpPoint;
  int nTPvpCnt;
  int nTPvpWinCnt;
  int nTPvpPoint;
  char szQuickSlot1[33];
  char szQuickSlot2[33];
  int nCurCarId;
  int nCurCarType;
  int nCurCarColor;
  char szTeamJoinDate[21];
};

/* 7582 */
struct GDBQuery<AnswerSKIDGetTeamMembers>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetTeamMembers m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7583 */
struct GDBQuery<AnswerSKIDGetTeamMembers>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7584 */
struct GDBQuery<AnswerSKIDGetTeamMembers>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7585 */
struct GDBQuery<AnswerSKIDGetTeamMembers>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7586 */
struct GDBQuery<AnswerSKIDGetTeamMembers>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7587 */
struct GDBQuery<AnswerSKIDGetTeamMembers>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7588 */
struct GDBQuery<AnswerSKIDGetTeamMembers>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7589 */
struct GDBQuery<AnswerSKIDGetTeamMembers>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7590 */
struct GDBQuery<AnswerSKIDGetTeamMembers>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7591 */
struct GDBQuery<AnswerSKIDGetTeamMembers>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7592 */
struct __cppobj AnswerSKIDGiveChannelTax
{
};

/* 7593 */
struct GDBQuery<AnswerSKIDGiveChannelTax>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGiveChannelTax m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7594 */
struct GDBQuery<AnswerSKIDGiveChannelTax>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7595 */
struct GDBQuery<AnswerSKIDGiveChannelTax>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7596 */
struct GDBQuery<AnswerSKIDGiveChannelTax>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7597 */
struct GDBQuery<AnswerSKIDGiveChannelTax>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7598 */
struct __cppobj AnswerSKIDInsertChannel
{
};

/* 7599 */
struct GDBQuery<AnswerSKIDInsertChannel>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDInsertChannel m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7600 */
struct GDBQuery<AnswerSKIDInsertChannel>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7601 */
struct GDBQuery<AnswerSKIDInsertChannel>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7602 */
struct GDBQuery<AnswerSKIDInsertChannel>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7603 */
struct GDBQuery<AnswerSKIDInsertChannel>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7604 */
struct AnswerSKIDTeamBanishDate
{
  char szBanishDate[21];
};

/* 7605 */
struct GDBQuery<AnswerSKIDTeamBanishDate>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDTeamBanishDate m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7606 */
struct GDBQuery<AnswerSKIDTeamBanishDate>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7607 */
struct GDBQuery<AnswerSKIDTeamBanishDate>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7608 */
struct GDBQuery<AnswerSKIDTeamBanishDate>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7609 */
struct GDBQuery<AnswerSKIDTeamBanishDate>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7610 */
struct GDBQuery<AnswerSKIDTeamBanishDate>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7611 */
struct GDBQuery<AnswerSKIDTeamBanishDate>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7612 */
struct GDBQuery<AnswerSKIDTeamBanishDate>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7613 */
struct GDBQuery<AnswerSKIDTeamBanishDate>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7614 */
struct GDBQuery<AnswerSKIDTeamBanishDate>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7615 */
struct AnswerSKIDCloseTeam
{
  char szCloseDate[21];
};

/* 7616 */
struct GDBQuery<AnswerSKIDCloseTeam>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDCloseTeam m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7617 */
struct GDBQuery<AnswerSKIDCloseTeam>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7618 */
struct GDBQuery<AnswerSKIDCloseTeam>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7619 */
struct GDBQuery<AnswerSKIDCloseTeam>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7620 */
struct GDBQuery<AnswerSKIDCloseTeam>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7621 */
struct GDBQuery<AnswerSKIDCloseTeam>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7622 */
struct GDBQuery<AnswerSKIDCloseTeam>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7623 */
struct GDBQuery<AnswerSKIDCloseTeam>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7624 */
struct GDBQuery<AnswerSKIDCloseTeam>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7625 */
struct GDBQuery<AnswerSKIDCloseTeam>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7626 */
struct __unaligned __declspec(align(4)) AnswerSKIDGetTeamInfoByName
{
  __int64 nTeamid;
  __int64 nTeamMarkId;
  char szTeamName[17];
  char szTeamDesc[80];
  int nTeamLevel;
  int nTeamPoint;
  int nChannelCnt;
  int nMemberCnt;
  char szTeamState[2];
  char szOwnChannel[40];
  __int64 nCid;
  char szCName[33];
  char szCreateDate[21];
  char szCloseDate[21];
  char szBanishDate[21];
  char szTeamUrl[33];
};

/* 7627 */
struct GDBQuery<AnswerSKIDGetTeamInfoByName>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetTeamInfoByName m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7628 */
struct GDBQuery<AnswerSKIDGetTeamInfoByName>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7629 */
struct GDBQuery<AnswerSKIDGetTeamInfoByName>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7630 */
struct GDBQuery<AnswerSKIDGetTeamInfoByName>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7631 */
struct GDBQuery<AnswerSKIDGetTeamInfoByName>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7632 */
struct GDBQuery<AnswerSKIDGetTeamInfoByName>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7633 */
struct GDBQuery<AnswerSKIDGetTeamInfoByName>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7634 */
struct GDBQuery<AnswerSKIDGetTeamInfoByName>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7635 */
struct GDBQuery<AnswerSKIDGetTeamInfoByName>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7636 */
struct GDBQuery<AnswerSKIDGetTeamInfoByName>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7637 */
struct __unaligned __declspec(align(4)) AnswerSKIDGetTeamInfo
{
  __int64 nTeamMarkId;
  char szTeamName[17];
  char szTeamDesc[80];
  int nTeamLevel;
  int nTeamPoint;
  int nChannelCnt;
  int nMemberCnt;
  char szTeamState[2];
  char szOwnChannel[40];
  __int64 nCid;
  char szCName[33];
  char szCreateDate[21];
  char szCloseDate[21];
  char szBanishDate[21];
  char szTeamUrl[33];
};

/* 7638 */
struct GDBQuery<AnswerSKIDGetTeamInfo>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetTeamInfo m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7639 */
struct GDBQuery<AnswerSKIDGetTeamInfo>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7640 */
struct GDBQuery<AnswerSKIDGetTeamInfo>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7641 */
struct GDBQuery<AnswerSKIDGetTeamInfo>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7642 */
struct GDBQuery<AnswerSKIDGetTeamInfo>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7643 */
struct GDBQuery<AnswerSKIDGetTeamInfo>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7644 */
struct GDBQuery<AnswerSKIDGetTeamInfo>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7645 */
struct GDBQuery<AnswerSKIDGetTeamInfo>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7646 */
struct GDBQuery<AnswerSKIDGetTeamInfo>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7647 */
struct GDBQuery<AnswerSKIDGetTeamInfo>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7648 */
struct AnswerSKIDCheckTeamName
{
  int nResult;
};

/* 7649 */
struct GDBQuery<AnswerSKIDCheckTeamName>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDCheckTeamName m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7650 */
struct GDBQuery<AnswerSKIDCheckTeamName>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7651 */
struct GDBQuery<AnswerSKIDCheckTeamName>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7652 */
struct GDBQuery<AnswerSKIDCheckTeamName>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7653 */
struct GDBQuery<AnswerSKIDCheckTeamName>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7654 */
struct GDBQuery<AnswerSKIDCheckTeamName>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7655 */
struct GDBQuery<AnswerSKIDCheckTeamName>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7656 */
struct GDBQuery<AnswerSKIDCheckTeamName>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7657 */
struct GDBQuery<AnswerSKIDCheckTeamName>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7658 */
struct GDBQuery<AnswerSKIDCheckTeamName>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7659 */
struct __unaligned __declspec(align(4)) AnswerSKIDGetTeamExtState
{
  int nTeamMemberCnt;
  __int64 nTeamExp;
  __int64 nTeamMoney;
};

/* 7660 */
struct GDBQuery<AnswerSKIDGetTeamExtState>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetTeamExtState m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7661 */
struct GDBQuery<AnswerSKIDGetTeamExtState>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7662 */
struct GDBQuery<AnswerSKIDGetTeamExtState>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7663 */
struct GDBQuery<AnswerSKIDGetTeamExtState>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7664 */
struct GDBQuery<AnswerSKIDGetTeamExtState>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7665 */
struct GDBQuery<AnswerSKIDGetTeamExtState>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7666 */
struct GDBQuery<AnswerSKIDGetTeamExtState>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7667 */
struct GDBQuery<AnswerSKIDGetTeamExtState>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7668 */
struct GDBQuery<AnswerSKIDGetTeamExtState>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7669 */
struct GDBQuery<AnswerSKIDGetTeamExtState>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7670 */
struct AnswerSKIDCheckTeamUrl
{
  int nResult;
};

/* 7671 */
struct GDBQuery<AnswerSKIDCheckTeamUrl>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDCheckTeamUrl m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7672 */
struct GDBQuery<AnswerSKIDCheckTeamUrl>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7673 */
struct GDBQuery<AnswerSKIDCheckTeamUrl>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7674 */
struct GDBQuery<AnswerSKIDCheckTeamUrl>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7675 */
struct GDBQuery<AnswerSKIDCheckTeamUrl>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7676 */
struct GDBQuery<AnswerSKIDCheckTeamUrl>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7677 */
struct GDBQuery<AnswerSKIDCheckTeamUrl>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7678 */
struct GDBQuery<AnswerSKIDCheckTeamUrl>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7679 */
struct GDBQuery<AnswerSKIDCheckTeamUrl>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7680 */
struct GDBQuery<AnswerSKIDCheckTeamUrl>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7681 */
struct AnswerSKIDGetTime
{
  char szTime[20];
};

/* 7682 */
struct GDBQuery<AnswerSKIDGetTime>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetTime m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7683 */
struct GDBQuery<AnswerSKIDGetTime>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7684 */
struct GDBQuery<AnswerSKIDGetTime>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7685 */
struct GDBQuery<AnswerSKIDGetTime>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7686 */
struct GDBQuery<AnswerSKIDGetTime>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7687 */
struct GDBQuery<AnswerSKIDGetTime>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7688 */
struct GDBQuery<AnswerSKIDGetTime>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7689 */
struct GDBQuery<AnswerSKIDGetTime>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7690 */
struct GDBQuery<AnswerSKIDGetTime>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7691 */
struct GDBQuery<AnswerSKIDGetTime>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7692 */
struct AnswerSKIDGetCouponStamp
{
  int nType;
  int nStampIdx;
  int nState;
};

/* 7693 */
struct GDBQuery<AnswerSKIDGetCouponStamp>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetCouponStamp m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7694 */
struct GDBQuery<AnswerSKIDGetCouponStamp>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7695 */
struct GDBQuery<AnswerSKIDGetCouponStamp>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7696 */
struct GDBQuery<AnswerSKIDGetCouponStamp>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7697 */
struct GDBQuery<AnswerSKIDGetCouponStamp>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7698 */
struct GDBQuery<AnswerSKIDGetCouponStamp>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7699 */
struct GDBQuery<AnswerSKIDGetCouponStamp>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7700 */
struct GDBQuery<AnswerSKIDGetCouponStamp>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7701 */
struct GDBQuery<AnswerSKIDGetCouponStamp>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7702 */
struct GDBQuery<AnswerSKIDGetCouponStamp>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7703 */
struct AnswerSKIDGetCoupon
{
  float fPvPBattle;
  float fQuickService;
  float fChasing;
  float fCombo;
  float fDriveTime;
  float fDrift;
  float fArtDrive;
  float fJump;
  float fRevDrive;
  float fUnderCity;
};

/* 7704 */
struct GDBQuery<AnswerSKIDGetCoupon>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetCoupon m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7705 */
struct GDBQuery<AnswerSKIDGetCoupon>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7706 */
struct GDBQuery<AnswerSKIDGetCoupon>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7707 */
struct GDBQuery<AnswerSKIDGetCoupon>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7708 */
struct GDBQuery<AnswerSKIDGetCoupon>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7709 */
struct GDBQuery<AnswerSKIDGetCoupon>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7710 */
struct GDBQuery<AnswerSKIDGetCoupon>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7711 */
struct GDBQuery<AnswerSKIDGetCoupon>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7712 */
struct GDBQuery<AnswerSKIDGetCoupon>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7713 */
struct GDBQuery<AnswerSKIDGetCoupon>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7714 */
struct __cppobj AnswerSKIDSetCharExp
{
};

/* 7715 */
struct GDBQuery<AnswerSKIDSetCharExp>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDSetCharExp m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7716 */
struct GDBQuery<AnswerSKIDSetCharExp>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7717 */
struct GDBQuery<AnswerSKIDSetCharExp>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7718 */
struct GDBQuery<AnswerSKIDSetCharExp>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7719 */
struct GDBQuery<AnswerSKIDSetCharExp>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7720 */
struct __cppobj AnswerSKIDUpdateCharExp
{
};

/* 7721 */
struct GDBQuery<AnswerSKIDUpdateCharExp>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateCharExp m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7722 */
struct GDBQuery<AnswerSKIDUpdateCharExp>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7723 */
struct GDBQuery<AnswerSKIDUpdateCharExp>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7724 */
struct GDBQuery<AnswerSKIDUpdateCharExp>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7725 */
struct GDBQuery<AnswerSKIDUpdateCharExp>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7726 */
struct __cppobj AnswerSKIDUpdateCharExpByName
{
};

/* 7727 */
struct GDBQuery<AnswerSKIDUpdateCharExpByName>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateCharExpByName m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7728 */
struct GDBQuery<AnswerSKIDUpdateCharExpByName>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7729 */
struct GDBQuery<AnswerSKIDUpdateCharExpByName>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7730 */
struct GDBQuery<AnswerSKIDUpdateCharExpByName>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7731 */
struct GDBQuery<AnswerSKIDUpdateCharExpByName>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7732 */
struct AnswerSKIDGetUserDateFromLogout
{
  float nDateFromLogout;
};

/* 7733 */
struct GDBQuery<AnswerSKIDGetUserDateFromLogout>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetUserDateFromLogout m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7734 */
struct GDBQuery<AnswerSKIDGetUserDateFromLogout>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7735 */
struct GDBQuery<AnswerSKIDGetUserDateFromLogout>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7736 */
struct GDBQuery<AnswerSKIDGetUserDateFromLogout>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7737 */
struct GDBQuery<AnswerSKIDGetUserDateFromLogout>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7738 */
struct GDBQuery<AnswerSKIDGetUserDateFromLogout>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7739 */
struct GDBQuery<AnswerSKIDGetUserDateFromLogout>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7740 */
struct GDBQuery<AnswerSKIDGetUserDateFromLogout>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7741 */
struct GDBQuery<AnswerSKIDGetUserDateFromLogout>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7742 */
struct GDBQuery<AnswerSKIDGetUserDateFromLogout>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7743 */
struct AnswerSKIDGetCharMileage
{
  __int64 nMileage;
};

/* 7744 */
struct GDBQuery<AnswerSKIDGetCharMileage>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetCharMileage m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7745 */
struct GDBQuery<AnswerSKIDGetCharMileage>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7746 */
struct GDBQuery<AnswerSKIDGetCharMileage>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7747 */
struct GDBQuery<AnswerSKIDGetCharMileage>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7748 */
struct GDBQuery<AnswerSKIDGetCharMileage>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7749 */
struct GDBQuery<AnswerSKIDGetCharMileage>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7750 */
struct GDBQuery<AnswerSKIDGetCharMileage>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7751 */
struct GDBQuery<AnswerSKIDGetCharMileage>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7752 */
struct GDBQuery<AnswerSKIDGetCharMileage>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7753 */
struct GDBQuery<AnswerSKIDGetCharMileage>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7754 */
struct AnswerSKIDGetCharExp
{
  __int64 nExp;
};

/* 7755 */
struct GDBQuery<AnswerSKIDGetCharExp>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetCharExp m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7756 */
struct GDBQuery<AnswerSKIDGetCharExp>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7757 */
struct GDBQuery<AnswerSKIDGetCharExp>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7758 */
struct GDBQuery<AnswerSKIDGetCharExp>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7759 */
struct GDBQuery<AnswerSKIDGetCharExp>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7760 */
struct GDBQuery<AnswerSKIDGetCharExp>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7761 */
struct GDBQuery<AnswerSKIDGetCharExp>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7762 */
struct GDBQuery<AnswerSKIDGetCharExp>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7763 */
struct GDBQuery<AnswerSKIDGetCharExp>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7764 */
struct GDBQuery<AnswerSKIDGetCharExp>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7765 */
struct AnswerSKIDCreateCar
{
  int nCarId;
};

/* 7766 */
struct GDBQuery<AnswerSKIDCreateCar>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDCreateCar m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7767 */
struct GDBQuery<AnswerSKIDCreateCar>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7768 */
struct GDBQuery<AnswerSKIDCreateCar>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7769 */
struct GDBQuery<AnswerSKIDCreateCar>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7770 */
struct GDBQuery<AnswerSKIDCreateCar>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7771 */
struct GDBQuery<AnswerSKIDCreateCar>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7772 */
struct GDBQuery<AnswerSKIDCreateCar>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7773 */
struct GDBQuery<AnswerSKIDCreateCar>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7774 */
struct GDBQuery<AnswerSKIDCreateCar>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7775 */
struct GDBQuery<AnswerSKIDCreateCar>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7776 */
struct __cppobj AnswerSKIDUpdateCarRating
{
};

/* 7777 */
struct GDBQuery<AnswerSKIDUpdateCarRating>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateCarRating m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7778 */
struct GDBQuery<AnswerSKIDUpdateCarRating>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7779 */
struct GDBQuery<AnswerSKIDUpdateCarRating>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7780 */
struct GDBQuery<AnswerSKIDUpdateCarRating>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7781 */
struct GDBQuery<AnswerSKIDUpdateCarRating>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7782 */
struct AnswerSKIDGetCarRating
{
  float fCarRat;
};

/* 7783 */
struct GDBQuery<AnswerSKIDGetCarRating>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetCarRating m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7784 */
struct GDBQuery<AnswerSKIDGetCarRating>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7785 */
struct GDBQuery<AnswerSKIDGetCarRating>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7786 */
struct GDBQuery<AnswerSKIDGetCarRating>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7787 */
struct GDBQuery<AnswerSKIDGetCarRating>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7788 */
struct GDBQuery<AnswerSKIDGetCarRating>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7789 */
struct GDBQuery<AnswerSKIDGetCarRating>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7790 */
struct GDBQuery<AnswerSKIDGetCarRating>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7791 */
struct GDBQuery<AnswerSKIDGetCarRating>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7792 */
struct GDBQuery<AnswerSKIDGetCarRating>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7793 */
struct __unaligned __declspec(align(1)) AnswerSKIDGetCharMemberInfo
{
  __int64 nCid;
  char szCName[33];
  char szLastDate[21];
  char szMemberId[33];
  __int64 nTeamId;
  __int64 nTeamRank;
};

/* 7794 */
struct GDBQuery<AnswerSKIDGetCharMemberInfo>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetCharMemberInfo m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7795 */
struct GDBQuery<AnswerSKIDGetCharMemberInfo>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7796 */
struct GDBQuery<AnswerSKIDGetCharMemberInfo>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7797 */
struct GDBQuery<AnswerSKIDGetCharMemberInfo>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7798 */
struct GDBQuery<AnswerSKIDGetCharMemberInfo>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7799 */
struct GDBQuery<AnswerSKIDGetCharMemberInfo>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7800 */
struct GDBQuery<AnswerSKIDGetCharMemberInfo>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7801 */
struct GDBQuery<AnswerSKIDGetCharMemberInfo>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7802 */
struct GDBQuery<AnswerSKIDGetCharMemberInfo>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7803 */
struct GDBQuery<AnswerSKIDGetCharMemberInfo>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7804 */
struct AnswerSKIDCreateCharacter
{
  __int64 nCid;
};

/* 7805 */
struct GDBQuery<AnswerSKIDCreateCharacter>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDCreateCharacter m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7806 */
struct GDBQuery<AnswerSKIDCreateCharacter>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7807 */
struct GDBQuery<AnswerSKIDCreateCharacter>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7808 */
struct GDBQuery<AnswerSKIDCreateCharacter>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7809 */
struct GDBQuery<AnswerSKIDCreateCharacter>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7810 */
struct GDBQuery<AnswerSKIDCreateCharacter>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7811 */
struct GDBQuery<AnswerSKIDCreateCharacter>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7812 */
struct GDBQuery<AnswerSKIDCreateCharacter>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7813 */
struct GDBQuery<AnswerSKIDCreateCharacter>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7814 */
struct GDBQuery<AnswerSKIDCreateCharacter>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7815 */
struct AnswerSKIDCheckCharacterName
{
  int nResult;
};

/* 7816 */
struct GDBQuery<AnswerSKIDCheckCharacterName>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDCheckCharacterName m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7817 */
struct GDBQuery<AnswerSKIDCheckCharacterName>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7818 */
struct GDBQuery<AnswerSKIDCheckCharacterName>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7819 */
struct GDBQuery<AnswerSKIDCheckCharacterName>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7820 */
struct GDBQuery<AnswerSKIDCheckCharacterName>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7821 */
struct GDBQuery<AnswerSKIDCheckCharacterName>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7822 */
struct GDBQuery<AnswerSKIDCheckCharacterName>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7823 */
struct GDBQuery<AnswerSKIDCheckCharacterName>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7824 */
struct GDBQuery<AnswerSKIDCheckCharacterName>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7825 */
struct GDBQuery<AnswerSKIDCheckCharacterName>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7826 */
struct __unaligned __declspec(align(1)) AnswerSKIDGetPlayMode
{
  int nTryCnt;
  char szLastDate[21];
};

/* 7827 */
struct GDBQuery<AnswerSKIDGetPlayMode>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetPlayMode m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7828 */
struct GDBQuery<AnswerSKIDGetPlayMode>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7829 */
struct GDBQuery<AnswerSKIDGetPlayMode>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7830 */
struct GDBQuery<AnswerSKIDGetPlayMode>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7831 */
struct GDBQuery<AnswerSKIDGetPlayMode>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7832 */
struct GDBQuery<AnswerSKIDGetPlayMode>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7833 */
struct GDBQuery<AnswerSKIDGetPlayMode>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7834 */
struct GDBQuery<AnswerSKIDGetPlayMode>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7835 */
struct GDBQuery<AnswerSKIDGetPlayMode>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7836 */
struct GDBQuery<AnswerSKIDGetPlayMode>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7837 */
struct AnswerSKIDGetCharacterCnt
{
  int nCnt;
};

/* 7838 */
struct GDBQuery<AnswerSKIDGetCharacterCnt>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetCharacterCnt m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7839 */
struct GDBQuery<AnswerSKIDGetCharacterCnt>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7840 */
struct GDBQuery<AnswerSKIDGetCharacterCnt>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7841 */
struct GDBQuery<AnswerSKIDGetCharacterCnt>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7842 */
struct GDBQuery<AnswerSKIDGetCharacterCnt>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7843 */
struct GDBQuery<AnswerSKIDGetCharacterCnt>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7844 */
struct GDBQuery<AnswerSKIDGetCharacterCnt>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7845 */
struct GDBQuery<AnswerSKIDGetCharacterCnt>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7846 */
struct GDBQuery<AnswerSKIDGetCharacterCnt>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7847 */
struct GDBQuery<AnswerSKIDGetCharacterCnt>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7848 */
struct __unaligned __declspec(align(1)) AnswerSKIDGetCharacterList
{
  __int64 nCid;
  char szCName[33];
  int nAvatar;
  int nLevel;
  int nCarId;
  char szCDate[21];
  int nCarType;
  int nCarColor;
  __int64 nTeamId;
  char szTeamName[17];
  __int64 nTeamMarkId;
  int nGuildType;
};

/* 7849 */
struct GDBQuery<AnswerSKIDGetCharacterList>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetCharacterList m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7850 */
struct GDBQuery<AnswerSKIDGetCharacterList>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7851 */
struct GDBQuery<AnswerSKIDGetCharacterList>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7852 */
struct GDBQuery<AnswerSKIDGetCharacterList>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7853 */
struct GDBQuery<AnswerSKIDGetCharacterList>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7854 */
struct GDBQuery<AnswerSKIDGetCharacterList>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7855 */
struct GDBQuery<AnswerSKIDGetCharacterList>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7856 */
struct GDBQuery<AnswerSKIDGetCharacterList>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7857 */
struct GDBQuery<AnswerSKIDGetCharacterList>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7858 */
struct GDBQuery<AnswerSKIDGetCharacterList>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7859 */
struct AnswerSKIDGetUserInfo
{
  int nPermision;
  int nLastPlayTime;
  int nTotalPlayTime;
};

/* 7860 */
struct GDBQuery<AnswerSKIDGetUserInfo>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetUserInfo m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7861 */
struct GDBQuery<AnswerSKIDGetUserInfo>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7862 */
struct GDBQuery<AnswerSKIDGetUserInfo>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7863 */
struct GDBQuery<AnswerSKIDGetUserInfo>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7864 */
struct GDBQuery<AnswerSKIDGetUserInfo>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7865 */
struct GDBQuery<AnswerSKIDGetUserInfo>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7866 */
struct GDBQuery<AnswerSKIDGetUserInfo>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7867 */
struct GDBQuery<AnswerSKIDGetUserInfo>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7868 */
struct GDBQuery<AnswerSKIDGetUserInfo>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7869 */
struct GDBQuery<AnswerSKIDGetUserInfo>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7870 */
struct __unaligned __declspec(align(1)) AnswerSKIDGetEventSerial
{
  char szSerial[33];
  int nSeq;
};

/* 7871 */
struct GDBQuery<AnswerSKIDGetEventSerial>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetEventSerial m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7872 */
struct GDBQuery<AnswerSKIDGetEventSerial>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7873 */
struct GDBQuery<AnswerSKIDGetEventSerial>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7874 */
struct GDBQuery<AnswerSKIDGetEventSerial>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7875 */
struct GDBQuery<AnswerSKIDGetEventSerial>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7876 */
struct GDBQuery<AnswerSKIDGetEventSerial>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7877 */
struct GDBQuery<AnswerSKIDGetEventSerial>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7878 */
struct GDBQuery<AnswerSKIDGetEventSerial>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7879 */
struct GDBQuery<AnswerSKIDGetEventSerial>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7880 */
struct GDBQuery<AnswerSKIDGetEventSerial>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7881 */
struct __cppobj AnswerSKIDSetChannelBattle
{
};

/* 7882 */
struct GDBQuery<AnswerSKIDSetChannelBattle>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDSetChannelBattle m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7883 */
struct GDBQuery<AnswerSKIDSetChannelBattle>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7884 */
struct GDBQuery<AnswerSKIDSetChannelBattle>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7885 */
struct GDBQuery<AnswerSKIDSetChannelBattle>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7886 */
struct GDBQuery<AnswerSKIDSetChannelBattle>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7887 */
struct __cppobj AnswerSKIDSetChannelOwner
{
};

/* 7888 */
struct GDBQuery<AnswerSKIDSetChannelOwner>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDSetChannelOwner m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7889 */
struct GDBQuery<AnswerSKIDSetChannelOwner>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7890 */
struct GDBQuery<AnswerSKIDSetChannelOwner>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7891 */
struct GDBQuery<AnswerSKIDSetChannelOwner>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7892 */
struct GDBQuery<AnswerSKIDSetChannelOwner>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7893 */
struct AnswerSKIDCreateTeam
{
  __int64 nTeamId;
};

/* 7894 */
struct GDBQuery<AnswerSKIDCreateTeam>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDCreateTeam m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7895 */
struct GDBQuery<AnswerSKIDCreateTeam>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7896 */
struct GDBQuery<AnswerSKIDCreateTeam>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7897 */
struct GDBQuery<AnswerSKIDCreateTeam>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7898 */
struct GDBQuery<AnswerSKIDCreateTeam>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7899 */
struct GDBQuery<AnswerSKIDCreateTeam>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7900 */
struct GDBQuery<AnswerSKIDCreateTeam>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7901 */
struct GDBQuery<AnswerSKIDCreateTeam>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7902 */
struct GDBQuery<AnswerSKIDCreateTeam>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7903 */
struct GDBQuery<AnswerSKIDCreateTeam>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7904 */
struct __unaligned __declspec(align(1)) AnswerSKIDGetCouponParam
{
  char szCType[17];
  float fValue;
};

/* 7905 */
struct GDBQuery<AnswerSKIDGetCouponParam>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetCouponParam m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7906 */
struct GDBQuery<AnswerSKIDGetCouponParam>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7907 */
struct GDBQuery<AnswerSKIDGetCouponParam>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7908 */
struct GDBQuery<AnswerSKIDGetCouponParam>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7909 */
struct GDBQuery<AnswerSKIDGetCouponParam>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7910 */
struct GDBQuery<AnswerSKIDGetCouponParam>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7911 */
struct GDBQuery<AnswerSKIDGetCouponParam>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7912 */
struct GDBQuery<AnswerSKIDGetCouponParam>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7913 */
struct GDBQuery<AnswerSKIDGetCouponParam>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7914 */
struct GDBQuery<AnswerSKIDGetCouponParam>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7915 */
struct AnswerSKIDUpdateCharMoney
{
  __int64 nResultMoney;
};

/* 7916 */
struct GDBQuery<AnswerSKIDUpdateCharMoney>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateCharMoney m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7917 */
struct GDBQuery<AnswerSKIDUpdateCharMoney>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7918 */
struct GDBQuery<AnswerSKIDUpdateCharMoney>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7919 */
struct GDBQuery<AnswerSKIDUpdateCharMoney>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7920 */
struct GDBQuery<AnswerSKIDUpdateCharMoney>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7921 */
struct GDBQuery<AnswerSKIDUpdateCharMoney>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7922 */
struct GDBQuery<AnswerSKIDUpdateCharMoney>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7923 */
struct GDBQuery<AnswerSKIDUpdateCharMoney>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7924 */
struct GDBQuery<AnswerSKIDUpdateCharMoney>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7925 */
struct GDBQuery<AnswerSKIDUpdateCharMoney>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7926 */
struct __cppobj AnswerSKIDUpdateUserLogout
{
};

/* 7927 */
struct GDBQuery<AnswerSKIDUpdateUserLogout>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateUserLogout m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7928 */
struct GDBQuery<AnswerSKIDUpdateUserLogout>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7929 */
struct GDBQuery<AnswerSKIDUpdateUserLogout>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7930 */
struct GDBQuery<AnswerSKIDUpdateUserLogout>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7931 */
struct GDBQuery<AnswerSKIDUpdateUserLogout>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7932 */
struct __unaligned __declspec(align(1)) AnswerSKIDLoadStickerCatalog
{
  __int64 nStickerId;
  __int64 nBigImageId;
  __int64 nCid;
  char szCName[33];
  int nStickerType;
  __int64 nAttachCnt;
  char szLastDate[21];
  int nStickerCategory;
  char szStickerName[33];
};

/* 7933 */
struct GDBQuery<AnswerSKIDLoadStickerCatalog>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDLoadStickerCatalog m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7934 */
struct GDBQuery<AnswerSKIDLoadStickerCatalog>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7935 */
struct GDBQuery<AnswerSKIDLoadStickerCatalog>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7936 */
struct GDBQuery<AnswerSKIDLoadStickerCatalog>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7937 */
struct GDBQuery<AnswerSKIDLoadStickerCatalog>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7938 */
struct GDBQuery<AnswerSKIDLoadStickerCatalog>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7939 */
struct GDBQuery<AnswerSKIDLoadStickerCatalog>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7940 */
struct GDBQuery<AnswerSKIDLoadStickerCatalog>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7941 */
struct GDBQuery<AnswerSKIDLoadStickerCatalog>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7942 */
struct GDBQuery<AnswerSKIDLoadStickerCatalog>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7943 */
struct AnswerSKIDLoadStickerId
{
  __int64 nStickerId;
};

/* 7944 */
struct GDBQuery<AnswerSKIDLoadStickerId>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDLoadStickerId m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7945 */
struct GDBQuery<AnswerSKIDLoadStickerId>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7946 */
struct GDBQuery<AnswerSKIDLoadStickerId>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7947 */
struct GDBQuery<AnswerSKIDLoadStickerId>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7948 */
struct GDBQuery<AnswerSKIDLoadStickerId>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7949 */
struct GDBQuery<AnswerSKIDLoadStickerId>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7950 */
struct GDBQuery<AnswerSKIDLoadStickerId>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7951 */
struct GDBQuery<AnswerSKIDLoadStickerId>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7952 */
struct GDBQuery<AnswerSKIDLoadStickerId>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7953 */
struct GDBQuery<AnswerSKIDLoadStickerId>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7954 */
struct __unaligned __declspec(align(2)) AnswerSKIDGetArbeitRank
{
  int nTime;
  __int64 nCid;
  char szCName[33];
  __int64 nTId;
  char szTeamName[17];
};

/* 7955 */
struct GDBQuery<AnswerSKIDGetArbeitRank>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetArbeitRank m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7956 */
struct GDBQuery<AnswerSKIDGetArbeitRank>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7957 */
struct GDBQuery<AnswerSKIDGetArbeitRank>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7958 */
struct GDBQuery<AnswerSKIDGetArbeitRank>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7959 */
struct GDBQuery<AnswerSKIDGetArbeitRank>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7960 */
struct GDBQuery<AnswerSKIDGetArbeitRank>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7961 */
struct GDBQuery<AnswerSKIDGetArbeitRank>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7962 */
struct GDBQuery<AnswerSKIDGetArbeitRank>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7963 */
struct GDBQuery<AnswerSKIDGetArbeitRank>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7964 */
struct GDBQuery<AnswerSKIDGetArbeitRank>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7965 */
struct __unaligned __declspec(align(1)) AnswerSKIDGetAuctionMileage
{
  __int64 nCid;
  char szCName[33];
  int nRegNum;
  int nBuyNum;
  int nSellNum;
};

/* 7966 */
struct GDBQuery<AnswerSKIDGetAuctionMileage>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetAuctionMileage m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7967 */
struct GDBQuery<AnswerSKIDGetAuctionMileage>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7968 */
struct GDBQuery<AnswerSKIDGetAuctionMileage>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7969 */
struct GDBQuery<AnswerSKIDGetAuctionMileage>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7970 */
struct GDBQuery<AnswerSKIDGetAuctionMileage>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7971 */
struct GDBQuery<AnswerSKIDGetAuctionMileage>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7972 */
struct GDBQuery<AnswerSKIDGetAuctionMileage>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7973 */
struct GDBQuery<AnswerSKIDGetAuctionMileage>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7974 */
struct GDBQuery<AnswerSKIDGetAuctionMileage>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7975 */
struct GDBQuery<AnswerSKIDGetAuctionMileage>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7976 */
struct __unaligned __declspec(align(1)) AnswerSKIDGetAuctionCarEx
{
  __int64 nCid;
  char szCName[33];
  int nRegId;
  char szItemId[33];
  int nInvenIdx;
  int nCarId;
  int nCarType;
  int nBaseColor;
  int nGrade;
  int nSlot;
  float fMitron;
  float fKMH;
  int nPrice;
  int nState;
  char szRegDate[33];
};

/* 7977 */
struct GDBQuery<AnswerSKIDGetAuctionCarEx>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetAuctionCarEx m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7978 */
struct GDBQuery<AnswerSKIDGetAuctionCarEx>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7979 */
struct GDBQuery<AnswerSKIDGetAuctionCarEx>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7980 */
struct GDBQuery<AnswerSKIDGetAuctionCarEx>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7981 */
struct GDBQuery<AnswerSKIDGetAuctionCarEx>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7982 */
struct GDBQuery<AnswerSKIDGetAuctionCarEx>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7983 */
struct GDBQuery<AnswerSKIDGetAuctionCarEx>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7984 */
struct GDBQuery<AnswerSKIDGetAuctionCarEx>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7985 */
struct GDBQuery<AnswerSKIDGetAuctionCarEx>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7986 */
struct GDBQuery<AnswerSKIDGetAuctionCarEx>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7987 */
struct __unaligned __declspec(align(1)) AnswerSKIDGetAuctionEx
{
  __int64 nCid;
  char szCName[33];
  int nRegId;
  char szItemId[33];
  int nItemNum;
  int nRandom;
  int nUpgrade;
  int nInvenIdx;
  int nPrice;
  int nState;
  char szAssistA[33];
  char szAssistB[33];
  int nBox;
  int nCTime;
  char szRegDate[33];
};

/* 7988 */
struct GDBQuery<AnswerSKIDGetAuctionEx>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetAuctionEx m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 7989 */
struct GDBQuery<AnswerSKIDGetAuctionEx>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 7990 */
struct GDBQuery<AnswerSKIDGetAuctionEx>::ResultInit
{
  GDBSession *m_pSession;
};

/* 7991 */
struct GDBQuery<AnswerSKIDGetAuctionEx>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7992 */
struct GDBQuery<AnswerSKIDGetAuctionEx>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7993 */
struct GDBQuery<AnswerSKIDGetAuctionEx>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 7994 */
struct GDBQuery<AnswerSKIDGetAuctionEx>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 7995 */
struct GDBQuery<AnswerSKIDGetAuctionEx>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 7996 */
struct GDBQuery<AnswerSKIDGetAuctionEx>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 7997 */
struct GDBQuery<AnswerSKIDGetAuctionEx>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 7998 */
struct __unaligned __declspec(align(1)) AnswerSKIDGetCharItem
{
  __int64 nGID;
  int nInvenIdx;
  char szItemId[33];
  int nCarId;
  int nStackNum;
  int nRandom;
  int nState;
  int nUpgrade;
  int nBelonging;
  char szAssistA[33];
  char szAssistB[33];
  int nBox;
  int nCTime;
};

/* 7999 */
struct GDBQuery<AnswerSKIDGetCharItem>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetCharItem m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8000 */
struct GDBQuery<AnswerSKIDGetCharItem>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 8001 */
struct GDBQuery<AnswerSKIDGetCharItem>::ResultInit
{
  GDBSession *m_pSession;
};

/* 8002 */
struct GDBQuery<AnswerSKIDGetCharItem>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8003 */
struct GDBQuery<AnswerSKIDGetCharItem>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8004 */
struct GDBQuery<AnswerSKIDGetCharItem>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8005 */
struct GDBQuery<AnswerSKIDGetCharItem>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8006 */
struct GDBQuery<AnswerSKIDGetCharItem>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8007 */
struct GDBQuery<AnswerSKIDGetCharItem>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8008 */
struct GDBQuery<AnswerSKIDGetCharItem>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 8009 */
struct __unaligned __declspec(align(2)) AnswerSKIDGetVisualItemHistory
{
  __int64 nGid;
  char szItemId[33];
  int nBuyTime;
  int nGetType;
  int nGoldType;
  int nPeriodIdx;
  int nHancoin;
  int nMito;
  int nMileage;
  int nState;
  char szData[20];
  char szMsg[100];
  char szDstName[33];
};

/* 8010 */
struct GDBQuery<AnswerSKIDGetVisualItemHistory>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetVisualItemHistory m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8011 */
struct GDBQuery<AnswerSKIDGetVisualItemHistory>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 8012 */
struct GDBQuery<AnswerSKIDGetVisualItemHistory>::ResultInit
{
  GDBSession *m_pSession;
};

/* 8013 */
struct GDBQuery<AnswerSKIDGetVisualItemHistory>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8014 */
struct GDBQuery<AnswerSKIDGetVisualItemHistory>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8015 */
struct GDBQuery<AnswerSKIDGetVisualItemHistory>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8016 */
struct GDBQuery<AnswerSKIDGetVisualItemHistory>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8017 */
struct GDBQuery<AnswerSKIDGetVisualItemHistory>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8018 */
struct GDBQuery<AnswerSKIDGetVisualItemHistory>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8019 */
struct GDBQuery<AnswerSKIDGetVisualItemHistory>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 8020 */
struct AnswerSKIDGetCharQuest
{
  char szQuestId[20];
  int nQuestState;
  int nQuestFailNum;
  int nPlaceIdx;
};

/* 8021 */
struct GDBQuery<AnswerSKIDGetCharQuest>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetCharQuest m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8022 */
struct GDBQuery<AnswerSKIDGetCharQuest>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 8023 */
struct GDBQuery<AnswerSKIDGetCharQuest>::ResultInit
{
  GDBSession *m_pSession;
};

/* 8024 */
struct GDBQuery<AnswerSKIDGetCharQuest>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8025 */
struct GDBQuery<AnswerSKIDGetCharQuest>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8026 */
struct GDBQuery<AnswerSKIDGetCharQuest>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8027 */
struct GDBQuery<AnswerSKIDGetCharQuest>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8028 */
struct GDBQuery<AnswerSKIDGetCharQuest>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8029 */
struct GDBQuery<AnswerSKIDGetCharQuest>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8030 */
struct GDBQuery<AnswerSKIDGetCharQuest>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 8031 */
struct AnswerSKIDGetCarInfo
{
  int nCarType;
  int nColor;
  int nUpgrade;
  int nAuctionCnt;
  float fMitron;
  float fKm;
  int nSlot;
};

/* 8032 */
struct GDBQuery<AnswerSKIDGetCarInfo>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetCarInfo m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8033 */
struct GDBQuery<AnswerSKIDGetCarInfo>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 8034 */
struct GDBQuery<AnswerSKIDGetCarInfo>::ResultInit
{
  GDBSession *m_pSession;
};

/* 8035 */
struct GDBQuery<AnswerSKIDGetCarInfo>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8036 */
struct GDBQuery<AnswerSKIDGetCarInfo>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8037 */
struct GDBQuery<AnswerSKIDGetCarInfo>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8038 */
struct GDBQuery<AnswerSKIDGetCarInfo>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8039 */
struct GDBQuery<AnswerSKIDGetCarInfo>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8040 */
struct GDBQuery<AnswerSKIDGetCarInfo>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8041 */
struct GDBQuery<AnswerSKIDGetCarInfo>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 8042 */
struct AnswerSKIDGetCarList
{
  int nCarId;
  int nCarType;
  int nColor;
  int nUpgrade;
  int nAuctionCnt;
  float fMitron;
  float fKm;
};

/* 8043 */
struct GDBQuery<AnswerSKIDGetCarList>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetCarList m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8044 */
struct GDBQuery<AnswerSKIDGetCarList>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 8045 */
struct GDBQuery<AnswerSKIDGetCarList>::ResultInit
{
  GDBSession *m_pSession;
};

/* 8046 */
struct GDBQuery<AnswerSKIDGetCarList>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8047 */
struct GDBQuery<AnswerSKIDGetCarList>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8048 */
struct GDBQuery<AnswerSKIDGetCarList>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8049 */
struct GDBQuery<AnswerSKIDGetCarList>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8050 */
struct GDBQuery<AnswerSKIDGetCarList>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8051 */
struct GDBQuery<AnswerSKIDGetCarList>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8052 */
struct GDBQuery<AnswerSKIDGetCarList>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 8053 */
struct __unaligned __declspec(align(2)) AnswerSKIDGetCharacter
{
  __int64 nCid;
  char szCName[33];
  char szLastDate[21];
  int nAvatar;
  int nLevel;
  int nExp;
  __int64 nGold;
  float fKM;
  __int64 nTeamId;
  int nTeamRank;
  char szTeamName[17];
  __int64 nTeamMarkId;
  char szPType[2];
  int nLastArea;
  float fLastX;
  float fLastY;
  float fLastZ;
  float fLastW;
  int nCityId;
  int nPosState;
  int nPvpCnt;
  int nPvpWinCnt;
  int nPvpPoint;
  int nTPvpCnt;
  int nTPvpWinCnt;
  int nTPvpPoint;
  char szQuickSlot1[33];
  char szQuickSlot2[33];
  char szTeamJoinDate[21];
  char szTeamCloseDate[21];
  char szTeamLeaveDate[21];
  int nPlayTime;
  int nCurCarId;
  int nPartInvenIdx;
  char szMemberId[33];
  char szMemberNum[33];
  int nTotalPlayTime;
  int nQuickCnt;
  int nChaseCnt;
  int nBattleTutorialCnt;
  char szBlockGameDate[21];
  char szBlockChatDate[21];
  int nHancoinInven;
  int nHancoinGarage;
  int nGuildType;
  __int64 nMileage;
};

/* 8054 */
struct GDBQuery<AnswerSKIDGetCharacter>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetCharacter m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8055 */
struct GDBQuery<AnswerSKIDGetCharacter>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 8056 */
struct GDBQuery<AnswerSKIDGetCharacter>::ResultInit
{
  GDBSession *m_pSession;
};

/* 8057 */
struct GDBQuery<AnswerSKIDGetCharacter>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8058 */
struct GDBQuery<AnswerSKIDGetCharacter>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8059 */
struct GDBQuery<AnswerSKIDGetCharacter>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8060 */
struct GDBQuery<AnswerSKIDGetCharacter>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8061 */
struct GDBQuery<AnswerSKIDGetCharacter>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8062 */
struct GDBQuery<AnswerSKIDGetCharacter>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8063 */
struct GDBQuery<AnswerSKIDGetCharacter>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 8064 */
struct __unaligned __declspec(align(2)) AnswerSKIDGetCharacterByName
{
  __int64 nCid;
  char szCName[33];
  char szLastDate[21];
  int nAvatar;
  int nLevel;
  int nExp;
  __int64 nGold;
  float fKM;
  __int64 nTeamId;
  int nTeamRank;
  char szTeamName[17];
  __int64 nTeamMarkId;
  char szPType[2];
  int nLastArea;
  float fLastX;
  float fLastY;
  float fLastZ;
  float fLastW;
  int nCityId;
  int nPosState;
  int nPvpCnt;
  int nPvpWinCnt;
  int nPvpPoint;
  int nTPvpCnt;
  int nTPvpWinCnt;
  int nTPvpPoint;
  char szQuickSlot1[33];
  char szQuickSlot2[33];
  char szTeamJoinDate[21];
  char szTeamCloseDate[21];
  char szTeamLeaveDate[21];
  int nPlayTime;
  int nCurCarId;
  int nPartInvenIdx;
  char szMemberId[33];
  char szMemberNum[33];
  int nTotalPlayTime;
  int nQuickCnt;
  int nChaseCnt;
  int nBattleTutorialCnt;
  char szBlockGameDate[21];
  char szBlockChatDate[21];
  int nHancoinInven;
  int nHancoinGarage;
  int nGuildType;
  int nMileage;
};

/* 8065 */
struct GDBQuery<AnswerSKIDGetCharacterByName>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetCharacterByName m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8066 */
struct GDBQuery<AnswerSKIDGetCharacterByName>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 8067 */
struct GDBQuery<AnswerSKIDGetCharacterByName>::ResultInit
{
  GDBSession *m_pSession;
};

/* 8068 */
struct GDBQuery<AnswerSKIDGetCharacterByName>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8069 */
struct GDBQuery<AnswerSKIDGetCharacterByName>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8070 */
struct GDBQuery<AnswerSKIDGetCharacterByName>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8071 */
struct GDBQuery<AnswerSKIDGetCharacterByName>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8072 */
struct GDBQuery<AnswerSKIDGetCharacterByName>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8073 */
struct GDBQuery<AnswerSKIDGetCharacterByName>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8074 */
struct GDBQuery<AnswerSKIDGetCharacterByName>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 8075 */
struct __unaligned __declspec(align(2)) AnswerSKIDGetVSItem
{
  __int64 nGID;
  char szItemId[33];
  int nInvenIdx;
  int nCarId;
  int nState;
  char szData[21];
  int nPeriod;
  int nCTime;
  int nUTime;
};

/* 8076 */
struct GDBQuery<AnswerSKIDGetVSItem>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetVSItem m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8077 */
struct GDBQuery<AnswerSKIDGetVSItem>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 8078 */
struct GDBQuery<AnswerSKIDGetVSItem>::ResultInit
{
  GDBSession *m_pSession;
};

/* 8079 */
struct GDBQuery<AnswerSKIDGetVSItem>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8080 */
struct GDBQuery<AnswerSKIDGetVSItem>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8081 */
struct GDBQuery<AnswerSKIDGetVSItem>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8082 */
struct GDBQuery<AnswerSKIDGetVSItem>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8083 */
struct GDBQuery<AnswerSKIDGetVSItem>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8084 */
struct GDBQuery<AnswerSKIDGetVSItem>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8085 */
struct GDBQuery<AnswerSKIDGetVSItem>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 8086 */
struct __unaligned __declspec(align(1)) AnswerSKIDGetSTItem
{
  int nInvenIdx;
  int nCarId;
  __int64 nStickerId;
  char szStickerName[33];
  int nColor;
  int nPosX;
  int nPosY;
  int nScaleX;
  int nScaleY;
  int nRotate;
  int nFlip;
  int nPart;
};

/* 8087 */
struct GDBQuery<AnswerSKIDGetSTItem>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetSTItem m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8088 */
struct GDBQuery<AnswerSKIDGetSTItem>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 8089 */
struct GDBQuery<AnswerSKIDGetSTItem>::ResultInit
{
  GDBSession *m_pSession;
};

/* 8090 */
struct GDBQuery<AnswerSKIDGetSTItem>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8091 */
struct GDBQuery<AnswerSKIDGetSTItem>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8092 */
struct GDBQuery<AnswerSKIDGetSTItem>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8093 */
struct GDBQuery<AnswerSKIDGetSTItem>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8094 */
struct GDBQuery<AnswerSKIDGetSTItem>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8095 */
struct GDBQuery<AnswerSKIDGetSTItem>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8096 */
struct GDBQuery<AnswerSKIDGetSTItem>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 8097 */
struct __cppobj AnswerSKIDCalcChannelTax
{
};

/* 8098 */
struct GDBQuery<AnswerSKIDCalcChannelTax>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDCalcChannelTax m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8099 */
struct GDBQuery<AnswerSKIDCalcChannelTax>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8100 */
struct GDBQuery<AnswerSKIDCalcChannelTax>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8101 */
struct GDBQuery<AnswerSKIDCalcChannelTax>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8102 */
struct GDBQuery<AnswerSKIDCalcChannelTax>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8103 */
struct __unaligned __declspec(align(2)) AnswerSKIDCollectChannelTax
{
  int nChannel;
  __int64 nLastTax;
  __int64 nLastMasterId;
  __int64 nLastMasterTid;
  char szLastMasterCName[33];
  char szLastMasterTName[17];
  char szLastColDate[20];
  __int64 nTeamAccTax;
};

/* 8104 */
struct GDBQuery<AnswerSKIDCollectChannelTax>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDCollectChannelTax m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8105 */
struct GDBQuery<AnswerSKIDCollectChannelTax>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 8106 */
struct GDBQuery<AnswerSKIDCollectChannelTax>::ResultInit
{
  GDBSession *m_pSession;
};

/* 8107 */
struct GDBQuery<AnswerSKIDCollectChannelTax>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8108 */
struct GDBQuery<AnswerSKIDCollectChannelTax>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8109 */
struct GDBQuery<AnswerSKIDCollectChannelTax>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8110 */
struct GDBQuery<AnswerSKIDCollectChannelTax>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8111 */
struct GDBQuery<AnswerSKIDCollectChannelTax>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8112 */
struct GDBQuery<AnswerSKIDCollectChannelTax>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8113 */
struct GDBQuery<AnswerSKIDCollectChannelTax>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 8114 */
struct __unaligned __declspec(align(1)) AnswerSKIDGetChannel
{
  int nChannelId;
  __int64 nOwnerCId;
  __int64 nOwnerTid;
  char szCName[33];
  char szTName[17];
  char szOwnDate[20];
  __int64 nMasterCid;
  __int64 nMasterTid;
  char szMasterCName[33];
  char szMasterTName[17];
  __int64 nAccTax;
  __int64 nTeamAccTax;
  __int64 nLastMasterCid;
  __int64 nLastMasterTid;
  char szLastMasterCName[33];
  char szLastMasterTName[17];
  __int64 nLastTax;
  char szLastColDate[20];
  char szOpenDate[20];
  char szBattleDate[20];
  char szEndDate[20];
  __int64 nLeaderCid;
  char szLeaderCName[33];
  char szBattleMap1[40];
  char szBattleMap2[40];
  char szBattleMap3[40];
  int nBattleTick;
};

/* 8115 */
struct GDBQuery<AnswerSKIDGetChannel>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetChannel m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8116 */
struct GDBQuery<AnswerSKIDGetChannel>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 8117 */
struct GDBQuery<AnswerSKIDGetChannel>::ResultInit
{
  GDBSession *m_pSession;
};

/* 8118 */
struct GDBQuery<AnswerSKIDGetChannel>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8119 */
struct GDBQuery<AnswerSKIDGetChannel>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8120 */
struct GDBQuery<AnswerSKIDGetChannel>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8121 */
struct GDBQuery<AnswerSKIDGetChannel>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8122 */
struct GDBQuery<AnswerSKIDGetChannel>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8123 */
struct GDBQuery<AnswerSKIDGetChannel>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8124 */
struct GDBQuery<AnswerSKIDGetChannel>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 8125 */
struct AnswerSKIDGetAuctionCarMaxRegID
{
  int nRegId;
};

/* 8126 */
struct GDBQuery<AnswerSKIDGetAuctionCarMaxRegID>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetAuctionCarMaxRegID m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8127 */
struct GDBQuery<AnswerSKIDGetAuctionCarMaxRegID>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 8128 */
struct GDBQuery<AnswerSKIDGetAuctionCarMaxRegID>::ResultInit
{
  GDBSession *m_pSession;
};

/* 8129 */
struct GDBQuery<AnswerSKIDGetAuctionCarMaxRegID>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8130 */
struct GDBQuery<AnswerSKIDGetAuctionCarMaxRegID>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8131 */
struct GDBQuery<AnswerSKIDGetAuctionCarMaxRegID>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8132 */
struct GDBQuery<AnswerSKIDGetAuctionCarMaxRegID>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8133 */
struct GDBQuery<AnswerSKIDGetAuctionCarMaxRegID>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8134 */
struct GDBQuery<AnswerSKIDGetAuctionCarMaxRegID>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8135 */
struct GDBQuery<AnswerSKIDGetAuctionCarMaxRegID>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 8136 */
struct __unaligned __declspec(align(1)) AnswerSKIDGetAuctionCar
{
  __int64 nCid;
  char szCName[33];
  int nRegId;
  char szItemId[33];
  int nInvenIdx;
  int nCarId;
  int nCarType;
  int nBaseColor;
  int nGrade;
  int nSlot;
  float fMitron;
  float fKMH;
  int nPrice;
  int nState;
  char szRegDate[33];
};

/* 8137 */
struct GDBQuery<AnswerSKIDGetAuctionCar>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetAuctionCar m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8138 */
struct GDBQuery<AnswerSKIDGetAuctionCar>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 8139 */
struct GDBQuery<AnswerSKIDGetAuctionCar>::ResultInit
{
  GDBSession *m_pSession;
};

/* 8140 */
struct GDBQuery<AnswerSKIDGetAuctionCar>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8141 */
struct GDBQuery<AnswerSKIDGetAuctionCar>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8142 */
struct GDBQuery<AnswerSKIDGetAuctionCar>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8143 */
struct GDBQuery<AnswerSKIDGetAuctionCar>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8144 */
struct GDBQuery<AnswerSKIDGetAuctionCar>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8145 */
struct GDBQuery<AnswerSKIDGetAuctionCar>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8146 */
struct GDBQuery<AnswerSKIDGetAuctionCar>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 8147 */
struct AnswerSKIDGetAuctionMaxRegID
{
  int nRegId;
};

/* 8148 */
struct GDBQuery<AnswerSKIDGetAuctionMaxRegID>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetAuctionMaxRegID m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8149 */
struct GDBQuery<AnswerSKIDGetAuctionMaxRegID>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 8150 */
struct GDBQuery<AnswerSKIDGetAuctionMaxRegID>::ResultInit
{
  GDBSession *m_pSession;
};

/* 8151 */
struct GDBQuery<AnswerSKIDGetAuctionMaxRegID>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8152 */
struct GDBQuery<AnswerSKIDGetAuctionMaxRegID>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8153 */
struct GDBQuery<AnswerSKIDGetAuctionMaxRegID>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8154 */
struct GDBQuery<AnswerSKIDGetAuctionMaxRegID>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8155 */
struct GDBQuery<AnswerSKIDGetAuctionMaxRegID>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8156 */
struct GDBQuery<AnswerSKIDGetAuctionMaxRegID>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8157 */
struct GDBQuery<AnswerSKIDGetAuctionMaxRegID>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 8158 */
struct __unaligned __declspec(align(1)) AnswerSKIDGetAuction
{
  __int64 nCid;
  char szCName[33];
  int nRegId;
  char szItemId[33];
  int nItemNum;
  int nRandom;
  int nUpgrade;
  int nInvenIdx;
  int nPrice;
  int nState;
  char szAssistA[33];
  char szAssistB[33];
  int nBox;
  int nCTime;
  char szRegDate[33];
};

/* 8159 */
struct GDBQuery<AnswerSKIDGetAuction>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetAuction m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8160 */
struct GDBQuery<AnswerSKIDGetAuction>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 8161 */
struct GDBQuery<AnswerSKIDGetAuction>::ResultInit
{
  GDBSession *m_pSession;
};

/* 8162 */
struct GDBQuery<AnswerSKIDGetAuction>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8163 */
struct GDBQuery<AnswerSKIDGetAuction>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8164 */
struct GDBQuery<AnswerSKIDGetAuction>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8165 */
struct GDBQuery<AnswerSKIDGetAuction>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8166 */
struct GDBQuery<AnswerSKIDGetAuction>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8167 */
struct GDBQuery<AnswerSKIDGetAuction>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8168 */
struct GDBQuery<AnswerSKIDGetAuction>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 8169 */
struct __cppobj AnswerSKIDUpdateCharHancoinGarage
{
};

/* 8170 */
struct GDBQuery<AnswerSKIDUpdateCharHancoinGarage>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateCharHancoinGarage m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8171 */
struct GDBQuery<AnswerSKIDUpdateCharHancoinGarage>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8172 */
struct GDBQuery<AnswerSKIDUpdateCharHancoinGarage>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8173 */
struct GDBQuery<AnswerSKIDUpdateCharHancoinGarage>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8174 */
struct GDBQuery<AnswerSKIDUpdateCharHancoinGarage>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8175 */
struct __cppobj AnswerSKIDUpdateCharHancoinInven
{
};

/* 8176 */
struct GDBQuery<AnswerSKIDUpdateCharHancoinInven>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateCharHancoinInven m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8177 */
struct GDBQuery<AnswerSKIDUpdateCharHancoinInven>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8178 */
struct GDBQuery<AnswerSKIDUpdateCharHancoinInven>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8179 */
struct GDBQuery<AnswerSKIDUpdateCharHancoinInven>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8180 */
struct GDBQuery<AnswerSKIDUpdateCharHancoinInven>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8181 */
struct __cppobj AnswerSKIDUpdateCarUpgrade2
{
};

/* 8182 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade2>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateCarUpgrade2 m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8183 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade2>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8184 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade2>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8185 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade2>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8186 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade2>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8187 */
struct __cppobj AnswerSKIDUpdateCarUpgrade3
{
};

/* 8188 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade3>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateCarUpgrade3 m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8189 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade3>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8190 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade3>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8191 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade3>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8192 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade3>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8193 */
struct __cppobj AnswerSKIDUpdateCarUpgrade4
{
};

/* 8194 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade4>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateCarUpgrade4 m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8195 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade4>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8196 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade4>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8197 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade4>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8198 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade4>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8199 */
struct __cppobj AnswerSKIDUpdateCarUpgrade5
{
};

/* 8200 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade5>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateCarUpgrade5 m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8201 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade5>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8202 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade5>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8203 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade5>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8204 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade5>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8205 */
struct __cppobj AnswerSKIDUpdateCarUpgrade6
{
};

/* 8206 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade6>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateCarUpgrade6 m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8207 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade6>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8208 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade6>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8209 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade6>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8210 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade6>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8211 */
struct __cppobj AnswerSKIDUpdateCarUpgrade7
{
};

/* 8212 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade7>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateCarUpgrade7 m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8213 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade7>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8214 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade7>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8215 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade7>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8216 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade7>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8217 */
struct __cppobj AnswerSKIDUpdateCarUpgrade8
{
};

/* 8218 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade8>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateCarUpgrade8 m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8219 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade8>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8220 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade8>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8221 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade8>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8222 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade8>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8223 */
struct __cppobj AnswerSKIDUpdateCarUpgrade9
{
};

/* 8224 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade9>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDUpdateCarUpgrade9 m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8225 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade9>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8226 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade9>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8227 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade9>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8228 */
struct GDBQuery<AnswerSKIDUpdateCarUpgrade9>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8229 */
struct __cppobj AnswerSKIDInsertVSItem
{
};

/* 8230 */
struct GDBQuery<AnswerSKIDInsertVSItem>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDInsertVSItem m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8231 */
struct GDBQuery<AnswerSKIDInsertVSItem>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8232 */
struct GDBQuery<AnswerSKIDInsertVSItem>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8233 */
struct GDBQuery<AnswerSKIDInsertVSItem>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8234 */
struct GDBQuery<AnswerSKIDInsertVSItem>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8235 */
struct __cppobj AnswerSKIDClearQuest
{
};

/* 8236 */
struct GDBQuery<AnswerSKIDClearQuest>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDClearQuest m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8237 */
struct GDBQuery<AnswerSKIDClearQuest>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8238 */
struct GDBQuery<AnswerSKIDClearQuest>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8239 */
struct GDBQuery<AnswerSKIDClearQuest>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8240 */
struct GDBQuery<AnswerSKIDClearQuest>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8241 */
struct __unaligned __declspec(align(2)) AnswerSKIDGetPlayModeList
{
  char szMode[33];
  int nTryCnt;
  int nWinCnt;
  int nPoint;
  char szLastDate[21];
};

/* 8242 */
struct GDBQuery<AnswerSKIDGetPlayModeList>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDGetPlayModeList m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8243 */
struct GDBQuery<AnswerSKIDGetPlayModeList>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 8244 */
struct GDBQuery<AnswerSKIDGetPlayModeList>::ResultInit
{
  GDBSession *m_pSession;
};

/* 8245 */
struct GDBQuery<AnswerSKIDGetPlayModeList>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8246 */
struct GDBQuery<AnswerSKIDGetPlayModeList>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8247 */
struct GDBQuery<AnswerSKIDGetPlayModeList>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8248 */
struct GDBQuery<AnswerSKIDGetPlayModeList>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8249 */
struct GDBQuery<AnswerSKIDGetPlayModeList>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8250 */
struct GDBQuery<AnswerSKIDGetPlayModeList>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8251 */
struct GDBQuery<AnswerSKIDGetPlayModeList>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 8252 */
struct __unaligned __declspec(align(2)) AnswerSKIDRequestCouponItem
{
  char szItemId[33];
  int nStack;
  char szItemParam[41];
};

/* 8253 */
struct GDBQuery<AnswerSKIDRequestCouponItem>
{
  GDBC *m_pDBC;
  GDBSession *m_pSession;
  GDBTransaction *m_pTxn;
  int m_nOutParamCount;
  AnswerSKIDRequestCouponItem m_answer;
  bool m_bError;
  XiOpTimeBlock m_timeblock;
};

/* 8254 */
struct GDBQuery<AnswerSKIDRequestCouponItem>::ResultFetcher
{
  GDBSession *m_pSession;
};

/* 8255 */
struct GDBQuery<AnswerSKIDRequestCouponItem>::ResultInit
{
  GDBSession *m_pSession;
};

/* 8256 */
struct GDBQuery<AnswerSKIDRequestCouponItem>::OutputFetcher
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8257 */
struct GDBQuery<AnswerSKIDRequestCouponItem>::OutputInit
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8258 */
struct GDBQuery<AnswerSKIDRequestCouponItem>::ParamBinder
{
  GDBSession *m_pSession;
};

/* 8259 */
struct GDBQuery<AnswerSKIDRequestCouponItem>::ResultBinder
{
  GDBSession *m_pSession;
};

/* 8260 */
struct GDBQuery<AnswerSKIDRequestCouponItem>::OutParamBinder
{
  GDBSession *m_pSession;
  int *m_OutParamCount;
};

/* 8261 */
struct GDBQuery<AnswerSKIDRequestCouponItem>::OutParamBinder2
{
  GDBSession *m_pSession;
  int m_nIndex;
};

/* 8262 */
struct GDBQuery<AnswerSKIDRequestCouponItem>::OutParamGet
{
  GDBSession *m_pSession;
};

/* 8263 */
struct XiUserInfoTbl
{
  XiStrUserInfo m_UserInfo;
};

/* 8264 */
struct XiCarInfoTbl
{
  XiStrCarInfo m_CarInfo;
};

/* 8265 */
struct XiCharQuestTbl
{
  unsigned int Idx;
  unsigned int State;
};

/* 8266 */
struct XiCharInfoTbl
{
  XiStrCharInfo m_CharInfo;
};

/* 8267 */
struct BS_PosTable
{
  XiVec4 m_Pos;
};

/* 8268 */
struct PrepareSQL
{
  GDBSession *m_pSession;
};

/* 8269 */
struct __cppobj XiConnMgrThread : XiPulseThread
{
  int nPulseTime;
  int nAccTick;
};

/* 8270 */
struct SessionIterator
{
  std::vector<BS_Session *,std::allocator<BS_Session *> > *m_pSessionList;
  std::vector<BS_Session *,std::allocator<BS_Session *> >::iterator m_Itr;
  int m_pingedTime;
  unsigned int m_term;
};

/* 8271 */
struct __cppobj GMPing
{
};

/* 8272 */
struct $7CFE5B2E0D45B5A6D529BC48140C1F74
{
  __int64 l : 56;
  __int64 h : 8;
};

/* 8273 */
union GlobalID
{
  __int64 Data;
  $7CFE5B2E0D45B5A6D529BC48140C1F74 Info;
};

/* 8274 */
struct __cppobj BS_SingletonHeap<XiGlobalItemID,5>
{
};

/* 8275 */
struct __cppobj XiGlobalItemID : BS_SingletonHeap<XiGlobalItemID,5>
{
  BS_SpinLock m_Lock;
  GlobalID m_GID;
};

/* 8276 */
struct __cppobj SessionPing
{
};

/* 8277 */
struct __cppobj BS_SingletonStaticMeyers<BS_CrashHandler>
{
};

/* 8278 */
struct __cppobj BS_CrashHandler::BS_StackFrame : _tagSTACKFRAME64
{
};

/* 8279 */
struct __cppobj __declspec(align(4)) BS_CrashHandler : BS_SingletonStaticMeyers<BS_CrashHandler>
{
  BS_CrashHandlerVtbl *vfptr;
  bool m_bCreateDump;
  bool m_bExit;
};

/* 8280 */
struct BS_CrashHandlerVtbl
{
  int (__thiscall *HandleException)(BS_CrashHandler *this, _EXCEPTION_POINTERS *);
};

/* 8281 */
struct __cppobj __declspec(align(4)) GameTimeThread : BS_Thread
{
  volatile bool m_bStop;
};

/* 8282 */
struct __cppobj GameSessionPing
{
};

/* 8283 */
struct __cppobj __declspec(align(4)) TeamThread : BS_Thread
{
  volatile bool m_bStop;
};

/* 8284 */
struct std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >
{
  std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >Vtbl *vfptr;
  std::_Mutex _Mylock;
  wchar_t *_Gfirst;
  wchar_t *_Pfirst;
  wchar_t **_IGfirst;
  wchar_t **_IPfirst;
  wchar_t *_Gnext;
  wchar_t *_Pnext;
  wchar_t **_IGnext;
  wchar_t **_IPnext;
  int _Gcount;
  int _Pcount;
  int *_IGcount;
  int *_IPcount;
  std::locale *_Plocale;
};

/* 8285 */
struct std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >Vtbl
{
  void *(__thiscall *__vecDelDtor)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, unsigned int);
  _BYTE gap4[4];
  unsigned __int16 (__thiscall *pbackfail)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, unsigned __int16);
  int (__thiscall *showmanyc)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this);
  unsigned __int16 (__thiscall *underflow)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this);
  unsigned __int16 (__thiscall *uflow)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this);
  int (__thiscall *xsgetn)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, wchar_t *, int);
  int (__thiscall *xsputn)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, const wchar_t *, int);
  std::fpos<int> *(__thiscall *seekoff)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, std::fpos<int> *result, int, int, int);
  std::fpos<int> *(__thiscall *seekpos)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, std::fpos<int> *result, std::fpos<int>, int);
  std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *(__thiscall *setbuf)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, wchar_t *, int);
  int (__thiscall *sync)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this);
  void (__thiscall *imbue)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, std::locale *);
};

/* 8286 */
struct __cppobj std::char_traits<wchar_t>
{
};

/* 8287 */
struct __cppobj std::time_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > : std::locale::facet
{
  std::_Timevec _Tnames;
  _Cvtvec _Cvt;
};

/* 8288 */
struct __cppobj std::_Mpunct<char> : std::money_base
{
  const char *_Grouping;
  char _Decimalpoint;
  char _Kseparator;
  const char *_Currencysign;
  const char *_Plussign;
  const char *_Minussign;
  int _Fracdigits;
  std::money_base::pattern _Plusformat;
  std::money_base::pattern _Minusformat;
  bool _International;
  _Cvtvec _Cvt;
};

/* 8289 */
struct __cppobj std::moneypunct<char,1> : std::_Mpunct<char>
{
};

/* 8290 */
struct __cppobj std::collate<char> : std::locale::facet
{
  _Collvec _Coll;
};

/* 8291 */
struct __cppobj std::moneypunct<char,0> : std::_Mpunct<char>
{
};

/* 8292 */
struct __cppobj std::money_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > : std::locale::facet
{
  _Cvtvec _Cvt;
};

/* 8293 */
struct __cppobj std::messages<char> : std::messages_base
{
};

/* 8294 */
struct __cppobj std::ctype<wchar_t> : std::ctype_base
{
  _Ctypevec _Ctype;
  _Cvtvec _Cvt;
};

/* 8295 */
struct __cppobj std::money_get<char,std::istreambuf_iterator<char,std::char_traits<char> > > : std::locale::facet
{
  _Cvtvec _Cvt;
};

/* 8296 */
struct __cppobj std::basic_ostream<wchar_t,std::char_traits<wchar_t> >
{
  _BYTE gap0[56];
};

/* 8297 */
struct __cppobj __declspec(align(4)) std::basic_ios<wchar_t,std::char_traits<wchar_t> > : std::ios_base
{
  std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *_Mystrbuf;
  std::basic_ostream<wchar_t,std::char_traits<wchar_t> > *_Tiestr;
  wchar_t _Fillch;
};

/* 8298 */
struct __declspec(align(4)) std::basic_istream<wchar_t,std::char_traits<wchar_t> >
{
  _BYTE gap0[4];
  int _Chcount;
  _BYTE gap8[52];
};

/* 8299 */
struct __cppobj std::iterator<std::input_iterator_tag,wchar_t,long,wchar_t *,wchar_t &>
{
};

/* 8300 */
struct __cppobj std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > : std::iterator<std::input_iterator_tag,wchar_t,long,wchar_t *,wchar_t &>
{
  std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *_Strbuf;
  bool _Got;
  wchar_t _Val;
};

/* 8301 */
struct __cppobj std::num_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > : std::locale::facet
{
  _Cvtvec _Cvt;
};

/* 8302 */
struct std::basic_istream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base
{
  std::basic_istream<wchar_t,std::char_traits<wchar_t> > *_Myistr;
};

/* 8303 */
struct __cppobj __declspec(align(4)) std::basic_istream<wchar_t,std::char_traits<wchar_t> >::sentry : std::basic_istream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base
{
  bool _Ok;
};

/* 8304 */
struct __cppobj std::codecvt<wchar_t,char,int> : std::codecvt_base
{
  _Cvtvec _Cvt;
};

/* 8305 */
struct __cppobj std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > : std::_Outit
{
  bool _Failed;
  std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *_Strbuf;
};

/* 8306 */
struct __cppobj std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > : std::locale::facet
{
  _Cvtvec _Cvt;
};

/* 8307 */
struct std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base
{
  std::basic_ostream<wchar_t,std::char_traits<wchar_t> > *_Myostr;
};

/* 8308 */
struct __cppobj __declspec(align(4)) std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry : std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base
{
  bool _Ok;
};

/* 8309 */
struct __cppobj std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > > : std::time_base
{
  const char *_Days;
  const char *_Months;
  std::time_base::dateorder _Dateorder;
  _Cvtvec _Cvt;
};

/* 8310 */
struct __cppobj std::_Mpunct<wchar_t> : std::money_base
{
  const char *_Grouping;
  wchar_t _Decimalpoint;
  wchar_t _Kseparator;
  const wchar_t *_Currencysign;
  const wchar_t *_Plussign;
  const wchar_t *_Minussign;
  int _Fracdigits;
  std::money_base::pattern _Plusformat;
  std::money_base::pattern _Minusformat;
  bool _International;
  _Cvtvec _Cvt;
};

/* 8311 */
struct __cppobj std::moneypunct<wchar_t,1> : std::_Mpunct<wchar_t>
{
};

/* 8312 */
struct __cppobj std::_Mpunct<unsigned short> : std::money_base
{
  const char *_Grouping;
  unsigned __int16 _Decimalpoint;
  unsigned __int16 _Kseparator;
  const unsigned __int16 *_Currencysign;
  const unsigned __int16 *_Plussign;
  const unsigned __int16 *_Minussign;
  int _Fracdigits;
  std::money_base::pattern _Plusformat;
  std::money_base::pattern _Minusformat;
  bool _International;
  _Cvtvec _Cvt;
};

/* 8313 */
struct __cppobj std::moneypunct<unsigned short,0> : std::_Mpunct<unsigned short>
{
};

/* 8314 */
struct __cppobj std::moneypunct<unsigned short,1> : std::_Mpunct<unsigned short>
{
};

/* 8315 */
struct __cppobj std::money_get<unsigned short,std::istreambuf_iterator<unsigned short,std::char_traits<unsigned short> > > : std::locale::facet
{
  _Cvtvec _Cvt;
};

/* 8316 */
struct __cppobj std::money_put<unsigned short,std::ostreambuf_iterator<unsigned short,std::char_traits<unsigned short> > > : std::locale::facet
{
  _Cvtvec _Cvt;
};

/* 8317 */
struct __cppobj std::_Allocator_base<wchar_t>
{
};

/* 8318 */
struct __cppobj std::allocator<wchar_t> : std::_Allocator_base<wchar_t>
{
};

/* 8319 */
struct __cppobj std::_String_val<wchar_t,std::allocator<wchar_t> > : std::_String_base
{
  std::allocator<wchar_t> _Alval;
};

/* 8320 */
union std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Bxty
{
  wchar_t _Buf[8];
  wchar_t *_Ptr;
};

/* 8321 */
struct __cppobj std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > : std::_String_val<wchar_t,std::allocator<wchar_t> >
{
  std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Bxty _Bx;
  unsigned int _Mysize;
  unsigned int _Myres;
};

/* 8322 */
struct __cppobj std::iterator<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &>
{
};

/* 8323 */
struct __cppobj std::_Ranit<wchar_t,int,wchar_t const *,wchar_t const &> : std::iterator<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &>
{
};

/* 8324 */
struct __cppobj std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::const_iterator : std::_Ranit<wchar_t,int,wchar_t const *,wchar_t const &>
{
  const wchar_t *_Myptr;
};

/* 8325 */
struct __cppobj std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::iterator : std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::const_iterator
{
};

/* 8326 */
struct __cppobj std::time_get<unsigned short,std::istreambuf_iterator<unsigned short,std::char_traits<unsigned short> > > : std::time_base
{
  const unsigned __int16 *_Days;
  const unsigned __int16 *_Months;
  std::time_base::dateorder _Dateorder;
  _Cvtvec _Cvt;
};

/* 8327 */
struct __cppobj std::moneypunct<wchar_t,0> : std::_Mpunct<wchar_t>
{
};

/* 8328 */
struct __cppobj std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > : std::locale::facet
{
  _Cvtvec _Cvt;
};

/* 8329 */
struct __cppobj std::time_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > : std::locale::facet
{
  std::_Timevec _Tnames;
  _Cvtvec _Cvt;
};

/* 8330 */
struct __cppobj std::numpunct<wchar_t> : std::locale::facet
{
  const char *_Grouping;
  wchar_t _Dp;
  wchar_t _Kseparator;
  const wchar_t *_Falsename;
  const wchar_t *_Truename;
};

/* 8331 */
struct __cppobj std::allocator<wchar_t>::rebind<wchar_t>
{
};

/* 8332 */
struct __cppobj std::money_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > : std::locale::facet
{
  _Cvtvec _Cvt;
};

/* 8333 */
struct __cppobj std::collate<wchar_t> : std::locale::facet
{
  _Collvec _Coll;
};

/* 8334 */
struct __cppobj std::messages<wchar_t> : std::messages_base
{
};

/* 8335 */
struct __cppobj std::messages<unsigned short> : std::messages_base
{
};

/* 8336 */
struct __cppobj std::time_put<unsigned short,std::ostreambuf_iterator<unsigned short,std::char_traits<unsigned short> > > : std::locale::facet
{
  std::_Timevec _Tnames;
  _Cvtvec _Cvt;
};

/* 8337 */
struct __cppobj std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > : std::time_base
{
  const wchar_t *_Days;
  const wchar_t *_Months;
  std::time_base::dateorder _Dateorder;
  _Cvtvec _Cvt;
};

/* 8338 */
struct __cppobj std::collate<unsigned short> : std::locale::facet
{
  _Collvec _Coll;
};

/* 8339 */
struct __cppobj std::_UShinit
{
};

/* 8340 */
struct __cppobj std::_Init_ushcin
{
};

/* 8341 */
struct __cppobj std::_Init_ushcout
{
};

/* 8342 */
struct std::_Fac_node
{
  std::_Fac_node *_Next;
  std::locale::facet *_Facptr;
};

/* 8343 */
struct __cppobj _Init_atexit
{
};

/* 8344 */
struct __cppobj std::_Init_cout
{
};

/* 8345 */
union _dbl
{
  int lng[2];
  long double dbl;
};

/* 8346 */
struct _U32ARRAY
{
  unsigned int W[4];
};

/* 8347 */
struct _U64
{
  unsigned int W[2];
};

/* 8348 */
struct _FP128
{
  unsigned int W[4];
};

/* 8349 */
struct _FPIEEE_EXCEPTION_FLAGS
{
  unsigned __int32 Inexact : 1;
  unsigned __int32 Underflow : 1;
  unsigned __int32 Overflow : 1;
  unsigned __int32 ZeroDivide : 1;
  unsigned __int32 InvalidOperation : 1;
};

/* 8350 */
struct _FP80
{
  unsigned __int16 W[5];
};

/* 8351 */
struct _I64
{
  unsigned int W[2];
};

/* 8352 */
struct _BCD80
{
  unsigned __int16 W[5];
};

/* 8353 */
struct _FPQ64
{
  __int64 W[2];
};

/* 8354 */
union $2FB89314D27123C15F1CCA582588637C
{
  float Fp32Value;
  long double Fp64Value;
  _FP80 Fp80Value;
  _FP128 Fp128Value;
  __int16 I16Value;
  int I32Value;
  _I64 I64Value;
  unsigned __int16 U16Value;
  unsigned int U32Value;
  _U64 U64Value;
  _BCD80 Bcd80Value;
  char *StringValue;
  int CompareValue;
  _U32ARRAY U32ArrayValue;
  __int64 Q64Value;
  _FPQ64 Fpq64Value;
};

/* 8355 */
struct __declspec(align(16)) _FPIEEE_VALUE
{
  $2FB89314D27123C15F1CCA582588637C Value;
  unsigned __int32 OperandValid : 1;
  unsigned __int32 Format : 4;
};

/* 8356 */
struct _FPIEEE_RECORD
{
  unsigned __int32 RoundingMode : 2;
  unsigned __int32 Precision : 3;
  unsigned __int32 Operation : 12;
  _FPIEEE_EXCEPTION_FLAGS Cause;
  _FPIEEE_EXCEPTION_FLAGS Enable;
  _FPIEEE_EXCEPTION_FLAGS Status;
  _FPIEEE_VALUE Operand1;
  _FPIEEE_VALUE Operand2;
  _FPIEEE_VALUE Result;
};

/* 8357 */
struct $992A88C5856F6BE6869BBDDAC7BE31AD
{
  int dw0;
  int dw1;
  int dw2;
};

/* 8358 */
union __declspec(align(4)) $E5E6D427C3F5004E9C77F195426157EF
{
  char cBuf[13];
  $992A88C5856F6BE6869BBDDAC7BE31AD __s1;
};

/* 8359 */
struct __unaligned __declspec(align(2)) DispLocals
{
  unsigned __int16 wUser1;
  unsigned __int16 wUser2;
  unsigned __int16 savCntrl;
  unsigned __int16 setCntrl;
  unsigned __int16 StatusWord;
  _TBYTE Fac;
  unsigned int Function;
  char ErrorType;
  char __cpower;
  unsigned int typ;
  unsigned int nam;
  __int64 arg1;
  __int64 arg2;
  __int64 retval;
  char savebuf;
  _BYTE gap3B[107];
};

/* 8360 */
struct __declspec(align(2)) funtab
{
  char fnamlen;
  char fnam;
  _BYTE gap2[5];
  char fuseval;
  _BYTE gap8[5];
  char fnumarg;
  char fnumber;
};

/* 8361 */
struct FPU_STATE
{
  unsigned __int16 CONTROL_WORD;
  unsigned __int16 reserved_1;
  unsigned int STATUS_WORD;
  unsigned __int16 TAG_WORD;
  unsigned __int16 reserved_3;
  unsigned int IP_OFFSET;
  unsigned __int16 CS_SLCT;
  unsigned __int16 OPCODE;
  unsigned int DATA_OFFSET;
  unsigned __int16 OPERAND_SLCT;
  unsigned __int16 reserved_4;
};

/* 8362 */
struct __unaligned __declspec(align(1)) MTStackFrame
{
  __int64 MTS_LocalFac;
  char MTS_cdispflags;
};

/* 8363 */
struct _FloatOutStruct
{
  __int16 exp;
  char sign;
  char ManLen;
  char man[22];
};

/* 8364 */
struct _LDOUBLE
{
  char ld[10];
};

/* 8365 */
struct _LDBL12
{
  char ld12[12];
};

/* 8366 */
struct FpFormatDescriptor
{
  int max_exp;
  int min_exp;
  int precision;
  int exp_width;
  int format_width;
  int bias;
};

/* 8367 */
struct DOUBLE
{
  long double x;
};

/* 8368 */
struct FLOAT
{
  float f;
};

/* 8369 */
struct _strflt
{
  int sign;
  int decpt;
  int flag;
  char *mantissa;
};

/* 8370 */
struct _flt
{
  int flags;
  int nbytes;
  int lval;
  long double dval;
};

/* 8371 */
union FT
{
  unsigned __int64 ft_scalar;
  _FILETIME ft_struct;
};

/* 8372 */
struct __declspec(align(4)) threadmbcinfostruct
{
  int refcount;
  int mbcodepage;
  int ismbcodepage;
  int mblcid;
  unsigned __int16 mbulinfo[6];
  char mbctype[257];
  char mbcasemap[256];
};

/* 8373 */
struct __lc_time_data
{
  char *wday_abbr[7];
  char *wday[7];
  char *month_abbr[12];
  char *month[12];
  char *ampm[2];
  char *ww_sdatefmt;
  char *ww_ldatefmt;
  char *ww_timefmt;
  unsigned int ww_lcid;
  int ww_caltype;
  int refcount;
};

/* 8374 */
struct threadlocaleinfostruct
{
  int refcount;
  unsigned int lc_codepage;
  unsigned int lc_collate_cp;
  unsigned int lc_handle[6];
  int lc_clike;
  int mb_cur_max;
  int *lconv_intl_refcount;
  int *lconv_num_refcount;
  int *lconv_mon_refcount;
  lconv *lconv;
  lconv *lconv_intl;
  int *ctype1_refcount;
  unsigned __int16 *ctype1;
  const unsigned __int16 *pctype;
  __lc_time_data *lc_time_curr;
  __lc_time_data *lc_time_intl;
};

/* 8375 */
struct _tiddata
{
  unsigned int _tid;
  unsigned int _thandle;
  int _terrno;
  unsigned int _tdoserrno;
  unsigned int _fpds;
  unsigned int _holdrand;
  char *_token;
  unsigned __int16 *_wtoken;
  char *_mtoken;
  char *_errmsg;
  unsigned __int16 *_werrmsg;
  char *_namebuf0;
  unsigned __int16 *_wnamebuf0;
  char *_namebuf1;
  unsigned __int16 *_wnamebuf1;
  char *_asctimebuf;
  unsigned __int16 *_wasctimebuf;
  void *_gmtimebuf;
  char *_cvtbuf;
  void *_initaddr;
  void *_initarg;
  void *_pxcptacttab;
  void *_tpxcptinfoptrs;
  int _tfpecode;
  threadmbcinfostruct *ptmbcinfo;
  threadlocaleinfostruct *ptlocinfo;
  unsigned int _NLG_dwCode;
  void *_terminate;
  void *_unexpected;
  void *_translator;
  void *_purecall;
  void *_curexception;
  void *_curcontext;
  int _ProcessingThrow;
  void *_pFrameInfoChain;
};

/* 8376 */
struct transitiondate
{
  int yr;
  int yd;
  int ms;
};

/* 8377 */
union $B4FF2100EA110D8CD0B9C89F852FB035
{
  char sz[512];
  wchar_t wz[512];
};

/* 8378 */
union $519E2A0ABDBAFFC353FD5D86715BA24D
{
  char *sz;
  unsigned __int16 *wz;
};

/* 8379 */
struct _count_string
{
  __int16 Length;
  __int16 MaximumLength;
  char *Buffer;
};

/* 8380 */
struct ioinfo
{
  int osfhnd;
  char osfile;
  char pipech;
  int lockinitflag;
  _RTL_CRITICAL_SECTION lock;
};

/* 8381 */
union $C8014B43F160BFD769FAE3F15553333C
{
  char sz[512];
};

/* 8382 */
struct _XCPT_ACTION
{
  unsigned int XcptNum;
  int SigNum;
  void (__cdecl *XcptAction)(int);
};

/* 8383 */
struct $366E6CD7BA4D763D2DFA77C1ED45E618
{
  _RTL_CRITICAL_SECTION *lock;
  $1DD7A03358E0D01DD359262876E6A0F0 kind;
};

/* 8384 */
struct rterrmsgs
{
  int rterrno;
  char *rterrtxt;
};

/* 8385 */
struct tagLC_ID
{
  unsigned __int16 wLanguage;
  unsigned __int16 wCountry;
  unsigned __int16 wCodePage;
};

/* 8386 */
struct tagLC_STRINGS
{
  char szLanguage[64];
  char szCountry[64];
  char szCodePage[16];
};

/* 8387 */
struct _is_ctype_compatible
{
  unsigned int id;
  int is_clike;
};

/* 8388 */
struct $CCE4C80AD10999675C882A48A2A518E7
{
  const char *catname;
  char *locale;
  int (__cdecl *init)();
};

/* 8389 */
struct tagRGLOCINFO
{
  unsigned int lcid;
  char chILanguage[8];
  char *pchSEngLanguage;
  char chSAbbrevLangName[4];
  char *pchSEngCountry;
  char chSAbbrevCtryName[4];
  char chIDefaultCodepage[8];
  char chIDefaultAnsiCodepage[8];
};

/* 8390 */
struct tagLOCALETAB
{
  char *szName;
  char chAbbrev[4];
};

/* 8391 */
struct __declspec(align(32)) _JMP_BUF
{
  unsigned int saved_ebp;
  unsigned int saved_ebx;
  unsigned int saved_edi;
  unsigned int saved_esi;
  unsigned int saved_esp;
  unsigned int saved_return;
  unsigned int saved_xregistration;
  unsigned int saved_trylevel;
  unsigned int version_cookie;
  unsigned int unwind_func;
  unsigned int unwind_data;
};

/* 8392 */
struct _EXCEPTION_REGISTRATION
{
  unsigned int prev;
  unsigned int handler;
};

/* 8393 */
struct _NLG_INFO
{
  unsigned int dwSig;
  unsigned int uoffDestination;
  unsigned int dwCode;
  unsigned int uoffFramePointer;
};

/* 8394 */
struct _C9_EXCEPTION_REGISTRATION
{
  unsigned int er_prev;
  unsigned int er_handler;
  unsigned int scopetable;
  unsigned int trylevel;
};

/* 8395 */
struct _EXCEPTION_REGISTRATION_COMMON
{
  _BYTE gap0[8];
  unsigned int scopetable;
  unsigned int trylevel;
};

/* 8396 */
struct code_page_info
{
  int code_page;
  unsigned __int16 mbulinfo[6];
  char rgrange[4][8];
};

/* 8397 */
struct $9EDDA679613D7E4E5E37CB563F432A3F
{
  unsigned int lowerhalf;
  int upperhalf;
};

/* 8398 */
union doubleint
{
  __int64 bigint;
  $9EDDA679613D7E4E5E37CB563F432A3F twoints;
};

/* 8399 */
struct tagEntry
{
  int sizeFront;
  tagEntry *pEntryNext;
  tagEntry *pEntryPrev;
};

/* 8400 */
struct tagListHead
{
  tagEntry *pEntryNext;
  tagEntry *pEntryPrev;
};

/* 8401 */
struct tagGroup
{
  int cntEntries;
  tagListHead listHead[64];
};

/* 8402 */
struct tagRegion
{
  int indGroupUse;
  char cntRegionSize[64];
  unsigned int bitvGroupHi[32];
  unsigned int bitvGroupLo[32];
  tagGroup grpHeadList[32];
};

/* 8403 */
struct tagHeader
{
  unsigned int bitvEntryHi;
  unsigned int bitvEntryLo;
  unsigned int bitvCommit;
  void *pHeapData;
  tagRegion *pRegion;
};

/* 8404 */
struct tagEntryEnd
{
  int sizeBack;
};

/* 8405 */
struct TypeDescriptor
{
  unsigned int hash;
  void *spare;
  char name[];
};

/* 8406 */
struct PMD
{
  int mdisp;
  int pdisp;
  int vdisp;
};

/* 8407 */
struct _s_CatchableType
{
  unsigned int properties;
  TypeDescriptor *pType;
  PMD thisDisplacement;
  int sizeOrOffset;
  void (__cdecl *copyFunction)();
};

/* 8408 */
struct _s_CatchableTypeArray
{
  int nCatchableTypes;
  _s_CatchableType *arrayOfCatchableTypes[];
};

/* 8409 */
struct _s_HandlerType
{
  unsigned int adjectives;
  TypeDescriptor *pType;
  int dispCatchObj;
  void *addressOfHandler;
};

/* 8410 */
struct _s_ESTypeList
{
  int nCount;
  _s_HandlerType *pTypeArray;
};

/* 8411 */
struct _s_ThrowInfo
{
  unsigned int attributes;
  void (__cdecl *pmfnUnwind)();
  int (*pForwardCompat)(...);
  _s_CatchableTypeArray *pCatchableTypeArray;
};

/* 8412 */
struct _s_UnwindMapEntry
{
  int toState;
  void (__cdecl *action)();
};

/* 8413 */
struct _s_TryBlockMapEntry
{
  int tryLow;
  int tryHigh;
  int catchHigh;
  int nCatches;
  _s_HandlerType *pHandlerArray;
};

/* 8414 */
struct _s_FuncInfo
{
  unsigned __int32 magicNumber : 29;
  unsigned __int32 bbtFlags : 3;
  int maxState;
  _s_UnwindMapEntry *pUnwindMap;
  unsigned int nTryBlocks;
  _s_TryBlockMapEntry *pTryBlockMap;
  unsigned int nIPMapEntries;
  void *pIPtoStateMap;
  _s_ESTypeList *pESTypeList;
};

/* 8415 */
struct EHExceptionRecord::EHParameters
{
  unsigned int magicNumber;
  void *pExceptionObject;
  _s_ThrowInfo *pThrowInfo;
};

/* 8416 */
struct EHExceptionRecord
{
  unsigned int ExceptionCode;
  unsigned int ExceptionFlags;
  _EXCEPTION_RECORD *ExceptionRecord;
  void *ExceptionAddress;
  unsigned int NumberParameters;
  EHExceptionRecord::EHParameters params;
};

/* 8417 */
struct EHRegistrationNode
{
  EHRegistrationNode *pNext;
  void *frameHandler;
  int state;
};

/* 8418 */
struct CatchGuardRN
{
  EHRegistrationNode *pNext;
  void *pFrameHandler;
  unsigned int RandomCookie;
  _s_FuncInfo *pFuncInfo;
  EHRegistrationNode *pRN;
  int CatchDepth;
};

/* 8419 */
struct TranslatorGuardRN
{
  EHRegistrationNode *pNext;
  void *pFrameHandler;
  unsigned int RandomCookie;
  _s_FuncInfo *pFuncInfo;
  EHRegistrationNode *pRN;
  int CatchDepth;
  EHRegistrationNode *pMarkerRN;
  void *ESP;
  void *EBP;
  int DidUnwind;
};

/* 8420 */
struct FrameInfo
{
  void *pExceptionObject;
  FrameInfo *pNext;
};

/* 8421 */
struct __JUMP_BUFFER
{
  unsigned int Ebp;
  unsigned int Ebx;
  unsigned int Edi;
  unsigned int Esi;
  unsigned int Esp;
  unsigned int Eip;
  unsigned int Registration;
  unsigned int TryLevel;
  unsigned int Cookie;
  unsigned int UnwindFunc;
  unsigned int UnwindData[6];
};

/* 8422 */
struct DNameNode
{
  DNameNodeVtbl *vfptr;
  DNameNode *next;
};

/* 8423 */
struct DNameNodeVtbl
{
  int (__thiscall *length)(DNameNode *this);
  char (__thiscall *getLastChar)(DNameNode *this);
  char *(__thiscall *getString)(DNameNode *this, char *, int);
};

/* 8424 */
struct DName
{
  DNameNode *node;
  __int32 stat : 4;
  unsigned __int32 isIndir : 1;
  unsigned __int32 isAUDC : 1;
  unsigned __int32 isAUDTThunk : 1;
  unsigned __int32 isArrayType : 1;
  unsigned __int32 NoTE : 1;
};

/* 8425 */
struct Replicator
{
  int index;
  DName *dNameBuffer[10];
  DName ErrorDName;
  DName InvalidDName;
};

/* 8426 */
struct HeapManager::Block
{
  HeapManager::Block *next;
  char memBlock[4096];
};

/* 8427 */
struct HeapManager
{
  void *(__cdecl *pOpNew)(unsigned int);
  void (__cdecl *pOpDelete)(void *);
  HeapManager::Block *head;
  HeapManager::Block *tail;
  unsigned int blockLeft;
};

/* 8428 */
struct __cppobj __declspec(align(4)) charNode : DNameNode
{
  char me;
};

/* 8429 */
struct __cppobj pcharNode : DNameNode
{
  char *me;
  int myLen;
};

/* 8430 */
struct UnDecorator
{
  Replicator ArgList;
  Replicator ZNameList;
};

/* 8431 */
struct __cppobj pDNameNode : DNameNode
{
  DName *me;
};

/* 8432 */
struct __cppobj DNameStatusNode : DNameNode
{
  DNameStatus me;
  int myLen;
};

/* 8433 */
struct errentry
{
  unsigned int oscode;
  int errnocode;
};

/* 8434 */
struct __declspec(align(2)) ATL::_ATL_WNDCLASSINFOA
{
  tagWNDCLASSEXA m_wc;
  const char *m_lpszOrigName;
  int (__stdcall *pWndProc)(HWND__ *, unsigned int, unsigned int, int);
  const char *m_lpszCursorID;
  int m_bSystemCursor;
  unsigned __int16 m_atom;
  char m_szAutoName[37];
};

/* 8435 */
struct __cppobj __declspec(align(4)) ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComMultiThreadModel> : struct ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >, struct ATL::CComObjectRootEx<ATL::CComMultiThreadModel>
{
  _BYTE gap0[24];
  _BYTE gap18[28];
};

/* 8436 */
typedef tagMSGBOXPARAMSW *PMSGBOXPARAMSW;

/* 8437 */
typedef _MESSAGE_RESOURCE_ENTRY *PMESSAGE_RESOURCE_ENTRY;

/* 8438 */
typedef void (__stdcall *WAITORTIMERCALLBACKFUNC)(void *, char);

/* 8439 */
typedef HDC__ *HDC;

/* 8440 */
typedef tagEMRSELECTCLIPPATH *PEMRSELECTCLIPPATH;

/* 8441 */
typedef _IMAGE_DEBUG_DIRECTORY *PIMAGE_DEBUG_DIRECTORY;

/* 8442 */
typedef tagEVENTMSG *PEVENTMSGMSG;

/* 8444 */
typedef char *LPBYTE;

/* 8445 */
typedef IUnknown *LPUNKNOWN;

/* 8446 */
typedef char *pchar_t;

/* 8447 */
typedef _NON_PAGED_DEBUG_INFO *PNON_PAGED_DEBUG_INFO;

/* 8448 */
typedef unsigned int HCRYPTHASH;

/* 8449 */
typedef _IMAGE_RESOURCE_DIRECTORY_ENTRY *PIMAGE_RESOURCE_DIRECTORY_ENTRY;

/* 8450 */
typedef tagIMEMENUITEMINFOA *PIMEMENUITEMINFO;

/* 8451 */
typedef tagEMRLINETO *PEMRLINETO;

/* 8452 */
typedef tagEVENTMSG *PEVENTMSG;

/* 8453 */
typedef HKEY__ **PHKEY;

/* 8454 */
typedef tagHIGHCONTRASTA *LPHIGHCONTRASTA;

/* 8455 */
typedef unsigned __int16 PROPVAR_PAD2;

/* 8456 */
typedef _RIP_INFO *LPRIP_INFO;

/* 8457 */
typedef tagKERNINGPAIR *LPKERNINGPAIR;

/* 8458 */
typedef _OSVERSIONINFOW *POSVERSIONINFOW;

/* 8459 */
typedef int *LPFXPT16DOT16;

/* 8460 */
typedef tagHIGHCONTRASTW *LPHIGHCONTRASTW;

/* 8461 */
typedef tagEMRPOLYLINE *PEMRPOLYBEZIER;

/* 8462 */
typedef void (__stdcall *PIMAGE_TLS_CALLBACK)(void *, unsigned int, void *);

/* 8463 */
typedef HWINSTA__ *HWINSTA;

/* 8464 */
typedef _OSVERSIONINFOA *POSVERSIONINFOA;

/* 8465 */
typedef unsigned __int64 *PDWORDLONG;

/* 8466 */
typedef _IMAGE_FUNCTION_ENTRY *PIMAGE_FUNCTION_ENTRY;

/* 8467 */
typedef tagMINMAXINFO *LPMINMAXINFO;

/* 8468 */
typedef _currencyfmtA *LPCURRENCYFMTA;

/* 8469 */
typedef tagEMREXTFLOODFILL *PEMREXTFLOODFILL;

/* 8470 */
typedef int ISOLEVEL;

/* 8471 */
typedef _TRIVERTEX *PTRIVERTEX;

/* 8472 */
typedef tagIMEMENUITEMINFOW *PIMEMENUITEMINFOW;

/* 8473 */
typedef void *LOCALHANDLE;

/* 8474 */
typedef int (__stdcall *FARPROC)();

/* 8475 */
typedef _IMAGE_EXPORT_DIRECTORY *PIMAGE_EXPORT_DIRECTORY;

/* 8476 */
typedef IConnectionPoint *LPCONNECTIONPOINT;

/* 8477 */
typedef _SYSTEM_INFO *LPSYSTEM_INFO;

/* 8478 */
typedef DLGTEMPLATE *LPDLGTEMPLATEA;

/* 8479 */
typedef _EXCEPTION_RECORD *LPEXCEPTION_RECORD;

/* 8480 */
typedef tagIMEMENUITEMINFOA *PIMEMENUITEMINFOA;

/* 8481 */
typedef POWER_ACTION *PPOWER_ACTION;

/* 8482 */
typedef tagGUITHREADINFO *LPGUITHREADINFO;

/* 8483 */
typedef tagHIGHCONTRASTA *LPHIGHCONTRAST;

/* 8484 */
typedef tagGCP_RESULTSW *LPGCP_RESULTSW;

/* 8485 */
typedef tagHELPINFO *LPHELPINFO;

/* 8486 */
typedef char *PTCH;

/* 8487 */
typedef tagCANDIDATELIST *PCANDIDATELIST;

/* 8488 */
typedef _STARTUPINFOA *LPSTARTUPINFOA;

/* 8489 */
typedef unsigned __int64 *PUINT64;

/* 8490 */
typedef tagBITMAP *NPBITMAP;

/* 8491 */
typedef tagBITMAP *LPBITMAP;

/* 8492 */
typedef _OSVERSIONINFOA *POSVERSIONINFO;

/* 8493 */
typedef void *HGDIOBJ;

/* 8494 */
typedef unsigned int DBACCESSORFLAGS;

/* 8495 */
typedef unsigned int DBPROMPTOPTIONS;

/* 8496 */
typedef unsigned int DBBINDSTATUS;

/* 8497 */
typedef tagEMRSTRETCHDIBITS *PEMRSTRETCHDIBITS;

/* 8498 */
typedef _JOBOBJECT_BASIC_LIMIT_INFORMATION *PJOBOBJECT_BASIC_LIMIT_INFORMATION;

/* 8499 */
typedef _OSVERSIONINFOEXA *POSVERSIONINFOEX;

/* 8500 */
typedef tagSCROLLBARINFO *PSCROLLBARINFO;

/* 8501 */
typedef tagMDICREATESTRUCTA *LPMDICREATESTRUCTA;

/* 8502 */
typedef unsigned int *PULONG32;

/* 8503 */
typedef void (__stdcall *LPSERVICE_MAIN_FUNCTIONW)(unsigned int, unsigned __int16 **);

/* 8504 */
typedef tagHeader *PHEADER;

/* 8505 */
typedef tagLOGCOLORSPACEW *LPLOGCOLORSPACEW;

/* 8506 */
typedef tagEMRTEXT *PEMRTEXT;

/* 8507 */
typedef unsigned int DBCOLUMNFLAGS;

/* 8508 */
typedef int *PBOOL;

/* 8509 */
typedef _UNIVERSAL_NAME_INFOA *LPUNIVERSAL_NAME_INFO;

/* 8510 */
typedef HICON__ *HCURSOR;

/* 8511 */
typedef tagPOINT *PPOINT;

/* 8512 */
typedef _IMAGE_AUX_SYMBOL *PIMAGE_AUX_SYMBOL;

/* 8513 */
typedef bool _Bool;

/* 8514 */
typedef _OUTLINETEXTMETRICW *NPOUTLINETEXTMETRICW;

/* 8515 */
typedef _RTL_VERIFIER_DLL_DESCRIPTOR *PRTL_VERIFIER_DLL_DESCRIPTOR;

/* 8516 */
typedef tagVARIANT *LPVARIANT;

/* 8517 */
typedef _OUTLINETEXTMETRICW *LPOUTLINETEXTMETRICW;

/* 8518 */
typedef char UINT8;

/* 8519 */
typedef char *PINT8;

/* 8520 */
typedef _OSVERSIONINFOEXW *POSVERSIONINFOEXW;

/* 8521 */
typedef unsigned __int16 DBTYPE;

/* 8522 */
typedef DLGITEMTEMPLATE *LPDLGITEMTEMPLATEW;

/* 8523 */
typedef _OSVERSIONINFOEXW *LPOSVERSIONINFOEXW;

/* 8524 */
typedef tagEMRSETARCDIRECTION *PEMRSETARCDIRECTION;

/* 8525 */
typedef _OSVERSIONINFOEXA *POSVERSIONINFOEXA;

/* 8526 */
typedef tagEMRGRADIENTFILL *PEMRGRADIENTFILL;

/* 8527 */
typedef _TOKEN_DEFAULT_DACL *PTOKEN_DEFAULT_DACL;

/* 8528 */
typedef float *PFLOAT;

/* 8529 */
typedef unsigned int UINT;

/* 8530 */
typedef unsigned int *PULONG;

/* 8531 */
typedef tagLOCALESIGNATURE *PLOCALESIGNATURE;

/* 8532 */
typedef _ACCESS_DENIED_CALLBACK_ACE *PACCESS_DENIED_CALLBACK_ACE;

/* 8533 */
typedef int *PINT;

/* 8534 */
typedef tagMINIMIZEDMETRICS *PMINIMIZEDMETRICS;

/* 8535 */
typedef tagEMRPOLYLINE *PEMRPOLYLINE;

/* 8536 */
typedef tagLC_STRINGS *LPLC_STRINGS;

/* 8537 */
typedef _GLYPHMETRICS *LPGLYPHMETRICS;

/* 8538 */
typedef unsigned int (__stdcall *PFNRECONCILEPROFILEA)(const char *, const char *, unsigned int);

/* 8539 */
typedef tagPOINTS *PPOINTS;

/* 8540 */
typedef HRGN__ *HRGN;

/* 8541 */
typedef unsigned int EXECUTION_STATE;

/* 8542 */
typedef _POINTL *PPOINTL;

/* 8543 */
typedef tagWNDCLASSEXW *PWNDCLASSEXW;

/* 8544 */
typedef _SERVICE_DESCRIPTIONW *LPSERVICE_DESCRIPTIONW;

/* 8545 */
typedef _numberfmtW *LPNUMBERFMTW;

/* 8546 */
typedef _FLOAT128 *PFLOAT128;

/* 8547 */
typedef _IMAGE_RESOURCE_DIR_STRING_U *PIMAGE_RESOURCE_DIR_STRING_U;

/* 8548 */
typedef _IMAGE_THUNK_DATA32 *PIMAGE_THUNK_DATA;

/* 8549 */
typedef int *LPFXPT2DOT30;

/* 8550 */
typedef HMONITOR__ *HMONITOR;

/* 8551 */
typedef tagHELPWININFOA *PHELPWININFOA;

/* 8552 */
typedef HBRUSH__ *HBRUSH;

/* 8553 */
typedef _RGNDATAHEADER *PRGNDATAHEADER;

/* 8554 */
typedef tagIMECHARPOSITION *PIMECHARPOSITION;

/* 8555 */
typedef _QUERY_SERVICE_LOCK_STATUSA *LPQUERY_SERVICE_LOCK_STATUS;

/* 8556 */
typedef _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE *PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE;

/* 8557 */
typedef _SE_IMPERSONATION_STATE *PSE_IMPERSONATION_STATE;

/* 8558 */
typedef tagMETAHEADER *PMETAHEADER;

/* 8559 */
typedef _DISCDLGSTRUCTA *LPDISCDLGSTRUCTA;

/* 8560 */
typedef int LCSCSTYPE;

/* 8561 */
typedef tagHELPWININFOW *PHELPWININFOW;

/* 8562 */
typedef int LCSGAMUTMATCH;

/* 8563 */
typedef tagCLIENTCREATESTRUCT *LPCLIENTCREATESTRUCT;

/* 8564 */
typedef int (__stdcall *HOOKPROC)(int, unsigned int, int);

/* 8565 */
typedef _DISPLAY_DEVICEW *PDISPLAY_DEVICEW;

/* 8566 */
typedef tagEMRFILLRGN *PEMRFILLRGN;

/* 8567 */
typedef tagNEWTEXTMETRICA *PNEWTEXTMETRICA;

/* 8568 */
typedef _KEY_EVENT_RECORD *PKEY_EVENT_RECORD;

/* 8569 */
typedef unsigned int _U32;

/* 8570 */
typedef _COMMCONFIG *LPCOMMCONFIG;

/* 8571 */
typedef unsigned __int16 PROPVAR_PAD3;

/* 8572 */
typedef char AGchar;

/* 8573 */
typedef _RGNDATA *LPRGNDATA;

/* 8574 */
typedef _RGNDATA *NPRGNDATA;

/* 8575 */
typedef tagNEWTEXTMETRICW *PNEWTEXTMETRICW;

/* 8576 */
typedef _JOBOBJECT_JOBSET_INFORMATION *PJOBOBJECT_JOBSET_INFORMATION;

/* 8577 */
typedef unsigned int COLORREF;

/* 8578 */
typedef unsigned __int16 *PWCHAR;

/* 8579 */
typedef tagMULTIKEYHELPW *PMULTIKEYHELPW;

/* 8580 */
typedef tagHELPWININFOA *PHELPWININFO;

/* 8581 */
typedef tagEMRPIXELFORMAT *PEMRPIXELFORMAT;

/* 8582 */
typedef _currencyfmtA *LPCURRENCYFMT;

/* 8583 */
typedef _IMAGE_RUNTIME_FUNCTION_ENTRY *PIMAGE_RUNTIME_FUNCTION_ENTRY;

/* 8584 */
typedef _WGLSWAP *LPWGLSWAP;

/* 8585 */
typedef _EVENTSFORLOGFILE *PEVENTSFORLOGFILE;

/* 8586 */
typedef unsigned __int64 _ULonglong;

/* 8587 */
typedef _ASSEMBLY_FILE_DETAILED_INFORMATION *PASSEMBLY_FILE_DETAILED_INFORMATION;

/* 8588 */
typedef unsigned __int64 *PULONGLONG;

/* 8589 */
typedef tagSAFEARRAY *LPSAFEARRAY;

/* 8590 */
typedef DLGTEMPLATE *LPDLGTEMPLATE;

/* 8591 */
typedef tagNEWTEXTMETRICA *PNEWTEXTMETRIC;

/* 8592 */
typedef _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION *PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;

/* 8593 */
typedef _ASSEMBLY_FILE_DETAILED_INFORMATION *PCASSEMBLY_FILE_DETAILED_INFORMATION;

/* 8594 */
typedef tagEMRCREATEBRUSHINDIRECT *PEMRCREATEBRUSHINDIRECT;

/* 8595 */
typedef unsigned __int16 *PUSHORT;

/* 8596 */
typedef _ACL *PACL;

/* 8597 */
typedef tagTEXTMETRICA *PTEXTMETRICA;

/* 8598 */
typedef tagEMRGDICOMMENT *PEMRGDICOMMENT;

/* 8599 */
typedef int (__stdcall *ICMENUMPROCA)(char *, int);

/* 8600 */
typedef _STARTUPINFOA *LPSTARTUPINFO;

/* 8601 */
typedef __int16 INT16;

/* 8602 */
typedef tagMENUITEMINFOW *LPCMENUITEMINFOW;

/* 8603 */
typedef unsigned int *PSECURITY_INFORMATION;

/* 8604 */
typedef int _off_t;

/* 8605 */
typedef void *(__cdecl *Alloc_t)(unsigned int);

/* 8606 */
typedef tagHANDLETABLE *LPHANDLETABLE;

/* 8607 */
typedef _INPUT_RECORD *PINPUT_RECORD;

/* 8608 */
typedef void (__cdecl *_inconsistency_function)();

/* 8609 */
typedef int LRESULT;

/* 8611 */
typedef unsigned int *PKAFFINITY;

/* 8612 */
typedef tagCBTACTIVATESTRUCT *LPCBTACTIVATESTRUCT;

/* 8613 */
typedef tagMDICREATESTRUCTA *LPMDICREATESTRUCT;

/* 8614 */
typedef int GEOID;

/* 8615 */
typedef std::_Tree_nod<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::_Node *_Genptr;

/* 8616 */
typedef unsigned int HCHAPTER;

/* 8617 */
typedef tagEMRPOLYTEXTOUTA *PEMRPOLYTEXTOUTA;

/* 8618 */
typedef int (__stdcall *CODEPAGE_ENUMPROCW)(unsigned __int16 *);

/* 8619 */
typedef unsigned int *PDWORD;

/* 8620 */
typedef tagEMRSETVIEWPORTORGEX *PEMRSETWINDOWORGEX;

/* 8621 */
typedef LIST_ENTRY32 *PLIST_ENTRY32;

/* 8622 */
typedef _UNIVERSAL_NAME_INFOA *LPUNIVERSAL_NAME_INFOA;

/* 8623 */
typedef unsigned int LCTYPE;

/* 8624 */
typedef unsigned int *PDWORD32;

/* 8625 */
typedef unsigned int uintptr_t;

/* 8626 */
typedef tagRECONVERTSTRING *PRECONVERTSTRING;

/* 8627 */
typedef tagENUMLOGFONTEXW *LPENUMLOGFONTEXW;

/* 8628 */
typedef __int64 LONG64;

/* 8629 */
typedef _ACTIVATION_CONTEXT_DETAILED_INFORMATION *PCACTIVATION_CONTEXT_DETAILED_INFORMATION;

/* 8630 */
typedef _tagADDRESS *LPADDRESS;

/* 8631 */
typedef tagWINDOWPLACEMENT *LPWINDOWPLACEMENT;

/* 8632 */
typedef tagLOGBRUSH *LPPATTERN;

/* 8633 */
typedef tagLOGBRUSH *NPPATTERN;

/* 8634 */
typedef tagCURSORSHAPE *LPCURSORSHAPE;

/* 8635 */
typedef _RTL_CRITICAL_SECTION_DEBUG *PCRITICAL_SECTION_DEBUG;

/* 8636 */
typedef _RECTL *PRECTL;

/* 8637 */
typedef void (__stdcall *WORKERCALLBACKFUNC)(void *);

/* 8638 */
typedef tagMONITORINFOEXW *LPMONITORINFOEXW;

/* 8639 */
typedef tagEXTLOGFONTA *PEXTLOGFONT;

/* 8640 */
typedef unsigned int DB_UPARAMS;

/* 8641 */
typedef char *va_list;

/* 8642 */
typedef void (__stdcall *WINEVENTPROC)(HWINEVENTHOOK__ *, unsigned int, HWND__ *, int, int, unsigned int, unsigned int);

/* 8643 */
typedef _EXCEPTION_POINTERS *LPEXCEPTION_POINTERS;

/* 8644 */
typedef _DOCINFOW *LPDOCINFOW;

/* 8645 */
typedef __int16 HALF_PTR;

/* 8646 */
typedef tagWINDOWPOS *LPWINDOWPOS;

/* 8647 */
typedef tagBITMAPINFOHEADER *PBITMAPINFOHEADER;

/* 8648 */
typedef tagCBT_CREATEWNDA *LPCBT_CREATEWNDA;

/* 8649 */
typedef unsigned int DBBYTEOFFSET;

/* 8650 */
typedef tagPOLYTEXTW *PPOLYTEXTW;

/* 8651 */
typedef int (__cdecl *_CRT_ALLOC_HOOK)(int, void *, unsigned int, int, int, const char *, int);

/* 8652 */
typedef tagSOUNDSENTRYA *LPSOUNDSENTRY;

/* 8653 */
typedef HACCEL__ *HACCEL;

/* 8654 */
typedef unsigned int DBKIND;

/* 8655 */
typedef tagICEXYZTRIPLE *LPCIEXYZTRIPLE;

/* 8656 */
typedef tagSIZE *LPSIZE;

/* 8657 */
typedef char *PXSTR;

/* 8658 */
typedef tagLOGFONTA *NPLOGFONTA;

/* 8659 */
typedef tagLOGFONTA *LPLOGFONTA;

/* 8660 */
typedef _LDT_ENTRY *LPLDT_ENTRY;

/* 8661 */
typedef unsigned int (__stdcall *ATLGETTHREADACP)();

/* 8662 */
typedef char *PTCHAR;

/* 8663 */
typedef tagABORTPATH *PEMRBEGINPATH;

/* 8664 */
typedef tagABORTPATH *PEMRFLATTENPATH;

/* 8665 */
typedef _LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES_ARRAY[1];

/* 8666 */
typedef _IMAGE_TLS_DIRECTORY64 *PIMAGE_TLS_DIRECTORY64;

/* 8667 */
typedef unsigned int DBEVENTPHASE;

/* 8668 */
typedef tagABORTPATH *PEMRWIDENPATH;

/* 8669 */
typedef _IMAGE_SYMBOL *PIMAGE_SYMBOL;

/* 8670 */
typedef _WIN32_FIND_DATAW *LPWIN32_FIND_DATAW;

/* 8671 */
typedef tagDBPROPINFO *PDBPROPINFO;

/* 8672 */
typedef _IMAGE_RUNTIME_FUNCTION_ENTRY *_PIMAGE_RUNTIME_FUNCTION_ENTRY;

/* 8673 */
typedef void (__stdcall *RTL_VERIFIER_DLL_UNLOAD_CALLBACK)(unsigned __int16 *, void *, unsigned int, void *);

/* 8674 */
typedef POWER_ACTION_POLICY *PPOWER_ACTION_POLICY;

/* 8675 */
typedef __int16 SQLRETURN;

/* 8676 */
typedef tagSIZE *LPSIZEL;

/* 8677 */
typedef _PROCESSOR_POWER_POLICY_INFO *PPROCESSOR_POWER_POLICY_INFO;

/* 8678 */
typedef tagEMRINVERTRGN *PEMRINVERTRGN;

/* 8679 */
typedef _GUID *LPCGUID;

/* 8680 */
typedef unsigned int *LPCOLORREF;

/* 8681 */
typedef tagMENUBARINFO *LPMENUBARINFO;

/* 8682 */
typedef void (__stdcall *MSGBOXCALLBACK)(tagHELPINFO *);

/* 8683 */
typedef _REPARSE_GUID_DATA_BUFFER *PREPARSE_GUID_DATA_BUFFER;

/* 8684 */
typedef int FXPT16DOT16;

/* 8685 */
typedef void DispatcherContext;

/* 8686 */
typedef tagWINDOWPOS *PWINDOWPOS;

/* 8687 */
typedef char BYTE;

/* 8688 */
typedef void AGvoid;

/* 8689 */
typedef SHELLHOOKINFO *LPSHELLHOOKINFO;

/* 8690 */
typedef _JOBOBJECT_END_OF_JOB_TIME_INFORMATION *PJOBOBJECT_END_OF_JOB_TIME_INFORMATION;

/* 8691 */
typedef _RTL_CRITICAL_SECTION *PRTL_CRITICAL_SECTION;

/* 8692 */
typedef tagDRAWTEXTPARAMS *LPDRAWTEXTPARAMS;

/* 8693 */
typedef unsigned __int16 AGword;

/* 8694 */
typedef HPEN__ *HPEN;

/* 8695 */
typedef _IMAGE_BASE_RELOCATION *PIMAGE_BASE_RELOCATION;

/* 8696 */
typedef _ENUM_SERVICE_STATUSW *LPENUM_SERVICE_STATUSW;

/* 8698 */
typedef unsigned __int16 OLECHAR;

/* 8699 */
typedef _SERVICE_STATUS_PROCESS *LPSERVICE_STATUS_PROCESS;

/* 8700 */
typedef unsigned int UINT32;

/* 8701 */
typedef int AGlong;

/* 8702 */
typedef BITMAPV4HEADER *PBITMAPV4HEADER;

/* 8703 */
typedef BITMAPV5HEADER *PBITMAPV5HEADER;

/* 8704 */
typedef int *PINT32;

/* 8705 */
typedef tagBITMAPINFOHEADER *LPBITMAPINFOHEADER;

/* 8706 */
typedef HRESULT __stdcall _ATL_CREATORARGFUNC(void *, _GUID *, void **, unsigned int);

/* 8707 */
typedef int (__stdcall *EDITWORDBREAKPROC)(char *, int, int, int);

/* 8708 */
typedef unsigned int BITVEC;

/* 8709 */
typedef int (__stdcall *ENHMFENUMPROC)(HDC__ *, tagHANDLETABLE *, tagENHMETARECORD *, int, int);

/* 8710 */
typedef tagEMRSELECTCLIPPATH *PEMRSETICMMODE;

/* 8711 */
typedef _VIDEOPARAMETERS *LPVIDEOPARAMETERS;

/* 8712 */
typedef int (__stdcall *MFENUMPROC)(HDC__ *, tagHANDLETABLE *, tagMETARECORD *, int, int);

/* 8713 */
typedef const unsigned __int16 *LPCUWSTR;

/* 8714 */
typedef tagCWPSTRUCT *PCWPSTRUCT;

/* 8715 */
typedef const char *LPCUTSTR;

/* 8716 */
typedef _RTL_CRITICAL_SECTION_DEBUG *PRTL_RESOURCE_DEBUG;

/* 8717 */
typedef tagEMRPOLYLINE16 *PEMRPOLYGON16;

/* 8718 */
typedef unsigned int DBREFCOUNT;

/* 8719 */
typedef void (__stdcall *LINEDDAPROC)(int, int, int);

/* 8720 */
typedef _CONNECTDLGSTRUCTW *LPCONNECTDLGSTRUCTW;

/* 8721 */
typedef tagFONTSIGNATURE *PFONTSIGNATURE;

/* 8722 */
typedef int (__stdcall *DATEFMT_ENUMPROCA)(char *);

/* 8723 */
typedef _TOKEN_TYPE *PTOKEN_TYPE;

/* 8724 */
typedef _ACCESS_ALLOWED_ACE *PACCESS_ALLOWED_ACE;

/* 8725 */
typedef _CONNECTDLGSTRUCTA *LPCONNECTDLGSTRUCTA;

/* 8726 */
typedef int (__stdcall *DATEFMT_ENUMPROCW)(unsigned __int16 *);

/* 8727 */
typedef tagCOMPAREITEMSTRUCT *PCOMPAREITEMSTRUCT;

/* 8728 */
typedef unsigned int DBMEMOWNER;

/* 8729 */
typedef const unsigned __int16 *LPCWCH;

/* 8730 */
typedef unsigned __int16 PROPVAR_PAD1;

/* 8731 */
typedef tagLAYERPLANEDESCRIPTOR *PLAYERPLANEDESCRIPTOR;

/* 8732 */
typedef tagEntryEnd *PENTRYEND;

/* 8733 */
typedef tagSOUNDSENTRYA *LPSOUNDSENTRYA;

/* 8734 */
typedef unsigned int __cdecl QUERYHANDLER(void *, val_context *, unsigned int, void *, unsigned int *, unsigned int);

/* 8735 */
typedef unsigned int DBPROPID;

/* 8736 */
typedef int DISPID;

/* 8737 */
typedef int key_type;

/* 8738 */
typedef char *PUCHAR;

/* 8739 */
typedef tagLOGFONTA *NPLOGFONT;

/* 8740 */
typedef tagLOGFONTA *LPLOGFONT;

/* 8741 */
typedef tagEXTLOGPEN *LPEXTLOGPEN;

/* 8742 */
typedef _SECURITY_ATTRIBUTES *LPSECURITY_ATTRIBUTES;

/* 8743 */
typedef tagEXTLOGPEN *NPEXTLOGPEN;

/* 8744 */
typedef unsigned __int64 DWORDLONG;

/* 8745 */
typedef std::pair<int const ,XiTArray<XiTrafficPathInfo> > *reference;

/* 8746 */
typedef int (__stdcall *LOCALE_ENUMPROCA)(char *);

/* 8747 */
typedef tagEMRCREATEDIBPATTERNBRUSHPT *PEMRCREATEDIBPATTERNBRUSHPT;

/* 8748 */
typedef _ImageArchitectureEntry *PIMAGE_ARCHITECTURE_ENTRY;

/* 8749 */
typedef _CONNECTDLGSTRUCTA *LPCONNECTDLGSTRUCT;

/* 8750 */
typedef _ACL_SIZE_INFORMATION *PACL_SIZE_INFORMATION;

/* 8751 */
typedef __int16 AGshort;

/* 8752 */
typedef _IMAGE_DOS_HEADER *PIMAGE_DOS_HEADER;

/* 8753 */
typedef int LPARAM;

/* 8754 */
typedef const void *LPCVOID;

/* 8755 */
typedef unsigned int (__cdecl *PQUERYHANDLER)(void *, val_context *, unsigned int, void *, unsigned int *, unsigned int);

/* 8756 */
typedef pvalueA *PPVALUEA;

/* 8757 */
typedef unsigned __int16 *PWCH;

/* 8758 */
typedef int *LPINT;

/* 8759 */
typedef _SYSTEMTIME *LPSYSTEMTIME;

/* 8760 */
typedef tagPAINTSTRUCT *NPPAINTSTRUCT;

/* 8761 */
typedef tagPAINTSTRUCT *LPPAINTSTRUCT;

/* 8762 */
typedef unsigned int WPARAM;

/* 8763 */
typedef __int64 _Q64;

/* 8764 */
typedef tagPOLYTEXTW *LPPOLYTEXTW;

/* 8765 */
typedef tagPOLYTEXTW *NPPOLYTEXTW;

/* 8766 */
typedef _OSVERSIONINFOA *LPOSVERSIONINFOA;

/* 8767 */
typedef SYSTEM_POWER_CAPABILITIES *PSYSTEM_POWER_CAPABILITIES;

/* 8768 */
typedef int INT32;

/* 8769 */
typedef _KDHELP *PKDHELP;

/* 8770 */
typedef _NETCONNECTINFOSTRUCT *LPNETCONNECTINFOSTRUCT;

/* 8771 */
typedef unsigned int GEOCLASS;

/* 8772 */
typedef tagPOLYTEXTA *NPPOLYTEXTA;

/* 8773 */
typedef tagPOLYTEXTA *LPPOLYTEXTA;

/* 8774 */
typedef tagEMRSETTEXTCOLOR *PEMRSETBKCOLOR;

/* 8775 */
typedef _LOAD_DLL_DEBUG_INFO *LPLOAD_DLL_DEBUG_INFO;

/* 8776 */
typedef char *_Charref;

/* 8777 */
typedef value_entA *PVALENTA;

/* 8778 */
typedef tagEMRARC *PEMRPIE;

/* 8779 */
typedef tagRGBQUAD *LPRGBQUAD;

/* 8780 */
typedef tagIMECHARPOSITION *NPIMECHARPOSITION;

/* 8781 */
typedef tagSCROLLBARINFO *LPSCROLLBARINFO;

/* 8782 */
typedef tagIMECHARPOSITION *LPIMECHARPOSITION;

/* 8783 */
typedef _SYSTEM_ALARM_CALLBACK_OBJECT_ACE *PSYSTEM_ALARM_CALLBACK_OBJECT_ACE;

/* 8784 */
typedef _MENU_EVENT_RECORD *PMENU_EVENT_RECORD;

/* 8785 */
typedef int (__stdcall *DESKTOPENUMPROC)(char *, int);

/* 8786 */
typedef _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION *PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION;

/* 8787 */
typedef int (__stdcall *NEARPROC)();

/* 8788 */
typedef char *PBOOLEAN;

/* 8789 */
typedef _EXCEPTION_RECORD64 *PEXCEPTION_RECORD64;

/* 8790 */
typedef tagPOLYTEXTA *NPPOLYTEXT;

/* 8791 */
typedef tagDIBSECTION *LPDIBSECTION;

/* 8792 */
typedef tagPOLYTEXTA *LPPOLYTEXT;

/* 8793 */
typedef tagPOINTFX *LPPOINTFX;

/* 8794 */
typedef int (__stdcall *EDITWORDBREAKPROCA)(char *, int, int, int);

/* 8795 */
typedef XiCsItem *XiCsItemPtr;

/* 8796 */
typedef tagCWPSTRUCT *NPCWPSTRUCT;

/* 8797 */
typedef void *SC_LOCK;

/* 8798 */
typedef tagCWPSTRUCT *LPCWPSTRUCT;

/* 8799 */
typedef tagICONMETRICSW *LPICONMETRICSW;

/* 8800 */
typedef tagLOGPEN *PLOGPEN;

/* 8801 */
typedef _IMAGE_THUNK_DATA32 *PIMAGE_THUNK_DATA32;

/* 8802 */
typedef _MESSAGE_RESOURCE_BLOCK *PMESSAGE_RESOURCE_BLOCK;

/* 8803 */
typedef _GRADIENT_RECT *PGRADIENT_RECT;

/* 8804 */
typedef tagACCESSTIMEOUT *LPACCESSTIMEOUT;

/* 8805 */
typedef tagEMRPOLYLINE16 *PEMRPOLYBEZIERTO16;

/* 8806 */
typedef unsigned int *LPUINT;

/* 8807 */
typedef __int64 LONGLONG;

/* 8808 */
typedef _DOCINFOA *LPDOCINFOA;

/* 8809 */
typedef int (__stdcall *DRAWSTATEPROC)(HDC__ *, int, unsigned int, int, int);

/* 8810 */
typedef tagEMRPOLYLINE16 *PEMRPOLYBEZIER16;

/* 8811 */
typedef _TOKEN_GROUPS_AND_PRIVILEGES *PTOKEN_GROUPS_AND_PRIVILEGES;

/* 8812 */
typedef tagMSGBOXPARAMSA *LPMSGBOXPARAMSA;

/* 8813 */
typedef char *PTBYTE;

/* 8814 */
typedef _TAPE_GET_POSITION *PTAPE_GET_POSITION;

/* 8815 */
typedef unsigned int (__stdcall *LPFNDEVMODE)(HWND__ *, HINSTANCE__ *, _devicemodeA *, char *, char *, _devicemodeA *, char *, unsigned int);

/* 8816 */
typedef tagMSGBOXPARAMSW *LPMSGBOXPARAMSW;

/* 8817 */
typedef tagCBT_CREATEWNDW *LPCBT_CREATEWNDW;

/* 8818 */
typedef _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION *PACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;

/* 8819 */
typedef tagPOLYTEXTA *PPOLYTEXTA;

/* 8820 */
typedef tagHANDLETABLE *PHANDLETABLE;

/* 8821 */
typedef tagLOGPEN *NPLOGPEN;

/* 8822 */
typedef tagLOGPEN *LPLOGPEN;

/* 8823 */
typedef int (__stdcall *WNDENUMPROC)(HWND__ *, int);

/* 8824 */
typedef _IMAGE_SEPARATE_DEBUG_HEADER *PIMAGE_SEPARATE_DEBUG_HEADER;

/* 8825 */
typedef unsigned __int16 (__cdecl *FnPktParser)(BS_PacketDispatch *, char *);

/* 8826 */
typedef tagSTICKYKEYS *LPSTICKYKEYS;

/* 8827 */
typedef tagLOGFONTW *LPLOGFONTW;

/* 8828 */
typedef tagLOGFONTA *PLOGFONT;

/* 8829 */
typedef tagLOGFONTW *NPLOGFONTW;

/* 8830 */
typedef tagEMRSETWORLDTRANSFORM *PEMRSETWORLDTRANSFORM;

/* 8831 */
typedef _IMAGE_TLS_DIRECTORY32 *PIMAGE_TLS_DIRECTORY32;

/* 8832 */
typedef _OSVERSIONINFOEXW *PRTL_OSVERSIONINFOEXW;

/* 8833 */
typedef tagMSGBOXPARAMSA *LPMSGBOXPARAMS;

/* 8834 */
typedef __int64 *PLONGLONG;

/* 8835 */
typedef tagMEASUREITEMSTRUCT *PMEASUREITEMSTRUCT;

/* 8836 */
typedef _WIN32_FIND_DATAA *LPWIN32_FIND_DATAA;

/* 8837 */
typedef unsigned __int64 ULONGLONG;

/* 8838 */
typedef unsigned int DBCOMPAREOP;

/* 8839 */
typedef void (__cdecl *_purecall_handler)();

/* 8840 */
typedef _SID_AND_ATTRIBUTES (*PSID_AND_ATTRIBUTES_ARRAY)[1];

/* 8841 */
typedef __int64 _Longlong;

/* 8842 */
typedef int (__stdcall *CALINFO_ENUMPROCA)(char *);

/* 8843 */
typedef tagEVENTMSG *NPEVENTMSG;

/* 8844 */
typedef tagMSG *PMSG;

/* 8845 */
typedef _GUID *LPIID;

/* 8846 */
typedef tagLOGFONTW *PLOGFONTW;

/* 8847 */
typedef tagEVENTMSG *LPEVENTMSG;

/* 8848 */
typedef int streamsize;

/* 8849 */
typedef unsigned int HANDLE_PTR;

/* 8850 */
typedef char *LPCH;

/* 8851 */
typedef _WINDOW_BUFFER_SIZE_RECORD *PWINDOW_BUFFER_SIZE_RECORD;

/* 8852 */
typedef tagLOGFONTA *PLOGFONTA;

/* 8853 */
typedef tagEMRSELECTCLIPPATH *PEMRSETSTRETCHBLTMODE;

/* 8854 */
typedef int (__stdcall *CALINFO_ENUMPROCW)(unsigned __int16 *);

/* 8855 */
typedef void **PHDEVNOTIFY;

/* 8856 */
typedef int AGint;

/* 8857 */
typedef tagSIZE *PSIZE;

/* 8858 */
typedef unsigned int SECURITY_INFORMATION;

/* 8859 */
typedef void *HGLOBAL;

/* 8860 */
typedef void **LPHANDLE;

/* 8861 */
typedef unsigned int dev_t;

/* 8862 */
typedef tagFONTSIGNATURE *LPFONTSIGNATURE;

/* 8863 */
typedef _IMAGE_IMPORT_DESCRIPTOR *PIMAGE_IMPORT_DESCRIPTOR;

/* 8864 */
typedef unsigned __int16 wint_t;

/* 8865 */
typedef tagEMRARC *PEMRARCTO;

/* 8866 */
typedef tagEXTLOGFONTA *LPEXTLOGFONT;

/* 8867 */
typedef _CREATE_PROCESS_DEBUG_INFO *LPCREATE_PROCESS_DEBUG_INFO;

/* 8868 */
typedef void **SPHANDLE;

/* 8869 */
typedef tagEXTLOGFONTA *NPEXTLOGFONT;

/* 8870 */
typedef _OSVERSIONINFOW *PRTL_OSVERSIONINFOW;

/* 8871 */
typedef tagEMRSELECTOBJECT *PEMRDELETEOBJECT;

/* 8872 */
typedef _FILE_NOTIFY_INFORMATION *PFILE_NOTIFY_INFORMATION;

/* 8873 */
typedef void *PVOID64;

/* 8874 */
typedef _OUTLINETEXTMETRICA *POUTLINETEXTMETRIC;

/* 8875 */
typedef _ENUM_SERVICE_STATUSA *LPENUM_SERVICE_STATUSA;

/* 8876 */
typedef void (__stdcall *TIMERPROC)(HWND__ *, unsigned int, unsigned int, unsigned int);

/* 8877 */
typedef LIST_ENTRY64 *PLIST_ENTRY64;

/* 8878 */
typedef tagEMREXTCREATEPEN *PEMREXTCREATEPEN;

/* 8879 */
typedef tagEMRCREATEPALETTE *PEMRCREATEPALETTE;

/* 8880 */
typedef __int64 *PINT64;

/* 8881 */
typedef unsigned __int64 UINT64;

/* 8882 */
typedef tagEXTLOGFONTW *NPEXTLOGFONTW;

/* 8883 */
typedef int (__stdcall *PFNPROCESSPOLICIESA)(HWND__ *, const char *, const char *, const char *, unsigned int);

/* 8884 */
typedef tagEXTLOGFONTW *LPEXTLOGFONTW;

/* 8885 */
typedef _TAPE_GET_MEDIA_PARAMETERS *PTAPE_GET_MEDIA_PARAMETERS;

/* 8886 */
typedef tagNMHDR *LPNMHDR;

/* 8887 */
typedef tagWINDOWINFO *LPWINDOWINFO;

/* 8888 */
typedef tagEXTLOGFONTA *LPEXTLOGFONTA;

/* 8889 */
typedef tagNEWTEXTMETRICA *LPNEWTEXTMETRIC;

/* 8890 */
typedef tagEXTLOGFONTA *NPEXTLOGFONTA;

/* 8891 */
typedef tagNEWTEXTMETRICA *NPNEWTEXTMETRIC;

/* 8892 */
typedef int (__stdcall *PFNPROCESSPOLICIESW)(HWND__ *, const unsigned __int16 *, const unsigned __int16 *, const unsigned __int16 *, unsigned int);

/* 8893 */
typedef _CONSOLE_SCREEN_BUFFER_INFO *PCONSOLE_SCREEN_BUFFER_INFO;

/* 8894 */
typedef _OUTLINETEXTMETRICW *POUTLINETEXTMETRICW;

/* 8895 */
typedef tagICONMETRICSA *LPICONMETRICS;

/* 8896 */
typedef _OFSTRUCT *LPOFSTRUCT;

/* 8897 */
typedef unsigned __int16 ATOM;

/* 8898 */
typedef _OUTLINETEXTMETRICA *POUTLINETEXTMETRICA;

/* 8899 */
typedef unsigned int AGuint;

/* 8900 */
typedef tagEMRCREATEMONOBRUSH *PEMRCREATEMONOBRUSH;

/* 8901 */
typedef threadmbcinfostruct *pthreadmbcinfo;

/* 8902 */
typedef tagDEBUGHOOKINFO *LPDEBUGHOOKINFO;

/* 8903 */
typedef tagDEBUGHOOKINFO *NPDEBUGHOOKINFO;

/* 8904 */
typedef _DOCINFOA *LPDOCINFO;

/* 8905 */
typedef __int16 SQLSMALLINT;

/* 8906 */
typedef tagPALETTEENTRY *LPPALETTEENTRY;

/* 8907 */
typedef tagPOLYTEXTA *PPOLYTEXT;

/* 8908 */
typedef _LDT_ENTRY *PLDT_ENTRY;

/* 8909 */
typedef tagENHMETAHEADER *PENHMETAHEADER;

/* 8910 */
typedef tagNCCALCSIZE_PARAMS *LPNCCALCSIZE_PARAMS;

/* 8911 */
typedef _POINTFLOAT *PPOINTFLOAT;

/* 8912 */
typedef BATTERY_REPORTING_SCALE *PBATTERY_REPORTING_SCALE;

/* 8913 */
typedef tagEMRELLIPSE *PEMRELLIPSE;

/* 8914 */
typedef tagSOUNDSENTRYW *LPSOUNDSENTRYW;

/* 8915 */
typedef _TRIVERTEX *LPTRIVERTEX;

/* 8916 */
typedef void (__stdcall *APC_CALLBACK_FUNCTION)(unsigned int, void *, void *);

/* 8917 */
typedef __int16 *PSHORT;

/* 8918 */
typedef unsigned __int16 WORD;

/* 8919 */
typedef _TAPE_PREPARE *PTAPE_PREPARE;

/* 8920 */
typedef unsigned __int16 USHORT;

/* 8921 */
typedef int (__stdcall *LOCALE_ENUMPROCW)(unsigned __int16 *);

/* 8922 */
typedef _OUTPUT_DEBUG_STRING_INFO *LPOUTPUT_DEBUG_STRING_INFO;

/* 8923 */
typedef tagDRAWITEMSTRUCT *PDRAWITEMSTRUCT;

/* 8924 */
typedef unsigned __int16 FSHORT;

/* 8925 */
typedef _WIN32_FIND_DATAA *LPWIN32_FIND_DATA;

/* 8926 */
typedef tagDELETEITEMSTRUCT *PDELETEITEMSTRUCT;

/* 8927 */
typedef tagWINDOWPLACEMENT *PWINDOWPLACEMENT;

/* 8928 */
typedef unsigned __int16 _U16;

/* 8929 */
typedef tagEMRSETCOLORADJUSTMENT *PEMRSETCOLORADJUSTMENT;

/* 8930 */
typedef pvalueW *PPVALUEW;

/* 8931 */
typedef _RTL_CRITICAL_SECTION_DEBUG *PRTL_CRITICAL_SECTION_DEBUG;

/* 8932 */
typedef tagRECONVERTSTRING *NPRECONVERTSTRING;

/* 8933 */
typedef _TOKEN_PRIVILEGES *PTOKEN_PRIVILEGES;

/* 8934 */
typedef tagRECONVERTSTRING *LPRECONVERTSTRING;

/* 8935 */
typedef _GLYPHMETRICSFLOAT *LPGLYPHMETRICSFLOAT;

/* 8936 */
typedef unsigned int *PUINT32;

/* 8937 */
typedef provider_info *PPROVIDER;

/* 8938 */
typedef _OSVERSIONINFOW *LPOSVERSIONINFOW;

/* 8939 */
typedef tagEntry *PENTRY;

/* 8940 */
typedef _IMAGE_DATA_DIRECTORY *PIMAGE_DATA_DIRECTORY;

/* 8941 */
typedef _SECURITY_IMPERSONATION_LEVEL *PSECURITY_IMPERSONATION_LEVEL;

/* 8942 */
typedef int MEMBERID;

/* 8943 */
typedef void *LPVOID;

/* 8944 */
typedef int SHANDLE_PTR;

/* 8945 */
typedef int off_t;

/* 8946 */
typedef _cpinfo *LPCPINFO;

/* 8947 */
typedef value_entW *PVALENTW;

/* 8948 */
typedef unsigned __int16 *LPWORD;

/* 8949 */
typedef tagEMREXTTEXTOUTA *PEMREXTTEXTOUTA;

/* 8950 */
typedef _EVENTLOG_FULL_INFORMATION *LPEVENTLOG_FULL_INFORMATION;

/* 8951 */
typedef _COORD *PCOORD;

/* 8952 */
typedef tagEMRSELECTOBJECT *PEMRSELECTOBJECT;

/* 8953 */
typedef tagMENUITEMINFOA *LPMENUITEMINFOA;

/* 8954 */
typedef tagEMRFILLPATH *PEMRFILLPATH;

/* 8955 */
typedef tagMENUITEMINFOW *LPMENUITEMINFOW;

/* 8956 */
typedef HFONT__ *HFONT;

/* 8957 */
typedef tagEMREXTTEXTOUTA *PEMREXTTEXTOUTW;

/* 8958 */
typedef tagEMREOF *PEMREOF;

/* 8959 */
typedef int (__stdcall *PFN_INIT_CRITSEC_AND_SPIN_COUNT)(_RTL_CRITICAL_SECTION *, unsigned int);

/* 8960 */
typedef _ENUM_SERVICE_STATUSA *LPENUM_SERVICE_STATUS;

/* 8961 */
typedef tagEMRPOLYPOLYLINE *PEMRPOLYPOLYGON;

/* 8962 */
typedef unsigned int DBSTATUS;

/* 8963 */
typedef int LONG;

/* 8964 */
typedef int *LPLONG;

/* 8965 */
typedef _EXCEPTION_RECORD *PEXCEPTION_RECORD;

/* 8966 */
typedef tagMENUINFO *LPMENUINFO;

/* 8967 */
typedef unsigned int CALID;

/* 8968 */
typedef int (__cdecl *_PNH)(unsigned int);

/* 8969 */
typedef std::pair<int const ,XiTArray<XiTrafficPathInfo> > *_ITptr;

/* 8970 */
typedef tagEMRLINETO *PEMRMOVETOEX;

/* 8971 */
typedef int (__stdcall *EDITWORDBREAKPROCW)(unsigned __int16 *, int, int, int);

/* 8972 */
typedef tagICONMETRICSA *LPICONMETRICSA;

/* 8973 */
typedef _CONSOLE_FONT_INFO *PCONSOLE_FONT_INFO;

/* 8974 */
typedef tagEMRSETVIEWPORTEXTEX *PEMRSETVIEWPORTEXTEX;

/* 8975 */
typedef tagMENUITEMINFOA *LPMENUITEMINFO;

/* 8976 */
typedef _ACCESS_ALLOWED_OBJECT_ACE *PACCESS_ALLOWED_OBJECT_ACE;

/* 8977 */
typedef tagEMRPOLYLINE *PEMRPOLYBEZIERTO;

/* 8978 */
typedef int time_t;

/* 8979 */
typedef tagCURSORINFO *PCURSORINFO;

/* 8980 */
typedef _TOKEN_GROUPS *PTOKEN_GROUPS;

/* 8981 */
typedef threadlocaleinfostruct *pthreadlocinfo;

/* 8982 */
typedef unsigned __int16 SECURITY_DESCRIPTOR_CONTROL;

/* 8983 */
typedef std::pair<int const ,XiTArray<XiTrafficPathInfo> > *_IReft;

/* 8984 */
typedef tagCOMPOSITIONFORM *NPCOMPOSITIONFORM;

/* 8985 */
typedef tagMSGBOXPARAMSA *PMSGBOXPARAMSA;

/* 8986 */
typedef tagCOMPOSITIONFORM *LPCOMPOSITIONFORM;

/* 8987 */
typedef unsigned __int64 *PULONG64;

/* 8988 */
typedef _FILETIME *LPFILETIME;

/* 8989 */
typedef tagGroup *PGROUP;

/* 8990 */
typedef _ACCESS_DENIED_CALLBACK_OBJECT_ACE *PACCESS_DENIED_CALLBACK_OBJECT_ACE;

/* 8991 */
typedef tagMENUGETOBJECTINFO *PMENUGETOBJECTINFO;

/* 8992 */
typedef const unsigned __int16 *__stdcall _ATL_DESCRIPTIONFUNC();

/* 8993 */
typedef _IMAGE_FUNCTION_ENTRY64 *PIMAGE_FUNCTION_ENTRY64;

/* 8994 */
typedef int (__stdcall *WINSTAENUMPROC)(char *, int);

/* 8995 */
typedef _RTL_CRITICAL_SECTION *PCRITICAL_SECTION;

/* 8996 */
typedef _MODEMDEVCAPS *LPMODEMDEVCAPS;

/* 8997 */
typedef void (__cdecl *_se_translator_function)(unsigned int, _EXCEPTION_POINTERS *);

/* 8998 */
typedef _COMMPROP *LPCOMMPROP;

/* 8999 */
typedef tagSTYLESTRUCT *LPSTYLESTRUCT;

/* 9000 */
typedef tagMULTIKEYHELPA *PMULTIKEYHELP;

/* 9001 */
typedef void **PHANDLE;

/* 9002 */
typedef _QUOTA_LIMITS *PQUOTA_LIMITS;

/* 9003 */
typedef _SECURITY_ATTRIBUTES *PSECURITY_ATTRIBUTES;

/* 9004 */
typedef tagPAINTSTRUCT *PPAINTSTRUCT;

/* 9005 */
typedef _currencyfmtW *LPCURRENCYFMTW;

/* 9006 */
typedef char *(__cdecl *GetParameter_t)(int);

/* 9007 */
typedef tagUSEROBJECTFLAGS *PUSEROBJECTFLAGS;

/* 9008 */
typedef HKL__ **LPHKL;

/* 9009 */
typedef _CREATE_THREAD_DEBUG_INFO *LPCREATE_THREAD_DEBUG_INFO;

/* 9010 */
typedef tagFILTERKEYS *LPFILTERKEYS;

/* 9011 */
typedef DLGTEMPLATE *LPDLGTEMPLATEW;

/* 9012 */
typedef tagEMREXTESCAPE *PEMREXTESCAPE;

/* 9013 */
typedef tagBITMAPFILEHEADER *PBITMAPFILEHEADER;

/* 9014 */
typedef _TAPE_SET_MEDIA_PARAMETERS *PTAPE_SET_MEDIA_PARAMETERS;

/* 9015 */
typedef _IMAGE_TLS_DIRECTORY32 *PIMAGE_TLS_DIRECTORY;

/* 9016 */
typedef unsigned int (__stdcall *LPHANDLER_FUNCTION_EX)(unsigned int, unsigned int, void *, void *);

/* 9017 */
typedef tagEMRGLSRECORD *PEMRGLSRECORD;

/* 9018 */
typedef tagABORTPATH *PEMRCLOSEFIGURE;

/* 9019 */
typedef int (__stdcall *WINSTAENUMPROCA)(char *, int);

/* 9020 */
typedef tagGCP_RESULTSA *LPGCP_RESULTSA;

/* 9021 */
typedef tagEMRTRANSPARENTBLT *PEMRTRANSPARENTBLT;

/* 9022 */
typedef unsigned int *PUINT;

/* 9023 */
typedef int (__stdcall *LANGUAGEGROUP_ENUMPROCA)(unsigned int, char *, char *, unsigned int, int);

/* 9024 */
typedef _STARTUPINFOW *LPSTARTUPINFOW;

/* 9025 */
typedef _IMAGE_VXD_HEADER *PIMAGE_VXD_HEADER;

/* 9026 */
typedef _FOCUS_EVENT_RECORD *PFOCUS_EVENT_RECORD;

/* 9027 */
typedef int (__stdcall *LANGUAGEGROUP_ENUMPROCW)(unsigned int, unsigned __int16 *, unsigned __int16 *, unsigned int, int);

/* 9028 */
typedef int (__stdcall *WINSTAENUMPROCW)(unsigned __int16 *, int);

/* 9029 */
typedef _ACCESS_DENIED_ACE *PACCESS_DENIED_ACE;

/* 9030 */
typedef tagPOINTS *LPPOINTS;

/* 9031 */
typedef __int64 INT64;

/* 9032 */
typedef _TAPE_SET_POSITION *PTAPE_SET_POSITION;

/* 9033 */
typedef tagBITMAPCOREINFO *PBITMAPCOREINFO;

/* 9034 */
typedef _NETINFOSTRUCT *LPNETINFOSTRUCT;

/* 9035 */
typedef tagXFORM *PXFORM;

/* 9036 */
typedef CM_Power_Data_s *PCM_POWER_DATA;

/* 9037 */
typedef void *SQLHDBC;

/* 9038 */
typedef _NT_TIB *PNT_TIB;

/* 9039 */
typedef tagEMRFORMAT *PEMRFORMAT;

/* 9040 */
typedef tagMDICREATESTRUCTW *LPMDICREATESTRUCTW;

/* 9041 */
typedef int (__stdcall *LPTOP_LEVEL_EXCEPTION_FILTER)(_EXCEPTION_POINTERS *);

/* 9042 */
typedef int (__stdcall *PFLS_SETVALUE_FUNCTION)(unsigned int, void *);

/* 9043 */
typedef int (__stdcall *GEO_ENUMPROC)(int);

/* 9044 */
typedef _PACKEDEVENTINFO *PPACKEDEVENTINFO;

/* 9045 */
typedef int (__stdcall *PROPENUMPROCEXW)(HWND__ *, unsigned __int16 *, void *, unsigned int);

/* 9046 */
typedef void (__stdcall *LPSERVICE_MAIN_FUNCTIONA)(unsigned int, char **);

/* 9047 */
typedef tagLOGCOLORSPACEA *LPLOGCOLORSPACEA;

/* 9048 */
typedef unsigned __int16 *PUHALF_PTR;

/* 9049 */
typedef tagRegion *PREGION;

/* 9050 */
typedef int (__stdcall *PROPENUMPROCEXA)(HWND__ *, char *, void *, unsigned int);

/* 9051 */
typedef _OUTLINETEXTMETRICA *LPOUTLINETEXTMETRICA;

/* 9052 */
typedef _PROCESS_INFORMATION *LPPROCESS_INFORMATION;

/* 9053 */
typedef _OUTLINETEXTMETRICA *NPOUTLINETEXTMETRICA;

/* 9054 */
typedef HMETAFILE__ *HMETAFILE;

/* 9055 */
typedef BITMAPV4HEADER *LPBITMAPV4HEADER;

/* 9056 */
typedef unsigned __int16 UINT16;

/* 9057 */
typedef DLGITEMTEMPLATE *LPDLGITEMTEMPLATEA;

/* 9058 */
typedef __int16 *PINT16;

/* 9059 */
typedef unsigned int KSPIN_LOCK;

/* 9060 */
typedef _OSVERSIONINFOEXA *LPOSVERSIONINFOEXA;

/* 9061 */
typedef float AGfloat;

/* 9062 */
typedef _EXCEPTION_RECORD32 *PEXCEPTION_RECORD32;

/* 9063 */
typedef tagEMRMASKBLT *PEMRMASKBLT;

/* 9064 */
typedef NHNCoin *(__cdecl *PFunc)(const char *, unsigned __int16, unsigned int);

/* 9065 */
typedef _AUDIT_EVENT_TYPE *PAUDIT_EVENT_TYPE;

/* 9066 */
typedef _IMAGE_THUNK_DATA64 *PIMAGE_THUNK_DATA64;

/* 9067 */
typedef sockaddr_in *LPSOCKADDR_IN;

/* 9068 */
typedef unsigned int (__stdcall *PFNRECONCILEPROFILEW)(const unsigned __int16 *, const unsigned __int16 *, unsigned int);

/* 9069 */
typedef tagEMRPOLYLINE16 *PEMRPOLYLINE16;

/* 9070 */
typedef _TOKEN_PRIMARY_GROUP *PTOKEN_PRIMARY_GROUP;

/* 9071 */
typedef tagWNDCLASSEXA *PWNDCLASSEXA;

/* 9072 */
typedef tagPIXELFORMATDESCRIPTOR *PPIXELFORMATDESCRIPTOR;

/* 9073 */
typedef _MODEMSETTINGS *PMODEMSETTINGS;

/* 9074 */
typedef _SERVICE_DESCRIPTIONA *LPSERVICE_DESCRIPTIONA;

/* 9075 */
typedef _numberfmtA *LPNUMBERFMTA;

/* 9076 */
typedef int (__stdcall *PROPENUMPROCEX)(HWND__ *, char *, void *, unsigned int);

/* 9077 */
typedef char *PSZ;

/* 9078 */
typedef tagMSGBOXPARAMSA *PMSGBOXPARAMS;

/* 9079 */
typedef _TOKEN_USER *PTOKEN_USER;

/* 9080 */
typedef _DISCDLGSTRUCTW *LPDISCDLGSTRUCTW;

/* 9081 */
typedef char *PCH;

/* 9082 */
typedef __int64 USN;

/* 9083 */
typedef unsigned int HELPPOLY;

/* 9084 */
typedef char AGbyte;

/* 9085 */
typedef _DISPLAY_DEVICEA *PDISPLAY_DEVICEA;

/* 9086 */
typedef tagTTPOLYGONHEADER *LPTTPOLYGONHEADER;

/* 9087 */
typedef unsigned int SIZE_T;

/* 9088 */
typedef tagTOGGLEKEYS *LPTOGGLEKEYS;

/* 9089 */
typedef _QUERY_SERVICE_CONFIGA *LPQUERY_SERVICE_CONFIGA;

/* 9090 */
typedef _LUID_AND_ATTRIBUTES *PLUID_AND_ATTRIBUTES;

/* 9091 */
typedef _LUID_AND_ATTRIBUTES (*PLUID_AND_ATTRIBUTES_ARRAY)[1];

/* 9092 */
typedef tagABORTPATH *PEMRSAVEDC;

/* 9093 */
typedef _QUERY_SERVICE_CONFIGW *LPQUERY_SERVICE_CONFIGW;

/* 9094 */
typedef _PROCESS_HEAP_ENTRY *PPROCESS_HEAP_ENTRY;

/* 9095 */
typedef tagLAYERPLANEDESCRIPTOR *LPLAYERPLANEDESCRIPTOR;

/* 9096 */
typedef __int16 VARIANT_BOOL;

/* 9097 */
typedef tagMULTIKEYHELPA *PMULTIKEYHELPA;

/* 9098 */
typedef tagCOMPAREITEMSTRUCT *LPCOMPAREITEMSTRUCT;

/* 9099 */
typedef void (__cdecl *unexpected_function)();

/* 9100 */
typedef _COMMTIMEOUTS *LPCOMMTIMEOUTS;

/* 9101 */
typedef tagEMRSETTEXTCOLOR *PEMRSETTEXTCOLOR;

/* 9102 */
typedef _IMAGE_ARCHIVE_MEMBER_HEADER *PIMAGE_ARCHIVE_MEMBER_HEADER;

/* 9103 */
typedef _ACTIVATION_CONTEXT_QUERY_INDEX *PACTIVATION_CONTEXT_QUERY_INDEX;

/* 9104 */
typedef _FILETIME *PFILETIME;

/* 9105 */
typedef _QUERY_SERVICE_CONFIGA *LPQUERY_SERVICE_CONFIG;

/* 9106 */
typedef tagGCP_RESULTSA *LPGCP_RESULTS;

/* 9107 */
typedef int HFILE;

/* 9108 */
typedef unsigned __int64 *PDWORD64;

/* 9109 */
typedef _JOBOBJECT_SECURITY_LIMIT_INFORMATION *PJOBOBJECT_SECURITY_LIMIT_INFORMATION;

/* 9110 */
typedef unsigned int *PUINT_PTR;

/* 9111 */
typedef tagEMRSELECTCLIPPATH *PEMRSETROP2;

/* 9112 */
typedef FLASHWINFO *PFLASHWINFO;

/* 9113 */
typedef const char *PCCH;

/* 9114 */
typedef tagTEXTMETRICW *PTEXTMETRICW;

/* 9115 */
typedef int (__stdcall *ICMENUMPROCW)(unsigned __int16 *, int);

/* 9116 */
typedef unsigned __int16 *PUINT16;

/* 9117 */
typedef _IMAGE_DEBUG_MISC *PIMAGE_DEBUG_MISC;

/* 9118 */
typedef tagMENUITEMINFOA *LPCMENUITEMINFOA;

/* 9119 */
typedef int (__stdcall *FONTENUMPROC)(tagLOGFONTA *, tagTEXTMETRICA *, unsigned int, int);

/* 9120 */
typedef int DBROWOFFSET;

/* 9121 */
typedef char SECURITY_CONTEXT_TRACKING_MODE;

/* 9122 */
typedef tagLOGBRUSH *NPLOGBRUSH;

/* 9123 */
typedef _JOBOBJECT_BASIC_UI_RESTRICTIONS *PJOBOBJECT_BASIC_UI_RESTRICTIONS;

/* 9124 */
typedef tagLOGBRUSH *LPLOGBRUSH;

/* 9125 */
typedef tagLC_ID *LPLC_ID;

/* 9126 */
typedef _CONTEXT *LPCONTEXT;

/* 9127 */
typedef IMoniker *LPMONIKER;

/* 9128 */
typedef unsigned int DBROWOPTIONS;

/* 9129 */
typedef tagEMRSELECTCLIPPATH *PEMRSETBKMODE;

/* 9130 */
typedef _REMOTE_NAME_INFOA *LPREMOTE_NAME_INFO;

/* 9131 */
typedef tagCOLORMATCHTOTARGET *PEMRCOLORMATCHTOTARGET;

/* 9132 */
typedef tagEMRFILLPATH *PEMRSTROKEANDFILLPATH;

/* 9133 */
typedef HIMC__ *HIMC;

/* 9134 */
typedef __int16 SHORT;

/* 9135 */
typedef tagEXTLOGPEN *PEXTLOGPEN;

/* 9136 */
typedef unsigned int DBPENDINGSTATUS;

/* 9137 */
typedef tagEMRPOLYTEXTOUTA *PEMRPOLYTEXTOUTW;

/* 9138 */
typedef tagMETARECORD *LPMETARECORD;

/* 9139 */
typedef int (__stdcall *CODEPAGE_ENUMPROCA)(char *);

/* 9140 */
typedef int (__stdcall *PHANDLER_ROUTINE)(unsigned int);

/* 9141 */
typedef _UNIVERSAL_NAME_INFOW *LPUNIVERSAL_NAME_INFOW;

/* 9142 */
typedef unsigned int REGSAM;

/* 9143 */
typedef tagENHMETAHEADER *LPENHMETAHEADER;

/* 9144 */
typedef DLGITEMTEMPLATE *LPDLGITEMTEMPLATE;

/* 9145 */
typedef int (__stdcall *FONTENUMPROCA)(tagLOGFONTA *, tagTEXTMETRICA *, unsigned int, int);

/* 9146 */
typedef BITMAPV5HEADER *LPBITMAPV5HEADER;

/* 9147 */
typedef _tagADDRESS64 *LPADDRESS64;

/* 9148 */
typedef _REMOTE_NAME_INFOW *LPREMOTE_NAME_INFOW;

/* 9149 */
typedef int (__stdcall *IMCENUMPROC)(HIMC__ *, int);

/* 9150 */
typedef int (__stdcall *FONTENUMPROCW)(tagLOGFONTW *, tagTEXTMETRICW *, unsigned int, int);

/* 9151 */
typedef int LONG32;

/* 9152 */
typedef _BY_HANDLE_FILE_INFORMATION *LPBY_HANDLE_FILE_INFORMATION;

/* 9153 */
typedef tagALTTABINFO *LPALTTABINFO;

/* 9154 */
typedef tagENUMLOGFONTEXA *LPENUMLOGFONTEXA;

/* 9155 */
typedef _REMOTE_NAME_INFOA *LPREMOTE_NAME_INFOA;

/* 9156 */
typedef _OSVERSIONINFOEXA *LPOSVERSIONINFOEX;

/* 9157 */
typedef tagTITLEBARINFO *PTITLEBARINFO;

/* 9158 */
typedef _EVENTLOGRECORD *PEVENTLOGRECORD;

/* 9159 */
typedef HIMCC__ *HIMCC;

/* 9160 */
typedef _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY *PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;

/* 9161 */
typedef tagEMRSELECTPALETTE *PEMRSELECTPALETTE;

/* 9162 */
typedef _SID_NAME_USE *PSID_NAME_USE;

/* 9163 */
typedef tagMONITORINFOEXA *LPMONITORINFOEXA;

/* 9164 */
typedef _SERVICE_DESCRIPTIONA *LPSERVICE_DESCRIPTION;

/* 9165 */
typedef tagCANDIDATELIST *NPCANDIDATELIST;

/* 9166 */
typedef tagCANDIDATELIST *LPCANDIDATELIST;

/* 9167 */
typedef tagLOGBRUSH32 *NPLOGBRUSH32;

/* 9168 */
typedef tagLOGBRUSH32 *LPLOGBRUSH32;

/* 9169 */
typedef tagEMRPOLYDRAW *PEMRPOLYDRAW;

/* 9170 */
typedef _strflt *STRFLT;

/* 9171 */
typedef int (__stdcall *GOBJENUMPROC)(void *, int);

/* 9172 */
typedef int (__stdcall *UILANGUAGE_ENUMPROCA)(char *, int);

/* 9173 */
typedef IMAGE_LOAD_CONFIG_DIRECTORY64 *PIMAGE_LOAD_CONFIG_DIRECTORY64;

/* 9174 */
typedef tagEMRANGLEARC *PEMRANGLEARC;

/* 9175 */
typedef tagEMRPLGBLT *PEMRPLGBLT;

/* 9176 */
typedef _flt *FLT;

/* 9177 */
typedef tagTEXTMETRICA *PTEXTMETRIC;

/* 9178 */
typedef _TOKEN_SOURCE *PTOKEN_SOURCE;

/* 9179 */
typedef int (__stdcall *ENUMRESTYPEPROCA)(HINSTANCE__ *, char *, int);

/* 9180 */
typedef int (__stdcall *TIMEFMT_ENUMPROCA)(char *);

/* 9181 */
typedef tagWNDCLASSA *LPWNDCLASS;

/* 9182 */
typedef value_entA *PVALENT;

/* 9183 */
typedef tagWNDCLASSA *NPWNDCLASS;

/* 9184 */
typedef _GRADIENT_RECT *LPGRADIENT_RECT;

/* 9185 */
typedef int (__stdcall *TIMEFMT_ENUMPROCW)(unsigned __int16 *);

/* 9186 */
typedef _ADMINISTRATOR_POWER_POLICY *PADMINISTRATOR_POWER_POLICY;

/* 9187 */
typedef _PSFEATURE_CUSTPAPER *PPSFEATURE_CUSTPAPER;

/* 9188 */
typedef _devicemodeA *NPDEVMODEA;

/* 9189 */
typedef tagABORTPATH *PEMRENDPATH;

/* 9190 */
typedef _devicemodeA *LPDEVMODEA;

/* 9191 */
typedef int (__stdcall *MONITORENUMPROC)(HMONITOR__ *, HDC__ *, tagRECT *, int);

/* 9192 */
typedef _SID_AND_ATTRIBUTES *PSID_AND_ATTRIBUTES;

/* 9193 */
typedef unsigned __int16 *NWPSTR;

/* 9194 */
typedef tagEMRSETPALETTEENTRIES *PEMRSETPALETTEENTRIES;

/* 9195 */
typedef void (__cdecl *_Prhand)(exception *);

/* 9196 */
typedef const unsigned __int16 *LPCOLESTR;

/* 9197 */
typedef int (__stdcall *ENUMRESLANGPROCW)(HINSTANCE__ *, const unsigned __int16 *, const unsigned __int16 *, unsigned __int16, int);

/* 9198 */
typedef unsigned int HACCESSOR;

/* 9199 */
typedef tagMOUSEMOVEPOINT *PMOUSEMOVEPOINT;

/* 9200 */
typedef unsigned int UINT_PTR;

/* 9201 */
typedef tagABORTPATH *PEMRSETMETARGN;

/* 9202 */
typedef int *PINT_PTR;

/* 9203 */
typedef unsigned int *PDWORD_PTR;

/* 9204 */
typedef tagCURSORINFO *LPCURSORINFO;

/* 9205 */
typedef tagWNDCLASSA *LPWNDCLASSA;

/* 9206 */
typedef tagWNDCLASSA *NPWNDCLASSA;

/* 9207 */
typedef tagENHMETARECORD *PENHMETARECORD;

/* 9208 */
typedef _CHAR_INFO *PCHAR_INFO;

/* 9209 */
typedef _IMAGE_ROM_HEADERS *PIMAGE_ROM_HEADERS;

/* 9210 */
typedef void (__cdecl *terminate_function)();

/* 9211 */
typedef tagSIZE *PSIZEL;

/* 9212 */
typedef tagEMRINVERTRGN *PEMRPAINTRGN;

/* 9213 */
typedef unsigned int *PACCESS_MASK;

/* 9214 */
typedef char _TSCHAR;

/* 9215 */
typedef tagWNDCLASSW *NPWNDCLASSW;

/* 9216 */
typedef tagWNDCLASSW *LPWNDCLASSW;

/* 9217 */
typedef _WIN32_FIND_DATAA *PWIN32_FIND_DATA;

/* 9218 */
typedef tagWNDCLASSEXA *NPWNDCLASSEXA;

/* 9219 */
typedef tagWNDCLASSEXA *LPWNDCLASSEXA;

/* 9220 */
typedef unsigned int (__stdcall *PFNGETPROFILEPATHW)(const unsigned __int16 *, unsigned __int16 *, unsigned int);

/* 9221 */
typedef tagEMRSELECTCLIPPATH *PEMRSETPOLYFILLMODE;

/* 9222 */
typedef void (__stdcall *LPHANDLER_FUNCTION)(unsigned int);

/* 9223 */
typedef tagENUMLOGFONTA *LPENUMLOGFONT;

/* 9224 */
typedef tagWNDCLASSEXW *LPWNDCLASSEXW;

/* 9225 */
typedef tagWNDCLASSEXW *NPWNDCLASSEXW;

/* 9226 */
typedef char INT8;

/* 9227 */
typedef tagREGISTERWORDA *PREGISTERWORDA;

/* 9228 */
typedef unsigned int CALTYPE;

/* 9229 */
typedef void (__cdecl *_PVFV)();

/* 9230 */
typedef void *_HFILE;

/* 9231 */
typedef tagENHMETARECORD *LPENHMETARECORD;

/* 9232 */
typedef tagWNDCLASSA *PWNDCLASSA;

/* 9233 */
typedef tagEMREXTESCAPE *PEMRDRAWESCAPE;

/* 9234 */
typedef tagMONITORINFO *LPMONITORINFO;

/* 9236 */
typedef int (__stdcall *NAMEENUMPROCA)(char *, int);

/* 9237 */
typedef _IMAGE_NT_HEADERS *PIMAGE_NT_HEADERS;

/* 9238 */
typedef tagEMRARC *PEMRARC;

/* 9239 */
typedef unsigned int KAFFINITY;

/* 9240 */
typedef int (__stdcall *NAMEENUMPROCW)(unsigned __int16 *, int);

/* 9241 */
typedef unsigned __int16 *PWORD;

/* 9242 */
typedef _SERVICE_FAILURE_ACTIONSW *LPSERVICE_FAILURE_ACTIONSW;

/* 9243 */
typedef void (__cdecl *_secerr_handler_func)(int, void *);

/* 9244 */
typedef tagDEBUGHOOKINFO *PDEBUGHOOKINFO;

/* 9245 */
typedef _WIN32_FIND_DATAA *PWIN32_FIND_DATAA;

/* 9246 */
typedef HGLRC__ *HGLRC;

/* 9247 */
typedef tagWNDCLASSEXA *NPWNDCLASSEX;

/* 9248 */
typedef _WGLSWAP *PWGLSWAP;

/* 9249 */
typedef tagWNDCLASSEXA *LPWNDCLASSEX;

/* 9250 */
typedef void (__stdcall *PFN_EXIT_PROCESS)(unsigned int);

/* 9251 */
typedef _NT_TIB64 *PNT_TIB64;

/* 9252 */
typedef _GUID *LPFMTID;

/* 9253 */
typedef _WIN32_FIND_DATAW *PWIN32_FIND_DATAW;

/* 9254 */
typedef std::pair<int const ,XiTArray<XiTrafficPathInfo> > *const_reference;

/* 9255 */
typedef HUMPD__ *HUMPD;

/* 9256 */
typedef _ACCESS_DENIED_OBJECT_ACE *PACCESS_DENIED_OBJECT_ACE;

/* 9257 */
typedef std::_Tree_nod<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::_Node **_Nodepref;

/* 9258 */
typedef unsigned int HROW;

/* 9259 */
typedef int DBROWCOUNT;

/* 9260 */
typedef MENUITEMTEMPLATE *PMENUITEMTEMPLATE;

/* 9261 */
typedef int (__stdcall *ABORTPROC)(HDC__ *, int);

/* 9262 */
typedef int *_Reft;

/* 9263 */
typedef tagEMRROUNDRECT *PEMRROUNDRECT;

/* 9264 */
typedef _TOKEN_STATISTICS *PTOKEN_STATISTICS;

/* 9265 */
typedef HINSTANCE__ *HMODULE;

/* 9266 */
typedef int DB_LPARAMS;

/* 9267 */
typedef _IMAGE_RESOURCE_DATA_ENTRY *PIMAGE_RESOURCE_DATA_ENTRY;

/* 9268 */
typedef int (__stdcall *ENUMRESNAMEPROCW)(HINSTANCE__ *, const unsigned __int16 *, unsigned __int16 *, int);

/* 9269 */
typedef tagEMRRESIZEPALETTE *PEMRRESIZEPALETTE;

/* 9270 */
typedef unsigned int (__stdcall *LPTHREAD_START_ROUTINE)(void *);

/* 9271 */
typedef tagEMRARC *PEMRCHORD;

/* 9272 */
typedef tagEMRCREATECOLORSPACEW *PEMRCREATECOLORSPACEW;

/* 9273 */
typedef _SYSTEM_POWER_STATE *PSYSTEM_POWER_STATE;

/* 9274 */
typedef _IMAGE_COFF_SYMBOLS_HEADER *PIMAGE_COFF_SYMBOLS_HEADER;

/* 9275 */
typedef unsigned int *PULONG_PTR;

/* 9276 */
typedef tagCOMPOSITIONFORM *PCOMPOSITIONFORM;

/* 9277 */
typedef const char *PCSTR;

/* 9278 */
typedef _FLOATING_SAVE_AREA *PFLOATING_SAVE_AREA;

/* 9279 */
typedef _devicemodeA *NPDEVMODE;

/* 9280 */
typedef unsigned int *PLCID;

/* 9281 */
typedef std::pair<int const ,XiTArray<XiTrafficPathInfo> > *pointer;

/* 9282 */
typedef _devicemodeA *LPDEVMODE;

/* 9283 */
typedef char u_char;

/* 9284 */
typedef unsigned int DBPARAMFLAGS;

/* 9285 */
typedef tagEMRCREATECOLORSPACE *PEMRCREATECOLORSPACE;

/* 9286 */
typedef unsigned int DBPART;

/* 9287 */
typedef void (__cdecl *_CRT_DUMP_CLIENT)(void *, unsigned int);

/* 9288 */
typedef _SMALL_RECT *PSMALL_RECT;

/* 9289 */
typedef _EXCEPTION_DEBUG_INFO *LPEXCEPTION_DEBUG_INFO;

/* 9290 */
typedef _WIN32_FILE_ATTRIBUTE_DATA *LPWIN32_FILE_ATTRIBUTE_DATA;

/* 9291 */
typedef unsigned int DBPROPOPTIONS;

/* 9292 */
typedef tagCHARSETINFO *PCHARSETINFO;

/* 9293 */
typedef __int16 _I16;

/* 9294 */
typedef int (__stdcall *LANGGROUPLOCALE_ENUMPROCW)(unsigned int, unsigned int, unsigned __int16 *, int);

/* 9295 */
typedef char TBYTE;

/* 9296 */
typedef char SBYTE;

/* 9297 */
typedef char *PBYTE;

/* 9298 */
typedef tagEMRELLIPSE *PEMRRECTANGLE;

/* 9299 */
typedef tagEMRPOLYPOLYLINE16 *PEMRPOLYPOLYLINE16;

/* 9300 */
typedef unsigned __int16 UHALF_PTR;

/* 9301 */
typedef _IMAGE_OS2_HEADER *PIMAGE_OS2_HEADER;

/* 9302 */
typedef _GUID *LPCLSID;

/* 9303 */
typedef __int16 *PHALF_PTR;

/* 9304 */
typedef _SYSTEM_LOGICAL_PROCESSOR_INFORMATION *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION;

/* 9305 */
typedef _ACTIVATION_CONTEXT_DETAILED_INFORMATION *PACTIVATION_CONTEXT_DETAILED_INFORMATION;

/* 9306 */
typedef tagLOGBRUSH *PPATTERN;

/* 9307 */
typedef tagEMRFRAMERGN *PEMRFRAMERGN;

/* 9308 */
typedef int (__stdcall *LANGGROUPLOCALE_ENUMPROCA)(unsigned int, unsigned int, char *, int);

/* 9309 */
typedef int (__cdecl *P_SFUNC)(Param *);

/* 9310 */
typedef tagMINIMIZEDMETRICS *LPMINIMIZEDMETRICS;

/* 9311 */
typedef tagDROPSTRUCT *LPDROPSTRUCT;

/* 9312 */
typedef tagENUMLOGFONTA *LPENUMLOGFONTA;

/* 9313 */
typedef int (__cdecl *_CRT_REPORT_HOOK)(int, char *, int *);

/* 9314 */
typedef unsigned int *LPDWORD;

/* 9315 */
typedef _LIST_ENTRY *PLIST_ENTRY;

/* 9316 */
typedef tagREGISTERWORDA *PREGISTERWORD;

/* 9317 */
typedef HCOLORSPACE__ *HCOLORSPACE;

/* 9318 */
typedef _SECURITY_DESCRIPTOR_RELATIVE *PISECURITY_DESCRIPTOR_RELATIVE;

/* 9319 */
typedef tagICONMETRICSA *PICONMETRICS;

/* 9320 */
typedef _TIME_ZONE_INFORMATION *PTIME_ZONE_INFORMATION;

/* 9321 */
typedef unsigned __int64 ULONG64;

/* 9322 */
typedef unsigned int DWORD_PTR;

/* 9323 */
typedef __int64 *PLONG64;

/* 9324 */
typedef tagWNDCLASSA *PWNDCLASS;

/* 9325 */
typedef tagTPMPARAMS *LPTPMPARAMS;

/* 9326 */
typedef unsigned int *intrnman;

/* 9327 */
typedef _SERVICE_TABLE_ENTRYW *LPSERVICE_TABLE_ENTRYW;

/* 9328 */
typedef tagBITMAPINFO *LPBITMAPINFO;

/* 9329 */
typedef _EXCEPTION_POINTERS *PEXCEPTION_POINTERS;

/* 9330 */
typedef tagPELARRAY *PPELARRAY;

/* 9331 */
typedef tagEMRSETPIXELV *PEMRSETPIXELV;

/* 9332 */
typedef _TOKEN_AUDIT_POLICY *PTOKEN_AUDIT_POLICY;

/* 9333 */
typedef _QUOTA_LIMITS_EX *PQUOTA_LIMITS_EX;

/* 9334 */
typedef tagEMREXTCREATEFONTINDIRECTW *PEMREXTCREATEFONTINDIRECTW;

/* 9335 */
typedef tagBITMAPCOREINFO *LPBITMAPCOREINFO;

/* 9336 */
typedef tagICONMETRICSA *PICONMETRICSA;

/* 9337 */
typedef tagEMREXCLUDECLIPRECT *PEMRINTERSECTCLIPRECT;

/* 9338 */
typedef tagEMRSCALEVIEWPORTEXTEX *PEMRSCALEWINDOWEXTEX;

/* 9339 */
typedef _SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES_ARRAY[1];

/* 9340 */
typedef tagEMRSETVIEWPORTEXTEX *PEMRSETWINDOWEXTEX;

/* 9341 */
typedef _IMAGE_SECTION_HEADER *PIMAGE_SECTION_HEADER;

/* 9342 */
typedef unsigned int DBCOUNTITEM;

/* 9343 */
typedef _SYSTEM_AUDIT_OBJECT_ACE *PSYSTEM_AUDIT_OBJECT_ACE;

/* 9344 */
typedef _MEMORY_BASIC_INFORMATION32 *PMEMORY_BASIC_INFORMATION32;

/* 9345 */
typedef tagICONMETRICSW *PICONMETRICSW;

/* 9346 */
typedef unsigned int DBSOURCETYPE;

/* 9347 */
typedef std::pair<int const ,XiTArray<XiTrafficPathInfo> > *const_pointer;

/* 9348 */
typedef tagEMROFFSETCLIPRGN *PEMROFFSETCLIPRGN;

/* 9349 */
typedef void *SQLPOINTER;

/* 9350 */
typedef tagNONCLIENTMETRICSW *PNONCLIENTMETRICSW;

/* 9351 */
typedef int INT;

/* 9352 */
typedef _ENUM_SERVICE_STATUS_PROCESSA *LPENUM_SERVICE_STATUS_PROCESS;

/* 9353 */
typedef long double AGdouble;

/* 9354 */
typedef tagEMRPOLYLINE *PEMRPOLYGON;

/* 9355 */
typedef tagMETAFILEPICT *LPMETAFILEPICT;

/* 9356 */
typedef unsigned int LCID;

/* 9357 */
typedef HICON__ *HICON;

/* 9358 */
typedef tagACCEL *LPACCEL;

/* 9359 */
typedef char *LPSTR;

/* 9360 */
typedef tagBITMAP *PBITMAP;

/* 9361 */
typedef char *NPSTR;

/* 9362 */
typedef HWINEVENTHOOK__ *HWINEVENTHOOK;

/* 9363 */
typedef HBITMAP__ *HBITMAP;

/* 9364 */
typedef void *PSID;

/* 9365 */
typedef _BY_HANDLE_FILE_INFORMATION *PBY_HANDLE_FILE_INFORMATION;

/* 9366 */
typedef _JOB_SET_ARRAY *PJOB_SET_ARRAY;

/* 9367 */
typedef _TOKEN_AUDIT_POLICY_ELEMENT *PTOKEN_AUDIT_POLICY_ELEMENT;

/* 9368 */
typedef _nlsversioninfo *LPNLSVERSIONINFO;

/* 9369 */
typedef tagEMRSETICMPROFILE *PEMRSETICMPROFILE;

/* 9370 */
typedef IStream *LPSTREAM;

/* 9371 */
typedef unsigned int (__stdcall *PFE_IMPORT_FUNC)(char *, void *, unsigned int *);

/* 9372 */
typedef _NETRESOURCEW *LPNETRESOURCEW;

/* 9373 */
typedef _RTL_CRITICAL_SECTION_DEBUG *LPCRITICAL_SECTION_DEBUG;

/* 9374 */
typedef _RGNDATA *PRGNDATA;

/* 9375 */
typedef _RTL_CRITICAL_SECTION *LPCRITICAL_SECTION;

/* 9376 */
typedef tagEMRSETCOLORSPACE *PEMRSELECTCOLORSPACE;

/* 9377 */
typedef _QUERY_SERVICE_LOCK_STATUSA *LPQUERY_SERVICE_LOCK_STATUSA;

/* 9378 */
typedef unsigned __int16 *LPOLESTR;

/* 9379 */
typedef tagEXTLOGFONTA *PEXTLOGFONTA;

/* 9380 */
typedef tagHELPWININFOW *LPHELPWININFOW;

/* 9381 */
typedef _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY *PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;

/* 9382 */
typedef tagIMEMENUITEMINFOA *NPIMEMENUITEMINFOA;

/* 9383 */
typedef tagIMEMENUITEMINFOA *LPIMEMENUITEMINFOA;

/* 9384 */
typedef void *SQLHENV;

/* 9385 */
typedef _DISCDLGSTRUCTA *LPDISCDLGSTRUCT;

/* 9386 */
typedef _ACCESS_ALLOWED_CALLBACK_ACE *PACCESS_ALLOWED_CALLBACK_ACE;

/* 9387 */
typedef const char *pcchar_t;

/* 9388 */
typedef long double DATE;

/* 9389 */
typedef tagCWPRETSTRUCT *PCWPRETSTRUCT;

/* 9390 */
typedef unsigned int (__stdcall *PTHREAD_START_ROUTINE)(void *);

/* 9391 */
typedef _SYSTEMTIME *PSYSTEMTIME;

/* 9392 */
typedef _IMAGE_OPTIONAL_HEADER *PIMAGE_OPTIONAL_HEADER;

/* 9393 */
typedef tagSTYLEBUFA *NPSTYLEBUF;

/* 9394 */
typedef void (__stdcall *PFLS_CALLBACK_FUNCTION)(void *);

/* 9395 */
typedef tagSTYLEBUFA *LPSTYLEBUF;

/* 9396 */
typedef int (__stdcall *DESKTOPENUMPROCA)(char *, int);

/* 9397 */
typedef HHOOK__ *HHOOK;

/* 9398 */
typedef tagEMRSETCOLORSPACE *PEMRSETCOLORSPACE;

/* 9399 */
typedef int SCODE;

/* 9400 */
typedef unsigned __int16 *PUWSTR;

/* 9401 */
typedef __int64 fpos_t;

/* 9402 */
typedef tagEMR *PEMR;

/* 9403 */
typedef int (__stdcall *PTOP_LEVEL_EXCEPTION_FILTER)(_EXCEPTION_POINTERS *);

/* 9404 */
typedef pvalueA *PPVALUE;

/* 9405 */
typedef tagSTYLEBUFW *LPSTYLEBUFW;

/* 9406 */
typedef tagSTYLEBUFW *NPSTYLEBUFW;

/* 9407 */
typedef tagANIMATIONINFO *LPANIMATIONINFO;

/* 9408 */
typedef tagCWPRETSTRUCT *NPCWPRETSTRUCT;

/* 9409 */
typedef tagCWPRETSTRUCT *LPCWPRETSTRUCT;

/* 9410 */
typedef _VIDEOPARAMETERS *PVIDEOPARAMETERS;

/* 9411 */
typedef tagMENUINFO *LPCMENUINFO;

/* 9412 */
typedef _RTL_VERIFIER_THUNK_DESCRIPTOR *PRTL_VERIFIER_THUNK_DESCRIPTOR;

/* 9413 */
typedef _JOBOBJECT_EXTENDED_LIMIT_INFORMATION *PJOBOBJECT_EXTENDED_LIMIT_INFORMATION;

/* 9414 */
typedef char *PUTSTR;

/* 9415 */
typedef int s_long;

/* 9416 */
typedef tagSTYLEBUFA *NPSTYLEBUFA;

/* 9417 */
typedef unsigned int u_long;

/* 9418 */
typedef tagSTYLEBUFA *LPSTYLEBUFA;

/* 9419 */
typedef _GRADIENT_TRIANGLE *PGRADIENT_TRIANGLE;

/* 9420 */
typedef tagCOMBOBOXINFO *LPCOMBOBOXINFO;

/* 9421 */
typedef _ABCFLOAT *NPABCFLOAT;

/* 9422 */
typedef tagMOUSEHOOKSTRUCT *PMOUSEHOOKSTRUCT;

/* 9423 */
typedef _IMAGE_OPTIONAL_HEADER *PIMAGE_OPTIONAL_HEADER32;

/* 9424 */
typedef _ABCFLOAT *LPABCFLOAT;

/* 9425 */
typedef _MEMORY_BASIC_INFORMATION *PMEMORY_BASIC_INFORMATION;

/* 9426 */
typedef unsigned int _dev_t;

/* 9427 */
typedef _ABCFLOAT *PABCFLOAT;

/* 9428 */
typedef _CONTEXT *PCONTEXT;

/* 9429 */
typedef tagEMRSETMAPPERFLAGS *PEMRSETMAPPERFLAGS;

/* 9430 */
typedef SYSTEM_POWER_LEVEL *PSYSTEM_POWER_LEVEL;

/* 9431 */
typedef void *HDWP;

/* 9432 */
typedef _ACL_REVISION_INFORMATION *PACL_REVISION_INFORMATION;

/* 9433 */
typedef tagPELARRAY *LPPELARRAY;

/* 9434 */
typedef int (__cdecl *_onexit_t)();

/* 9435 */
typedef tagPELARRAY *NPPELARRAY;

/* 9436 */
typedef tagMOUSEKEYS *LPMOUSEKEYS;

/* 9437 */
typedef unsigned int DBCOMPARE;

/* 9438 */
typedef tagTEXTMETRICA *NPTEXTMETRIC;

/* 9439 */
typedef tagTEXTMETRICA *LPTEXTMETRIC;

/* 9440 */
typedef tagMETAHEADER *LPMETAHEADER;

/* 9441 */
typedef tagXFORM *LPXFORM;

/* 9442 */
typedef _ENUM_SERVICE_STATUS_PROCESSA *LPENUM_SERVICE_STATUS_PROCESSA;

/* 9443 */
typedef int SSIZE_T;

/* 9444 */
typedef unsigned int *PSIZE_T;

/* 9445 */
typedef _OFSTRUCT *POFSTRUCT;

/* 9446 */
typedef tagMINMAXINFO *PMINMAXINFO;

/* 9447 */
typedef tagSERIALKEYSW *LPSERIALKEYSW;

/* 9448 */
typedef _LIST_ENTRY *PRLIST_ENTRY;

/* 9449 */
typedef void *PACCESS_TOKEN;

/* 9450 */
typedef tagCOLORCORRECTPALETTE *PEMRCOLORCORRECTPALETTE;

/* 9451 */
typedef tagSERIALKEYSA *LPSERIALKEYSA;

/* 9452 */
typedef tagMDINEXTMENU *PMDINEXTMENU;

/* 9453 */
typedef int (__stdcall *DATEFMT_ENUMPROCEXA)(char *, unsigned int);

/* 9454 */
typedef tagEMRSETICMPROFILE *PEMRSETICMPROFILEA;

/* 9455 */
typedef _CONSOLE_CURSOR_INFO *PCONSOLE_CURSOR_INFO;

/* 9456 */
typedef tagTEXTMETRICW *LPTEXTMETRICW;

/* 9457 */
typedef _SYSTEM_ALARM_OBJECT_ACE *PSYSTEM_ALARM_OBJECT_ACE;

/* 9458 */
typedef tagTEXTMETRICW *NPTEXTMETRICW;

/* 9459 */
typedef tagBITMAPCOREHEADER *LPBITMAPCOREHEADER;

/* 9460 */
typedef tagTITLEBARINFO *LPTITLEBARINFO;

/* 9461 */
typedef unsigned __int16 VARTYPE;

/* 9462 */
typedef _IMAGE_RUNTIME_FUNCTION_ENTRY *PIMAGE_IA64_RUNTIME_FUNCTION_ENTRY;

/* 9463 */
typedef tagTEXTMETRICA *NPTEXTMETRICA;

/* 9464 */
typedef tagEMRCREATEPEN *PEMRCREATEPEN;

/* 9465 */
typedef tagTEXTMETRICA *LPTEXTMETRICA;

/* 9466 */
typedef int (__stdcall *DATEFMT_ENUMPROCEXW)(unsigned __int16 *, unsigned int);

/* 9467 */
typedef HRESULT (__cdecl *_ATL_PERFREGFUNC)(HINSTANCE__ *);

/* 9468 */
typedef int (__cdecl *_PIFV)();

/* 9469 */
typedef HTASK__ *HTASK;

/* 9470 */
typedef tagEMRNAMEDESCAPE *PEMRNAMEDESCAPE;

/* 9471 */
typedef _RTL_VERIFIER_PROVIDER_DESCRIPTOR *PRTL_VERIFIER_PROVIDER_DESCRIPTOR;

/* 9472 */
typedef _OSVERSIONINFOA *LPOSVERSIONINFO;

/* 9473 */
typedef tagEMREXCLUDECLIPRECT *PEMREXCLUDECLIPRECT;

/* 9474 */
typedef _PRIVILEGE_SET *PPRIVILEGE_SET;

/* 9475 */
typedef tagEMRSETCOLORSPACE *PEMRDELETECOLORSPACE;

/* 9476 */
typedef __int16 s_short;

/* 9477 */
typedef unsigned __int16 u_short;

/* 9478 */
typedef void *HDEVNOTIFY;

/* 9479 */
typedef tagSERIALKEYSA *LPSERIALKEYS;

/* 9480 */
typedef tagSTYLEBUFW *PSTYLEBUFW;

/* 9481 */
typedef tagGUITHREADINFO *PGUITHREADINFO;

/* 9482 */
typedef _SERVICE_STATUS *LPSERVICE_STATUS;

/* 9483 */
typedef tagIMEMENUITEMINFOA *NPIMEMENUITEMINFO;

/* 9484 */
typedef unsigned int _fsize_t;

/* 9485 */
typedef tagIMEMENUITEMINFOA *LPIMEMENUITEMINFO;

/* 9486 */
typedef tagEMRPOLYLINE16 *PEMRPOLYLINETO16;

/* 9487 */
typedef int mbstate_t;

/* 9488 */
typedef tagMULTIKEYHELPA *LPMULTIKEYHELPA;

/* 9489 */
typedef tagEMRSETDIBITSTODEVICE *PEMRSETDIBITSTODEVICE;

/* 9490 */
typedef tagCBT_CREATEWNDA *LPCBT_CREATEWND;

/* 9491 */
typedef tagVersionedStream *LPVERSIONEDSTREAM;

/* 9492 */
typedef int INT_PTR;

/* 9493 */
typedef tagMULTIKEYHELPW *LPMULTIKEYHELPW;

/* 9494 */
typedef _DEBUG_EVENT *LPDEBUG_EVENT;

/* 9495 */
typedef long double AGlongdouble;

/* 9496 */
typedef _COMSTAT *LPCOMSTAT;

/* 9497 */
typedef const int *_Keyref;

/* 9498 */
typedef unsigned int ALG_ID;

/* 9499 */
typedef char AGuchar;

/* 9500 */
typedef _DISPLAY_DEVICEW *LPDISPLAY_DEVICEW;

/* 9501 */
typedef tagNEWTEXTMETRICW *NPNEWTEXTMETRICW;

/* 9502 */
typedef void (__cdecl *terminate_handler)();

/* 9503 */
typedef tagNEWTEXTMETRICW *LPNEWTEXTMETRICW;

/* 9504 */
typedef unsigned int AGulong;

/* 9505 */
typedef HPALETTE__ *HPALETTE;

/* 9506 */
typedef int FXPT2DOT30;

/* 9507 */
typedef _DISPLAY_DEVICEA *LPDISPLAY_DEVICEA;

/* 9508 */
typedef const char *__exString;

/* 9509 */
typedef unsigned int DWORD32;

/* 9510 */
typedef _IMAGE_NT_HEADERS *PIMAGE_NT_HEADERS32;

/* 9511 */
typedef int (__stdcall *OLDFONTENUMPROCW)(tagLOGFONTW *, tagTEXTMETRICW *, unsigned int, int);

/* 9512 */
typedef _GLYPHMETRICSFLOAT *PGLYPHMETRICSFLOAT;

/* 9513 */
typedef tagMULTIKEYHELPA *LPMULTIKEYHELP;

/* 9514 */
typedef HENHMETAFILE__ *HENHMETAFILE;

/* 9515 */
typedef tagEMRSELECTCLIPPATH *PEMRSETMAPMODE;

/* 9516 */
typedef tagEMRMODIFYWORLDTRANSFORM *PEMRMODIFYWORLDTRANSFORM;

/* 9517 */
typedef _LUID *PLUID;

/* 9518 */
typedef tagEMREXTSELECTCLIPRGN *PEMREXTSELECTCLIPRGN;

/* 9519 */
typedef HDESK__ *HDESK;

/* 9520 */
typedef unsigned __int16 AGushort;

/* 9521 */
typedef SERVICE_STATUS_HANDLE__ *SERVICE_STATUS_HANDLE;

/* 9522 */
typedef _IMAGE_RESOURCE_DIRECTORY *PIMAGE_RESOURCE_DIRECTORY;

/* 9523 */
typedef _DISPLAY_DEVICEA *LPDISPLAY_DEVICE;

/* 9524 */
typedef void (__cdecl *_PMFN)();

/* 9525 */
typedef _RECTL *LPCRECTL;

/* 9526 */
typedef tagLOCALESIGNATURE *LPLOCALESIGNATURE;

/* 9527 */
typedef tagEMRGLSBOUNDEDRECORD *PEMRGLSBOUNDEDRECORD;

/* 9528 */
typedef _IO_COUNTERS *PIO_COUNTERS;

/* 9529 */
typedef _SYSTEM_POWER_STATUS *LPSYSTEM_POWER_STATUS;

/* 9530 */
typedef tagNONCLIENTMETRICSA *PNONCLIENTMETRICSA;

/* 9531 */
typedef tagTTPOLYCURVE *LPTTPOLYCURVE;

/* 9532 */
typedef MENUITEMTEMPLATEHEADER *PMENUITEMTEMPLATEHEADER;

/* 9533 */
typedef IMAGE_LOAD_CONFIG_DIRECTORY32 *PIMAGE_LOAD_CONFIG_DIRECTORY;

/* 9534 */
typedef unsigned int size_type;

/* 9535 */
typedef _LARGE_INTEGER *PLARGE_INTEGER;

/* 9536 */
typedef int (__stdcall *CALINFO_ENUMPROCEXA)(char *, unsigned int);

/* 9537 */
typedef unsigned __int64 AGqword;

/* 9538 */
typedef int (__stdcall *CALINFO_ENUMPROCEXW)(unsigned __int16 *, unsigned int);

/* 9539 */
typedef int (__stdcall *GRAYSTRINGPROC)(HDC__ *, int, int);

/* 9540 */
typedef unsigned int SOCKET;

/* 9541 */
typedef _devicemodeA *PDEVMODE;

/* 9542 */
typedef int (__stdcall *FNType_HannEverBillUseCoin)(RESULT_USECOIN *, REQUEST_USECOIN *);

/* 9543 */
typedef _IMAGE_OPTIONAL_HEADER64 *PIMAGE_OPTIONAL_HEADER64;

/* 9544 */
typedef unsigned int NLS_FUNCTION;

/* 9545 */
typedef _PSFEATURE_OUTPUT *PPSFEATURE_OUTPUT;

/* 9546 */
typedef tagCIEXYZ *LPCIEXYZ;

/* 9547 */
typedef HINSTANCE__ *HINSTANCE;

/* 9548 */
typedef _TAPE_WRITE_MARKS *PTAPE_WRITE_MARKS;

/* 9549 */
typedef _NETRESOURCEA *LPNETRESOURCEA;

/* 9550 */
typedef const unsigned __int16 *LPCTSTR;

/* 9551 */
typedef _SYSTEM_AUDIT_ACE *PSYSTEM_AUDIT_ACE;

/* 9552 */
typedef _devicemodeW *PDEVMODEW;

/* 9553 */
typedef unsigned int u_int;

/* 9554 */
typedef _QUERY_SERVICE_LOCK_STATUSW *LPQUERY_SERVICE_LOCK_STATUSW;

/* 9555 */
typedef unsigned int DBORDINAL;

/* 9556 */
typedef tagEXTLOGFONTW *PEXTLOGFONTW;

/* 9557 */
typedef tagHELPWININFOA *LPHELPWININFOA;

/* 9558 */
typedef unsigned int HCRYPTKEY;

/* 9559 */
typedef _MESSAGE_RESOURCE_DATA *PMESSAGE_RESOURCE_DATA;

/* 9560 */
typedef int SQLINTEGER;

/* 9561 */
typedef _devicemodeA *PDEVMODEA;

/* 9562 */
typedef tagIMEMENUITEMINFOW *LPIMEMENUITEMINFOW;

/* 9563 */
typedef tagEMRSELECTCLIPPATH *PEMRSETLAYOUT;

/* 9564 */
typedef tagIMEMENUITEMINFOW *NPIMEMENUITEMINFOW;

/* 9565 */
typedef int _Mbstatet;

/* 9566 */
typedef _IMAGE_IMPORT_BY_NAME *PIMAGE_IMPORT_BY_NAME;

/* 9567 */
typedef unsigned int ACCESS_MASK;

/* 9568 */
typedef tagSTYLEBUFA *PSTYLEBUF;

/* 9569 */
typedef tagNONCLIENTMETRICSA *LPNONCLIENTMETRICSA;

/* 9570 */
typedef int __ehstate_t;

/* 9571 */
typedef tagNONCLIENTMETRICSW *LPNONCLIENTMETRICSW;

/* 9572 */
typedef int (__stdcall *DESKTOPENUMPROCW)(unsigned __int16 *, int);

/* 9573 */
typedef IMAGE_AUX_SYMBOL_TOKEN_DEF *PIMAGE_AUX_SYMBOL_TOKEN_DEF;

/* 9574 */
typedef _SLIST_HEADER *PSLIST_HEADER;

/* 9575 */
typedef int *PLONG32;

/* 9576 */
typedef _FILE_SEGMENT_ELEMENT *PFILE_SEGMENT_ELEMENT;

/* 9577 */
typedef unsigned int ULONG32;

/* 9578 */
typedef unsigned __int16 ino_t;

/* 9579 */
typedef _TOKEN_OWNER *PTOKEN_OWNER;

/* 9580 */
typedef const unsigned __int16 *PCWSTR;

/* 9581 */
typedef tagPIXELFORMATDESCRIPTOR *LPPIXELFORMATDESCRIPTOR;

/* 9582 */
typedef _RASTERIZER_STATUS *LPRASTERIZER_STATUS;

/* 9583 */
typedef unsigned __int16 COLOR16;

/* 9584 */
typedef tagNONCLIENTMETRICSA *LPNONCLIENTMETRICS;

/* 9585 */
typedef _ACE_HEADER *PACE_HEADER;

/* 9586 */
typedef const char *PCTSTR;

/* 9587 */
typedef tagABORTPATH *PEMRREALIZEPALETTE;

/* 9588 */
typedef tagCANDIDATEFORM *LPCANDIDATEFORM;

/* 9589 */
typedef unsigned int DBPARAMIO;

/* 9590 */
typedef val_context *PVALCONTEXT;

/* 9591 */
typedef tagCANDIDATEFORM *NPCANDIDATEFORM;

/* 9592 */
typedef tagMDINEXTMENU *LPMDINEXTMENU;

/* 9593 */
typedef tagEMRSETVIEWPORTORGEX *PEMRSETVIEWPORTORGEX;

/* 9594 */
typedef _EXIT_PROCESS_DEBUG_INFO *LPEXIT_PROCESS_DEBUG_INFO;

/* 9595 */
typedef void (__cdecl *unexpected_handler)();

/* 9596 */
typedef IMAGE_COR20_HEADER *PIMAGE_COR20_HEADER;

/* 9597 */
typedef tagHARDWAREHOOKSTRUCT *LPHARDWAREHOOKSTRUCT;

/* 9598 */
typedef unsigned int GEOTYPE;

/* 9599 */
typedef void (__stdcall *LPOVERLAPPED_COMPLETION_ROUTINE)(unsigned int, unsigned int, _OVERLAPPED *);

/* 9600 */
typedef int (__stdcall *PROC)();

/* 9601 */
typedef _ICONINFO *PICONINFO;

/* 9602 */
typedef _MEMORY_BASIC_INFORMATION64 *PMEMORY_BASIC_INFORMATION64;

/* 9603 */
typedef tagWNDCLASSEXA *PWNDCLASSEX;

/* 9604 */
typedef tagLOGBRUSH *PLOGBRUSH;

/* 9605 */
typedef std::pair<int const ,XiTArray<XiTrafficPathInfo> > *_Vref;

/* 9606 */
typedef DLGITEMTEMPLATE *PDLGITEMTEMPLATE;

/* 9607 */
typedef _WIN32_STREAM_ID *LPWIN32_STREAM_ID;

/* 9608 */
typedef _IMAGE_RESOURCE_DIRECTORY_STRING *PIMAGE_RESOURCE_DIRECTORY_STRING;

/* 9609 */
typedef tagMEASUREITEMSTRUCT *LPMEASUREITEMSTRUCT;

/* 9610 */
typedef tagNONCLIENTMETRICSA *PNONCLIENTMETRICS;

/* 9611 */
typedef _ENUM_SERVICE_STATUS_PROCESSW *LPENUM_SERVICE_STATUS_PROCESSW;

/* 9612 */
typedef unsigned int LGRPID;

/* 9613 */
typedef void *SQLHSTMT;

/* 9614 */
typedef _SYSTEM_ALARM_CALLBACK_ACE *PSYSTEM_ALARM_CALLBACK_ACE;

/* 9615 */
typedef tagCOMBOBOXINFO *PCOMBOBOXINFO;

/* 9616 */
typedef int _I32;

/* 9617 */
typedef void (__cdecl *new_handler)();

/* 9618 */
typedef DLGTEMPLATE *LPCDLGTEMPLATE;

/* 9619 */
typedef unsigned __int16 *PWSTR;

/* 9620 */
typedef const char *LPCSTR;

/* 9621 */
typedef _TIME_ZONE_INFORMATION *LPTIME_ZONE_INFORMATION;

/* 9622 */
typedef tagLOGPALETTE *LPLOGPALETTE;

/* 9623 */
typedef _SID_IDENTIFIER_AUTHORITY *PSID_IDENTIFIER_AUTHORITY;

/* 9624 */
typedef tagLOGPALETTE *NPLOGPALETTE;

/* 9625 */
typedef _TAPE_CREATE_PARTITION *PTAPE_CREATE_PARTITION;

/* 9626 */
typedef tagEMRSETICMPROFILE *PEMRSETICMPROFILEW;

/* 9627 */
typedef tagEMRSELECTCLIPPATH *PEMRSETTEXTALIGN;

/* 9628 */
typedef tagDIBSECTION *PDIBSECTION;

/* 9629 */
typedef DLGITEMTEMPLATE *PDLGITEMTEMPLATEW;

/* 9630 */
typedef int LONG_PTR;

/* 9631 */
typedef SYSTEM_BATTERY_STATE *PSYSTEM_BATTERY_STATE;

/* 9632 */
typedef DLGITEMTEMPLATE *PDLGITEMTEMPLATEA;

/* 9633 */
typedef const char *PCXSTR;

/* 9634 */
typedef int (__stdcall *PVECTORED_EXCEPTION_HANDLER)(_EXCEPTION_POINTERS *);

/* 9635 */
typedef _EXIT_THREAD_DEBUG_INFO *LPEXIT_THREAD_DEBUG_INFO;

/* 9636 */
typedef tagBITMAPCOREHEADER *PBITMAPCOREHEADER;

/* 9637 */
typedef tagPALETTEENTRY *PPALETTEENTRY;

/* 9638 */
typedef _NETRESOURCEA *LPNETRESOURCE;

/* 9639 */
typedef DLGTEMPLATE *LPCDLGTEMPLATEA;

/* 9640 */
typedef tagEMRPOLYPOLYLINE16 *PEMRPOLYPOLYGON16;

/* 9641 */
typedef tagHARDWAREHOOKSTRUCT *PHARDWAREHOOKSTRUCT;

/* 9642 */
typedef _SINGLE_LIST_ENTRY *PSINGLE_LIST_ENTRY;

/* 9643 */
typedef _TAPE_GET_DRIVE_PARAMETERS *PTAPE_GET_DRIVE_PARAMETERS;

/* 9644 */
typedef tagHELPWININFOA *LPHELPWININFO;

/* 9645 */
typedef _numberfmtA *LPNUMBERFMT;

/* 9646 */
typedef _MOUSE_EVENT_RECORD *PMOUSE_EVENT_RECORD;

/* 9647 */
typedef int intptr_t;

/* 9648 */
typedef tagRECT *LPCRECT;

/* 9649 */
typedef HRESULT (__stdcall *DLLGETVERSIONPROC)(_DLLVERSIONINFO *);

/* 9650 */
typedef DLGTEMPLATE *LPCDLGTEMPLATEW;

/* 9651 */
typedef void *HANDLE;

/* 9652 */
typedef tagSTYLEBUFA *PSTYLEBUFA;

/* 9653 */
typedef int (__stdcall *WNDPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 9654 */
typedef int difference_type;

/* 9655 */
typedef _BLENDFUNCTION *PBLENDFUNCTION;

/* 9656 */
typedef _IMAGE_FILE_HEADER *PIMAGE_FILE_HEADER;

/* 9657 */
typedef _MODEMSETTINGS *LPMODEMSETTINGS;

/* 9658 */
typedef tagPARAMDESCEX *LPPARAMDESCEX;

/* 9659 */
typedef unsigned __int16 *PSECURITY_DESCRIPTOR_CONTROL;

/* 9660 */
typedef tagEMRSTRETCHBLT *PEMRSTRETCHBLT;

/* 9661 */
typedef XiStrItem *StrItemPtr;

/* 9662 */
typedef _GUID *LPGUID;

/* 9663 */
typedef _ULARGE_INTEGER *PULARGE_INTEGER;

/* 9664 */
typedef const char *PCUTSTR;

/* 9665 */
typedef _cpinfoexA *LPCPINFOEXA;

/* 9666 */
typedef unsigned __int16 *LPWCH;

/* 9667 */
typedef tagNEWTEXTMETRICA *LPNEWTEXTMETRICA;

/* 9668 */
typedef unsigned __int16 *LPUWSTR;

/* 9669 */
typedef tagNEWTEXTMETRICA *NPNEWTEXTMETRICA;

/* 9670 */
typedef tagDELETEITEMSTRUCT *LPDELETEITEMSTRUCT;

/* 9671 */
typedef _cpinfoexW *LPCPINFOEXW;

/* 9672 */
typedef unsigned int DBREASON;

/* 9673 */
typedef tagEMRFILLPATH *PEMRSTROKEPATH;

/* 9674 */
typedef char SQLSCHAR;

/* 9675 */
typedef int (__stdcall *OLDFONTENUMPROCA)(tagLOGFONTA *, tagTEXTMETRICA *, unsigned int, int);

/* 9676 */
typedef _IMAGE_CE_RUNTIME_FUNCTION_ENTRY *PIMAGE_CE_RUNTIME_FUNCTION_ENTRY;

/* 9677 */
typedef unsigned int DBPROPFLAGS;

/* 9678 */
typedef _TAPE_WMI_OPERATIONS *PTAPE_WMI_OPERATIONS;

/* 9679 */
typedef _IMAGE_RELOCATION *PIMAGE_RELOCATION;

/* 9680 */
typedef _NT_TIB32 *PNT_TIB32;

/* 9681 */
typedef tagDROPSTRUCT *PDROPSTRUCT;

/* 9682 */
typedef char *LPTCH;

/* 9683 */
typedef unsigned int DBPROPSTATUS;

/* 9684 */
typedef tagENUMLOGFONTEXA *LPENUMLOGFONTEX;

/* 9685 */
typedef _OVERLAPPED *LPOVERLAPPED;

/* 9686 */
typedef tagRECT *PRECT;

/* 9687 */
typedef _JOBOBJECT_ASSOCIATE_COMPLETION_PORT *PJOBOBJECT_ASSOCIATE_COMPLETION_PORT;

/* 9688 */
typedef int streamoff;

/* 9689 */
typedef _cpinfoexA *LPCPINFOEX;

/* 9690 */
typedef tagMONITORINFOEXA *LPMONITORINFOEX;

/* 9691 */
typedef unsigned int (__stdcall *LPFNDEVCAPS)(char *, char *, unsigned int, char *, _devicemodeA *);

/* 9692 */
typedef unsigned int _Vbase;

/* 9693 */
typedef _DRAWPATRECT *PDRAWPATRECT;

/* 9694 */
typedef _GRADIENT_TRIANGLE *LPGRADIENT_TRIANGLE;

/* 9695 */
typedef int (__stdcall *UILANGUAGE_ENUMPROCW)(unsigned __int16 *, int);

/* 9696 */
typedef int (__stdcall *REGISTERWORDENUMPROCA)(const char *, unsigned int, const char *, void *);

/* 9697 */
typedef tagSCROLLINFO *LPCSCROLLINFO;

/* 9698 */
typedef IMAGE_LOAD_CONFIG_DIRECTORY32 *PIMAGE_LOAD_CONFIG_DIRECTORY32;

/* 9699 */
typedef _PROCESS_HEAP_ENTRY *LPPROCESS_HEAP_ENTRY;

/* 9700 */
typedef long double _FP64;

/* 9701 */
typedef tagLOGBRUSH32 *PLOGBRUSH32;

/* 9702 */
typedef tagMETARECORD *PMETARECORD;

/* 9703 */
typedef tagEMRPOLYDRAW16 *PEMRPOLYDRAW16;

/* 9704 */
typedef struct _GG_AUTH_PROTOCOL *PGG_AUTH_PROTOCOL;

/* 9705 */
typedef _SYSTEM_POWER_POLICY *PSYSTEM_POWER_POLICY;

/* 9706 */
typedef tagEMRSCALEVIEWPORTEXTEX *PEMRSCALEVIEWPORTEXTEX;

/* 9707 */
typedef unsigned int HCRYPTPROV;

/* 9708 */
typedef int (__stdcall *REGISTERWORDENUMPROCW)(const unsigned __int16 *, unsigned int, const unsigned __int16 *, void *);

/* 9709 */
typedef int (__stdcall *ENUMRESTYPEPROCW)(HINSTANCE__ *, unsigned __int16 *, int);

/* 9710 */
typedef hostent *PHOSTENT;

/* 9711 */
typedef _SID *PISID;

/* 9712 */
typedef tagSCROLLINFO *LPSCROLLINFO;

/* 9713 */
typedef SC_HANDLE__ *SC_HANDLE;

/* 9714 */
typedef char *PTSTR;

/* 9715 */
typedef _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE *PACCESS_ALLOWED_CALLBACK_OBJECT_ACE;

/* 9716 */
typedef _GUID *__rcGUID_t;

/* 9717 */
typedef HRSRC__ *HRSRC;

/* 9718 */
typedef tagCANDIDATEFORM *PCANDIDATEFORM;

/* 9719 */
typedef _devicemodeW *LPDEVMODEW;

/* 9720 */
typedef _devicemodeW *NPDEVMODEW;

/* 9721 */
typedef char *PSECURITY_CONTEXT_TRACKING_MODE;

/* 9722 */
typedef int (__stdcall *ENUMRESLANGPROCA)(HINSTANCE__ *, const char *, const char *, unsigned __int16, int);

/* 9723 */
typedef tagMENUBARINFO *PMENUBARINFO;

/* 9724 */
typedef _ABC *PABC;

/* 9725 */
typedef tagCOPYDATASTRUCT *PCOPYDATASTRUCT;

/* 9726 */
typedef void *SQLHANDLE;

/* 9727 */
typedef int *_Tptr;

/* 9728 */
typedef tagEMRALPHABLEND *PEMRALPHABLEND;

/* 9729 */
typedef _IMAGE_ROM_OPTIONAL_HEADER *PIMAGE_ROM_OPTIONAL_HEADER;

/* 9730 */
typedef _ABC *LPABC;

/* 9731 */
typedef char *PUINT8;

/* 9732 */
typedef unsigned __int16 wctype_t;

/* 9733 */
typedef _ABC *NPABC;

/* 9734 */
typedef _SECURITY_DESCRIPTOR *PISECURITY_DESCRIPTOR;

/* 9735 */
typedef void (__stdcall *RTL_VERIFIER_DLL_LOAD_CALLBACK)(unsigned __int16 *, void *, unsigned int, void *);

/* 9736 */
typedef tagMOUSEMOVEPOINT *LPMOUSEMOVEPOINT;

/* 9737 */
typedef unsigned int AGdword;

/* 9738 */
typedef int *PSSIZE_T;

/* 9739 */
typedef _IMAGE_BOUND_FORWARDER_REF *PIMAGE_BOUND_FORWARDER_REF;

/* 9740 */
typedef unsigned int (__stdcall *PFNGETPROFILEPATHA)(const char *, char *, unsigned int);

/* 9741 */
typedef char SQLCHAR;

/* 9742 */
typedef tagBITMAPFILEHEADER *LPBITMAPFILEHEADER;

/* 9743 */
typedef unsigned int POINTER_64_INT;

/* 9744 */
typedef tagREGISTERWORDW *PREGISTERWORDW;

/* 9745 */
typedef _TAPE_ERASE *PTAPE_ERASE;

/* 9746 */
typedef tagWNDCLASSW *PWNDCLASSW;

/* 9747 */
typedef tagDRAWITEMSTRUCT *LPDRAWITEMSTRUCT;

/* 9748 */
typedef unsigned int HREFTYPE;

/* 9749 */
typedef void *PSECURITY_DESCRIPTOR;

/* 9750 */
typedef const unsigned __int16 *PCUWSTR;

/* 9751 */
typedef void *HLOCAL;

/* 9752 */
typedef HKEY__ *HKEY;

/* 9753 */
typedef const unsigned __int16 *PCWCH;

/* 9754 */
typedef tagCONNECTDATA *LPCONNECTDATA;

/* 9755 */
typedef char *LPUTSTR;

/* 9756 */
typedef int (__stdcall *PROPENUMPROC)(HWND__ *, const char *, void *);

/* 9757 */
typedef _DISPLAY_DEVICEA *PDISPLAY_DEVICE;

/* 9758 */
typedef _SERVICE_TABLE_ENTRYA *LPSERVICE_TABLE_ENTRY;

/* 9759 */
typedef unsigned __int64 DWORD64;

/* 9760 */
typedef _IMAGE_NT_HEADERS64 *PIMAGE_NT_HEADERS64;

/* 9761 */
typedef int *PLONG_PTR;

/* 9762 */
typedef _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION *PCACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;

/* 9763 */
typedef _PSINJECTDATA *PPSINJECTDATA;

/* 9764 */
typedef _SERVICE_FAILURE_ACTIONSA *LPSERVICE_FAILURE_ACTIONSA;

/* 9765 */
typedef unsigned int ULONG_PTR;

/* 9766 */
typedef tagALTTABINFO *PALTTABINFO;

/* 9767 */
typedef tagWINDOWINFO *PWINDOWINFO;

/* 9768 */
typedef tagEVENTMSG *NPEVENTMSGMSG;

/* 9769 */
typedef tagEVENTMSG *LPEVENTMSGMSG;

/* 9770 */
typedef HWND__ *HWND;

/* 9771 */
typedef int _Once_t;

/* 9772 */
typedef _TOKEN_CONTROL *PTOKEN_CONTROL;

/* 9773 */
typedef _SYSTEM_ALARM_ACE *PSYSTEM_ALARM_ACE;

/* 9774 */
typedef unsigned int DBROWSTATUS;

/* 9775 */
typedef tagMSG *NPMSG;

/* 9776 */
typedef int (__stdcall *PROPENUMPROCW)(HWND__ *, const unsigned __int16 *, void *);

/* 9777 */
typedef tagMSG *LPMSG;

/* 9778 */
typedef int BOOL;

/* 9779 */
typedef int (__stdcall *PROPENUMPROCA)(HWND__ *, const char *, void *);

/* 9780 */
typedef _MAT2 *LPMAT2;

/* 9781 */
typedef _ImageArchitectureHeader *PIMAGE_ARCHITECTURE_HEADER;

/* 9782 */
typedef int (__stdcall *ENUMRESNAMEPROCA)(HINSTANCE__ *, const char *, char *, int);

/* 9783 */
typedef tagPOINT *NPPOINT;

/* 9784 */
typedef int *LPBOOL;

/* 9785 */
typedef void (__cdecl *_PHNDLR)(int);

/* 9786 */
typedef tagPOINT *LPPOINT;

/* 9787 */
typedef HKL__ *HKL;

/* 9788 */
typedef _SC_ACTION *LPSC_ACTION;

/* 9789 */
typedef unsigned int DBLENGTH;

/* 9790 */
typedef tagRECT *LPRECT;

/* 9791 */
typedef tagRECT *NPRECT;

/* 9792 */
typedef _MODEMDEVCAPS *PMODEMDEVCAPS;

/* 9793 */
typedef _ACTIVATION_CONTEXT_QUERY_INDEX *PCACTIVATION_CONTEXT_QUERY_INDEX;

/* 9794 */
typedef tagLOGCOLORSPACEA *LPLOGCOLORSPACE;

/* 9795 */
typedef const char *LPCCH;

/* 9796 */
typedef tagBITMAPINFO *PBITMAPINFO;

/* 9797 */
typedef tagABORTPATH *PEMRABORTPATH;

/* 9798 */
typedef tagEMRRESTOREDC *PEMRRESTOREDC;

/* 9799 */
typedef char *PCHAR;

/* 9800 */
typedef SC_HANDLE__ **LPSC_HANDLE;

/* 9801 */
typedef __int64 __time64_t;

/* 9802 */
typedef unsigned __int16 TCHAR;

/* 9803 */
typedef char UCHAR;

/* 9804 */
typedef unsigned int (__stdcall *PFE_EXPORT_FUNC)(char *, void *, unsigned int);

/* 9805 */
typedef type_info *__RTtypeidReturnType;

/* 9806 */
typedef char BCHAR;

/* 9807 */
typedef char CCHAR;

/* 9808 */
typedef _RECTL *LPRECTL;

/* 9809 */
typedef char FCHAR;

/* 9810 */
typedef _UNLOAD_DLL_DEBUG_INFO *LPUNLOAD_DLL_DEBUG_INFO;

/* 9811 */
typedef std::_Tree_nod<std::_Tmap_traits<int,XiTArray<XiTrafficPathInfo>,std::less<int>,std::allocator<std::pair<int const ,XiTArray<XiTrafficPathInfo> > >,0> >::_Node *_Nodeptr;

/* 9812 */
typedef tagEMRSETMITERLIMIT *PEMRSETMITERLIMIT;

/* 9813 */
typedef int _Dift;

/* 9814 */
typedef tagPANOSE *LPPANOSE;

/* 9815 */
typedef void *GLOBALHANDLE;

/* 9816 */
typedef const unsigned __int16 *LPCWSTR;

/* 9817 */
typedef tagCOLORADJUSTMENT *LPCOLORADJUSTMENT;

/* 9818 */
typedef tagCOLORADJUSTMENT *PCOLORADJUSTMENT;

/* 9819 */
typedef tagMENUITEMINFOA *LPCMENUITEMINFO;

/* 9820 */
typedef tagEMRBITBLT *PEMRBITBLT;

/* 9821 */
typedef _GENERIC_MAPPING *PGENERIC_MAPPING;

/* 9822 */
typedef tagLOGPALETTE *PLOGPALETTE;

/* 9823 */
typedef _FPO_DATA *PFPO_DATA;

/* 9824 */
typedef tagEMRPOLYPOLYLINE *PEMRPOLYPOLYLINE;

/* 9825 */
typedef _MEMORYSTATUSEX *LPMEMORYSTATUSEX;

/* 9826 */
typedef tagREGISTERWORDA *LPREGISTERWORD;

/* 9827 */
typedef tagMOUSEHOOKSTRUCT *LPMOUSEHOOKSTRUCT;

/* 9828 */
typedef tagREGISTERWORDA *NPREGISTERWORD;

/* 9829 */
typedef _PROCESSOR_POWER_POLICY *PPROCESSOR_POWER_POLICY;

/* 9830 */
typedef unsigned __int16 LANGID;

/* 9831 */
typedef char *PSTR;

/* 9832 */
typedef unsigned __int16 _ino_t;

/* 9833 */
typedef tagENUMLOGFONTW *LPENUMLOGFONTW;

/* 9834 */
typedef unsigned int (__stdcall *PFLS_ALLOC_FUNCTION)(void (__stdcall *)(void *));

/* 9835 */
typedef tagCHARSETINFO *LPCHARSETINFO;

/* 9836 */
typedef tagCHARSETINFO *NPCHARSETINFO;

/* 9837 */
typedef _DEVICE_POWER_STATE *PDEVICE_POWER_STATE;

/* 9838 */
typedef _MEMORYSTATUS *LPMEMORYSTATUS;

/* 9839 */
typedef unsigned __int16 *BSTR;

/* 9840 */
typedef _SYSTEM_AUDIT_CALLBACK_ACE *PSYSTEM_AUDIT_CALLBACK_ACE;

/* 9841 */
typedef unsigned int *PKSPIN_LOCK;

/* 9842 */
typedef HSTR__ *HSTR;

/* 9843 */
typedef _KDHELP64 *PKDHELP64;

/* 9844 */
typedef _IMAGE_BOUND_IMPORT_DESCRIPTOR *PIMAGE_BOUND_IMPORT_DESCRIPTOR;

/* 9845 */
typedef tagCREATESTRUCTW *LPCREATESTRUCTW;

/* 9846 */
typedef void MENUTEMPLATEA;

/* 9847 */
typedef unsigned __int16 *LPWSTR;

/* 9848 */
typedef void *LPMENUTEMPLATEA;

/* 9849 */
typedef _OBJECT_TYPE_LIST *POBJECT_TYPE_LIST;

/* 9850 */
typedef unsigned int FLONG;

/* 9851 */
typedef _SERVICE_TABLE_ENTRYA *LPSERVICE_TABLE_ENTRYA;

/* 9852 */
typedef _SECURITY_QUALITY_OF_SERVICE *PSECURITY_QUALITY_OF_SERVICE;

/* 9853 */
typedef void *LPMENUTEMPLATEW;

/* 9854 */
typedef ATL::_ATL_CATMAP_ENTRY *__cdecl _ATL_CATMAPFUNC();

/* 9855 */
typedef _SERVICE_FAILURE_ACTIONSA *LPSERVICE_FAILURE_ACTIONS;

/* 9856 */
typedef void MENUTEMPLATEW;

/* 9857 */
typedef _JOBOBJECT_BASIC_PROCESS_ID_LIST *PJOBOBJECT_BASIC_PROCESS_ID_LIST;

/* 9858 */
typedef tagCREATESTRUCTA *LPCREATESTRUCTA;

/* 9859 */
typedef int *PLONG;

/* 9860 */
typedef _PROCESS_INFORMATION *PPROCESS_INFORMATION;

/* 9861 */
typedef unsigned int ULONG;

/* 9862 */
typedef tagEMRPOLYLINE *PEMRPOLYLINETO;

/* 9863 */
typedef tagREGISTERWORDA *LPREGISTERWORDA;

/* 9864 */
typedef tagREGISTERWORDA *NPREGISTERWORDA;

/* 9865 */
typedef unsigned __int16 *LPTSTR;

/* 9866 */
typedef _DCB *LPDCB;

/* 9867 */
typedef void __stdcall _ATL_TERMFUNC(unsigned int);

/* 9868 */
typedef tagREGISTERWORDW *NPREGISTERWORDW;

/* 9869 */
typedef _OUTLINETEXTMETRICA *LPOUTLINETEXTMETRIC;

/* 9870 */
typedef void (__cdecl *PMFN)();

/* 9871 */
typedef const int *_Ctptr;

/* 9872 */
typedef tagREGISTERWORDW *LPREGISTERWORDW;

/* 9873 */
typedef _OUTLINETEXTMETRICA *NPOUTLINETEXTMETRIC;

/* 9874 */
typedef int ptrdiff_t;

/* 9875 */
typedef void MENUTEMPLATE;

/* 9876 */
typedef HRESULT __stdcall _ATL_CREATORFUNC(void *, _GUID *, void **);

/* 9877 */
typedef void *LPMENUTEMPLATE;

/* 9878 */
typedef tagEMRSETVIEWPORTORGEX *PEMRSETBRUSHORGEX;

/* 9879 */
typedef _IMAGE_LINENUMBER *PIMAGE_LINENUMBER;

/* 9880 */
typedef char BOOLEAN;

/* 9881 */
typedef _tiddata *_ptiddata;

/* 9882 */
typedef _TOKEN_INFORMATION_CLASS *PTOKEN_INFORMATION_CLASS;

/* 9883 */
typedef void (__cdecl *Free_t)(void *);

/* 9884 */
typedef tagCREATESTRUCTA *LPCREATESTRUCT;

/* 9885 */
typedef void (__stdcall *SENDASYNCPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 9886 */
typedef HMENU__ *HMENU;

/* 9887 */
typedef int (__stdcall *DLGPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 9888 */
typedef _TAPE_SET_DRIVE_PARAMETERS *PTAPE_SET_DRIVE_PARAMETERS;

/* 9889 */
enum _EXCEPTION_DISPOSITION
{
  ExceptionContinueExecution = 0x0,
  ExceptionContinueSearch = 0x1,
  ExceptionNestedException = 0x2,
  ExceptionCollidedUnwind = 0x3,
};

/* 9890 */
struct _msExcept7
{
  int Magic;
  int Count;
  void *InfoPtr;
  int CountDtr;
  void *DtrPtr;
  int _unk[2];
};

/* 9891 */
struct _msExcInfo
{
  int Id;
  void *Proc;
};

/* 9892 */
struct _msExcExt
{
  int _unk[3];
  int Count;
  void *RttiBlkPtr;
};

/* 9893 */
struct _msRttiDscr
{
  int _unk;
  void *RttiPtr;
  int spoff;
  void *Dtr;
};

/* 9894 */
struct _ms_type_info
{
  void *__ptr64 getInfoPtr;
  char Name[];
};

/* 9895 */
union __declspec(align(8)) __m64
{
  unsigned __int64 m64_u64;
  float m64_f32[2];
  __int8 m64_i8[8];
  __int16 m64_i16[4];
  __int32 m64_i32[2];
  __int64 m64_i64;
  unsigned __int8 m64_u8[8];
  unsigned __int16 m64_u16[4];
  unsigned __int32 m64_u32[2];
};

/* 9896 */
union __declspec(align(16)) __m128
{
  float m128_f32[4];
  unsigned __int64 m128_u64[2];
  __int8 m128_i8[16];
  __int16 m128_i16[8];
  __int32 m128_i32[4];
  __int64 m128_i64[2];
  unsigned __int8 m128_u8[16];
  unsigned __int16 m128_u16[8];
  unsigned __int32 m128_u32[4];
};

/* 9897 */
struct __m128d
{
  double m128d_f64[2];
};

/* 9898 */
union __declspec(align(16)) __m128i
{
  __int8 m128i_i8[16];
  __int16 m128i_i16[8];
  __int32 m128i_i32[4];
  __int64 m128i_i64[2];
  unsigned __int8 m128i_u8[16];
  unsigned __int16 m128i_u16[8];
  unsigned __int32 m128i_u32[4];
  unsigned __int64 m128i_u64[2];
};

/* 9899 */
typedef $B2C672C1671B59450E2F3155E6FBB694 $9D3413D24D00EDC072742A0AB1BEDD32;

/* 9900 */
typedef $C7A66656BD20095141AF9DA597C58E36 $2F860623D61940E25F2BE968F0D7ABD6;

/* 9901 */
typedef $1B536D8DAE2B40B148C77012225844FC $A41E05058A9D8885D6D96CD850750D8D;

/* 9902 */
typedef $AAE657233ECAE4A323C8B12DEE6B9BDF $39EAABD45002EBC24582594582C1CEBA;

/* 9903 */
typedef $99310F4847ED5248BA5C03633DB866EF $5DEE8E588BC9E044F2D6356523E3E962;

/* 9904 */
typedef $1BDB3FC9CBEA06BF59887F6E807A9A15 $EE2A9E00ED91256FBCC4766388DE0690;

/* 9905 */
typedef $5DFDE45321D32B7E48A9328106A3FB87 $7CF1DEDD13B9347E56FFD08FB9F2F83E;

/* 9906 */
typedef $FFC86625F08D718E246366BABA960B41 $A624DC7854FCF98B302BBBBA4DE497A6;

/* 9907 */
typedef $4B33F3037CF17A11BEEFD4DBF1005031 $27433D32B31FEF6869E5AC3C7694BFFE;

/* 9908 */
typedef $BF9E02858160A1E174C8417290CA0DA9 $34F9ADD524EBEECC7524B3C61A44BC57;

/* 9909 */
typedef $C339095ADF83CCBE3D584DD79C2BFC2A $3E96BB220F12FA83D74B423F82BD3776;

/* 9910 */
typedef $C3E11DE12BBE21BA1C74F66B6C331D4B $810E196334110752D0CF53646DFEAED1;

/* 9911 */
typedef $EFB2E9BFAE9BE2B3B8E0F62AAE9637E6 $389B74FA4C464CFE708EFC55F57C46CA;

/* 9912 */
typedef $38636D0EA7AD20B267BDBB95270A9F80 $00D93C98EA91592E19FE2B391CDD105A;

/* 9913 */
typedef $AF0205FDAF3C9FFFD3767D7031323FC3 $15D9C3B5C36E11629C061BC391E88FFA;

/* 9914 */
typedef $B02BFB8A6F6E3D5CF9A75430E4AD497C $39AFFD2F3F0D86CCFDC4065A0FD4ADD5;

/* 9915 */
typedef $169E025944CD84DBCB3707C824BCE6E0 $7DC67922E82398A263DEFC0649F85BDC;

/* 9916 */
typedef $2E94A102B14109CB76AC3A2692EC284B $638ABA8C433FE1A1F444AB512825244C;

/* 9917 */
typedef $400A3669EDCFB45F6A11A6A1C45EB2D4 $D1542E509E5BE5FB1A69DE9E38D85FBE;

/* 9918 */
typedef $986D3C8A293D3BF5FC599401B376D0B3 $02EC96529AE06797B1CB007D513A009A;

/* 9919 */
typedef $18030EB7D574015805184B633B53A56A $6D798AF93B84241C79BE63931FD0B899;

/* 9920 */
typedef $D78A09537603E058867F494A102DE664 $C43EDA36444004842BDEA69B16358C97;

/* 9921 */
typedef $4DB07B9D3C17D62436A5614EA0A6994E $D69423A3DC2EBF0515C3283CFDAC39C0;

/* 9922 */
typedef $3CC09D294C13B2768201059EAA206371 $FF408841F85CD4787AC0F38F50D1E1C7;

/* 9923 */
typedef $A23980E31A9EA6E31B49853B48EFD031 $C2965355965430661E45156D5119A432;

/* 9924 */
typedef $7A028F72F1009A3031CA44C9E60DD61D $D30FAC31A9F8E2F555DB3FC2853F7A1E;

/* 9925 */
typedef $80A64AD43F05B775F790F2290F873109 $056C5DC1D3995728CE4DB92D3318040E;

/* 9926 */
typedef $BFC727FDBE95ECB043E426F4BA646DAE $275B8AC46B15A5F8C64042362D679611;

/* 9927 */
typedef $1DD7A03358E0D01DD359262876E6A0F0 $16576F158808D245922358E2B7756EB9;

/* 9928 */
typedef $376C068C1282EF299E9DA65403409BBE $115F838C88FE057C2D47457A8127131E;

/* 9929 */
union $3303C8C8808294077135DD463E0B2584
{
  char sz[512];
  wchar_t wz[512];
};

/* 9930 */
struct $1B2DF13057BDD513319CBA6CD4081F80
{
  _RTL_CRITICAL_SECTION *lock;
  $16576F158808D245922358E2B7756EB9 kind;
};

